#include <a_samp>
#include <core>
#include <float>
#include <time>
#include <file>
#include <utils>
#include <morphinc>
#include <a_npc>
#include <streamer>
#include <Dini>
#include <dutils>
//#include <JunkBuster>

static gTeam[MAX_PLAYERS];

#pragma unused ret_memcpy

#define Version "3.2"

#define MAX_STRING 255
#define CHECKPOINT_NONE 0
#define COLOR_ASKQ 0xFF0000FF
#define CHECKPOINT_HOME 12
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x9EC73DAA
#define COLOR_GROVE 0x00FF00FF
#define COLOR_RED 0xAA3333AA
#define COLOR_COOLRED 0xB35959AA
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_PINK 0xFF66FFAA
#define COLOR_DARKRED 0x660000AA
#define COLOR_BRIGHTRED 0xFF0000AA
#define COLOR_INDIGO 0x4B00B0AA
#define COLOR_VIOLET 0x9955DEEE
#define COLOR_GRAYWHITE 0xEEEEFFC4
#define COLOR_LIGHTNEUTRALBLUE 0xabcdef66
#define COLOR_GREENISHGOLD 0xCCFFDD56
#define COLOR_LIGHTBLUEGREEN 0x0FFDD349
#define COLOR_NEUTRALBLUE 0xABCDEF01
#define COLOR_LIGHTCYAN 0xAAFFCC33
#define COLOR_LEMON 0xDDDD2357
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xDABB3EAA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_CHAT1 0xF9B7FFAA
#define COLOR_CHAT2 0xE6A9ECAA
#define COLOR_CHAT3 0xC38EC7AA
#define COLOR_CHAT4 0xD2B9D3AA
#define COLOR_CHAT5 0xC6AEC7AA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0x458E1DAA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_ORANGE 4
#define TEAM_COR 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10
#define TEAM_ADMIN 11
#define OBJECTIVE_COLOR 0x64000064
#define TEAM_GREEN_COLOR 0xFFFFFFAA
#define TEAM_JOB_COLOR 0xFFB6C1AA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define TEAM_RADIO_COLOR 0xF2D068FF
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR 0xFF8282AA
#define COLOR_CREAM 0xFF8282AA
#define TEAM_ORANGE_COLOR 0xFF830000
#define TEAM_COR_COLOR 0x39393900
#define TEAM_BAR_COLOR 0x00D90000
#define TEAM_TAT_COLOR 0xBDCB9200
#define TEAM_CUN_COLOR 0xD900D300
#define TEAM_STR_COLOR 0x01FCFF00
#define TEAM_ADMIN_COLOR 0x00808000
#define COLOR_SIMPSONS 0xFFD90FAA
#define COLOR_SEA 0x00808000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
#define _time_included
#pragma library Time
#define COLOR_BLUE 0x2641FEAA
#define COLOR_DBLUE 0x3333CCAA
#define COLOR_DARKNICERED 0x9D000096
#define COLOR_LIGHT_BLUE 0xa9c4e4FF
#define dcmd(%1,%2,%3) if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && (dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1
#define MAX_REPORTS 9
#define SPECIAL_ACTION_PISSING      68

#pragma dynamic 20000

#pragma semicolon 0
#define MAX_TRUNK_SLOTS		(6) // Is actually 4.
#define MAX_VEHICLE_MODELS	(200)
#define MAX_PLYVEH_RATIO	(50) // per player.

#define MAX_ROADBLOCKS 35
#define MAX_SPIKESTRIPS 20

#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))
	
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))


/*  SA:MP Functions
 *
 *  ZONES Functions By ~Cueball~
 *  ZONES Functions Aided By Betamaster (locations), Mabako (locations), Simon (finetuning)
 *
 *  (c) Copyright 2005-2008, SA:MP Team
 *
 */

#if defined _zones_included
	#endinput
#endif
#define _zones_included

#define MAX_ZONE_NAME 38

enum SAZONE_MAIN
{
		SAZONE_NAME[38],
		Float:SAZONE_AREA[6]
};



static const gSANZones[][SAZONE_MAIN] = {  // …Ÿ–£ity of names and area coordinates adopted from Mabako's 'Zones Script' v0.2
	//	NAME                            			AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
	{"The Big Ear, Bone County",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada, Bone County",                  {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine, Whetstone",	                    {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste, Bone County",                 {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club, San Fierro",    		    {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club, San Fierro",        		{-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club, San Fierro",         	{-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club, San Fierro",         	{-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club, San Fierro",         	{-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club, San Fierro",         	{-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond, Whetstone",               		{-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point, San Fierro",               	{-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside, Tierra Robada",                     	{-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina, Tierra Robada",              	{-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill, Flint County",                 	{-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield, Las Venturas",                  	{964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield, Las Venturas",                  	{964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel, Las Venturas",           	{1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel, Las Venturas",           	{1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section, Las Venturas",          	{1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section, Las Venturas",          	{1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section, Las Venturas",          	{1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section, Las Venturas",          	{1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry, Red County",                   	{104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry, Red County",                   	{19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres, Red County",             	{-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace, Las Venturas",           	{2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace, Las Venturas",           	{2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights, San Fierro",              	{-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown, San Fierro",                   	{-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall, San Fierro",                   	{-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot, Las Venturas",                  	{2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce, Los Santos",                    	{1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce, Los Santos",                    	{1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce, Los Santos",                    	{1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce, Los Santos",                    	{1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce, Los Santos",                    	{1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce, Los Santos",                    	{1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center, Los Santos",           	{1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center, Los Santos",           	{1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station, San Fierro",           	{-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek, Las Venturas",                       	{2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore, Red County",                   	{580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty, San Fierro",                     	{-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty, San Fierro",                     	{-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown, San Fierro",                    	{-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown, San Fierro",                    	{-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown, San Fierro",                   	 	{-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown, San Fierro",                    	{-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown, San Fierro",            	        {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown, San Fierro",            	        {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown, Los Santos",       	 				{1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown, Los Santos",         				{1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown, Los Santos",         				{1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown, Los Santos",         				{1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown, Los Santos",         				{1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown, Los Santos",         				{1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown, Los Santos",         				{1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown, Los Santos",         				{1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown, Los Santos",         				{1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach, Los Santos",                  	{2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach, Los Santos",                  	{2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach, Los Santos",                  	{2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach, Los Santos",                  	{2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             				{2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             				{2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             				{2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             				{2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             				{2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             				{2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             				{2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin, San Fierro",                	{-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin, San Fierro",                	{-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport, San Fierro",          	{-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport, San Fierro",          	{-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport, San Fierro",          	{-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical, San Fierro",         	{-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical, San Fierro",         	{-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo, Bony County",       		{-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo, Bony County",         	{-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo, Bony County",      	   	{-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona, Los Santos",                   	{1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona, Los Santos",                   	{1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados, Tierra Robada",               	{-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East, San Fierro",              	{-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East, San Fierro",              	{-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East, San Fierro",              	{-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North, San Fierro",             	{-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North, San Fierro",             	{-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North, San Fierro",             	{-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree, Red County",                 	{-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge, Red County",               	{434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge, Red County",                  	{508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial, San Fierro",                   	{-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon, Red County",             	{1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection, Flint County",          	{-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range, Flint County",                 	{-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson, Tierra Robada",                 	{-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley, San Fierro",               	{-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley, San Fierro",               	{-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley, San Fierro",               	{-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley, San Fierro",               	{-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge, Red County",            	{2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge, San Fierro",                 	{-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge, San Fierro",                 	{-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton, Los Santos",                      	{2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton, Los Santos",                      	{2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia, San Fierro",                      	{-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia, San Fierro",                      	{-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge, San Fierro",               	{-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge, San Fierro",               	{-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge, San Fierro",               	{-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park, Los Santos",                   	{1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park, Los Santos",                   	{1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park, Los Santos",                   	{1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms, Bone County",                 	{176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College, Las Venturas",          	{964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College, Las Venturas",          	{964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns, Red County",               	{603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point, Red County",            	{2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway, Las Venturas",          	{1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury, San Fierro",                    	{-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm, San Fierro",                	{967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry, Las Venturas",               	{337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood, Los Santos",                    	{1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood, Los Santos",                    	{1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood, Los Santos",                    	{1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood, Los Santos",                    	{1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood, Los Santos",                    	{2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood, Los Santos",                    	{1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson, Los Santos",                   	{1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson, Los Santos",                   	{2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson, Los Santos",                   	{2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson, Los Santos",                   	{2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson, Los Santos",                   	{2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson, Los Santos",                   	{2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East, Las Venturas",         	{2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North, Las Venturas",        	{2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North, Las Venturas",        	{2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North, Las Venturas",        	{2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North, Las Venturas",        	{1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South, Las Venturas",        	{1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South, Las Venturas",        	{2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West, Las Venturas",         	{1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West, Las Venturas",         	{1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill, San Fierro",                	{-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow, San Fierro",              	{-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels, Las Venturas",         	{2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge, San Fierro",              	{-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge, San Fierro",              	{-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge, San Fierro",              	{-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's, San Fierro",                      	{-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's, San Fierro",                      	{-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's, San Fierro",                      	{-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot, Las Venturas",          	{1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot, Las Venturas",          	{1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot, Las Venturas",           	{1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot, Las Venturas",           	{1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot, Las Venturas",           	{1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas, Tierra Robada",               	{-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas, Tierra Robada",                  	{-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas, Los Santos",                 	{1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas, Los Santos",                 	{2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas, Los Santos",                 	{2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas, Los Santos",                 	{2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas, Los Santos",                 	{2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas, Los Santos",                 	{2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas, Los Santos",                 	{2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas, Tierra Robada",               	{-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport, Las Venturas",        	{1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport, Las Venturas",        	{1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport, Las Venturas",        	{1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport, Las Venturas",        	{1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel, Las Venturas",             	{1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow, Las Venturas",                	{-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                				{-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn, Bone County",              	{-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side, Las Venturas",                 	{2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station, Las Venturas",              	{2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station, Las Venturas",              	{2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico, Los Santos",               	{1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico, Los Santos",               	{1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores, San Fierro",                  	{2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores, San Fierro",                  	{2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International, Los Santos",            	{1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International, Los Santos",            	{1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International, Los Santos",            	{1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International, Los Santos",            	{1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International, Los Santos",            	{1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International, Los Santos",            	{2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina, Los Santos",                      	{647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina, Los Santos",                      	{647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina, Los Santos",                      	{807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market, Los Santos",                      	{787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market, Los Santos",                      	{952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market, Los Santos",                      	{1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market, Los Santos",                      	{926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station, Los Santos",              	{787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge, Red County",               	{-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill, San Fierro",             	{-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery, Red County",                  	{1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery, Red County",                  	{1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section, Red County",     			{1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section, Red County",     			{1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland, Los Santos",                  	{1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland, Los Santos",                  	{1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland, Los Santos",                  	{1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland, Los Santos",                  	{1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland, Los Santos",                  	{1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland, Los Santos",                  	{1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland, Los Santos",                  	{768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland, Los Santos",                  	{687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland, Los Santos",                  	{737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland, Los Santos",                  	{1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland, Los Santos",                  	{952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland, Los Santos",                  	{911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland, Los Santos",                  	{861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section, Los Santos",     			{1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock, Red County",                  	{2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks, Los Santos",                 	{2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks, Los Santos",                 	{2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks, Los Santos",                 	{2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks, Los Santos",                 	{2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks, Los Santos",                 	{2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks, Los Santos",                 	{2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks, Los Santos",                 	{2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats, San Fierro",                 	{-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats, San Fierro",                 	{-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats, San Fierro",                 	{-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs, Bone County",              	{338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip, Las Venturas",          	{2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades, San Fierro",                   	{-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek, Red County",              	{2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso, San Fierro",                    	{-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square, Los Santos",             	{1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim, Las Venturas",                     	{2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim, Las Venturas",                     	{2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection, Las Venturas",         	{1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants, Las Venturas",      	{1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville, Los Santos",           	{2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine, Las Venturas",                	{1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine, Las Venturas",                	{1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine, Las Venturas",                	{1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine, Las Venturas",                	{1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens,  San Fierro",                      	{-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens,  San Fierro",                      	{-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens,  San Fierro",                      	{-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate, Las Venturas",        	{1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East, Las Venturas",               	{1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East, Las Venturas",               	{1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East, Las Venturas",               	{1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West, Las Venturas",               	{1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West, Las Venturas",               	{1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West, Las Venturas",               	{1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West, Las Venturas",               	{1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom, Bone County",                 	{-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman, Los Santos",                     	{647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman, Los Santos",                     	{647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman, Los Santos",                     	{225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman, Los Santos",                     	{225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman, Los Santos",                     	{72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman, Los Santos",                     	{72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman, Los Santos",                     	{321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman, Los Santos",                     	{321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman, Los Santos",                     	{321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman, Los Santos",                     	{321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section, Tierra Robada",         		{-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante, Las Venturas",              	{2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante, Las Venturas",              	{2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East, Las Venturas",              	{2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West, Las Venturas",              	{1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West, Las Venturas",              	{2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo, Los Santos",                       	{72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo, Los Santos",                       	{72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo, Los Santos",                       	{225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo, Los Santos",                       	{225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo, Los Santos",                       	{334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo, Los Santos",                       	{312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo, Los Santos",                       	{422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo, Los Santos",                       	{558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo, Los Santos",                       	{466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo, Los Santos",                       	{422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo, Los Santos",                       	{466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo, Los Santos",                       	{334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino, Las Venturas",                	{2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           				{2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora, San Fierro",                 	{-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach, Los Santos",           	{342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach, Los Santos",           	{72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin, Whetstone",                 		{-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks, Whetstone",                		{-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks, Whetstone",                		{-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards, Las Venturas",           	{2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed, Las Venturas",                    	{2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino, Las Venturas",             	{2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino, Las Venturas",             	{2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino, Las Venturas",             	{2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple, Los Santos",                      	{1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple, Los Santos",                      	{1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple, Los Santos",                      	{1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple, Los Santos",                      	{952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple, Los Santos",                      	{1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple, Los Santos",                      	{1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe, Las Venturas",             	{2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket, Las Venturas",          	{2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle, Las Venturas",            	{2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm, Flint County",                    	{-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino, Las Venturas",         	{1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller, Las Venturas",             	{1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span, Las Venturas",               	{1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon, Whetstone",              		{-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan, Red County",               	{1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam, Las Venturas",             	{-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip, Las Venturas",                   	{2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip, Las Venturas",                   	{2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip, Las Venturas",                   	{2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip, Las Venturas",                   	{2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage, Las Venturas",                  	{1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage, Las Venturas",                  	{1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station, Los Santos",               	{1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado, Los Santos",              	{-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs, Los Santos",              	{930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs, Los Santos",              	{1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs, Los Santos",              	{1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows, Bone County",             	{37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach, Los Santos",                	{647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach, Los Santos",                	{930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach, Los Santos",                	{851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach, Los Santos",                	{1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach, Los Santos",                	{1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood, Los Santos",                    	{787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood, Los Santos",                    	{787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood, Los Santos",                    	{647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood, Los Santos",                    	{647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates, Las Venturas",           	{883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates, Las Venturas",           	{1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield, Los Santos",                 	{1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield, Los Santos",                 	{2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield, Los Santos",                 	{2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield, Los Santos",                 	{2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield, Los Santos",                 	{2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield, Los Santos",                 	{2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield, Los Santos",                 	{2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station, Las Venturas",         	{1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

static const gSAZones[][SAZONE_MAIN] = {  // …Ÿ–£ity of names and area coordinates adopted from Mabako's 'Zones Script' v0.2
	//	NAME                            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Section",          {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Section",          {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Section",          {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Section",          {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemical",         {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemical",         {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"Castillo del Diablo",         {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"Castillo del Diablo",         {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"Castillo del Diablo",         {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"KACC Military Fuels",         {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"LS International",            {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"LS International",            {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"LS International",            {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"LS International",            {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"LS International",            {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"LS International",            {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Section",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Section",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Section",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Ind. Estate",        {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Section",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

//---------------------------------------------------------------------------------------------------

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSANZones); i++ )
 	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer2DRadarZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetVehicle2DZone(vehicleid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetVehiclePos(vehicleid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSANZones); i++ )
 	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x33, Float:y33, Float:z33;
	GetPlayerPos(playerid, x33, y33, z33);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x33 >= gSAZones[i][SANZONE_AREA][0] && x33 <= gSAZones[i][SANZONE_AREA][3] && y33 >= gSANZones[i][SAZONE_AREA][1] && y33 <= gSANZones[i][SAZONE_AREA][4] && z33 >= gSAZones[i][SANZONE_AREA][2] && z33 <= gSANZones[i][SAZONE_AREA][5])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}




stock IsPlayerInZone(playerid, zone[])
{
	new TmpZone[MAX_ZONE_NAME];
	GetPlayer3DZone(playerid, TmpZone, sizeof(TmpZone));
	for(new i = 0; i != sizeof(gSANZones); i++)
	{
		if(strfind(TmpZone, zone, true) != -1)
			return 1;
	}
	return 0;
}


forward RefreshMenuHeader(playerid,Menu:menu,text[]);
new Menu:burgermenu, Menu:chickenmenu, Menu:pizzamenu, Menu:donutshop;
new Menu:Guide, Menu:JobLocations, Menu:JobLocations2, Menu:JobLocations3;
new Menu:LegalJobs, Menu:LegalJobs2;
new Menu:Licenses;

//forward ResetRoadblockTimer();
forward RemoveRoadblock(playerid);
forward BackupClear(playerid, calledbytimer);
forward IsAGangCar(carid);
forward IsAGangCar2(carid);
forward IsAGangCar3(carid);
forward IsAGangCar4(carid);
forward IsAGangCar5(carid);
forward IsAGangCar6(carid);
forward IsAGangCar7(carid);
forward IsABike(carid);
forward IsAOBike(carid);
forward IsATank(carid);
forward DrankWine(playerid);
forward SmokedCig(playerid);
forward DrankBeer(playerid);
forward DrankSprunk(playerid);
forward GateClose(playerid);
forward GateClose2();
forward GateClose3();
forward GateClose4();
forward GateClose5();
forward GateClose6();
forward GateCloseDevs();
forward GateCloseDD();
forward IsCopBanned(playerid);
forward DDCountdown();
forward UsingPurpleDildo(playerid);
forward UsingSmallDildo(playerid);
forward UsingLargeDildo(playerid);
forward UsingBlackDildo(playerid);
forward Ron(playerid);
forward AmmuTrain();
forward RegularCount();
forward CanRobAgain();
forward elevator1(playerid);
forward elevator2(playerid);
forward LoadProperty();
forward LoadCar();
forward LoadSecurity();
forward SaveSecurity();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward SaveAnticheat();
forward LoadAnticheat();
forward SaveMotd();
forward LoadMotd();
forward SaveEvents();
forward LoadEvents();
forward LoadCK();
forward SaveCK();
forward LoadFamilies();
forward DenyMessage(playerid, level);
forward SaveFamilies();
forward LoadIRC();
forward SaveIRC();
forward LoadPapers();
forward SavePapers();
forward SetPlayerSkills(playerid);
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate(update,idx);
forward OnPropTextdrawUpdate(update, id);
forward OnHousePickupUpdate(houseid);
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward JoinChannel(playerid, number, line[]);
forward JoinChannelNr(playerid, number);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward GetClosestPlayer(p1);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward GpsCheck();
forward HideSpeedo(playerid);
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward BanLog(string[]);
forward AdminLog(string[]);
forward ReportLog(string[]);
forward CommandLog(string[]);
forward AllCommandLog(string[]);
forward ExplodeLog(string[]);
forward MovesLog(string[]);
forward PlaceLog(string[]);
forward TelesLog(string[]);
forward ChatLog(string[]);
forward BugsLog(string[]);
forward AdminChatLog(string[]);
forward GiveLog(string[]);
forward FamilyChatLog(string[]);
forward LocalChatLog(string[]);
forward PublicLog(string[]);
forward AnnounceLog(string[]);
forward SlapLog(string[]);
forward LoginLog(string[]);
forward MuteLog(string[]);
forward FreezeLog(string[]);
forward JailLog(string[]);
forward RadioChatLog(string[]);
forward PMLog(string[]);
forward APMLog(string[]);
forward DepartmentChatLog(string[]);
forward KickLog(string[]);
forward WarnLog(string[]);
forward ActionLog(string[]);
forward PayLog(string[]);
forward CKLog(string[]);
forward IsATruck(carid);
forward IsAPizzabike(carid);
forward IsABus(carid);
forward IsATowcar(carid);
forward IsAnAmbulance(carid);
forward ReleaseFromHospital(playerid);
forward IsAnAdminCar(carid);
forward IsADeveloperCar(carid);
forward IsAnFiretruck(carid);
forward IsACopCar(carid);
forward IsAFiremenCar(carid);
forward IsAnFbiCar(carid);
forward IsNgCar(carid);
forward IsASwatCar(carid);
forward IsATacticalCar(carid);
forward IsASpecialFCar(carid);
forward IsAGovernmentCar(carid);
forward IsAnOwnableCar(carid);
forward IsACreatedCar(carid);
forward IsARentableCar(carid);
forward IsARentableBike(carid);
forward IsASalesVehicle(vehicleid);
forward GetVehiclePrice(vehicleid);
forward IsAtDealership(playerid);
forward IsAtCarrental(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsAHarvest(carid);
forward IsADrugHarvest(carid);
forward IsASmuggleCar(carid);
forward IsASweeper(carid);
forward IsAFreecop(playerid);
forward IsACop(playerid);
forward IsAFiremen(playerid);
forward IsAMedic(playerid);
forward IsSpecial(playerid);
forward IsAnFbi(playerid);
forward IsAnNg(playerid);
forward CanWankAgain(playerid);
forward IsASwat(playerid);
forward IsPlayerOnSpecialAction(playerid);
forward IsATactical(playerid);
forward IsAPDMember(playerid);
forward IsAMember(playerid);
forward IsAnInstructor(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward Encrypt(string[]);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc(playerid);
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerCriminalEx(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerUpdateEx(playerid);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendIRCMessage(channel, color, string[]);
forward SendTeamMessage(team, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward SendTesterMessage(color, string[]);
forward SendTesterAdminMessage(color, string[]);
forward AddCar(carcoords);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearCK(ck);
forward ClearFamily(family);
forward ClearMarriage(playerid);
forward ClearPaper(paper);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward BlowJobStart(playerid);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward LockCar(carid);
forward UnLockCar(carid);
forward InitLockDoors(playerid);
forward CheckGas();
forward Fillup();
forward ResetJump1(playerid);
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward ResetDildo(playerid);
forward Production();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward HouseLevel(playerid);
forward CHouseLevel(houseid);
forward ResetWank(playerid);
forward CustomPickups();
forward IdleKick();
forward SetCamBack(playerid);
forward AddsOn();
forward IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy);
forward AdvertiseToPlayersAtBusStop(Float:stopX, Float:stopY, Float:stopZ, eastorwest);
forward SendBusRoute(playerid, eastorwest);
forward IsInBusrouteZone(playerid);
forward BusrouteEnd(playerid, vehicleid);
forward CreateFoodMenus();
forward OnPlayerEnterFood(playerid, foodid);
forward OnPlayerExitFood(playerid);
forward ClearChatbox(playerid, lines);
forward CreateGuideMenus();
forward CreateLegalJobsMenus();
forward CreateLicensesMenus();
forward Startup(playerid, vehicleid);
forward engine2(playerid);
forward busroutestoptimer(playerid);
forward CheckCarHealth();
forward StartingTheVehicle(playerid);
forward FarmerExit(playerid);
forward DrugFarmerExit(playerid);
forward LoadDrugSystem();
forward SaveDrugSystem();
forward LoadMatsSystem();
forward SaveMatsSystem();
forward ChangeWeather();
forward LoadingDrugsForSmugglers(playerid);
forward SmugglerExit(playerid);
forward SafeSetPlayerPos(playerid, Float:x, Float:y, Float:z);
forward SafeSetPlayerArmour(playerid, Float:armour);
forward SafeGivePlayerMoney(plyid, amounttogive);
forward SafeSetPlayerInterior(plyid, interiorid);
forward SafeGivePlayerWeapon(playerid, weaponid, ammo);
forward SafeResetPlayerMoney(plyid);
forward SafeResetPlayerWeapons(playerid);
forward StartWank(playerid);
forward UnsetFirstSpawn(playerid);
forward LoadHQLocks();
forward SaveHQLocks();
forward ClearKnock(playerid);
forward DrugEffectGone(playerid);
forward UsingDrugsUnset(playerid);
forward UpdatePlayerPosition(playerid);
forward UpdateAllPlayersPosition();
forward SaveAllGuns();
forward SaveGuns(playerid);
forward CrashPlayer(playerid);
forward UnsetAfterTutorial(playerid);
forward AfterSpray1(playerid);
forward AfterSpray2(playerid);
forward AfterSpray3(playerid);
forward AfterSpray4(playerid);
forward UnsetCrash(playerid);
forward backtoclothes(playerid);
forward RemovePlayerWeapon(playerid, weaponid);
forward SaveTrunk();
forward LoadTrunk();
forward PeterAC();
forward UpdateBurgerPositions();
forward ShowMenuBurger(i);
forward UpdateChickenPositions();
forward ShowMenuChicken(i);
forward CanDriveThruAgain(playerid);
forward Float:GetDistance(playerid, Float:x, Float:y);
forward TraceLastCall();
forward ReportReset(playerid);
forward ReduceTimer(playerid);
forward hidemotd(playerid);
forward showmotd(playerid);
forward HideTD(playerid);
forward ChangeName(playerid);
forward HideTD2();
forward HideTD3();
forward HideTD4();
forward HideTD5();
forward HideTD6();
forward HideWarnTextdraw(playerid);
forward ShowWelcome(playerid);
forward HideWelcome(playerid);
forward BoxTrain(playerid);
forward KungTrain(playerid);
forward GrabTrain(playerid);
forward KneeTrain(playerid);
forward prisonls(playerid);
forward lvls(playerid);
forward lvslv(playerid);
forward lvsf(playerid);
forward lvap(playerid);
forward lvsmc(playerid);
forward lvsrc(playerid);
forward lvsls(playerid);
forward lvssf(playerid);
forward lvstr(playerid);
forward lvsbc(playerid);
forward lslv(playerid);
forward lsslv(playerid);
forward lssf(playerid);
forward lsap(playerid);
forward lssmc(playerid);
forward lssrc(playerid);
forward lssls(playerid);
forward lsssf(playerid);
forward lsstr(playerid);
forward lssbc(playerid);
forward sflv(playerid);
forward sfslv(playerid);
forward sfls(playerid);
forward sfap(playerid);
forward sfsmc(playerid);
forward sfsrc(playerid);
forward sfsls(playerid);
forward sfssf(playerid);
forward sfstr(playerid);
forward sfsbc(playerid);
forward aplv(playerid);
forward SendMSG(playerid);
forward HideSpeedGun(playerid);
forward ShowSpeedGun(playerid);
forward StartLotto();
forward TrainPistol(playerid);
forward SafeRemovePlayerFromVehicle(playerid);
forward TrainSilenced(playerid);
forward UnsetSuspect(playerid);
forward TrainDeagle(playerid);
forward TrainShotgun(playerid);
forward TrainSawn(playerid);
forward TrainCombat(playerid);
forward TrainUzi(playerid);
forward TrainSmg(playerid);
forward TrainAk47(playerid);
forward TrainM4(playerid);
forward TrainSniper(playerid);
forward ShowRules(playerid);
forward HideRules(playerid);
forward ChangeYourName(playerid);
forward ResetAcWarn(playerid);
forward UnsetCityHallRob();
forward UnsetBankRob();
forward UnsetBarRob();
forward UnsetAlhambraRob();
forward UnsetCluckin1Rob();
forward UnsetCluckin2Rob();
forward UnsetBurger1Rob();
forward UnsetBurger2Rob();
forward UnsetPizzaRob();
forward UnsetDonutRob();
forward UnsetGymRob();
forward UnsetPlayerRob(playerid);
forward RobCityHall(playerid);
forward RobBar(playerid);
forward RobGym(playerid);
forward RobBurger(playerid);
forward RobCluckin(playerid);
forward RobPizza(playerid);
forward RobBank(playerid);
forward RobAlhambra(playerid);
forward RobDonut(playerid);
forward ResetArea(playerid);
forward SetRealMoney(playerid, money);
forward IsAtCandySprunk(playerid);
forward SetHP(playerid);
forward IsAtPaySpray(playerid);
forward IsAtTransfender(playerid);
forward PaySprayTrans();
forward IsModelAPlane(carid);
forward IsModelABike(carid);
forward IsModelABycicle(carid);
forward IsModelAHeli(carid);
forward IsModelABoat(carid);
forward IsModelASpecial(carid);
forward RestartCars();
forward IsAnEnterableModel(carid);
forward IsAnEnterableCar(carid);
forward IsAnEnterableHeli(carid);
forward IsAnEnterablePlane(carid);
forward IsAnEnterableBoat(carid);
forward GreenMoney(playerid);
forward RedMoney(playerid);
forward SaveVehicleComponents(car);
forward ClearVehicleComponents(car);
forward SetVehicleModifications(carid);
forward AddPunishment(playerid, string[]);
forward Unfreezeply(playerid);
forward ResetUpgradeUse(playerid);
forward ClockSeconds();
forward CountDown();
forward ResetVotation();
forward FinishVotation();
forward HideCalendar(playerid);
forward ShowCalendar(playerid);
forward EvaluateHouse(houseid);
forward EvaluateBizz(houseid);
forward ShowAchievement(playerid);
forward HideAchievement(playerid);
//forward AttachWeaponCorrectly(playerid, gun);
forward AttachObjectCorrectly(playerid, object);
forward EncodeVehicle(vehicleid);
forward DecodePassword(playerid,vehicleid);
forward ShowDecoder(playerid);
forward HideDecoder(playerid);
forward GetDigits(number);
forward ResetText(playerid);
forward ResetCommands(playerid);
//forward CheckDist(playerid,playerid2);

/////////////////////////////////////////////////////////////BY nill
forward KillSpawn(playerid);//BY nill
forward KillSpawn2(playerid);//BY nill
forward StopKillSpawn(playerid);//BY nill
forward SpawonDJ(playerid);//BY nill

forward RentcarGY(playerid);
forward RentbikeGY(playerid);
forward exitGY(playerid);
forward UNrentcar(playerid);
forward UNrentbike(playerid);

new KillSpawnStart[MAX_PLAYERS];
new KillSpawnTK1[MAX_PLAYERS];
new KillSpawnTK2[MAX_PLAYERS];
//------------------------------------------------------------------------------------------------------
new ddcount;
new ddcounttimer;
new CommandsTimer[MAX_PLAYERS];
new TextTimer[MAX_PLAYERS];
new Commands[MAX_PLAYERS];
new Text[MAX_PLAYERS];
new ipFILE[128];
new	pFILE[MAX_PLAYERS][128];
new CanTurnEngine[MAX_PLAYERS];
new Fails[MAX_PLAYERS];
new Decoding[MAX_PLAYERS];
new decodecode = 0;
new Digits = 1;
new DecoderTimer;
new Decoder;
new SurenosSecurity;
new BratvaSecurity;
new ViceSecurity;
new AnarchySecurity;
new HitmanSecurity;
new YamaguchiSecurity;
new SignatraSecurity;
new VehiclePass[MAX_VEHICLES];
new SentMessage[MAX_PLAYERS];
new Calendar[MAX_PLAYERS];
new RonnTimer[MAX_PLAYERS];
new Ronned[MAX_PLAYERS];
new Showing[MAX_PLAYERS];
new Attached[MAX_PLAYERS];
new nextapartment;
new nexthouse;
new nextmedium;

new nextshop;

new cDebug;
new nextbig;
new Motd[32];
new event1[64];
new event2[64];
new event3[64];
new event4[64];
new scratchcarcp;
new votetype;
new votetimer1;
new votetimer2;
new votation;
new voteyes;
new voteno;
new beingvoted;
new votedrecently[MAX_PLAYERS];
new votationrecently;
new FakeKillWarns[MAX_PLAYERS];
new CountdownTimer;
new CountdownRunning;
new CountdownSeconds;
new MinutesTD;
new SecondsTD;
new HoursTD;
new LogingAttempts[MAX_PLAYERS];
new PreTazerAmmo[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new OfficerCourseStep[MAX_PLAYERS];
new CanUseUpgrade[MAX_PLAYERS];
new CanChangeName[MAX_PLAYERS];
new CanSellHouse[MAX_PLAYERS];
new CanSellBizz[MAX_PLAYERS];
new CanLeaveFaction[MAX_PLAYERS];
new SpawnWorld[MAX_PLAYERS];
new SpawnInterior[MAX_PLAYERS];
new AFK[MAX_PLAYERS];
new First = 0;
new admin[MAX_PLAYERS];
new cage[MAX_PLAYERS][4];
new caged[MAX_PLAYERS];
new Text3D:DutyLabel[MAX_PLAYERS];
new Gps[MAX_PLAYERS];
new IsPlayerInEVehicle[MAX_PLAYERS];
new Seats[MAX_VEHICLES];
new DebtMoney[MAX_PLAYERS];
new Float:SpArmour[MAX_PLAYERS];
new Float:SpHealth[MAX_PLAYERS];
new Interior[MAX_PLAYERS];
new VirWorld[MAX_PLAYERS];
new Searching[MAX_PLAYERS];
new GaveUp[MAX_PLAYERS];
new TookSprunk[MAX_PLAYERS];
new UsedAreaRecently[MAX_PLAYERS];
new ChangeNameTimer;
new GangCar[MAX_PLAYERS];
/*new LaVice;
new Signatra;
new Bratva;
new Surenos;
new Yamaguchi;
new Anarchy;
new Spawn;
new RPL;
new Bank;*/
new SendIP;
new TrainTimer[MAX_PLAYERS];
new MoneyTimer[MAX_PLAYERS];
new ReceivedMoney[MAX_PLAYERS];
//new cufftimer[MAX_PLAYERS];
new ResetJumpTimer;
new Text:WarnTD
new Text:TD1;
new Text:TD2;
new Text:TD3;
new Text:TD4;
new Text:TD0;
new Text:Textdraw0;
new Text:Textdraw1[MAX_PLAYERS];
new Text:Textdraw2;
new Text:Textdraw3;
new Text:Textdraw5;
new Text:Textdraw6;
new Text:Textdraw7;
new Text:Textdraw8;
new Text:Textdraw9;
new Text:Textdraw10;
new Text:Textdraw11;
new Text:Textdraw12;
new Text:Textdraw13;
new Text:Textdraw14;
new Text:Textdraw15;
new Text:Textdraw16;
new Text:Textdraw17;
new Text:Textdraw18;
new Text:Textdraw19;
new Text:Textdraw20;
new Text:Textdraw21;
new Text:Textdraw22;
new Text:Textdraw23;
new Text:Textdraw24;
new Text:Textdraw25;
new Text:Textdraw26;
new Text:Textdraw27;
new Text:Textdraw28;
new Text:Textdraw29;
new Text:Textdraw30;
new Text:Textdraw31;
new Text:Textdraw32;
new Text:Textdraw33;
new Text:Textdraw34;
new Text:Textdraw35;
new Text:Textdraw36;
new Text:Textdraw37;
new Text:Textdraw38;
new Text:Textdraw39[MAX_PLAYERS];
new Text:Textdraw40[MAX_PLAYERS];
new Text:Textdraw41[MAX_PLAYERS];
new Text:Textdraw42[MAX_PLAYERS];
new Text:Textdraw43;
new Text:Textdraw44;
new Text:Textdraw45;
new Text:Textdraw46;
new Text:Textdraw49[MAX_PLAYERS];
new Text:Textdraw50;
new Text:Textdraw51[MAX_PLAYERS];
new Text:Textdraw52[MAX_PLAYERS];
new Text:Textdraw53[MAX_PLAYERS];
new Text:Textdraw54[MAX_PLAYERS];
new Text:Textdraw55;
new Text:Textdraw56;
new Text:Textdraw57;
new Text:Textdraw58;
new Text:Textdraw59;
new Text:Textdraw60;
new Text:Textdraw61;
new Text:Textdraw62;
new Text:Textdraw63;
new Text:Textdraw64[MAX_PLAYERS];
new Text:Textdraw65;
new Text:Textdraw66;
new Text:Textdraw67;
new Text:Textdraw68;
//--------------------------------- CALENDAR ---------------------------------
new Text:CTextdraw0;
new Text:CTextdraw1;
new Text:CTextdraw2;
new Text:CTextdraw3;
new Text:CTextdraw4;
new Text:CTextdraw5;
new Text:CTextdraw6;
new Text:CTextdraw7;
new Text:CTextdraw8;
new Text:CTextdraw9;
new Text:CTextdraw10;
new Text:CTextdraw11;
new Text:CTextdraw12;
new Text:CTextdraw13;
new Text:CTextdraw14;
new Text:CTextdraw15;
new Text:CTextdraw16;
new Text:CTextdraw17;
new Text:CTextdraw18;
new Text:CTextdraw19;
new Text:CTextdraw20;
new Text:CTextdraw21;
new Text:CTextdraw22;
new Text:CTextdraw23;
new Text:CTextdraw24;
new Text:CTextdraw25;
new Text:CTextdraw26;
new Text:CTextdraw27;
new Text:CTextdraw28;
new Text:CTextdraw29;
new Text:CTextdraw30;
new Text:CTextdraw31;
new Text:CTextdraw32;
new Text:CTextdraw33;
new Text:CTextdraw34;
new Text:CTextdraw35;
new Text:CTextdraw36;
new Text:CTextdraw37;
new Text:CTextdraw38;
new Text:CTextdraw39;
new Text:CTextdraw40;
new Text:CTextdraw41;
new Text:CTextdraw42;
new Text:CTextdraw43;
new Text:CTextdraw44;
new Text:CTextdraw45;
new Text:CTextdraw46;
new Text:CTextdraw47;
new Text:CTextdraw48;
new Text:CTextdraw49;
new Text:CTextdraw50;
new Text:CTextdraw51;
new Text:CTextdraw52;
new Text:CTextdraw53;
new Text:CTextdraw54;
new Text:CTextdraw55;
//------------------------- CALENDAR -------------------------
new TD1D;
new TD2D;
new TD3D;
new TD4D;
new TD0D;
new pdgate1;
new pdgate2;
new pdgate3;
new pdgate4;
new armydoor1;
new armydoor2;
new armydoor3;
new lspddoor1;
new lspddoor2;
new lspdwindows;
new DildoTimerReset;
new IsOnTutorial[MAX_PLAYERS];
new fbidoor1;
new fbidoor2;
new fbidoor3;
new armygate1;
new armygate2;
new armygate3;
new armywindows1;
new armywindows2;
new fbigate;
new fbigate2;
new DD_GATE;
new devs_gate;
//new iorgate;
/*new license_pu;
new license_pu2;
new license_pu3;
new license_pu4;
new license_pu5;*/
new rpc_money;
new rpc_armor;
new rpc_parachute;
new tall_death;
new Para1;
new Para2;
new Para3;
new Para4;
new TestStep[MAX_PLAYERS];
new OnPassportTest[MAX_PLAYERS];
new OnOfficerTest[MAX_PLAYERS];
new TestPoints[MAX_PLAYERS];
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new InRing = 0;
new RoundStarted = 0;
new BoxDelay = 0;
new RobbingTime[MAX_PLAYERS];
new CityHallRobbedRecently;
new BankRobbedRecently;
new AlhambraRobbedRecently;
new GymRobbedRecently;
new BarRobbedRecently;
new DonutRobbedRecently;
new Cluckin1RobbedRecently;
new Cluckin2RobbedRecently;
new Burger1RobbedRecently;
new Burger2RobbedRecently;
new PizzaRobbedRecently;
new RobbedRecently[MAX_PLAYERS];
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new hitid = 999;
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new ScriptMoney[MAX_PLAYERS];
new ScriptWeapons[MAX_PLAYERS][13];
new OtherWeapons[MAX_PLAYERS][13];
new OtherAmmo[MAX_PLAYERS][13];
new ScriptMoneyUpdated[MAX_PLAYERS];
new ScriptWeaponsUpdated[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new JobDuty[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new UsedDildo[MAX_PLAYERS];
new OnCK[MAX_PLAYERS];
new GettingCK[MAX_PLAYERS];
new SchoolSpawn[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new gPlayerUsingLoopingAnim[MAX_PLAYERS];
new gPlayerAnimLibsPreloaded[MAX_PLAYERS];
new animation[200];
new Text:txtAnimHelper;
new PlayerStoned[MAX_PLAYERS];
//new ConsumingMoney[MAX_PLAYERS];
new BringingPaper[MAX_PLAYERS]; //Paper Boys must pick up a Paper first, then use /deliver
new GotPaper[MAX_PLAYERS]; //The player has a paper so he can use /read
new WritingPaper[MAX_PLAYERS]; //Used for onplayertext so he can ÃÓ–¥ lines
new WritingPaperNumber[MAX_PLAYERS]; //To which Paper in PaperInfo will it be written
new WritingLine[MAX_PLAYERS]; //Used for onplayertext to see which line he's at
new FishCount[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new PaperOffer[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new MedicTime[MAX_PLAYERS];
new NeedMedicTime[MAX_PLAYERS];
new MedicBill[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new RpcArmor[MAX_PLAYERS];
new RpcMoney[MAX_PLAYERS];
new RpcPara[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingJob[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedLawyer[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new WantLawyer[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new Rope[MAX_PLAYERS];
new STDPlayer[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new GettingBlowjob[MAX_PLAYERS];
new GivingBlowjob[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new BunnyJump[MAX_PLAYERS]
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
//new swat[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new StartTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new AcceptingBJ[MAX_PLAYERS];
new OfferedBlowjob[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gGas[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new BusrouteEast[MAX_PLAYERS][2];
new BusrouteWest[MAX_PLAYERS][2];
new Float:BusShowLocation[MAX_PLAYERS][4];
new BusShowLocationC[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new PlayerDrankWine[MAX_PLAYERS];
new PlayerDrankBeer[MAX_PLAYERS];
new PlayerSmokedCig[MAX_PLAYERS];
new PlayerDrankSprunk[MAX_PLAYERS];
new TimesWanked[MAX_PLAYERS];
new JustWanked[MAX_PLAYERS];
new gLastDriver[302];
new gCarLock[265];
new noooc = 0;
new nonewbie = 0;
new adds = 1;
new RobCityHallTimer;
new RobBankTimer;
new RobDonutTimer;
new RobGymTimer;
new RobAlhambraTimer;
new RobBarTimer;
new RobCluckinTimer;
new RobBurgerTimer;
new RobPizzaTimer;
new addtimer = 60000;
new Float:rx, Float:ry, Float:rz;
new carselect[15];
new objstore[128];
new cbjstore[128];
//new textmotd[128];
//new RStart;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new realtime = 1;
new wtime = 16;
new ammutraintimer;
new regularcounttimer;
new Canrobagaintimer;
//new levelcost = 5000;
new deathcost = 100;
new callcost = 2; //20 seconds
new othtimer;
new hackchecktimer;
new synctimer;
new newmistimer;
new unjailtimer;
new pickuptimer;
new spectatetimer;
new idletimer;
new productiontimer;
new HideSpeed;
new SetWorld;
new accountstimer;
new checkgastimer;
new stoppedvehtimer;
new checkcarhealthtimer;
new cartimer;
new intrate = 1;
new levelexp = 4;
new civnokill = 0;
new suecost = 100;
new cchargetime = 60;
new txtcost = 1;
new pickups;
/*new authorizeswat;*/
new PizzaBoys = 0;
new PizzaCall = 999;
new PizzaCallTime[MAX_PLAYERS];
new bPizza[MAX_PLAYERS];
new sPizza[MAX_PLAYERS];
new CIV[] = {7,19,20,23,73,101,122};
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new SELLCAR1[] = { 250, 263, 274, 301, 309, 342, 368, 389, 402, 433, 502 };
new SELLCAR2[] = { 504, 509, 525, 531, 544, 548, 555, 568, 577, 580 };
new SELLCAR3[] = { 586, 591, 594, 599, 603, 609, 611, 619, 623, 631, 633 };
new SELLCAR4[] = { 642, 648, 653, 661, 668, 672, 674, 687, 693, 698, 703 };
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new ChangePos3[MAX_PLAYERS];
new Float:PlayerPos[MAX_PLAYERS][6];
new Float:AdminPos[MAX_PLAYERS][3];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new Typed[MAX_PLAYERS][64];
new PlayerBunnyJumped[MAX_PLAYERS];
new Untouchable[MAX_PLAYERS];
new Training[MAX_PLAYERS];
new ViewingRules[MAX_PLAYERS];
new ViewingWelcome[MAX_PLAYERS];
new ViewingSpeed[MAX_PLAYERS];
new WarnedTextdraw[MAX_PLAYERS];
new ViewAdmin[MAX_PLAYERS];
new WankedRecently[MAX_PLAYERS];
new UsingBelt[MAX_PLAYERS];
new HelpMessages[MAX_PLAYERS];
//new roadblocktimer = 0;
new engineOn[MAX_VEHICLES];
new vehicleEntered[MAX_PLAYERS][MAX_VEHICLES];
new gEngine[MAX_PLAYERS];
new FarmerVar[MAX_PLAYERS];
new FarmerPickup[MAX_PLAYERS][2];
new DrugFarmerVar[MAX_PLAYERS];
new IsWanking[MAX_PLAYERS];
new DrugFarmerPickup[MAX_PLAYERS][2];
new JustStarted[MAX_PLAYERS];
new SmugglerWork[MAX_PLAYERS];
new SmuggledDrugs[MAX_PLAYERS];
new PayDaySecure[MAX_PLAYERS];
new JustDied[MAX_PLAYERS];
new KnockedDown[MAX_PLAYERS];
new UnidentifedCall[MAX_PLAYERS];
new LicenseOffer[MAX_PLAYERS];
new LicensePrice[MAX_PLAYERS];
new LicenseType[MAX_PLAYERS];
new DefaultWeather = 10;
new OnSwatDuty[MAX_PLAYERS];
new OnTacticalDuty[MAX_PLAYERS];
new OnSpecialFDuty[MAX_PLAYERS];
new UsingDrugs[MAX_PLAYERS];
new AfterTutorial[MAX_PLAYERS];
new OwnableCarOffer[MAX_PLAYERS];
new OwnableCarID[MAX_PLAYERS];
new OwnableCarPrice[MAX_PLAYERS];
new BlindFold[MAX_PLAYERS];
new UcAdmin[MAX_PLAYERS];
new triedtobeadmin[MAX_PLAYERS];
new PlayerIsSweeping[MAX_PLAYERS];
// Trunk system
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
// ------------
new VehicleWindows[MAX_VEHICLES] = 0;
new BurgerPickUp[9];
new ChickenPickUp[9];
new Menu:BurgerShot;
new Menu:CluckinBell;
new IsMenuShowed[MAX_PLAYERS] = 0;
new burgertimer;
new	chickentimer;
new pdtrace = 0;
new Float:pdtrace_x;
new Float:pdtrace_y;
new Float:pdtrace_z;
new emdtrace = 0;
new Float:emdtrace_x;
new Float:emdtrace_y;
new Float:emdtrace_z;
new tracetimer;
new JustReported[MAX_PLAYERS];
new PlayerNeedsHelp[MAX_PLAYERS];
new AdminSpec[MAX_PLAYERS];
new IsSmoking[MAX_PLAYERS];
new UsingSmokeAnim[MAX_PLAYERS];
new ReduceTime[MAX_PLAYERS];
new CreatingGun[MAX_PLAYERS];
new CreatingGunAmmo[MAX_PLAYERS];
new CreatingGunPrice[MAX_PLAYERS];
new IsPuttingMaterials[MAX_PLAYERS];
new IsTakingGun[MAX_PLAYERS];
new Reports[MAX_REPORTS][128];
new PlayerSuspicious[MAX_PLAYERS];
new PlayerSuspiciousMoney[MAX_PLAYERS];
new PlayerSuspiciousInterior[MAX_PLAYERS];
new PlayerGotSpottedRecently[MAX_PLAYERS];
new PlayerBunnyJumping[MAX_PLAYERS];
new PlayerMoneyHacking[MAX_PLAYERS];
new PlayerInteriorHacking[MAX_PLAYERS];
new PlayerSpeedHacking[MAX_PLAYERS];
new PlayerOnCashInbalance[MAX_PLAYERS];
new PlayerFailedToLogin[MAX_PLAYERS];
new PlayerSuspiciousSpeed[MAX_PLAYERS];
new PlayerFakeDeathHacking[MAX_PLAYERS];
new Checked[MAX_PLAYERS];
new weather2;
new lspd1;
new lspd2;
new lspd3;
new fbi1;
new fbi2;
new fbi3;
new army1;
new army2;
new army3;
new lspdw;
new armyw1;
new armyw2;
new lspdg;
new lspdg2;
new armyg;
new armyg2;
new fbig;
new fbig2;
new HideTD2Timer;
new HideTD3Timer;
new HideTD4Timer;
new HideTD5Timer;
new HideTD6Timer;
new Text3D:VehicleLabel[MAX_VEHICLES];
new ChangedName[MAX_PLAYERS];
new admins;
new afkadmins;
new ServerRestarted = 0;
new AntiSpam = 0;
new AntiAfk = 0;
new AntiBunnyJump = 0;
new AntiWeaponHack = 1;
new AntiDriveBy = 1;
new AntiInteriorHack = 0;
new AntiMoneyHack = 1;
new AntiJetpackHack = 0;
new AntiFakeKill = 1;
new AntiHighPing = 1;
new MaxPing = 999;
new AntiName = 1;
new idletime = 300000;
new Hydras;
new Hunters;
new Rhinos;
new Predators;

// DMV Defines
#define GREEN 0x21DD00FF
#define RED 0xE60000FF
#define YELLOW 0xFFFF00FF
#define ORANGE 0xF97804FF
#define GRAY 0xCECECEFF
#define LIGHTBLUE 0x00C2ECFF
#define DrivingTestCash 5000 // Edit this if needed. 5000 = the cash that you'll pay to take the driving test
#define TooSlow 120 // 120 = if the time is 120ªÚmore, you are driving too slow. You may edit this if needed.
#define TooFast 105 // 105 = if the time is less than 105, you are driving too fast. You may edit this if needed.
#define MINVEHHP 600 // 600 = the minimum vehicle health the vehicle can have to pass the test. You may edit this if needed.
#define cop_color 0xC2A2DAFF
#define COLOR_BLACK 0x000000FF
#define COLOR_NICERED 0xFF0000FF


#define GasMax 100
#define RunOutTime 40000
#define RefuelWait 5000

new Gas[MAX_VEHICLES];

new Refueling[MAX_PLAYERS];

enum SavePlayerPosEnum
{
    Float:LastX,
    Float:LastY,
    Float:LastZ
}
new SavePlayerPos[MAX_PLAYERS][SavePlayerPosEnum];
new SpeedMode = 1;
new UpdateSeconds = 1;

public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

new Music[MAX_PLAYERS];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new Float:BurgerDriveIn[6][3] = {
	{801.5522, -1628.91, 13.3828},
	{1209.958,-896.7405, 42.9259},
	{-2341.86, 1021.184, 50.6953},
	{2485.291, 2022.611, 10.8203},
	{1859.496, 2084.797, 10.8203},
	{-2349.49, -152.182, 35.3203}
};

new Float:ChickenDriveIn[3][3] = {
	{2409.651, -1488.65, 23.8281},
	{2377.733, -1909.27, 13.3828},
	{2375.014, 2021.186, 10.8203}
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
{"Jacket"},
{"Amberjack"},
{"Grouper"},
{"Red Snapper"},
{"Pants"},
{"Trout"},
{"Blue Marlin"},
{"Can"},
{"Mackeral"},
{"Sea Bass"},
{"Shoes"},
{"Pike"},
{"Sail Fish"},
{"Garbage"},
{"Tuna"},
{"Eel"},
{"Dolphin"},
{"Shark"},
{"Turtle"},
{"Catfish"},
{"Money Bag"},
{"Swordfish"}
};


new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}
};
/*
new Float:gCopPlayerSpawns[2][3] = {
{216.9725,79.1339,1005.0391},
{219.8852,75.5487,1005.0391}
//{614.8,-608.2,17.2},
//{611.5,-607.8,17.2}
};
*/

new Float:gSweeperPoints[16][3] = {
{2003.3517,-1730.5336,13.1080},
{2243.8682,-1895.1603,13.1057},
{2872.5264,-1507.8936,10.5887},
{2733.4851,-1079.1128,69.0215},
{2491.6882,-1096.9484,48.1798},
{1973.2815,-1173.0474,25.6866},
{1441.3285,-1038.8422,23.4461},
{1041.5815,-776.1030,104.3925},
{958.6799,-1034.2134,29.8119},
{995.9623,-1351.8215,13.0737},
{793.3896,-1583.4993,13.1155},
{368.1902,-1977.2362,7.3970},
{834.1572,-1794.8837,13.5680},
{1243.4885,-1853.9174,13.1080},
{1527.9438,-1663.3240,13.1080},
{2083.6062,-1843.3563,13.1080}
};

new Float:InfoPickups[][] = {
{2029.5945,-1404.6426,17.2512},
{349.5560,161.6693,1019.9912},
{523.6057,-1812.9794,6.5713},
{1424.1729,-1317.9955,13.5547},
{-792.9693,500.5572,1367.3672},
{-779.3134,497.8989,1371.7490},
{1488.6949,-1721.7136,8.2067},
{358.2374,161.3243,1008.3828},
{1215.1304,-11.8431,1000.9219},
{1793.02,-1296.56,13.44},
{2072.5486,-1582.8029,13.4741},
{213.8549,-230.5761,1.7786},
{-86.1251,2.6412,3.1172},
{2137.6624,-2282.3455,20.6719},
{379.1396,-114.2661,1001.4922},
{1174.9100,-1365.7330,13.9876},
{1174.9591,-1369.8761,23.9736},
{1381.0413,-1088.8511,27.3906},
//{1505.2416,-1694.5597,14.0469},–¬ ÷∞Ô÷˙DEL
{362.1231,173.6424,1008.3828},
{1490.3195,1305.6976,1093.2964},
{249.8574,67.8508,1003.6406},
{359.6820,207.0294,1008.3828},
{-38.8664,56.3031,3.1172},
{2022.1492,-1108.7837,26.2031},
{242.7591,66.4315,1003.6406},
{25.1811,1968.5167,17.6406},
{231.4331,140.4850,1003.0234},
{1510.6852,-1458.0654,9.5000},
{1494.3761,-1467.0068,40.5234},
{2073.2979,-1831.1228,13.5469},
{1024.9756,-1030.7930,32.0257},
{488.3819,-1733.0563,11.1752},
{719.8940,-464.8272,16.3359},
{248.4994,-33.1366,1.5781},
{2230.3579,-2286.2107,14.3751},
{358.2368,165.3652,1008.3828},
{358.2500,180.3491,1008.3828}
};

enum pBoxingStats
{
    TitelName[128],
    TitelWins,
    TitelLoses,
};
new Titel[pBoxingStats];

enum cCKInfo
{
	cSendername[20],
	cGiveplayer[20],
	cUsed,
};
new CKInfo[10][cCKInfo];

enum pPaperInfo
{
	PaperUsed,
	PaperMaker[20],
	PaperTitle[64],
	PaperText1[128],
	PaperText2[128],
	PaperText3[128],
	PaperText4[128],
	PaperText5[128],
	PaperText6[128],
	PaperText7[128],
	SafeSaving,
};
new PaperInfo[10][pPaperInfo];

enum pPaper
{
	pMaker[20],
	pTitle[64],
	pLine1[128],
	pLine2[128],
	pLine3[128],
	pLine4[128],
	pLine5[128],
	pLine6[128],
	pLine7[128],
};
new Paper[MAX_PLAYERS][pPaper];

enum fInfo
{
	FamilyTaken,
	FamilyName[20],
	FamilyMOTD[128],
	FamilyColor[20],
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
};
new FamilyInfo[10][fInfo];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

enum playerkillsave//BY nill
{
	Float:Killx,
	Float:Killy,
	Float:Killz,
	KillInterior,
};
new KillSave[MAX_PLAYERS][playerkillsave];

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum TelePosEnum
{
   Float:tX,
   Float:tY
};
new Float:TelePosGps[MAX_PLAYERS][TelePosEnum];


enum eCars
{
	model_id,
	Float:pos_x,
	Float:pos_y,
	Float:pos_z,
	Float:z_angle,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];


new Float:gMedicSpawns[3][3] = {
{348.9868,165.0690,1014.6947},
{348.8042,162.5563,1014.6947},
{348.8767,159.9840,1014.6947}
};

enum rInfo
{
    sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new Roadblocks[MAX_ROADBLOCKS][rInfo];


enum pInfo
{
 	pKey,
	pLevel,
	pSpawn,
	pAdmin,
	pRegularRank,
	gPupgrade,
	pConnectSeconds,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pCK,
	pMuted,
	pFrozen,
	pExp,
	pCash,
	pAccount,
	pJobTimer,
	pCrimes,
	pWanted,
	pCrimeReason[128],
	pWantedLevel,
	pKills,
	pDeaths,
	pWhyLeft[24],
	pArrested,
	pWantedDeaths,
	pPhoneBook,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pJob,
	pPayCheck,
	pHeadValue,
	pJailed,
	pJailTime,
	pRobTime,
	pMats,
	pDrugs,
	pLeader,
	pMember,
	pFMember,
	pRank,
	pChar,
	pContractTime,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pLawSkill,
	pMechSkill,
	pJackSkill,
	pCarSkill,
	pNewsSkill,
	pDrugsSkill,
	pCookSkill,
	pFishSkill,
	Float:pHealth,
	Float:pSHealth,
	Float:pArmour,
	pInt,
	pInteriorNr,
	pLocal,
	pTeam,
	pModel,
	pPnumber,
	pPhousekey,
	pPcarkey,
	pPcarkey2,
	pGangKey,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pPassport,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pCopLic,
	pCarTime,
	pPayDay,
	pPayDayHad,
	pWatch,
	pCrashed,
	pWins,
	pLoses,
	pAlcoholPerk,
	pDrugPerk,
	pMiserPerk,
	pPainPerk,
	pTraderPerk,
	pTut,
	pTutDone,
	pWarns,
	pVirWorld,
	pFuel,
	pMarried,
	pMarriedTo[128],
	pFishTool,
	pNote1[128],
	pNote1s,
	pNote2[128],
	pNote2s,
	pNote3[128],
	pNote3s,
	pNote4[128],
	pNote4s,
	pNote5[128],
	pNote5s,
	pInvWeapon,
	pInvAmmo,
    pInvWeapon2,
	pInvAmmo2,
	pInvWeapon3,
	pInvAmmo3,
	pInvWeapon4,
	pInvAmmo4,
	pInvWeapon5,
	pInvAmmo5,
	pInvWeapon6,
	pInvAmmo6,
	pLighter,
	pCigarettes,
	pRequestingBackup,
	pRoadblock,
	pMask,
	pMaskuse,
	pAdminDuty,
	pTesterDuty,
	pHelper,
	pTester,
	pBlind,
	pSpeedo,
	pDTK,
	pDSTK,
	pWarned,
	pHideNumber,
	pSpeaker,
	pRhino,
	pHunter,
	pHydra,
	pPredat,
	pSwat,
	pTactical,
	pSpecialF,
	pDBanned,
	pDM,
	pDuty,
	pGPS,
	pFS,
	pBoxiSkill,
	pKneeSkill,
	pKungSkill,
	pGrabSkill,
	pElbowSkill,
	pDDFire,
	pCD,
	pHydraR,
	pHunterR,
	pRhinoR,
	pPredR,
	pViewPms,
	pAppearList,
	pAndro,
	pJet,
	pAmmuTrainTime,
 	pPistSkill,
	pSilenSkill,
	pDesertSkill,
	pShotgSkill,
	pSawnSkill,
	pCombSkill,
	pUziSkill,
	pSmgSkill,
	pAkSkill,
	pM4Skill,
	pSnipSkill,
	pRegularCount,
	pPassportTime,
	pOfficerTime,
	pAchievement0,
	pAchievement1,
	pAchievement2,
	pAchievement3,
	pAchievement4,
	pAchievement5,
	pAchievement6,
	pAchievement7,
	pAchievement8,
	pAchievement9,
	pAchievement10,
	pAchievement11,
	pAchievement12,
	pAchievement13,
	pAchievement14,
	pAchievement15,
	pAchievement16,
	pAchievement17,
	pAchievement18,
	pAchievement19,
	pAchievement20,
	pShiftName,
	pWeapon,
	pWeapon2,
	pWeapon3,
	pWeapon4,
	pWeapon5,
	pWeapon6,
	pWeapon7,
	pWeapon8,
	pWeapon9,
	pWeapon10,
	pWeapon11,
	pWeapon12,
	pAmmo,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pAmmo5,
	pAmmo6,
	pAmmo7,
	pAmmo8,
	pAmmo9,
	pAmmo10,
	pAmmo11,
 	pAmmo12,
 	pAtc,
 	pAtcRadio,
 	pPending,
 	pPendingInfo[128],
 	pChatMode,
 	pPunishment1[128],
	pPunishment2[128],
	pPunishment3[128],
	pPunishment4[128],
	pPunishment5[128],
	pPunishment6[128],
	pPunishment7[128],
	pPunishment8[128],
	pIP[24],
	pLastSeen[24],
	pRegistredDate[24],
	pNextPunishment,
	pPunished,
	pTazerBullets,
	pChanged,
	pDecoder,
	pBanned
};
new PlayerInfo[MAX_PLAYERS][pInfo];


enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmourx,
	hArmoury,
	hArmourz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hLevel,
	hWorld,
	hSetted,
	hDrugs,
	hMaterials,
	hWeapon1,
	hAmmo1,
	hWeapon2,
	hAmmo2,
	hWeapon3,
	hAmmo3,
	hWeapon4,
	hAmmo4,
	hWeapon5,
	hAmmo5,
	hWeapon6,
	hAmmo6,
	hDate,
	hMessage[64]
};

stock GetPlayerSpeed(playerid,bool:kmh) // by misco
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}

new HouseInfo[1023][hInfo];


stock GetHouse2DZone(houseid, zone[], len)
{
	new Float:x22, Float:y22
	x22 = HouseInfo[houseid][hEntrancex]; y22 = HouseInfo[houseid][hEntrancey];
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetHouse2DZone2(houseid, zone[], len)
{
	new Float:x22, Float:y22
	x22 = HouseInfo[houseid][hEntrancex]; y22 = HouseInfo[houseid][hEntrancey];
 	for(new i = 0; i != sizeof(gSANZones); i++ )
 	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

new HouseEntered[MAX_PLAYERS];
new BizzEntered[MAX_PLAYERS];

enum cInfo
{
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cOwned,
	cLock,
	cPaintjob,
	cVirWorld,
	cComponent0,
	cComponent1,
	cComponent2,
	cComponent3,
	cComponent4,
	cComponent5,
	cComponent6,
	cComponent7,
	cComponent8,
	cComponent9,
	cComponent10,
	cComponent11,
	cComponent12,
	cComponent13,
	cCode
};

new CarInfo[600][cInfo];

// CARS
new armycar[32];
new governcar[5];
new copcar[37];
new swatcar[11];
new vicecar[13];
new fbicar[20];
new tacticalcar[8];
new ambulance[8];
new surenoscar[16];
new signatracar[14];
new fdcar[16];
new rentcar[20];
new harvest[4];
new drugharvest[4];
new yamaguchicar[13];
new bratvacar[6];
new specialfcar[7];
new ownedcar[sizeof(CarInfo)];
new admincar[2];
new developercar[52];
new anarchybike[15];
new salescar[147];
new hitmencar[14];
new rentbike[19];
new createdcar[MAX_VEHICLES];
// CARS


enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	bVirWorld,
	bInteriorNr,
	bSetted
};
new BizzInfo[255][bInfo];


stock GetBizz2DZone2(houseid, zone[], len)
{
	new Float:x22, Float:y22
	x22 = BizzInfo[houseid][bEntranceX]; y22 = BizzInfo[houseid][bEntranceY];
 	for(new i = 0; i != sizeof(gSANZones); i++ )
 	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
};
new SBizzInfo[12][sbInfo];

new HousePickup[sizeof(HouseInfo)];
new Text3D:HouseLabel[sizeof(HouseInfo)];
new Text3D:BizzLabel[sizeof(BizzInfo)];
new BizzPickup[sizeof(BizzInfo)];
new Text3D:SBizzLabel[sizeof(SBizzInfo)];

enum pHaul
{
	pCapasity,
	pLoad,
};

new PlayerHaul[113][pHaul];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];


enum iInfo
{
	iAdmin[128],
	iMOTD[128],
	iPassword[128],
	iNeedPass,
	iLock,
	iPlayers,
};
new IRCInfo[10][iInfo];

enum dDrug
{
	DrugAmmount,
};
new drugsys[dDrug];

enum dMats
{
	MatsAmmount,
};
new matssys[dMats];

enum hqLocks
{
	surlock,
	luclock,
	guclock,
	stlock,
	iolock,
};
new hqlock[hqLocks];

new RandCars[20][1] = {
{496},{542},{507},{585},
{466},{492},{579},{559},
{400},{551},{516},{475},
{561},{550},{566},{558},
{562},{562},{603},{560}
};


new RandLCars[1][1] = {
{431}// coach
};

new RandomWankTime[][] =
{
	{300000},
	{600000},
	{900000}
};

new GunPrice[37][1] = {
{500}, //parachute [0]
{250}, //golfclub [1]
{300}, //nightstick [2]
{200}, //knife [3]
{700}, //baseballbat [4]
{300}, //shovel [5]
{100}, //poolcue [6]
{400}, //purpledildo [7]
{780}, //whitedildo [8]
{560}, //longwhitedildo [9]
{530}, //whitedildo2 [10]
{100}, //flowers [11]
{600}, //cane [12]
{750}, //sdpistol [13]
{750}, //colt45 [14]
{1500}, //deagle [15]
{2000}, //Tec9 [16]
{2000}, //uzi [17]
{5000}, //mp5 [18]
{2500}, //shotgun [19]
{5000}, //combat [20]
{2000}, //sawnoff [21]
{4500}, //ak47 [22]
{5000}, //m4 [23]
{1000}, //rifle [24]
{5000}, //sniper [25]
{25}, //pistolammo [26]
{40}, //shotgunammo [27]
{35}, //MP5 ammo [28]
{40}, //assaultammo [29]
{20}, //rifleammo [30]
{30}, //Silenced Ammo [31]
{50}, // Deagle Ammo [32]
{20}, // Sawn off Ammo [33]
{50}, // Combat Ammo [34]
{30}, // TEC-MAC Ammo [35]
{75} // Sniper Ammo [36]
};

new JoinPed[69][1] = {
{280},//POLICE_FORCE
{281},
{282},
{283},
{284},
{285},
{288},
{71},
{166},
{295},
{148},
{286},//FBI/ATF
{164},
{163},
{287},//NATIONAL_GUARD
{285},
{70},//FIRE/AMBULANCE
{274},
{275},
{276},
{277},
{278},
{279},
{292},//SURENOS
{114},
{115},
{175},
{174},
{116},
{173},
{176},
{124},//Signatra
{125},
{126},
{111},
{123},
{186},
{228},
{249},//HITMANS
{68},
{72},
{121},
{295},
{148},//NEWS_REPORTERS
{188},
{187},
{255},//TAXI_CAB_COMPANY
{253},
{153},//DRIVING/FLYING_SCHOOL
{156},//DRIVING/FLYING_SCHOOL
{206},//DRIVING/FLYING_SCHOOL
{221},//DRIVING/FLYING_SCHOOL
{19},//Signatra
{22},
{22},
{144},
{170},
{180},
{91},//¥Û»¶
{55},
{112},
{127},
{43},
{46},
{143},//¿≠∏±
{156},
{176},
{177},
{184}
};

new CivMalePeds[54][1] = {
{2},
{47},
{48},
{50},
{58},
{60},
{68},
{72},
{73},
{80},
{81},
{82},
{83},
{95},
{100},
{101},
{102},
{103},
{104},
{108},
{109},
{110},
{121},
{122},
{123},
{135},
{142},
{143},
{144},
{146},
{153},
{154},
{155},
{156},
{158},
{159},
{160},
{161},
{170},
{180},
{189},
{202},
{203},
{204},
{258},
{259},
{260},
{293},
{295},
{296},
{297},
{61},
{255},
{253}
};

new CivFemalePeds[33][1] = {
{55},
{56},
{63},
{69},
{76},
{85},
{91},
{93},
{131},
{141},
{148},
{150},
{151},
{152},
{157},
{169},
{172},
{190},
{192},
{193},
{194},
{195},
{198},
{201},
{214},
{216},
{219},
{225},
{233},
{237},
{251},
{263},
{298}
};

new RandomMSG[][] =
{
	"≤‚ ‘∑˛ŒÒ∆˜"
};


new RandomFemaleSkins[][] =
{
	{9},{10},{11},{38},{39},{12},{54},{55},{56},{42},{41},{75},{76},{77},
	{85},{87},{88},{90},{93},{111},{130},{140},{139},{141},{145},{148},{152},
	{151},{157},{169},{172},{178},{190},{192},{193},{194},{199},{198},{201},
	{207},{211},{215},{219},{225},{226},{233},{237},{244},{246},{251},{63},
	{69}
};


new RandomMaleSkins[][] =
{
    {7},{18},{19},{20},{21},{23},{27},{29},{30},{37},{44},{49},{52},{57},
	{60},{62},{66},{70},{73},{78},{82},{94},{96},{100},{111},{127},{132},
	{135},{137},{142},{144},{147},{154},{158},{164},{167},{170},{177},{181},
	{184},{185},{188},{200},{203},{212},{217},{223},{228},{230},{236},{240},
	{247},{248},{252},{254},{259},{260},{264}
}


new Peds[199][1] = {
{7},
/*{288},//TEAM_ADMIN
{286},{287},{228},{113},{120},{147},{294},{227},{61},{171},*/
{247},//∆Ω√ÒS DOWN HERE
{248},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{246},{245},{244},{243},{242},{241},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};


//------------------------------------------------------------------------------------------------------

main()
{
	print(" 		 Raven's Roleplay				");
	print("           ±º‰:2011ƒÍ2‘¬15»’∂Øπ§			");
	print(" 		 ∫∫ªØ,BUG–ﬁ∏¥,–ﬁ∏ƒ				");
}


//---------------------------------------------------------------------------------------------------------

public SearchingHit(playerid)
{
	new string[128];
	new giveplayer[MAX_PLAYER_NAME];
	new searchhit = 0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(searchhit == 0)
		    {
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 8)
			    {
			        GetPlayerName(i, giveplayer, sizeof(giveplayer));
			        searchhit = 1;
			        hitfound = 1;
			        hitid = i;
			        for(new k=0; k<MAX_PLAYERS; k++)
					{
						if(IsPlayerConnected(k))
						{
				        	if(PlayerInfo[k][pMember] == 8 || PlayerInfo[k][pLeader] == 8)
				        	{
	               				SendClientMessage(k, COLOR_WHITE, "|__________________ …± ÷ª˙ππ–¬Œ≈ __________________|");
				                SendClientMessage(k, COLOR_DBLUE, "*** ¥´»Îµƒœ˚œ¢: ”–“ª∏ˆø…π©—°‘Òµƒœ¬µ•. ***");
				                format(string, sizeof(string), "¡™œµ»À: %s   ID: %d   º€∏Ò: $%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
								SendClientMessage(k, COLOR_DBLUE, string);
								SendClientMessage(k, COLOR_YELLOW, " π”√ Givehit hitmanid, ◊™»√∫œÕ¨∏¯“ª∏ˆ…± ÷.");
								SendClientMessage(k, COLOR_WHITE, "|________________________________________________________|");
	      					}
					    }
					}
					return 0;
			    }
			}
		}
	}
	if(searchhit == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "   √ª”–∫œÕ¨ø…”√ !");
	}
	return 0;
}

public ExtortionBiz(bizid, money)
{
    new string[128];
    format(string, sizeof(string), "√ª»À");
    if(strcmp(BizzInfo[bizid][bExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    SafeGivePlayerMoney(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    new string[128];
    format(string, sizeof(string), "√ª»À");
    if(strcmp(SBizzInfo[bizid][sbExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    SafeGivePlayerMoney(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

stock CommandMsg(playerid)
{
	if (IsPlayerConnected(playerid))
		{
		SendClientMessage(playerid, COLOR_WHITE, "∑˛ŒÒ∆˜: Œ¥÷™µƒ√¸¡Ó!");
		}
	return 1;
}

stock PlayerName(playerid)
{
	new name[24];
	GetPlayerName(playerid, name, 24);
	return name;
}

public DollahScoreUpdate()
{
	new LevScore;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return 1;
}

LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    gPlayerUsingLoopingAnim[playerid] = 1;
    ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
    TextDrawShowForPlayer(playerid,txtAnimHelper);
}

public Encrypt(string[])
{
	for(new x=0; x < strlen(string); x++)
	  {
		  string[x] += (3^x) * (x % 15);
		  if(string[x] > (0xff))
		  {
			  string[x] -= 256;
		  }
	  }
	return 1;
}

stock right(source[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(source);
	strmid(retval, source, srclen - len, srclen, MAX_STRING);
	return retval;
}

stock sscanf(string[], format[], {Float,_}:...)
{
	new name[MAX_PLAYER_NAME];
	#if defined isnull
		if (isnull(string))
	#else
		if (string[0] == 0 || (string[0] == 1 && string[1] == 0))
	#endif
		{
			return format[0];
		}
	#pragma tabsize 4
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs(),
		delim = ' ';
	while (string[stringPos] && string[stringPos] <= ' ')
	{
		stringPos++;
	}
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if ('0' <= ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return -1;
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					num = 0,
					ch = string[stringPos];
				do
				{
					stringPos++;
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						default:
						{
							return -1;
						}
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{
				setarg(paramPos, 0, _:floatstr(string[stringPos]));
			}
			case 'p':
			{
				delim = format[formatPos++];
				continue;
			}
			case '\'':
			{
				new
					end = formatPos - 1,
					ch;
				while ((ch = format[++end]) && ch != '\'') {}
				if (!ch)
				{
					return -1;
				}
				format[end] = '\0';
				if ((ch = strfind(string, format[formatPos], false, stringPos)) == -1)
				{
					if (format[end + 1])
					{
						return -1;
					}
					return 0;
				}
				format[end] = '\'';
				stringPos = ch + (end - formatPos);
				formatPos = end + 1;
			}
			case 'u':
			{
				new
					end = stringPos - 1,
					id = 0,
					bool:num = true,
					ch;
				while ((ch = string[++end]) && ch != delim)
				{
					if (num)
					{
						if ('0' <= ch <= '9')
						{
							id = (id * 10) + (ch - '0');
						}
						else
						{
							num = false;
						}
					}
				}
				if (num && IsPlayerConnected(id))
				{
					setarg(paramPos, 0, id);
				}
				else
				{
					#if !defined foreach
						#define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if (IsPlayerConnected(%2))
						#define __SSCANF_FOREACH__
					#endif
					string[end] = '\0';
					num = false;
					id = end - stringPos;
					foreach (Player, playerid)
					{
						GetPlayerName(playerid, name, sizeof (name));
						if (!strcmp(name, string[stringPos], true, id))
						{
							setarg(paramPos, 0, playerid);
							num = true;
							break;
						}
					}
					if (!num)
					{
						setarg(paramPos, 0, INVALID_PLAYER_ID);
					}
					string[end] = ch;
					#if defined __SSCANF_FOREACH__
						#undef foreach
						#undef __SSCANF_FOREACH__
					#endif
				}
				stringPos = end;
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != delim)
					{
						setarg(paramPos, i++, ch);
					}
					if (!i)
					{
						return -1;
					}
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != delim && string[stringPos] > ' ')
		{
			stringPos++;
		}
		while (string[stringPos] && (string[stringPos] == delim || string[stringPos] <= ' '))
		{
			stringPos++;
		}
		paramPos++;
	}
	do
	{
		if ((delim = format[formatPos++]) > ' ')
		{
			if (delim == '\'')
			{
				while ((delim = format[formatPos++]) && delim != '\'') {}
			}
			else if (delim != 'z')
			{
				return delim;
			}
		}
	}
	while (delim > ' ');
	return 0;
}

public Spectator()
{
	new string[350];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] != 255)
			{
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health,Float:armour,Float:health2;
					    new name[MAX_PLAYER_NAME];
					    new money = GetPlayerMoney(targetid);
					    new carid = GetPlayerVehicleID(targetid);
					    new kmh = GetPlayerSpeed(targetid, true);
					    new bankmoney = PlayerInfo[targetid][pAccount];
					    GetPlayerName(targetid, name, sizeof(name));
					    GetPlayerHealth(targetid, health);
					    GetPlayerArmour(targetid, armour);
					    GetVehicleHealth(carid, health2);
					    if(!IsPlayerInAnyVehicle(targetid))
					    {
					        format(string, sizeof(string),"~p~- ~h~%s (ID: %d) ~p~-~n~~n~~n~ ~b~Health: ~w~%.1f ~g~:-: ~b~Armour: ~w~%.1f ~n~ ~b~Money: ~w~$%d ~g~:-: ~b~Bank: ~w~$%d",name,targetid,health,armour,money,bankmoney);
						    TextDrawSetString(Textdraw54[i],string);
						}
						else
						{
						    format(string, sizeof(string),"~p~- ~h~%s (ID: %d) ~p~-~n~~n~~n~ ~b~Health: ~w~%.1f ~g~:-: ~b~Armour: ~w~%.1f ~n~ ~b~Money: ~w~$%d ~g~:-: ~b~Bank: ~w~$%d ~n~~n~~g~---------------------------------------------------~n~~n~ ~b~Vehicle ID: ~w~%d ~b~Vehicle HP: ~w~%.1f ~n~~n~~b~Speed: ~w~%d",name,targetid,health,armour,money,bankmoney,carid,health2,kmh);
						    TextDrawSetString(Textdraw54[i],string);
						}
				    }
					if(GetPlayerInterior(targetid) > 0)
					{
						SafeSetPlayerInterior(i,GetPlayerInterior(targetid));
					}
					if(GetPlayerVirtualWorld(targetid) > 0)
					{
						SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(targetid));
					}
				}//Targetid connected
			}
		}
	}
}

//------------------------------------------------------------------------------------------------------

IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return 1;
	return 0;
}

OnePlayAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    if (gPlayerUsingLoopingAnim[playerid] == 1) TextDrawHideForPlayer(playerid,txtAnimHelper);
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
	animation[playerid]++;
}

StopLoopingAnim(playerid)
{
	gPlayerUsingLoopingAnim[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}


public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new string[128];
	new vehicle[24];
	GetVehicleName(vehicleid, vehicle, sizeof(vehicle));
	for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] != 255)
			{
    			PlayerSpectateVehicle(i,vehicleid);
			}
		}
	}
	if(IsAnOwnableCar(vehicleid))
	{
	   	format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: %s",vehicle, vehicleid, CarInfo[vehicleid][cOwner]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else if(IsASalesVehicle(vehicleid))
	{
	    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: æ≠œ˙…Ã",vehicle, vehicleid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string,sizeof(string),"º¸»Î /v buy π∫¬Ú’‚÷÷∆˚≥µ*$%d",GetVehiclePrice(vehicleid));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else
	{
	    if(IsAGangCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: »˝∫œª·",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAGangCar2(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)  ”µ”–’ﬂ: ¬Ûµ¬¡÷ ∫⁄∞Ô",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAGangCar3(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: …Ωø⁄◊È ∫⁄∞Ô",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAGangCar4(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)  ”µ”–’ﬂ: ¥Û»¶ ∫⁄∞Ô",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAGangCar5(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: ¿≠∏± ∫⁄∞Ô",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAGangCar6(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: √¿π˙”ÃÃ´∞Ô",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAGangCar7(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: …± ÷◊È÷Ø",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsACopCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: LSPD",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAnFbiCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: FBI",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsNgCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: π˙√ÒæØŒ¿∂”",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsASwatCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: S.W.A.T",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsATacticalCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: ª˙∂Ø≤ø∂”",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsASpecialFCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: Ãÿ÷÷≤ø∂”",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAFiremenCar(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: LSFD",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else if(IsAnAmbulance(vehicleid))
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: LSMD",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else
	    {
		    format(string,sizeof(string),"ƒ„Ω¯»ÎµΩ“ª∏ˆ %s (%d)   ”µ”–’ﬂ: π˙º“",vehicle, vehicleid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
	}
	if(Gps[playerid] == 1)
	{
	    TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
	}
	if(gTeam[playerid] >= 1||gTeam[playerid] >= 3||gTeam[playerid] >= 4)
	{
		if (GetVehicleModel(vehicleid) == 520) // Hydra
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pHydraR] == 1) { }
		    else {	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ÷ª”–∏¸∏ﬂµƒº∂÷¥∑®µ•Œªø…ƒ‹”√’‚!!"); new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X,Y,Z); SafeSetPlayerPos(playerid, X,Y,Z); }
		}
		if (GetVehicleModel(vehicleid) == 425) // Hunter
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pHunterR] == 1) { }
		    else {	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ÷ª”–∏¸∏ﬂµƒº∂÷¥∑®µ•Œªø…ƒ‹”√’‚!!"); new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X,Y,Z); SafeSetPlayerPos(playerid, X,Y,Z); }
		}
		if (GetVehicleModel(vehicleid) == 432) // Rhino
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pRhinoR] == 1) { }
		    else {	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ÷ª”–∏¸∏ﬂµƒº∂÷¥∑®µ•Œªø…ƒ‹”√’‚!!"); new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X,Y,Z); SafeSetPlayerPos(playerid, X,Y,Z); }
		}
		if (GetVehicleModel(vehicleid) == 430) // Predator
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pPredR] == 1) { }
		    else {	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ÷ª”–∏¸∏ﬂµƒº∂÷¥∑®µ•Œªø…ƒ‹”√’‚!!"); new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X,Y,Z); SafeSetPlayerPos(playerid, X,Y,Z); }
		}
		if(IsADeveloperCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6) { }
		    else {	SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ˙±ÿ–Î «ø™∑¢»À‘±ø…“‘ π”√!"); new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X,Y,Z); SafeSetPlayerPos(playerid, X,Y,Z); }
		}
	}
	return 1;
}

public IsAnInstructor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==11)
		{
		    return 1;
		}
		if(leader==11)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==5 || member==6 || member==8 || member==14 || member==15 || member==16)
		{
		    return 1;
		}
		if(leader==5 || leader==6 || leader==8 || leader==14 || leader==15 || leader==16)
		{
		    return 1;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAFreecop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if((member == 0 && leader == 0) && PlayerInfo[playerid][pCopLic] == 1)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAFiremen(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==12)
		{
		    return 1;
		}
		else if(leader==12)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==4)
		{
		    return 1;
		}
		else if(leader==4)
		{
		    return 1;
		}
	}
	return 0;
}

public IsSpecial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new swat = PlayerInfo[playerid][pSwat];
	    new specialf = PlayerInfo[playerid][pSpecialF];
	    new tactical = PlayerInfo[playerid][pTactical];
	    if(tactical >= 3 || swat >= 3 || specialf >= 3)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAPDMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1)
		{
		    return 1;
		}
		else if(leader==1)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAnFbi(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==2)
		{
		    return 1;
		}
		else if(leader==2)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAnNg(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==3)
		{
		    return 1;
		}
		else if(leader==3)
		{
		    return 1;
		}
	}
	return 0;
}
public IsASwat(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new swat = PlayerInfo[playerid][pSwat];
	    if(swat>=1)
		{
		    return 1;
		}
	}
	return 0;
}
public IsATactical(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new tactical = PlayerInfo[playerid][pTactical];
	    if(tactical>=1)
		{
		    return 1;
		}
	}
	return 0;
}

public IsARentableCar(carid)
{
	for(new i = 0; i < sizeof(rentcar); i++)
	{
	    if(carid == rentcar[i]) return 1;
	}
	return 0;
}
public IsARentableBike(carid)
{
	for(new i = 0; i < sizeof(rentbike); i++)
	{
	    if(carid == rentbike[i]) return 1;
	}
	return 0;
}

public IsAnOwnableCar(carid)
{
	for(new i = 0; i < sizeof(ownedcar); i++)
	{
	    if(carid == ownedcar[i]) return 1;
	}
	return 0;
}

public IsACreatedCar(carid)
{
	for(new i = 0; i < sizeof(createdcar); i++)
	{
	    if(carid == createdcar[i]) return 1;
	}
	return 0;
}

public IsAtDealership(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 125, 2128.0864,-1135.3912,25.5855) || IsPlayerInRangeOfPoint(playerid, 50,537.3366,-1293.2140,17.2422) || IsPlayerInRangeOfPoint(playerid, 75, 2781.0132,-1613.7152,10.9219) || IsPlayerInRangeOfPoint(playerid, 75, 1756.2378,-2546.2749,13.5469)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,100, 1099.995117,-1202.029296,17.804687) || IsPlayerInRangeOfPoint(playerid, 100, 2498.383300,-2263.643066,3.196316) || IsPlayerInRangeOfPoint(playerid, 50, 299.1723,-1518.6627,24.6007) || IsPlayerInRangeOfPoint(playerid, 75, 2520.0972,-1519.7384,23.9370)) return 1;
	else return 0;
}
public IsAtCarrental(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 30, 1696.5543,-1053.4685,23.9063))
		{
			return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(IsPlayerInRangeOfPoint(playerid, 25, 20.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid, 25,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid, 50, 161.3765,-83.8416,1001.8047))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 6, 1004.0070,-939.3102,42.1797) || IsPlayerInRangeOfPoint(playerid, 6, 1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, -90.5515,-1169.4578,2.4079) || IsPlayerInRangeOfPoint(playerid, 6, -1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, -2029.4968,156.4366,28.9498) || IsPlayerInRangeOfPoint(playerid, 6, -2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, -2243.9629,-2560.6477,31.8841) || IsPlayerInRangeOfPoint(playerid, 8, -1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, 2202.2349,2474.3494,10.5258) || IsPlayerInRangeOfPoint(playerid, 10, 614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, -1328.8250,2677.2173,49.7665) || IsPlayerInRangeOfPoint(playerid, 6, 70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, 2113.7390,920.1079,10.5255) || IsPlayerInRangeOfPoint(playerid, 6, -1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 6, 656.4265,-559.8610,16.5015) || IsPlayerInRangeOfPoint(playerid, 6, 656.3797,-570.4138,16.5015))
		{//Dillimore
		    return 1;
		}
	}
	return 0;
}

public IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1, 403.8266,-2088.7598,7.8359) || IsPlayerInRangeOfPoint(playerid, 1, 398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 396.2197,-2088.6692,7.8359) || IsPlayerInRangeOfPoint(playerid, 1, 391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 383.4157,-2088.7849,7.8359) || IsPlayerInRangeOfPoint(playerid, 1, 374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 369.8107,-2088.7927,7.8359) || IsPlayerInRangeOfPoint(playerid, 1, 367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 362.2244,-2088.7981,7.8359) || IsPlayerInRangeOfPoint(playerid, 1, 354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0 ,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 3.0 ,376.4466,-60.9574,1001.5078) || IsPlayerInRangeOfPoint(playerid, 3.0 ,378.1215,-57.4928,1001.5078))
		{//Burgershot
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.0 ,374.1185,-113.6361,1001.4922) || IsPlayerInRangeOfPoint(playerid, 3.0 ,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return 1;
		}
	}
	return 0;
}

public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0,495.7801,-76.0305,998.7578) || IsPlayerInRangeOfPoint(playerid, 4.0,499.9654,-20.2515,1000.6797))
		{//In grove street bar (with girlfriend), and in Havanna
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0,1215.9480,-13.3519,1000.9219) || IsPlayerInRangeOfPoint(playerid, 10.0,-2658.9749,1407.4136,906.2734))
		{//PIG Pen
		    return 1;
		}
 		else if(IsPlayerInRangeOfPoint(playerid, 4.0,968.7739,-46.6145,1001.1172) || IsPlayerInRangeOfPoint(playerid, 10.0,968.7739,-46.6145,1001.1172))
		{//…Ωø⁄◊È◊‹≤ø
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0,-791.016,512.249,1336.41) || IsPlayerInRangeOfPoint(playerid, 10.0,-799.122,520.988,1336.41))
		{//¬Ûµ¬¡÷∞Ô House
		    return 1;
		}
	}
	return 0;
}

public IsABoat(carid)
{
	if(IsModelABoat(carid))
	{
		return 1;
	}
	return 0;
}

public IsAHarvest(carid)
{
	for(new i = 0; i < sizeof(harvest); i++)
	{
		if(carid == harvest[i])	return 1;
	}
	return 0;
}

public IsADrugHarvest(carid)
{
	for(new i = 0; i < sizeof(drugharvest); i++)
	{
		if(carid == drugharvest[i])	return 1;
	}
	return 0;
}

public IsASmuggleCar(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 442)
	{
		return 1;
	}
	return 0;
}

public IsASweeper(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 574)
	{
	    return 1;
	}
	return 0;
}


public IsModelAPlane(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 460 || modelid == 464 || modelid == 476 || modelid == 511 || modelid == 512 || modelid == 513 || modelid == 519 || modelid == 520 || modelid == 553 || modelid == 577 || modelid == 592 || modelid == 593)
	{
		return 1;
	}
	return 0;
}

public IsAnEnterableModel(carid)
{
    new m = GetVehicleModel(carid);
	if(m == 511 || m == 519 || m == 553 || m == 577 || m == 592 || m == 417 || m == 548 || m == 563 || m == 453 || m == 454 || m == 484 || m == 407 || m == 408 || m == 414 || m == 427 || m == 435 || m == 456 || m == 498 || m == 499 || m == 508 || m == 528 || m == 573 || m == 591 || m == 601 || m == 609)
	{
		return 1;
	}
	return 0;
}

public IsAnEnterableCar(carid)
{
    new m = GetVehicleModel(carid);
	if(m == 407 || m == 408 || m == 414 || m == 427 || m == 435 || m == 456 || m == 498 || m == 499 || m == 508 || m == 528 || m == 573 || m == 591 || m == 601 || m == 609)
	{
		return 1;
	}
	return 0;
}
public IsAnEnterableHeli(carid)
{
    new m = GetVehicleModel(carid);
	if(m == 417 || m == 548 || m == 563)
	{
		return 1;
	}
	return 0;
}
public IsAnEnterableBoat(carid)
{
    new m = GetVehicleModel(carid);
	if(m == 453 || m == 454 || m == 484)
	{
		return 1;
	}
	return 0;
}
public IsAnEnterablePlane(carid)
{
    new m = GetVehicleModel(carid);
	if(m == 511 || m == 519 || m == 553 || m == 577 || m == 592)
	{
		return 1;
	}
	return 0;
}

public IsModelABike(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 448 || modelid == 461 || modelid == 462 || modelid == 463 || modelid == 468 || modelid == 471 || modelid == 481 || modelid == 509 || modelid == 510 || modelid == 521 || modelid == 522 || modelid == 523 || modelid == 581 || modelid == 586)
	{
		return 1;
	}
	return 0;
}

public IsModelABycicle(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 509 || modelid == 481 || modelid == 510)
	{
		return 1;
	}
	return 0;
}

public IsModelAHeli(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 417 || modelid == 425 || modelid == 447 || modelid == 465 || modelid == 469 || modelid == 487 || modelid == 488 || modelid == 497 || modelid == 501 || modelid == 548 || modelid == 563)
	{
		return 1;
	}
	return 0;
}

public IsModelABoat(carid)
{
    new modelid = GetVehicleModel(carid);
	if(modelid == 430 || modelid == 446 || modelid == 452 || modelid == 453 || modelid == 454 || modelid == 472 || modelid == 473 || modelid == 484 || modelid == 493)
	{
		return 1;
	}
	return 0;
}

public IsModelASpecial(carid)
{
	new m = GetVehicleModel(carid);
	if(m == 424 || m == 432 || m == 449 || m == 457 || m == 485 || m == 486 || m == 500 || m == 532 || m == 537 || m == 568 || m == 571 || m == 572 || m == 573 || m == 574 || m == 429 || m == 480 || m == 533 || m == 536 || m == 467 || m == 575)
	{
		return 1;
	}
	return 0;
}


public IsAPlane(carid)
{
	if(IsModelAPlane(carid))
	{
		return 1;
	}
	return 0;
}

public IsACopCar(carid)
{
	for(new i = 0; i < sizeof(copcar); i++)
	{
		if(carid == copcar[i])	return 1;
	}
	return 0;
}

public IsAFiremenCar(carid)
{
	for(new i = 0; i < sizeof(fdcar); i++)
	{
		if(carid == fdcar[i])	return 1;
	}
	return 0;
}

public IsASwatCar(carid)
{
	for(new i = 0; i < sizeof(swatcar); i++)
	{
		if(carid == swatcar[i])	return 1;
	}
	return 0;
}

public IsAnFbiCar(carid)
{
	for(new i = 0; i < sizeof(fbicar); i++)
	{
		if(carid == fbicar[i])	return 1;
	}
	return 0;
}

public IsATacticalCar(carid)
{
	for(new i = 0; i < sizeof(tacticalcar); i++)
	{
		if(carid == tacticalcar[i])	return 1;
	}
	return 0;
}

public IsNgCar(carid)
{
	for(new i = 0; i < sizeof(armycar); i++)
	{
	    if(carid == armycar[i]) return 1;
	}
	return 0;
}

public IsASpecialFCar(carid)
{
	for(new i = 0; i < sizeof(specialfcar); i++)
	{
	    if(carid == specialfcar[i]) return 1;
	}
	return 0;
}

public IsAGovernmentCar(carid)
{
	for(new i = 0; i < sizeof(governcar); i ++)
	{
		if(carid == governcar[i]) return 1;
	}
	return 0;
}

public IsATank(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 432)
	{
		return 1;
	}
	return 0;
}

public IsAnAmbulance(carid)
{
	for(new i = 0; i < sizeof(ambulance); i++)
	{
		if(carid == ambulance[i])	return 1;
	}
	return 0;
}

public IsAnAdminCar(carid)
{
	for(new i = 0; i < sizeof(admincar); i++)
	{
	    if(carid == admincar[i]) return 1;
	}
	return 0;
}

public IsADeveloperCar(carid)
{
 	for(new i = 0; i < sizeof(developercar); i++)
	{
	    if(carid == developercar[i]) return 1;
	}
	return 0;
}

public IsAnFiretruck(carid)
{
 	new model = GetVehicleModel(carid);
	if(model == 407 || model == 544)
	{
		return 1;
	}
	return 0;
}

public IsATruck(carid)
{
	new m = GetVehicleModel(carid);
	if(m == 403 || m == 406 || m == 408 || m == 414 || m == 443 || m == 456 || m == 455 || m == 498 || m == 499 || m == 514 || m == 515 || m == 609)
	{
		return 1;
	}
	return 0;
}

public IsAPizzabike(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 448)
	{
		return 1;
	}
	return 0;
}

public IsABus(carid)
{
	new model = GetVehicleModel(carid);
	if(model == 431 || model == 437)
	{
		return 1;
	}
	return 0;
}

public IsATowcar(carid)
{
    new model = GetVehicleModel(carid);
	if(model == 525)
	{
		return 1;
	}
	return 0;
}

public IsAGangCar(carid)
{
	for(new i = 0; i < sizeof(surenoscar); i++)
	{
		if(carid == surenoscar[i])	return 1;
	}
	return 0;
}

public IsAGangCar2(carid)
{
	for(new i = 0; i < sizeof(signatracar); i++)
	{
		if(carid == signatracar[i])	return 1;
	}
	return 0;
}

public IsAGangCar3(carid)
{
	for(new i = 0; i < sizeof(yamaguchicar); i++)
	{
		if(carid == yamaguchicar[i])	return 1;
	}
	return 0;
}

public IsAGangCar4(carid)
{
	for(new i = 0; i < sizeof(bratvacar); i++)
	{
		if(carid == bratvacar[i])	return 1;
	}
	return 0;
}

public IsAGangCar5(carid)
{
	for(new i = 0; i < sizeof(vicecar); i++)
	{
		if(carid == vicecar[i])	return 1;
	}
	return 0;
}

public IsAGangCar6(carid)
{
	for(new i = 0; i < sizeof(anarchybike); i++)
	{
	    if(carid == anarchybike[i]) return 1;
	}
	return 0;
}

public IsAGangCar7(carid)
{
	for(new i = 0; i < sizeof(hitmencar); i++)
	{
	    if(carid == hitmencar[i]) return 1;
	}
	return 0;
}

public IsABike(carid)
{
	if(IsModelABike(carid))
	{
		return 1;
	}
	return 0;
}

public IsAOBike(carid)
{
	if(IsARentableBike(carid))
	{
		return 1;
	}
	return 0;
}

//------------------------------------------------------------------------------------------------------

dcmd_unban(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 5)
	    return 0;

	new rcmsg[80], acct[24], file[64],name[24],string[128],otherfile[64];
	GetPlayerName(playerid, name, sizeof(name));

	if(sscanf(params, "s", acct))
		return SendClientMessage(playerid, COLOR_LIGHTRED, "”√∑®: /unban <’Àªß√˚≥∆>");

	format(file, sizeof(file),"LARP/Users/%s.ini", acct);

	if(!dini_Exists(file))
	    return SendClientMessage(playerid, COLOR_LIGHTRED,"¥ÌŒÛ£∫’ ªß≤ª¥Ê‘⁄£°");

	dini_IntSet(file, "Banned", 0);

	format(ipFILE, 128, "LARP/Users/Aliases/%s.txt", acct);

	format(rcmsg, sizeof(rcmsg), "unbanip %s", dini_Get(ipFILE,"NameIp"));
	SendRconCommand(rcmsg);
	SendRconCommand("reloadbans");
	
	format(otherfile,sizeof(otherfile),"LARP/Users/Bans/%s.ban",dini_Get(ipFILE,"NameIp"));
	fremove(otherfile);

	format(string, sizeof(string), "[π‹¿Ì]: %s »°œ˚¡À∂‘’Àªß√˚Œ™ %s.", name,acct);
	ABroadCast(COLOR_LIGHTRED,string, 5);
	format(string, sizeof(string), "[π‹¿Ì]: IP %s “—¥”¥”Ω˚¡Ó√˚µ•œ˚≥˝”…π‹¿Ì‘± %s œ˚≥˝µƒ.", dini_Get(ipFILE,"NameIp"), name);
	ABroadCast(COLOR_WHITE,string, 5);
	format(string, sizeof(string), "* π‹¿Ì‘± %s »°œ˚¡À∂‘’Àªß√˚Œ™ %s ÕÊº“{0FF0FF}Ω‚∑‚", name,acct);
	SendClientMessageToAll(COLOR_NICERED,string);
	format(string, sizeof(string), "* ≥…π¶Ω‚∑‚ %s “—¥”¥”Ω˚¡Ó√˚µ•œ˚≥˝ %s", name,dini_Get(ipFILE,"NameIp"));
	SendClientMessage(playerid,TEAM_GROVE_COLOR,string);

	new y, m, d;
	new h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Unbanned the Account of %s (%s)",d,m,y,h,mi,s,name,acct,dini_Get(ipFILE,"NameIp"));
	LoginLog(string);
	return 1;
}

/*dcmd_saveeverything(playerid, params[])
{
	#pragma unused params

    if(!IsPlayerAdmin(playerid))
        return 0;

	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
	    OnPropUpdate(1,i);
	}
	for(new i = 1; i < sizeof(CarInfo); i++)
	{
	    OnPropUpdate(4,i);
	}
	for(new i = 0; i < sizeof(BizzInfo); i++)
	{
	    OnPropUpdate(2,i);
	}
	for(new i = 0; i < sizeof(SBizzInfo); i++)
	{
	    OnPropUpdate(3,i);
	}
	return 1;
}*/
	    
	    

dcmd_alias(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
	{
		if(!strlen(params))
			return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /alias [ÕÊº“ID]");
			
		new player1, playername[MAX_PLAYER_NAME], str[128], tmp3[50];
		player1 = strval(params);
		
		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
		{
			GetPlayerIp(player1,tmp3,50);
			GetPlayerName(player1, playername, sizeof(playername));
			format(str,sizeof(str),"ÕÊº“%s (%d) ±√˚ «: %s", playername, player1, dini_Get("LARP/Users/Aliases/alias.txt",tmp3) );
			return SendClientMessage(playerid,COLOR_GREY,str);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "* ÕÊº“Œ¥¡¨Ω”ªÚ «—°¡Àƒ„◊‘º∫");
	}
	else return SendClientMessage(playerid,COLOR_GREY,"* ¥ÌŒÛ: ƒ„√ª”–◊„πª∏ﬂµƒº∂± π”√¥À√¸¡Ó");
}

dcmd_ips(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
	{
		if(!strlen(params))
			return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /ips [ÕÊº“ID]");

		new player1, playername[MAX_PLAYER_NAME], str[128];
		player1 = strval(params);

		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
		{
			GetPlayerName(player1, playername, sizeof(playername));
			format(str,sizeof(str),"ÕÊº“%s (%d) IPµÿ÷∑ «: %s", playername, player1, dini_Get("LARP/Users/Aliases/ips.txt",playername) );
			return SendClientMessage(playerid,COLOR_GREY,str);
		}
		else return SendClientMessage(playerid, COLOR_GREY, "* ÕÊº“Œ¥¡¨Ω”ªÚ «—°¡Àƒ„◊‘º∫");
	}
	else return SendClientMessage(playerid,COLOR_GREY,"* ¥ÌŒÛ: ƒ„√ª”–◊„πª∏ﬂµƒº∂± π”√¥À√¸¡Ó");
}


dcmd_getips(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] <= 2)
	    return SendClientMessage(playerid, COLOR_GREY,"*ƒ„√ª”–±ª ⁄»® π”√¥À√¸¡Ó£°");

	new name2[24],msg[128];
 	if(sscanf(params, "s", name2))
		return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /getips <ÕÊº“√˚≥∆>");

    format(ipFILE, 64, "LARP/Users/Aliases/%s.txt", name2);

    if(!dini_Exists(ipFILE))
        return SendClientMessage(playerid, COLOR_GREY, "√˚◊÷Œƒº˛Œ¥’“µΩ°£(’‚ ««¯∑÷¥Û–°–¥!)");

 	format(msg,sizeof(msg),"IPµÿ÷∑”√”⁄√˚≥∆ %s µ»”⁄: %s", name2, dini_Get("LARP/Users/Aliases/ips.txt",name2) );
	return SendClientMessage(playerid,COLOR_GREY,msg);

}

dcmd_getaliases(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] <= 2)
	    return SendClientMessage(playerid, COLOR_GREY,"*ƒ„√ª”–±ª ⁄»® π”√¥À√¸¡Ó£°");

	new tmp3[50],msg[128], name[24];
 	if(sscanf(params, "s", name))
		return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /getaliases <ÕÊº“√˚≥∆>");

    format(ipFILE, 64, "LARP/Users/Aliases/%s.txt", name);

    if(!dini_Exists(ipFILE))
        return SendClientMessage(playerid, COLOR_GREY, "√˚◊÷Œƒº˛Œ¥’“µΩ°£(’‚ ««¯∑÷¥Û–°–¥!)");

	strmid(tmp3,dini_Get(ipFILE, "Nameip"),0,50,50);

 	format(msg,sizeof(msg),"±√˚√˚≥∆ %s are: %s", name, dini_Get("LARP/Users/Aliases/alias.txt",tmp3) );
	return SendClientMessage(playerid,COLOR_GREY,msg);

}

dcmd_acheckcode(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)
	    return SendClientMessage(playerid, COLOR_GREY, "*ƒ„√ª”–±ª ⁄»® π”√¥À√¸¡Ó£°");

	new carid;
	new comment[64];
 	if(sscanf(params, "i", carid))
 	    return SendClientMessage(playerid, 0xFF6600FF,"’˝»∑”√∑®: \"/acheckcode <∆˚≥µID>\"");

	if(IsAnOwnableCar(carid))
	{
	    format(comment, sizeof(comment),"* ∆˚≥µID %d ±‡¬Î « %d",carid, CarInfo[carid][cCode]);
	}
	else
	{
		format(comment, sizeof(comment),"* ∆˚≥µID %d ±‡¬Î « %d",carid, VehiclePass[carid]);
	}
	SendClientMessage(playerid, COLOR_GREY,comment);
	return 1;
}

dcmd_attach(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] < 1337)
	    return 0;

	new modelid,slot,bone,Float:fX,Float:fY,Float:fZ,Float:fRX,Float:fRY,Float:fRZ,Float:ScaleX,Float:ScaleY,Float:ScaleZ;
 	if(sscanf(params, "iiifffffffff", slot,modelid, bone, fX,fY,fZ,fRX,fRY,fRZ,ScaleX,ScaleY,ScaleZ))
 	    return SendClientMessage(playerid, 0xFF6600FF,"’˝»∑µƒ”√∑®: \"/attach <index(0-4)> <modelid> <bone(1-16)> <x> <y> <z> <rotx> <roty> <rotz> <scalex> <scaley> <scalez>\"");

    if(IsPlayerAttachedObjectSlotUsed(playerid,slot))
	{
    	RemovePlayerAttachedObject(playerid,slot);
    	SetPlayerAttachedObject(playerid, slot, modelid, bone, fX,fY,fZ,fRX,fRY,fRZ,ScaleX,ScaleY,ScaleZ);
	}
	else
	{
   		SetPlayerAttachedObject(playerid, slot, modelid, bone, fX,fY,fZ,fRX,fRY,fRZ,ScaleX,ScaleY,ScaleZ);
	}
	return 1;
}

dcmd_unattach(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < 1337)
	    return 0;

	new idx;
    if (sscanf(params, "i", idx))
		return SendClientMessage(playerid,COLOR_WHITE, "”√∑®: /unattach <index> ");

	if(IsPlayerAttachedObjectSlotUsed(playerid, idx))
	    RemovePlayerAttachedObject(playerid, idx);

	return 1;
}

public OnPlayerConnect(playerid)
{

	new string[128];
	new string2[128];
    new plname[MAX_PLAYER_NAME];
    new playersip[64];
    new zone[MAX_ZONE_NAME];
    new bancheck[64];
    new msg2[128];
    new y, m, d;
	new h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
    GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
    GetPlayerName(playerid, plname, sizeof(plname));
    GetPlayerIp(playerid,playersip,sizeof(playersip));
    new namestring = strfind(plname, "_", true);
    format(string, sizeof(string),"%s",playersip);
    gPlayerUsingLoopingAnim[playerid] = 0;
	gPlayerAnimLibsPreloaded[playerid] = 0;
	
	if(AntiName == 1)
	{
	 	if(namestring == -1)
		{
		    format(string, sizeof(string),"%s, “—æ≠±ªÃﬂ≥ˆ¡À∑˛ŒÒ∆˜,“ÚŒ™À˚µƒ√˚◊÷≤ª∫œ∑®",plname);
			SendClientMessageToAll(COLOR_NICERED, string);
			SendClientMessage(playerid, COLOR_YELLOW2, "»Îæ≥ ¬ŒÒ¥¶£∫ƒ„µƒ√˚◊÷ «≤ªƒ‹Ω” ‹µƒ°£");
			SendClientMessage(playerid, COLOR_YELLOW2, "Ã· æ£∫ƒ„µƒ√˚◊÷±ÿ–Î «∏Ò Ω{FFFFF0}XXXX_XXXX.");
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for Invalid Name",d,m,y,h,mi,s,plname);
			KickLog(string);
			Kick(playerid);
			return 1;
		}
	}
 	if(IsPlayerNPC(playerid))
  	{
   		SpawnPlayer(playerid);
     	return 1;
   	}
    SetTimerEx("showmotd",4000, false, "i", playerid);
    SetTimerEx("hidemotd", 80000, false, "i", playerid);
	gActivePlayers[playerid]++;
	numplayers++;

	KillSpawnStart[playerid] = 0;
	
	TestPoints[playerid] = 0;
	OfficerCourseStep[playerid] = 255;
	IsPlayerInEVehicle[playerid] = 9999;
	Searching[playerid] = 0;
	admin[playerid] = 0;
	AFK[playerid] = 0;
	UsedAreaRecently[playerid] = 0;
	SelectChar[playerid] = 0;
	HidePM[playerid] = 0;
	PhoneOnline[playerid] = 0;
	SelectCharID[playerid] = 0;
	SelectCharPlace[playerid] = 0;
	ChosenSkin[playerid] = 0;
	GettingJob[playerid] = 0;
	GuardOffer[playerid] = 999;
	GuardPrice[playerid] = 0;
    ApprovedLawyer[playerid] = 0;
	CallLawyer[playerid] = 0;
	WantLawyer[playerid] = 0;
	KickPlayer[playerid] = 0;
	AdminPos[playerid][0] = 0.00;
	AdminPos[playerid][1] = 0.00;
	AdminPos[playerid][2] = 0.00;
	UsedFind[playerid] = 0;
	CP[playerid] = 0;
	Robbed[playerid] = 0;
	CarOffer[playerid] = 999;
	CarPrice[playerid] = 0;
	CarID[playerid] = 0;
	CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0;
	MoneyMessage[playerid] = 0;
	Training[playerid] = 0;
	Condom[playerid] = 0;
	Rope[playerid] = 0;
	STDPlayer[playerid] = 0;
	SexOffer[playerid] = 999;
	SexPrice[playerid] = 0;
	RepairOffer[playerid] = 999;
	RepairPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	Commands[playerid] = 0;
	Text[playerid] = 0;
	votedrecently[playerid] = 0;
	Showing[playerid] = 0;
	TalkingLive[playerid] = 255;
	LiveOffer[playerid] = 999;
	TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999;
	RefillPrice[playerid] = 0;
	DrugOffer[playerid] = 999;
	PlayerCuffed[playerid] = 0;
	DrugPrice[playerid] = 0;
	CanUseUpgrade[playerid] = 0;
	CanChangeName[playerid] = 0;
	RegistrationStep[playerid] = 0;
	OnCK[playerid] = 999;
	GettingCK[playerid] = 999;
	DrugGram[playerid] = 0;
	ConnectedToPC[playerid] = 0;
	OrderReady[playerid] = 0;
	JailPrice[playerid] = 0;
	MedicTime[playerid] = 0;
	NeedMedicTime[playerid] = 0;
	MedicBill[playerid] = 0;
	GotHit[playerid] = 0;
	WantedPoints[playerid] = 0;
	GoChase[playerid] = 999;
	GetChased[playerid] = 999;
	PlacedNews[playerid] = 0;
	PlayerInfo[playerid][pDuty] = 0;
	WantedLevel[playerid] = 0;
	TestFishes[playerid] = 0;
////////////////////////////////
	Fails[playerid] = 0;
////////////////////////////////
	BoxWaitTime[playerid] = 0;
	SchoolSpawn[playerid] = 0;
	ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60;
	TransportDuty[playerid] = 0;
	PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0;
	TaxiCallTime[playerid] = 0;
	MedicCallTime[playerid] = 0;
	MechanicCallTime[playerid] = 0;
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
	BusShowLocation[playerid][0] = 0;
	BusShowLocationC[playerid] = 0;
	FindTimePoints[playerid] = 0;
	FindTime[playerid] = 0;
	JobDuty[playerid] = 0;
	Mobile[playerid] = 255;
	Music[playerid] = 0;
	BoxOffer[playerid] = 999;
	PlayerBoxing[playerid] = 0;
	Spectate[playerid] = 255;
	PlayerDrunk[playerid] = 0;
	PlayerDrunkTime[playerid] = 0;
//////////////////////////////////
	Attached[playerid] = 0;
////////////////////////////////////
	Unspec[playerid][sLocal] = 255;
	FishCount[playerid] = 0;
	WritingPaper[playerid] = 0;
	WritingPaperNumber[playerid] = 999;
	WritingLine[playerid] = 0;
	BringingPaper[playerid] = 0;
	GotPaper[playerid] = 0;
	PaperOffer[playerid] = 999;
	ScriptMoney[playerid] = 0;
	ScriptMoneyUpdated[playerid] = 0;
	for (new c=0; c<13; c++) ScriptWeapons[playerid][c] = 0;
	ScriptWeaponsUpdated[playerid] = 0;
    gLastCar[playerid] = 0;
	FirstSpawn[playerid] = 1;
	gOoc[playerid] = 0;
	gNews[playerid] = 0;
	BigEar[playerid] = 0;
	gDice[playerid] = 0;
	gFam[playerid] = 0;
 	gGas[playerid] = 1;
	gPlayerLogged[playerid] = 0;
	gPlayerLogTries[playerid] = 0;
	gPlayerSpawned[playerid] = 0;
	PlayerTazeTime[playerid] = 0;
	PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0;
	TutTime[playerid] = 0;
	TaxiAccepted[playerid] = 999;
	BusAccepted[playerid] = 999;
	NoFuel[playerid] = 0;
	HireCar[playerid] = 299;
	GangCar[playerid] = 512;
	PlayersChannel[playerid] = 999;
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;
	Locator[playerid] = 0;
	WatchingTV[playerid] = 0;
	Fishes[playerid][pLastFish] = 0;
	Fishes[playerid][pFishID] = 0;
	ProposeOffer[playerid] = 999;
	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999;
	MarriageCeremoney[playerid] = 0;
	ProposedTo[playerid] = 999;
	GotProposedBy[playerid] = 999;
	DivorceOffer[playerid] = 999;
	PizzaCallTime[playerid] = 0;
	bPizza[playerid] = 0;
	sPizza[playerid] = 0;
	gEngine[playerid] = 0;
	FarmerVar[playerid] = 0;
	FarmerPickup[playerid][0] = 0;
	SmugglerWork[playerid] = 0;
	SmuggledDrugs[playerid] = 0;
	JustDied[playerid] = 0;
	KnockedDown[playerid] = 0;
	UnidentifedCall[playerid] = 0;
	LicenseOffer[playerid] = 999;
	LicensePrice[playerid] = 0;
	LicenseType[playerid] = 0;
	UsingDrugs[playerid] = 0;
	AfterTutorial[playerid] = 0;
	OwnableCarOffer[playerid] = 999;
	OwnableCarID[playerid] = 0;
	OwnableCarPrice[playerid] = 0;
	BlindFold[playerid] = 0;
	PlayerIsSweeping[playerid] = 0;
	JustReported[playerid] = 0;
	PlayerNeedsHelp[playerid] = 0;
	AdminSpec[playerid] = 0;
	IsSmoking[playerid] = 0;
	UsingSmokeAnim[playerid] = 0;
	ReduceTime[playerid] = 0;
	CreatingGun[playerid] = 0;
	CreatingGunAmmo[playerid] = 0;
	CreatingGunPrice[playerid] = 0;
	IsPuttingMaterials[playerid] = 0;
	IsTakingGun[playerid] = 0;
	InAFoodPlace[playerid] = 0;
	UcAdmin[playerid] = 0;
	Gps[playerid] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pSpawn] = 0;
	PlayerInfo[playerid][pAdmin] = 0;//π‹¿Ì
	PlayerInfo[playerid][pRegularRank] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectSeconds] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pDuty] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pExp] = 0;
	
	PlayerInfo[playerid][pCash] = 0;//∫Ûº”
	
	PlayerInfo[playerid][pDuty] = 0;
	PlayerInfo[playerid][pGPS] = 0;
	PlayerInfo[playerid][pBlind] = 0;
	PlayerInfo[playerid][pFrozen] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	strmid(PlayerInfo[playerid][pCrimeReason], "None", 0, strlen("None"), 255);
	strmid(Typed[playerid], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pWanted] = 0;
	PlayerInfo[playerid][pWantedLevel] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	strmid(PlayerInfo[playerid][pWhyLeft], "Unknown", 0, strlen("Unknown"), 255);
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pRobTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pFMember] = 255;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pJackSkill] = 0;
	PlayerInfo[playerid][pCarSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pInteriorNr] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pModel] = 7;
	//new randphone = 100000 + random(899999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = 0;//randphone;
	PlayerInfo[playerid][pPcarkey] = 9999;//‘≠999
	PlayerInfo[playerid][pPcarkey2] = 9999;//‘≠999
	PlayerInfo[playerid][pPhousekey] = 9999;//‘≠999
	PlayerInfo[playerid][pGangKey] = 255;
	PlayerInfo[playerid][pPbiskey] = 9999;//‘≠255
	PlayerInfo[playerid][pPassport] = 0;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pCopLic] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 0;
	PlayerInfo[playerid][pWatch] = 0;
	PlayerInfo[playerid][pCrashed] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
 	PlayerInfo[playerid][pTut] = 0;
 	PlayerInfo[playerid][pTutDone] = 0;
	PlayerInfo[playerid][pDTK] = 0;
	PlayerInfo[playerid][pDSTK] = 0;
	PlayerInfo[playerid][pWarned] = 0;
	PlayerInfo[playerid][pSwat] = 0;
	PlayerInfo[playerid][pDM] = 0;
	PlayerInfo[playerid][pHydraR] = 0;
	PlayerInfo[playerid][pHunterR] = 0;
	PlayerInfo[playerid][pRhinoR] = 0;
	PlayerInfo[playerid][pPredR] = 0;
	PlayerInfo[playerid][pViewPms] = 0;
	PlayerInfo[playerid][pAppearList] = 0;
	PlayerInfo[playerid][pDBanned] = 0;
	PlayerInfo[playerid][pTactical] = 0;
	PlayerInfo[playerid][pSpecialF] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pVirWorld] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pRoadblock] = 0;
	PlayerInfo[playerid][pFishTool] = 0;
	strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote1s] = 0;
	strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote2s] = 0;
	strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote3s] = 0;
	strmid(PlayerInfo[playerid][pNote4], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote4s] = 0;
	strmid(PlayerInfo[playerid][pNote5], "None", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNote5s] = 0;
	PlayerInfo[playerid][pInvWeapon] = 0;
	PlayerInfo[playerid][pInvAmmo] = 0;
	PlayerInfo[playerid][pInvWeapon2] = 0;
	PlayerInfo[playerid][pInvAmmo2] = 0;
	PlayerInfo[playerid][pInvWeapon3] = 0;
	PlayerInfo[playerid][pInvAmmo3] = 0;
	PlayerInfo[playerid][pInvWeapon4] = 0;
	PlayerInfo[playerid][pInvAmmo4] = 0;
	PlayerInfo[playerid][pInvWeapon5] = 0;
	PlayerInfo[playerid][pInvAmmo5] = 0;
	PlayerInfo[playerid][pInvWeapon6] = 0;
	PlayerInfo[playerid][pInvAmmo6] = 0;
	PlayerInfo[playerid][pLighter] = 0;
	PlayerInfo[playerid][pCigarettes] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pAdminDuty] = 0;
	PlayerInfo[playerid][pTesterDuty] = 0;
	PlayerInfo[playerid][pHelper] = 0;
	PlayerInfo[playerid][pTester] = 0;
	PlayerInfo[playerid][pSpeedo] = 0;
	PlayerInfo[playerid][pHideNumber] = 0;
	PlayerInfo[playerid][pSpeaker] = 0;
	PlayerInfo[playerid][pWarned] = 0;
	PlayerInfo[playerid][pSwat] = 0;
	PlayerInfo[playerid][pTactical] = 0;
	PlayerInfo[playerid][pSpecialF] = 0;
	PlayerInfo[playerid][pDBanned] = 0;
	PlayerInfo[playerid][pDesertSkill] = 0;
	PlayerInfo[playerid][pSilenSkill] = 0;
	PlayerInfo[playerid][pPistSkill] = 0;
	PlayerInfo[playerid][pShotgSkill] = 0;
	PlayerInfo[playerid][pSawnSkill] = 0;
	PlayerInfo[playerid][pUziSkill] = 0;
	PlayerInfo[playerid][pSmgSkill] = 0;
	PlayerInfo[playerid][pAkSkill] = 0;
	PlayerInfo[playerid][pM4Skill] = 0;
	PlayerInfo[playerid][pCombSkill] = 0;
	PlayerInfo[playerid][pAchievement0] = 0;
	PlayerInfo[playerid][pAchievement1] = 0;
	PlayerInfo[playerid][pAchievement2] = 0;
	PlayerInfo[playerid][pAchievement3] = 0;
	PlayerInfo[playerid][pAchievement4] = 0;
	PlayerInfo[playerid][pAchievement5] = 0;
	PlayerInfo[playerid][pAchievement6] = 0;
	PlayerInfo[playerid][pAchievement7] = 0;
	PlayerInfo[playerid][pAchievement8] = 0;
	PlayerInfo[playerid][pAchievement9] = 0;
	PlayerInfo[playerid][pAchievement10] = 0;
	PlayerInfo[playerid][pAchievement11] = 0;
	PlayerInfo[playerid][pAchievement12] = 0;
	PlayerInfo[playerid][pAchievement13] = 0;
	PlayerInfo[playerid][pAchievement14] = 0;
	PlayerInfo[playerid][pAchievement15] = 0;
	PlayerInfo[playerid][pAchievement16] = 0;
	PlayerInfo[playerid][pAchievement17] = 0;
	PlayerInfo[playerid][pAchievement18] = 0;
	PlayerInfo[playerid][pAchievement19] = 0;
	PlayerInfo[playerid][pAchievement20] = 0;
	PlayerInfo[playerid][pWeapon] = 0;
	PlayerInfo[playerid][pAmmo] = 0;
	PlayerInfo[playerid][pWeapon2] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pWeapon3] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pWeapon4] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pWeapon5] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pWeapon6] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pWeapon7] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pWeapon8] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pWeapon9] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pWeapon10] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pWeapon11] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pWeapon12] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;
	PlayerInfo[playerid][pAtc] = 0;
	PlayerInfo[playerid][pAtcRadio] = 0;
	PlayerInfo[playerid][pPending] = 0;
	PlayerInfo[playerid][pChatMode] = 0;
	strmid(PlayerInfo[playerid][pPunishment1], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment2], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment3], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment4], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment5], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment6], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment7], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pPunishment8], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pIP], "None", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pLastSeen], "Never", 0, strlen("None"), 255);
	strmid(PlayerInfo[playerid][pRegistredDate], "Never", 0, strlen("None"), 255);
	PlayerInfo[playerid][pNextPunishment] = 1;
	PlayerInfo[playerid][pPunished] = 0;
	PlayerInfo[playerid][pTazerBullets] = 0;
	PlayerInfo[playerid][pChanged] = 0;
/////////////////////////////////////////////
	PlayerInfo[playerid][pDecoder] = 0;
/////////////////////////////////////////////
	CityHallRobbedRecently = 0;
	RobbedRecently[playerid] = 0;
	RobbingTime[playerid] = 0;
	PlayerInfo[playerid][pRegularCount] = 144000;
	PlayerInfo[playerid][pPassportTime] = 1800;
	PlayerInfo[playerid][pOfficerTime] = 0;
	PlayerInfo[playerid][pShiftName] = 0;
//	PlayerSuspiciousWeapon[playerid] = 0;//∫Ûº”
//	PlayerSuspiciousAmmo[playerid] = 0;//∫Ûº”
	PlayerSuspiciousInterior[playerid] = 0;
	PlayerBunnyJumping[playerid] = 0;
	PlayerMoneyHacking[playerid] = 0;
	PlayerInteriorHacking[playerid] = 0;
//	PlayerWeaponHacking[playerid] = 0;//∫Ûº”
//	PlayerAmmoHacking[playerid] = 0;//∫Ûº”
	PlayerSpeedHacking[playerid] = 0;
	PlayerOnCashInbalance[playerid] = 0;
	PlayerFailedToLogin[playerid] = 0;
 	PlayerSuspicious[playerid] = 0;
	PlayerSuspiciousSpeed[playerid] = 0;
	Checked[playerid] = 1;
	PlayerGotSpottedRecently[playerid] = 1;
    SetTimerEx("ResetAcWarn", 30000, 0, "i", playerid);
	RpcArmor[playerid] = 0;
	RpcMoney[playerid] = 0;
	JustWanked[playerid] = 0;
	RpcPara[playerid] = 0;
	PlayerDrankWine[playerid] = 0;
	PlayerDrankBeer[playerid] = 0;
	TimesWanked[playerid] = 0;
	IsWanking[playerid] = 0;
 	WankedRecently[playerid] = 0;
	PlayerSmokedCig[playerid] = 0;
	PlayerDrankSprunk[playerid] = 0;
	GettingBlowjob[playerid] = 0;
	GivingBlowjob[playerid] = 0;
	AcceptingBJ[playerid] = 0;
	OnSwatDuty[playerid] = 0;
	OnTacticalDuty[playerid] = 0;
	OnSpecialFDuty[playerid] = 0;
	OfferedBlowjob[playerid] = INVALID_PLAYER_ID;
	HelpMessages[playerid] = 1;
	ChangedName[playerid] = 0;
	ViewAdmin[playerid] = 1;
	ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	SetPlayerColor(playerid,0xBBBBBB00);
	HouseEntered[playerid] = 9999;
////////////////////////////////////
	BizzEntered[playerid] = 9999;
////////////////////////////////////
	Untouchable[playerid] = 0;
/*	for(new h = 155; h < sizeof(CarInfo); h++)//∫Ûº”
	{
		SetVehicleParamsForPlayer(h,playerid,0,CarInfo[h][cLock]);//∫Ûº”
	}//∫Ûº”*/
	
    Textdraw1[playerid] = TextDrawCreate(400.000000, 2.000000, " "); // jail time
	TextDrawAlignment(Textdraw1[playerid], 2);
	TextDrawBackgroundColor(Textdraw1[playerid], 255);
	TextDrawFont(Textdraw1[playerid], 1);
	TextDrawLetterSize(Textdraw1[playerid], 0.300000, 1.000000);
	TextDrawColor(Textdraw1[playerid], -1);
	TextDrawSetOutline(Textdraw1[playerid], 1);
	TextDrawSetProportional(Textdraw1[playerid], 1);

	Textdraw39[playerid] = TextDrawCreate(498.000000, 123.000000, " "); // speedo
	TextDrawBackgroundColor(Textdraw39[playerid], 255);
	TextDrawFont(Textdraw39[playerid], 1);
	TextDrawLetterSize(Textdraw39[playerid], 0.389899, 1.299900);
	TextDrawColor(Textdraw39[playerid], 13107455);
	TextDrawSetOutline(Textdraw39[playerid], 1);
	TextDrawSetProportional(Textdraw39[playerid], 1);

	Textdraw40[playerid] = TextDrawCreate(498.000000, 140.000000, " "); // fuel
	TextDrawBackgroundColor(Textdraw40[playerid], 255);
	TextDrawFont(Textdraw40[playerid], 1);
	TextDrawLetterSize(Textdraw40[playerid], 0.389999, 1.299999);
	TextDrawColor(Textdraw40[playerid], 0xFFFFFFFF);
	TextDrawSetOutline(Textdraw40[playerid], 1);
	TextDrawSetProportional(Textdraw40[playerid], 1);

	Textdraw41[playerid] = TextDrawCreate(326.000000, 134.000000, " "); // speed gun points
	TextDrawAlignment(Textdraw41[playerid], 2);
	TextDrawBackgroundColor(Textdraw41[playerid], 255);
	TextDrawFont(Textdraw41[playerid], 1);
	TextDrawLetterSize(Textdraw41[playerid], 4.499998, 17.899999);
	TextDrawColor(Textdraw41[playerid], -1);
	TextDrawSetOutline(Textdraw41[playerid], 1);
	TextDrawSetProportional(Textdraw41[playerid], 1);
	TextDrawUseBox(Textdraw41[playerid], 1);
	TextDrawBoxColor(Textdraw41[playerid], 100);
	TextDrawTextSize(Textdraw41[playerid], 160.000000, 280.000000);

	Textdraw42[playerid] = TextDrawCreate(326.000000, 192.000000, " "); // Speed gun speed string
	TextDrawAlignment(Textdraw42[playerid], 2);
	TextDrawBackgroundColor(Textdraw42[playerid], 255);
	TextDrawFont(Textdraw42[playerid], 1);
	TextDrawLetterSize(Textdraw42[playerid], 0.379999, 1.700000);
	TextDrawColor(Textdraw42[playerid], -1);
	TextDrawSetOutline(Textdraw42[playerid], 1);
	TextDrawSetProportional(Textdraw42[playerid], 1);
	TextDrawUseBox(Textdraw42[playerid], 1);
	TextDrawBoxColor(Textdraw42[playerid], 255);
	TextDrawTextSize(Textdraw42[playerid], 10.000000, 280.000000);

	Textdraw49[playerid] = TextDrawCreate(86.000000, 428.000000, " "); // area
	TextDrawAlignment(Textdraw49[playerid], 2);
	TextDrawBackgroundColor(Textdraw49[playerid], 255);
	TextDrawFont(Textdraw49[playerid], 2);
	TextDrawLetterSize(Textdraw49[playerid],0.280000, 1.100000);
	TextDrawColor(Textdraw49[playerid], -1);
	TextDrawSetOutline(Textdraw49[playerid], 1);
	TextDrawSetProportional(Textdraw49[playerid], 1);

	Textdraw51[playerid] = TextDrawCreate(608.000000, 98.000000, " "); // “¯–– money
	TextDrawAlignment(Textdraw51[playerid], 3);
	TextDrawBackgroundColor(Textdraw51[playerid], 255);
	TextDrawFont(Textdraw51[playerid], 3);
	TextDrawLetterSize(Textdraw51[playerid], 0.650000, 2.199999);
	TextDrawColor(Textdraw51[playerid], 43775);
	TextDrawSetOutline(Textdraw51[playerid], 1);
	TextDrawSetProportional(Textdraw51[playerid], 1);
	
	Textdraw52[playerid] = TextDrawCreate(494.000000, 81.000000, " "); // money changes
	TextDrawAlignment(Textdraw52[playerid], 3);
	TextDrawBackgroundColor(Textdraw52[playerid], 255);
	TextDrawFont(Textdraw52[playerid], 1);
	TextDrawLetterSize(Textdraw52[playerid], 0.279999, 1.600000);
	TextDrawColor(Textdraw52[playerid], 0xFFFFFFFF);
	TextDrawSetOutline(Textdraw52[playerid], 1);
	TextDrawSetProportional(Textdraw52[playerid], 1);
	
	Textdraw53[playerid] = TextDrawCreate(320.000000, 341.000000, " "); // GPS
	TextDrawAlignment(Textdraw53[playerid], 2);
	TextDrawBackgroundColor(Textdraw53[playerid], 255);
	TextDrawFont(Textdraw53[playerid], 2);
	TextDrawLetterSize(Textdraw53[playerid], 0.400000, 1.500000);
	TextDrawColor(Textdraw53[playerid], -1);
	TextDrawSetOutline(Textdraw53[playerid], 1);
	TextDrawSetProportional(Textdraw53[playerid], 1);
	
	Textdraw54[playerid] = TextDrawCreate(331.000000, 340.000000, " "); // Spectate
	TextDrawAlignment(Textdraw54[playerid], 2);
	TextDrawBackgroundColor(Textdraw54[playerid], 255);
	TextDrawFont(Textdraw54[playerid], 1);
	TextDrawLetterSize(Textdraw54[playerid], 0.500000, 1.000000);
	TextDrawColor(Textdraw54[playerid], -1);
	TextDrawSetOutline(Textdraw54[playerid], 0);
	TextDrawSetProportional(Textdraw54[playerid], 1);
	TextDrawSetShadow(Textdraw54[playerid], 0);
	
	Textdraw64[playerid] = TextDrawCreate(317.000000, 253.000000, " "); // Medals
	TextDrawAlignment(Textdraw64[playerid], 2);
	TextDrawBackgroundColor(Textdraw64[playerid], 255);
	TextDrawFont(Textdraw64[playerid], 1);
	TextDrawLetterSize(Textdraw64[playerid], 0.239999, 1.200000);
	TextDrawColor(Textdraw64[playerid], -1);
	TextDrawSetOutline(Textdraw64[playerid], 1);
	TextDrawSetProportional(Textdraw64[playerid], 1);
	
	format(bancheck, sizeof(bancheck),"LARP/Users/Bans/%s.ban",playersip);

	if(dini_Exists(bancheck))
	{
	    ClearChatbox(playerid, 10);

		if(!strcmp(dini_Get(bancheck,"BanName"),plname,true))
		{
		    SendClientMessage(playerid, COLOR_NICERED,"=======================================ƒ„±ª∑‚∫≈¡À======================================");
			SendClientMessage(playerid, COLOR_LIGHTRED,"’‚∏ˆÍ«≥∆ «±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜µƒ,ªπ√ª”–±ªΩ‚∑‚.");
			SendClientMessage(playerid, COLOR_LIGHTRED,"»Áπ˚ƒ„œÎΩ‚∑‚«Î∑√Œ Œ“√«µƒ¬€Ã≥<WWW.XXX.XXX>…Í«ÎΩ‚∑‚");
			SendClientMessage(playerid, COLOR_LIGHTRED,"∑Ò‘ÚΩ´µº÷¬”¿æ√µƒ∑‚∫≈.");
			SendClientMessage(playerid, COLOR_NICERED,"=======================================∑‚∫≈–≈œ¢===================================");
			format(msg2,sizeof(msg2),"”…π‹¿Ì‘±£∫ %s ∑¢≥ˆΩ˚¡Ó",dini_Get(bancheck,"BannedBy"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			format(msg2,sizeof(msg2),"±ª∑¢≤º∑‚∫≈µƒ ±º‰£∫ %s",dini_Get(bancheck,"BanDate"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			format(msg2,sizeof(msg2),"∑‚∫≈‘≠“Ú: %s",dini_Get(bancheck,"BanReason"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			SendClientMessage(playerid, COLOR_NICERED,"========================================ƒ„±ª∑‚∫≈¡À=======================================");

		    format(msg2,sizeof(msg2),"[π‹¿Ì]: %s (%d), “ÚŒ™±ª∑‚∫≈Ãﬂ≥ˆ∑˛ŒÒ∆˜",plname,playerid);
		    SendAdminMessage(COLOR_LIGHTRED,msg2);

		    format(msg2,sizeof(msg2),"(%d/%d/%d) [%d:%d:%d] %s “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ for Possible Ban Evading",d,m,y,h,mi,s,plname);
		    KickLog(msg2);

            OnPlayerUpdateEx(playerid);
		    SetTimerEx("KickPlayerOut",500,false,"i",playerid);
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_NICERED,"=======================================ƒ„±ª∑‚∫≈¡À======================================");
			SendClientMessage(playerid, COLOR_LIGHTRED,"’‚∏ˆIP «±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜µƒ,ªπ√ª”–±ªΩ‚∑‚.");
			SendClientMessage(playerid, COLOR_LIGHTRED,"»Áπ˚ƒ„œÎΩ‚∑‚«Î∑√Œ Œ“√«µƒ¬€Ã≥<WWW.XXX.XXX>…Í«ÎΩ‚∑‚");
			SendClientMessage(playerid, COLOR_LIGHTRED,"∑Ò‘ÚΩ´µº÷¬”¿æ√µƒ∑‚∫≈.");
			SendClientMessage(playerid, COLOR_NICERED,"=======================================∑‚∫≈–≈œ¢=====================================");
            format(msg2,sizeof(msg2),"±ª∑‚∫≈µƒIP « %s: ’Àªß «:%s",playersip, dini_Get(bancheck,"BanName"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			format(msg2,sizeof(msg2),"”…π‹¿Ì‘±£∫ %s ∑¢≥ˆΩ˚¡Ó",dini_Get(bancheck,"BannedBy"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			format(msg2,sizeof(msg2),"±ª∑¢≤º∑‚∫≈µƒ ±º‰: %s",dini_Get(bancheck,"BanDate"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			format(msg2,sizeof(msg2),"∑‚∫≈‘≠“Ú: %s",dini_Get(bancheck,"BanReason"));
			SendClientMessage(playerid, COLOR_WHITE,msg2);
			SendClientMessage(playerid, COLOR_NICERED,"========================================ƒ„±ª∑‚∫≈¡À=======================================");

		    format(msg2,sizeof(msg2),"[π‹¿Ì]: %s (%d), “ÚŒ™±ª∑‚∫≈Ãﬂ≥ˆ∑˛ŒÒ∆˜",plname,playerid);
		    SendAdminMessage(COLOR_LIGHTRED,msg2);

		    format(msg2,sizeof(msg2),"(%d/%d/%d) [%d:%d:%d] %s “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ for Possible Ban Evading",d,m,y,h,mi,s,plname);
		    KickLog(msg2);

		    format(msg2,sizeof(msg2),"LARP/Users/%s.ini",plname);
		    if(dini_Exists(msg2))
		    {
		        dini_IntSet(msg2,"Banned",1);
			}

		    OnPlayerUpdateEx(playerid);
		    SetTimerEx("KickPlayerOut",500,false,"i",playerid);
		    return 0;
		}
	}

	format(bancheck, sizeof(bancheck),"LARP/Users/%s.ini",plname);
	if(dini_Exists(bancheck))
	{
	    if(dini_Int(bancheck,"Banned") == 1)
	    {
	        ClearChatbox(playerid, 10);

	        SendClientMessage(playerid, COLOR_NICERED,"=======================================ƒ„±ª∑‚∫≈¡À=======================================");
			SendClientMessage(playerid, COLOR_LIGHTRED,"’‚∏ˆÍ«≥∆ «±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜µƒ,ªπ√ª”–±ªΩ‚∑‚.");
			SendClientMessage(playerid, COLOR_LIGHTRED,"»Áπ˚ƒ„œÎΩ‚∑‚«Î∑√Œ Œ“√«µƒ¬€Ã≥<WWW.XXX.XXX>…Í«ÎΩ‚∑‚");
			SendClientMessage(playerid, COLOR_LIGHTRED,"∑Ò‘ÚΩ´µº÷¬”¿æ√µƒ∑‚∫≈.");
			SendClientMessage(playerid, COLOR_NICERED,"============================================================================================");
		    format(msg2,sizeof(msg2),"[π‹¿Ì]: %s (%d), “ÚŒ™±ª∑‚∫≈Ãﬂ≥ˆ∑˛ŒÒ∆˜",plname,playerid);
		    SendAdminMessage(COLOR_LIGHTRED,msg2);
		    format(msg2,sizeof(msg2),"[π‹¿Ì]: IP %s “—±ª¡–»Î∑‚∫≈√˚µ•",playersip);
		    SendAdminMessage(COLOR_WHITE,msg2);

		    format(msg2,sizeof(msg2),"(%d/%d/%d) [%d:%d:%d] %s “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ for Possible Ban Evading",d,m,y,h,mi,s,plname);
		    KickLog(msg2);

		    SetTimerEx("ScriptBan",500,false,"iis",playerid,999,"Ban Evading");
		    return 0;
		}
	}
	
	format(pFILE[playerid], 128, "LARP/Users/Aliases/%s.txt", plname);
	dini_Create(pFILE[playerid]);
	dini_Set(pFILE[playerid], "Nameip", playersip);

	if(strlen(dini_Get("LARP/Users/Aliases/ips.txt", plname)) == 0)
   	{
	   	dini_Set("LARP/Users/Aliases/ips.txt", plname, playersip);
	}
	else
	{
		if( strfind( dini_Get("LARP/Users/Aliases/ips.txt", plname), playersip, true) == -1 )
		{
			format(string,sizeof(string),"%s, %s", dini_Get("LARP/Users/Aliases/ips.txt",plname), playersip);
			dini_Set("LARP/Users/Aliases/ips.txt", plname, string);
		}
	}

	new pAKA[256];
	pAKA = dini_Get("LARP/Users/Aliases/alias.txt",playersip);
	new pIPs[256];
	pIPs = dini_Get("LARP/Users/Aliases/ips.txt",plname);

	if (strlen(pAKA) < 3)
	{
		format(string,sizeof(string),"[œ˚œ¢]: %s (%d) º”»ÎµΩXXXΩ«…´∞Á—›∑˛ŒÒ∆˜.IP(%s)", plname, playerid,playersip);
		if (strlen(pIPs) < 3) SendIP = 0;
		else if (!strcmp(pIPs,playersip,true)) SendIP = 0;
		else
		{
		    if(strlen(pIPs) >= 128)
		    {
		        format(string2,sizeof(string2),"* %s (%d)∆‰À˚µ«¬ºIP: -Ã´∂‡¡À“™,◊¢“‚À˚-", plname, playerid);
			}
			else
			{
				format(string2,sizeof(string2),"* %s (%d)∆‰À˚µ«¬ºIP: %s", plname, playerid, pIPs);
			}
			SendIP = 1;
		}
	}
	else if (!strcmp(pAKA,plname,true))
	{
		format(string,sizeof(string),"[œ˚œ¢]: %s (%d) º”»ÎµΩXXXΩ«…´∞Á—›∑˛ŒÒ∆˜.IP(%s)", plname, playerid,playersip);
		if (strlen(pIPs) < 3) SendIP = 0;
		else if (!strcmp(pIPs,playersip,true)) SendIP = 0;
		else
		{
		    if(strlen(pIPs) >= 128)
		    {
		        format(string2,sizeof(string2),"* %s (%d)∆‰À˚µ«¬ºIP: -Ã´∂‡¡À“™,◊¢“‚À˚-", plname, playerid);
			}
			else
			{
				format(string2,sizeof(string2),"* %s (%d)∆‰À˚µ«¬ºIP: %s", plname, playerid, pIPs);
			}
			SendIP = 1;
		}
	}
	else
	{
		format(string,sizeof(string),"[œ˚œ¢]: %s (%d) º”»ÎµΩÀ≈∑˛∆˜ (%s). (±√˚: %s)", plname, playerid,playersip, pAKA);
		if (strlen(pIPs) < 3) SendIP = 0;
		else if (!strcmp(pIPs,playersip,true)) SendIP = 0;
		else
		{
		    if(strlen(pIPs) >= 128)
		    {
		        format(string2,sizeof(string2),"* %s (%d)∆‰À˚µ«¬ºIP: -Ã´∂‡¡À“™,◊¢“‚À˚-", plname, playerid);
			}
			else
			{
				format(string2,sizeof(string2),"* %s (%d)∆‰À˚µ«¬ºIP: %s", plname, playerid, pIPs);
			}
			SendIP = 1;
		}
	}

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && playerid != i)
		{
			if(PlayerInfo[i][pAdmin] > 1)
			{
				SendClientMessage(i,COLOR_GREEN,string);
				if(SendIP == 1)
				{
					SendClientMessage(i,COLOR_GREEN,string2);
					SendIP = 0;
				}
			}
			else
			{
				format(string,sizeof(string),"* %s (%d) º”»ÎµΩXXXΩ«…´∞Á—›∑˛ŒÒ∆˜", plname, playerid);
				SendClientMessage(i,COLOR_GREY,string);
			}
		}
	}
	
	format(string, sizeof(string), "LARP/Users/%s.ini", plname);
	SendClientMessage(playerid, COLOR_YELLOW2, "’˝‘⁄º”‘ÿµÿÕº«Î…‘µ»...");
	if(fexist(string))
	{
		gPlayerAccount[playerid] = 1;
	}
	else
	{
		gPlayerAccount[playerid] = 0;
	}
	//fclose(hFile);
	

	return 1;
}

public JoinChannel(playerid, number, line[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(strcmp(IRCInfo[number][iPassword],line, true ) == 0 )
		{
	        JoinChannelNr(playerid, number);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "∆µµ¿√‹¬Î¥ÌŒÛ!");
	    }
	}
	return 1;
}

public JoinChannelNr(playerid, number)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[128];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayersChannel[playerid] < 999)
	    {
			format(string, sizeof(string), "* %s “—æ≠¿Îø™∏√∆µµ¿.", sendername);
			SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	    }
		new channel; channel = number; channel += 1;
	    PlayersChannel[playerid] = number;
	    IRCInfo[PlayersChannel[playerid]][iPlayers] += 1;
    	new wstring[128];
		format(string, sizeof(string), "%s", sendername);
		strmid(wstring, string, 0, strlen(string), 255);
		if(strcmp(IRCInfo[number][iAdmin],wstring, true ) == 0 )
		{
		    format(string, sizeof(string), "* ƒ„“‘π‹¿Ì‘±…Ì∑›º”»ÎµΩ IRC ∆µµ¿ %d .", channel);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
		    format(string, sizeof(string), "* ƒ„º”»ÎµΩ IRC ∆µµ¿ %d, π‹¿Ì‘±: %s.", channel, IRCInfo[number][iAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		format(string, sizeof(string), "µ±»’–≈œ¢: %s.", IRCInfo[number][iMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "* %s “—º”»Î∆µµ¿.", sendername);
		SendIRCMessage(number, COLOR_GREEN, string);
	}
	return 1;
}

public ClearCK(ck)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "√ª»À");
	strmid(CKInfo[ck][cSendername], string, 0, strlen(string), 255);
	strmid(CKInfo[ck][cGiveplayer], string, 0, strlen(string), 255);
	CKInfo[ck][cUsed] = 0;
	SaveCK();
	return 1;
}

public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "√ª»À");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}

public ClearPaper(paper)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	PaperInfo[paper][PaperUsed] = 0;
	strmid(PaperInfo[paper][PaperMaker], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperTitle], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText1], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText2], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText3], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText4], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText5], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText6], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText7], string, 0, strlen(string), 255);
	SavePapers();
	return 1;
}

public ClearFamily(family)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][pFMember] == family)
	        {
	            SendClientMessage(i, COLOR_WHITE, "* ƒ„“—æ≠±ª◊È÷Ø¡Ïµº»ÀT≥ˆ¡À◊È÷Ø£¨ƒ„≤ª‘⁄ Ù”⁄¥À◊È÷Ø.");
	            PlayerInfo[i][pFMember] = 255;
	        }
	    }
	}
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	FamilyInfo[family][FamilyTaken] = 0;
	strmid(FamilyInfo[family][FamilyName], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "0xFF000069");
	strmid(FamilyInfo[family][FamilyColor], string, 0, strlen(string), 255);
	FamilyInfo[family][FamilyMembers] = 0;
	FamilyInfo[family][FamilySpawn][0] = 0.0;
	FamilyInfo[family][FamilySpawn][1] = 0.0;
	FamilyInfo[family][FamilySpawn][2] = 0.0;
	FamilyInfo[family][FamilySpawn][3] = 0.0;
	FamilyInfo[family][FamilyInterior] = 0;
	SaveFamilies();
	return 1;
}

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
		strmid(PlayerInfo[playerid][pCrimeReason], "None", 0, strlen("None"), 255);
 		PlayerInfo[playerid][pWanted] = 0;
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		    case 1:
		    {
		        cost = 1;
		    }
		    case 2:
		    {
		        cost = 3;
		    }
		    case 3:
		    {
		        cost = 3;
		    }
		    case 5:
		    {
		        cost = 5;
		    }
		    case 6:
		    {
		        cost = 2;
		    }
		    case 8:
		    {
		        cost = 8;
		    }
		    case 9:
		    {
		        cost = 12;
		    }
		    case 11:
		    {
		        cost = 9;
		    }
		    case 12:
		    {
		        cost = 7;
		    }
		    case 14:
		    {
		        cost = 12;
		    }
		    case 15:
		    {
		        cost = 9;
		    }
		    case 16:
		    {
		        cost = 7;
		    }
		    case 17:
		    {
		        cost = 7;
		    }
		    case 18:
		    {
		        cost = 10;
		    }
		    case 19:
		    {
		        cost = 4;
		    }
		    case 21:
		    {
		        cost = 3;
		    }
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		switch (fish)
		{
		    case 1:
		    {
		        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight1] = 0;
		        Fishes[playerid][pFid1] = 0;
		    }
		    case 2:
		    {
		        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight2] = 0;
		        Fishes[playerid][pFid2] = 0;
		    }
		    case 3:
		    {
		        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight3] = 0;
		        Fishes[playerid][pFid3] = 0;
		    }
		    case 4:
		    {
		        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight4] = 0;
		        Fishes[playerid][pFid4] = 0;
		    }
		    case 5:
		    {
		        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight5] = 0;
		        Fishes[playerid][pFid5] = 0;
		    }
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0;
		Cooking[playerid][pCookID2] = 0;
		Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0;
		Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0;
		Cooking[playerid][pCWeight2] = 0;
		Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0;
		Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new string[128];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "≤ ∆±–¬Œ≈£∫ΩÒÃÏ,÷–Ω±∫≈¬Î¬‰‘⁄: %d.", number);
    OOCOff(COLOR_WHITE, string);
    format(string, sizeof(string), "Lottery News: ~n~ Today's Number: ~p~ %d", number);
    GameTextForAll(string, 4000, 6);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "≤ ∆±–¬Œ≈: %s ◊ﬂ‘À£°”Æµ√¡À¥ÛΩ± $%d!«Î∏˜Œª“™«ÛÀ˚«ÎøÕ!!", winner, Jackpot);
					OOCOff(TEAM_CYAN_COLOR, string);
					format(string, sizeof(string), "* ƒ„µƒ≤ ∆±÷–¡À $%d !!!!", Jackpot);
					SendClientMessage(i, COLOR_WHITE, string);
					format(string, sizeof(string), "~g~~h~~h~Won The Lottery!!! ~n~~g~$%d !! ~n~~n~~n~~p~Congratulations!!!!", Jackpot);
					GameTextForPlayer(i, string, 5000, 3);
					//ConsumingMoney[i] = 1;
					SafeGivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_WHITE, "µπ√πƒ„√ª”–÷–Ω±!");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(10000); rand += 5789;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "≤ ∆±–¬Œ≈: –¬“ª¬÷µƒÕ∑Ω±Ω±Ω « $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	else
	{
	    new rand = random(5000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "≤ ∆±–¬Œ≈£∫Ω±Ω“—Ã·∏ﬂµΩ $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
	new textreason[64];
	new plname[24];
	GetPlayerName(playerid, plname, sizeof(plname));
	new playersip[24];
	GetPlayerIp(playerid, playersip, sizeof(playersip));
	new string2[128];

	if(PlayerInfo[playerid][pAdminDuty] == 1)
	{
		SafeResetPlayerWeapons(playerid);
	}
	if(Searching[playerid] == 1)
	{
		RemovePlayerMapIcon(playerid, 500 + playerid);
		Searching[playerid] = 0;
	}
	if(Ronned[playerid] >= 1)
	{
	    KillTimer(RonnTimer[playerid]);
	}
/*	if(PlayerCuffed[playerid])
	{
	    KillTimer(cufftimer[playerid]);
	}*/
	
	if(playerid == beingvoted && reason != 2)
	{
	    KillTimer(votetimer1);
	    KillTimer(votetimer2);
	    format(string2,sizeof(string2),"[Õ∂∆±œµÕ≥]: %s (%d) “—◊¢œ˙,Õ∂∆±Ω· ¯¡À£°",plname,playerid);
	    SendClientMessageToAll(TEAM_GROVE_COLOR,string2);
        votetimer1 = SetTimer("ResetVotation",300000,false);
	}
/*	if(PlayerCuffed[playerid] > 0)
	{
	    KillTimer(cufftimer[playerid]);
	}
*/
	if(Tazer[playerid] == 1) { SafeGivePlayerWeapon(playerid, 24, PreTazerAmmo[playerid]); }
	Delete3DTextLabel(DutyLabel[playerid]);
	gActivePlayers[playerid]--;
	numplayers--;
	RemovePlayerMapIcon(playerid, 37 + playerid);
	TextDrawDestroy(Textdraw64[playerid]);
	TextDrawDestroy(Textdraw54[playerid]);
	TextDrawDestroy(Textdraw53[playerid]);
	TextDrawDestroy(Textdraw52[playerid]);
	TextDrawDestroy(Textdraw51[playerid]);
	TextDrawDestroy(Textdraw49[playerid]);
	TextDrawDestroy(Textdraw42[playerid]);
	TextDrawDestroy(Textdraw41[playerid]);
	TextDrawDestroy(Textdraw40[playerid]);
	TextDrawDestroy(Textdraw39[playerid]);
	TextDrawDestroy(Textdraw1[playerid]);
	KillTimer(TrainTimer[playerid]);
	KillTimer(MoneyTimer[playerid]);
	if(IsPlayerInEVehicle[playerid] != 9999)
	{
	    new i = IsPlayerInEVehicle[playerid];
		Seats[i] --;
	}
	new string[24];
	new d,m,y,h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	format(string, sizeof(string), "%d/%d/%d at %d:%d:%d",d,m,y,h,mi,s);
	strmid(PlayerInfo[playerid][pLastSeen], string, 0, strlen(string), 255);
	if(reason == 0)
	{
		textreason = "µÙœﬂ";
		strmid(PlayerInfo[playerid][pWhyLeft], "Crashed", 0, strlen("Crashed"), 255);
		format(string2, sizeof(string2),"[–≈œ¢]: %s ¿Îø™¡À∑˛ŒÒ∆˜. [%s]",plname, textreason);
   		SendAdminMessage(COLOR_GREEN, string2);
	}
	else if(reason == 1)
	{
		textreason = "’˝≥£ÕÀ≥ˆ";
		strmid(PlayerInfo[playerid][pWhyLeft], "Leaving", 0, strlen("Leaving"), 255);
		format(string2, sizeof(string2),"[–≈œ¢]: %s ¿Îø™¡À∑˛ŒÒ∆˜. [%s]",plname, textreason);
   		SendAdminMessage(COLOR_GREEN, string2);
	}
	else if(reason == 2)
	{
		strmid(PlayerInfo[playerid][pWhyLeft], "Kicked/Banned", 0, strlen("Kicked/Banned"), 255);
	}
	SaveGuns(playerid);
	OnPlayerUpdateEx(playerid);
	if(OfficerCourseStep[playerid] != 255)
	{
	    SafeGivePlayerMoney(playerid, -2500);
	}
	if(OnOfficerTest[playerid] != 0)
	{
	    SafeGivePlayerMoney(playerid, -5000);
	}
	if(ServerRestarted == 0)
	{
	    UpdatePlayerPosition(playerid)
	}
	KillTimer(ChangeNameTimer);
	OnPlayerUpdateEx(playerid);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(TaxiAccepted[i] < 999)
	        {
		        if(TaxiAccepted[i] == playerid)
		        {
		            TaxiAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Left the game", 5000, 1);
		            TaxiCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(BusAccepted[i] < 999)
	        {
		        if(BusAccepted[i] == playerid)
		        {
		            BusAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Bus Caller~n~~r~Left the game", 5000, 1);
		            BusCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		admins --;
		if(AFK[playerid] == 1)
		{
		    afkadmins --;
		}
	}
	KillTimer(DildoTimerReset);
	/*if(GettingCK[playerid] < 999)
	{
	    if(IsPlayerConnected(GettingCK[playerid]))
	    {
	        SendClientMessage(GettingCK[playerid], COLOR_YELLOW, "Your Character Kill has left the server, try again later.");
	        OnCK[GettingCK[playerid]] = 999;
	    }
	}*/
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    new string5[64];
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string5, sizeof(string5), "~w~Passenger left~n~~g~Earned $%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string5, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "ƒ„µƒ√¸÷–“—æ≠¿Îø™∑˛ŒÒ∆˜°£");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}
	if(PlayersChannel[playerid] < 999)
	{
		IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	}
	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		if(reason != 0)
		{
			SetVehicleToRespawn(HireCar[playerid]);
		}
	}
	if(GangCar[playerid] != 512)
	{
		gLastDriver[GangCar[playerid]] = 520;
		gCarLock[GangCar[playerid]] = 0;
		UnLockCar(GangCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPhousekey] != gLastCar[playerid]-1)
		{
			gCarLock[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(PlayerBoxing[playerid] > 0)
	{
	    if(Boxer1 == playerid)
	    {
	        if(IsPlayerConnected(Boxer2))
	        {
	        	PlayerBoxing[Boxer2] = 0;
	        	SafeSetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
	        	SafeSetPlayerInterior(Boxer2, 5);
	        	GameTextForPlayer(Boxer2, "~r~Match interupted", 5000, 1);
			}
	    }
	    else if(Boxer2 == playerid)
	    {
	        if(IsPlayerConnected(Boxer1))
	        {
	        	PlayerBoxing[Boxer1] = 0;
	        	SafeSetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
	        	SafeSetPlayerInterior(Boxer1, 5);
	        	GameTextForPlayer(Boxer1, "~r~Match interupted", 5000, 1);
			}
	    }
	    InRing = 0;
     	RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
/*	if(PlayerInfo[playerid][pJob] == 11)
	{
	    if(JobDuty[playerid] == 1) { Medics -= 1; }
	}*/
	else if(PlayerInfo[playerid][pJob] == 7)
	{
	    if(JobDuty[playerid] == 1) { Mechanics -= 1; }
	}
	else if(PlayerInfo[playerid][pJob] == 17)
	{
		if(JobDuty[playerid] == 1) { PizzaBoys -= 1; }
	}
	if (PlayerInfo[playerid][pRoadblock] != 0)
	{
		RemoveRoadblock(playerid);
	}
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
}

public GateClose(playerid)
{
      MoveDynamicObject(pdgate1,1589.053344,-1638.123168,14.122960, 0.97);
      PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
      lspdg = 0;
      return 1;
}

public GateClose2()
{
      MoveDynamicObject(armygate1,2720.3772, -2409.7523, 12.6, 2.5);
      MoveDynamicObject(armygate3,2774.4670, -2494.5842, 14.2665, 4.5);
      armyg = 0;
      armyg2 = 0;
      return 1;
}

public GateClose3()
{
      MoveDynamicObject(fbigate, 1534.9020,-1451.5979,14.4882, 1.5);
      MoveDynamicObject(fbigate2, 1473.0992,-1496.9677,15.3232, 1.5);
      fbig = 0;
      fbig2 = 0;
      return 1;
}


public GateClose5()
{
      DestroyDynamicObject( pdgate3 );
      pdgate2 = CreateDynamicObject(968,1544.700317,-1630.735717,13.096980,-1.000000,-91.000000,269.972869);
      lspdg2 = 0;
      return 1;
}


public GateCloseDD()
{
      MoveDynamicObject(DD_GATE, 1104.1,1701.04,9.1437, 5.0);
	  return 1;
}

public GateCloseDevs()
{
      MoveDynamicObject(devs_gate, 2515.6912,2472.2561,11.8288, 5.0);
	  return 1;
}

public elevator1(playerid)
{
      SafeSetPlayerPos(playerid,1174.9591,-1374.8761,23.9736);
      return 1;
}

public elevator2(playerid)
{
      SafeSetPlayerPos(playerid,1174.9100,-1361.7330,13.9876);
	  return 1;
}


////////////////////////////////////////////
public KillSpawn(playerid)
{
	TogglePlayerControllable(playerid, false);
	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	return 1;
}

public StopKillSpawn(playerid)
{
	TogglePlayerControllable(playerid, true);
	return 1;
}

public KillSpawn2(playerid)
{
	new rand;
	KillSpawnStart[playerid] = 0;
	SetRealMoney(playerid, ScriptMoney[playerid]);
	PlayerInfo[playerid][pDeaths] += 1;
	SetPlayerHealth(playerid, 50.0);
	SafeSetPlayerInterior(playerid, 3);
	rand = random(sizeof(gMedicSpawns));
	SafeSetPlayerPos(playerid, gMedicSpawns[rand][0], gMedicSpawns[rand][1], gMedicSpawns[rand][2]); // Warp the player
	SetPlayerFacingAngle(playerid, 0);
	TogglePlayerControllable(playerid, 0);
	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~You need to rest now ...", 5000, 3);
	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	if(PlayerInfo[playerid][pRegularRank] == 1)
	{
		SetTimerEx("ReleaseFromHospital", 20000, 0, "i", playerid);
	}
	else if(PlayerInfo[playerid][pRegularRank] == 2)
	{
		SetTimerEx("ReleaseFromHospital", 17500, 0, "i", playerid);
	}
	else if(PlayerInfo[playerid][pRegularRank] == 3)
	{
		SetTimerEx("ReleaseFromHospital", 15000, 0, "i", playerid);
	}
	else if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		SetTimerEx("ReleaseFromHospital", 12500, 0, "i", playerid);
	}
	else if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		SetTimerEx("ReleaseFromHospital", 10000, 0, "i", playerid);
	}
	else
	{
		SetTimerEx("ReleaseFromHospital", 25000, 0, "i", playerid);
	}
	PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
	return 1;
}

forward PlayerCame(playerid,Float:x,Float:y,Float:z);

public PlayerCame(playerid,Float:x,Float:y,Float:z)
{
	SafeSetPlayerPos(playerid,x,y,z);
	SetPlayerFacingAngle(playerid,270.0);
	SetPlayerCameraPos(playerid,x-10,y-10,z+10);
	SetPlayerCameraLookAt(playerid,x,y,z);
	return 1;
}


public SetPlayerSpawn(playerid)
{
	new string[128], rand;
	if(IsPlayerConnected(playerid))
	{
	    if(!IsPlayerNPC(playerid))
	    {
     		if(MedicBill[playerid] == 1 && PlayerInfo[playerid][pJailed] == 0 )
			{
				if(PlayerInfo[playerid][pAdminDuty] == 1) return 1;
    			if(FirstSpawn[playerid] != 1)
			    {
   				 	new listitems[] = "{FFFFFF}1\t{55EE55}µ»¥˝‘Æ÷˙\n{FFFFFF}2\t{55EE55}∑≈∆˙‘Æ÷˙.";
    				ShowPlayerDialog(playerid,8520,DIALOG_STYLE_LIST,"«Î—°‘Ò:",listitems,"»∑∂®","»°œ˚");
   				 	GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~You need to rest now ...", 5000, 3);
					//∂¡»°À¿Õˆµÿ÷∑
					KillSpawnStart[playerid] = 1;
					SetPlayerPos(playerid,KillSave[playerid][Killx],KillSave[playerid][Killy],KillSave[playerid][Killz]);
					SetPlayerInterior(playerid,KillSave[playerid][KillInterior]);
					SetPlayerHealth(playerid, 1.0);
  				  	KillSpawnTK1[playerid] = SetTimerEx("KillSpawn2",200000, 0, "i", playerid);
   				 	KillSpawnTK2[playerid] = SetTimerEx("KillSpawn", 1000, 0, "i", playerid);
	    			return 1;
				}
			}
		    if(PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 3)
			{
				//SetPlayerSkin(playerid, 294);
				if(PlayerInfo[playerid][pAdmin] >= 6)
				{
					SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 42, 10000);
					SafeGivePlayerWeapon(playerid, 39, 10000);
					SafeGivePlayerWeapon(playerid, 38, 10000);
					SafeGivePlayerWeapon(playerid, 34, 10000);
					SafeGivePlayerWeapon(playerid, 31, 10000);
					SafeGivePlayerWeapon(playerid, 29, 10000);
					SafeGivePlayerWeapon(playerid, 27, 10000);
					SafeGivePlayerWeapon(playerid, 24, 10000);
					SafeGivePlayerWeapon(playerid, 40, 1);
					SafeGivePlayerWeapon(playerid, 10, 1);
					SafeGivePlayerWeapon(playerid, 9, 1);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000);
					SetPlayerHealth(playerid, 99999);
					SafeSetPlayerArmour(playerid, 99999);
				}
			}
   			if(Spectate[playerid] != 255)
			{
			    SafeSetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			    SafeSetPlayerInterior(playerid, Interior[playerid]);
			    SetPlayerVirtualWorld(playerid, VirWorld[playerid]);
			    if(PlayerInfo[playerid][pAdmin] >= 6)
			    {
			        if(PlayerInfo[playerid][pAdminDuty] == 1)
			        {
					    SetPlayerHealth(playerid, SpHealth[playerid]);
					    SafeSetPlayerArmour(playerid, SpArmour[playerid]);
					}
					else
					{
						SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
					    SafeSetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
					}
				}
				else
				{
				    SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
				    SafeSetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
				}
			    SetPlayerWeapons(playerid);
			    SetPlayerToTeamColor(playerid);
			    Spectate[playerid] = 255;
			    TextDrawShowForPlayer(playerid, Textdraw44);
			   	TextDrawShowForPlayer(playerid, Textdraw45);
				TextDrawShowForPlayer(playerid, Textdraw55);
			   	TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
			   	TextDrawHideForPlayer(playerid, Textdraw54[playerid]);
			   	if(PlayerInfo[playerid][pWatch] == 1)
				{
					TextDrawShowForPlayer(playerid, Textdraw56);
					TextDrawShowForPlayer(playerid, Textdraw57);
					TextDrawShowForPlayer(playerid, Textdraw58);
				}
			    return 1;
			}
		    if(PlayerInfo[playerid][pAndro] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "√¿π˙∫Ωø’π´Àæ£∫“Ω¡∆±¯æ»¡Àƒ„£¨ªÿµΩƒ„µƒ¬√≥Ã£°");
		     	SafeSetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
		     	SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVirWorld]);
		     	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
		     	return 1;
		 	}
		 	if(PlayerInfo[playerid][pJet] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "√¿π˙∫Ωø’π´Àæ£∫“Ω¡∆±¯æ»¡Àƒ„£¨ªÿµΩƒ„µƒ¬√≥Ã£°");
			   	SafeSetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
		     	SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVirWorld]);
		     	SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
		     	return 1;
		 	}
		    if(PlayerInfo[playerid][pTut] == 0)
		    {
				gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
				SafeSetPlayerInterior(playerid, 3);
				SafeSetPlayerPos(playerid, 330.6825,163.6688,1014.1875);
				SetPlayerFacingAngle(playerid, 280);
				RegistrationStep[playerid] = 1;
		 		SetTimerEx("SpawonDJ", 1000, 0, "i", playerid);
		 		//////////////////////////////////////////////////////∞£º∞µÙ
				SendClientMessage(playerid, COLOR_LIGHTRED, "[∫£πÿœ˚œ¢]:ª∂”≠¿¥µΩ¬Â…ºÌ∂£¨ƒ„±ªÀÕµΩ“∆√Òæ÷Ω¯––ªßºÆµ«º«.");
				SendClientMessage(playerid, COLOR_GREY, "ƒ„∫√!ª∂”≠¿¥µΩ¬Â…ºÌ∂“∆√Ò÷––ƒ£¨Œ“œ÷‘⁄Œ ƒ„º∏∏ˆŒ Ã‚");
				SendClientMessage(playerid, COLOR_LIGHTRED, "Ã· æ: «Îƒ„»œ’ÊÃÓ–¥!Œ“√«≤ªª·–π¬∂ƒ„µƒ◊ ¡œµƒ!");
				new listitems[] = "{FFFFFF}ƒ–\n{FFFFFF}≈Æ";
				ShowPlayerDialog(playerid,8525,DIALOG_STYLE_LIST,"ƒ„µƒ–‘±:",listitems,"»∑∂®","»°œ˚");
				/////////////////////////////////////////////////////////////
				PlayerInfo[playerid][pRegularCount] = 144000;
   				SafeGivePlayerMoney(playerid,500);
				return 1;
		    }
		    if(PlayerInfo[playerid][pTutDone] == 0 && PlayerInfo[playerid][pTut] != 0)
		    {
				//ºÃ–¯∞£º∞µÙ
				SendClientMessage(playerid, COLOR_GREY, "<Ã· æ>:ƒ„ø…ƒ‹ « ◊¥Œ¿¥µΩ±æ∑˛ŒÒ∆˜{3A1255}œ÷‘⁄ø™ º∑˛ŒÒ∆˜»ŒŒÒΩÃ—ß");
				SendClientMessage(playerid, COLOR_LIGHTRED, "ÕÍ≥…ΩÃ≥Ãƒ„Ω´ª·ªÒµ√$7,500!");
    			if(IsOnTutorial[playerid] == 0)
			    {
			        IsOnTutorial[playerid] = 1;
			        SetPlayerCheckpoint(playerid, 1612.324,-2330.167,13.5469, 2);
			        PlayerCame(playerid, 1612.324,-2330.167,13.5469);
				}
			}
			//new house = PlayerInfo[playerid][pPhousekey];//∞£º∞µÙ∫Õ–≥”Œœ∑±£≥÷RPG‘≠±æÃÿ…´
			if(PlayerInfo[playerid][pJailed] == 1)
			{
			    SafeSetPlayerInterior(playerid, 6);
				SafeSetPlayerPos(playerid,264.6288,77.5742,1001.0391);
				SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„ªπ√ª∂◊ÕÍ∫≈◊”£¨œ÷‘⁄ªÿµΩº‡”¸.");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] == 2)
			{
			    SafeSetPlayerInterior(playerid, 0);
				SafeSetPlayerPos(playerid,268.5777,1857.9351,9.8133);
				SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] == 3)
			{
			    SafeSetPlayerInterior(playerid, 3);
				SafeSetPlayerPos(playerid,197.7956,175.0676,1003.0234);
				SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„ªπ√ª∂◊ÕÍ∫≈◊”£¨œ÷‘⁄ªÿµΩº‡”¸.");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] == 4)
			{
			    SafeSetPlayerInterior(playerid, 10);
				SafeSetPlayerPos(playerid,214.8052,108.9046,999.0156);
				SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„ªπ√ª∂◊ÕÍ∫≈◊”£¨œ÷‘⁄ªÿµΩº‡”¸.");
				return 1;
			}
			if(JustDied[playerid] == 1)
			{
			    if(GetPlayerVirtualWorld(playerid) != 0 || PlayerInfo[playerid][pVirWorld] != 0)
			    {
			        SetPlayerVirtualWorld(playerid, 0);
			        PlayerInfo[playerid][pVirWorld] = 0;
			    }
			    SafeSetPlayerPos(playerid, 1182.5638,-1323.5256,13.5790);
			    SetPlayerFacingAngle(playerid, 270.0);
			    SafeSetPlayerInterior(playerid,0);
			    TogglePlayerControllable(playerid, 1);
			    return 1;
			}
   			if(TutTime[playerid] == 0 && PlayerInfo[playerid][pTut] == 1 && RegistrationStep[playerid] == 0 && AfterTutorial[playerid] == 0 && FirstSpawn[playerid] == 1)
		    {
		        new plname[MAX_PLAYER_NAME];
		        //∏¸–¬≤Àµ•
  				//new listitems[] = "1\t–ﬁ∏¥¡ÀæØ≤Ïæ÷…œ∞‡∆§∑Ù≤ª’˝≥£BUG\n2\t ÷ª˙–Ë“™π∫¬Ú≤≈ƒ‹ π”√\n3\tGPSø…“‘–Ë“™π∫¬Ú≤≈ø…“‘ π”√«¯∑÷≤Âº˛∫Õ±æª˙\n4\t/call 911≤ªƒ‹/hµƒBUG–ﬁ∏¥\n5\t–¬‘ˆæØ≤Ïµ»º∂◊∞±∏—°‘Ò\n6\t–¬‘ˆ”Œœ∑∏¸–¬Ã·–—\n7\t”≈ªØ¡ÀæØ≤Ïæ÷µƒ◊È÷ØΩ◊º∂\n8\t”≈ªØ¡À/help≤Àµ•\n9\t–ﬁ∏¥¡À…œ∞‡µƒ∆§∑ÙBUG\n10\t/slapº”¡À‘≠“Ú\nŒ“¡¶«ÛÕÍ√¿≤ª◊„µƒµÿ∑Ω÷∏≥ˆ∫ÛÃ®ª·◊ˆÕÍ…∆,√ª”–≤ªƒ‹–ﬁ∏¥µƒBUG,÷ª≈¬√ª∑¢œ÷";
  				new listitems[] = "1\t–ﬁ∏¥”≈ªØ¡À∑˛◊∞µÍ\n2\t‘ˆº”¡Àπ§◊˜≥µ¡æ\n3\t–ﬁ∏¥¡À/GOµƒ≤ªŒ»∂®¬©∂¥";
  				ShowPlayerDialog(playerid,8535,DIALOG_STYLE_MSGBOX,"∏¸–¬œÓƒø{0FFFF0}»’∆⁄:2011.9.7",listitems,"»∑∂®","»°œ˚");
  				
		        GetPlayerName(playerid, plname, sizeof(plname));
      			SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pVirWorld]);
	        	SafeSetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
	    		SafeSetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z] + 1);
				format(string, sizeof(string), "~w~Welcome, ~b~%s!", plname);
		    	GameTextForPlayer(playerid, string, 5000, 1);
    			SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
				SafeSetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
				SafeResetPlayerMoney(playerid);
				SafeGivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
    			if(KillSpawnStart[playerid] == 1)
   				{
       				SendClientMessage(playerid, COLOR_WHITE,"ƒ„…œ¥Œ√ª”–µ√µΩæ»‘ÆæÕœ¬œﬂ¡À,œ÷‘⁄±ªÀÕÕ˘“Ω‘∫.....");
       				SetTimerEx("KillSpawn", 1000, 0, "i", playerid);
  					KillSpawnStart[playerid] = 0;
   					SetRealMoney(playerid, ScriptMoney[playerid]);
					PlayerInfo[playerid][pDeaths] += 1;
					SetPlayerHealth(playerid, 50.0);
   					SafeSetPlayerInterior(playerid, 3);
      				rand = random(sizeof(gMedicSpawns));
					SafeSetPlayerPos(playerid, gMedicSpawns[rand][0], gMedicSpawns[rand][1], gMedicSpawns[rand][2]); // Warp the player
					SetPlayerFacingAngle(playerid, 0);
   					TogglePlayerControllable(playerid, 0);
      				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~You need to rest now ...", 5000, 3);
        			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
        			if(PlayerInfo[playerid][pRegularRank] == 1)
	        		{
        				SetTimerEx("ReleaseFromHospital", 20000, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pRegularRank] == 2)
   					{
     					SetTimerEx("ReleaseFromHospital", 17500, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pRegularRank] == 3)
   					{
     					SetTimerEx("ReleaseFromHospital", 15000, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pAdmin] >= 1)
   					{
     					SetTimerEx("ReleaseFromHospital", 12500, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pAdmin] >= 4)
   					{
      					SetTimerEx("ReleaseFromHospital", 10000, 0, "i", playerid);
					}
					else
					{
    					SetTimerEx("ReleaseFromHospital", 25000, 0, "i", playerid);
					}
   					PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
				}
		    	return 1;
			}
 			if(PlayerInfo[playerid][pSpawn] == 0)
    		{
				SetPlayerToTeamColor(playerid);
				SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
				SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
				SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}
 /*
			if(house != 9999)
			{
			    if(PlayerInfo[playerid][pSpawn] == 1) //»Áπ˚ƒ„”–∑ø◊”’‚¿ÔæÕ «ƒ„≥ˆ…˙µƒµÿ∑Ω
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerInterior(playerid,HouseInfo[house][hInt]);
					SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
					SafeSetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]); // Warp the player
					PlayerInfo[playerid][pLocal] = house;
					HouseEntered[playerid] = house;
					return 1;
				}
				else if(PlayerInfo[playerid][pSpawn] == 0)
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
				else if(PlayerInfo[playerid][pSpawn] == 2)
				{
				    new family = PlayerInfo[playerid][pFMember];
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, FamilyInfo[family][FamilyInterior]);
				    SafeSetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
				    SetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
				    return 1;
				}
				else
				{
					if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//Police Force spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerInterior(playerid,6);
						    rand = random(sizeof(gCopPlayerSpawns));
							SafeSetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
							SetPlayerFacingAngle(playerid, 270.0);
							return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//FBI spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerInterior(playerid,3);
							SafeSetPlayerPos(playerid, 299.7097,183.1322,1007.1719);
							SetPlayerFacingAngle(playerid, 90);
							return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
					if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//π˙√ÒæØŒ¿∂” spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 0);
						    SafeSetPlayerPos(playerid, 2731.5229,-2451.3643,17.5937);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Fire/Ambulance spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerPos(playerid, 1174.9027,-1326.7284,14.5938);
							SetPlayerFacingAngle(playerid, 0);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//Surenos spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 5);
						    SafeSetPlayerPos(playerid, 2345.6570,-1185.5266,1027.9766);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//La Famiglia Sinatra spawn
					{
						if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 5);
						    SafeSetPlayerPos(playerid, 1265.4475,-794.9257,1084.0078);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)//, ÕÍ±œ. spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
					    {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 3);
						    SafeSetPlayerPos(playerid, 356.2998,151.9914,1025.7891);
							PlayerInfo[playerid][pLocal] = 241;
						    return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
				    if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid, 1102.7017,-299.0774,73.9922);
							SafeSetPlayerInterior(playerid,0);
					        return 1;
					    }
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
					        SafeSetPlayerInterior(playerid,3);
							SafeSetPlayerPos(playerid, 355.7899,204.0173,1008.3828);
							SafeGivePlayerWeapon(playerid, 43, 20);
					        return 1;
					    }
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pJob] == 13  || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) //Taxi Cab Company spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid, 1754.99,-1894.19,13.55);
							SafeSetPlayerInterior(playerid,0);
					        return 1;
						}
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if(IsAnInstructor(playerid) || PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11) //Driving/Flying School spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid,3);
							SafeSetPlayerPos(playerid, 1494.4991,1308.9163,1093.2845);
							SetPlayerFacingAngle(playerid, 180);
					        return 1;
						}
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) //Firemen
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
					        SafeSetPlayerInterior(playerid,0);
							SafeSetPlayerPos(playerid, 616.9447,-1538.7158,15.2904);
					        return 1;
					    }
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13) //√¿π˙”ÃÃ´∞Ô spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
					        SafeSetPlayerInterior(playerid,0);
							SafeSetPlayerPos(playerid, 683.0686,-473.8775,16.5363);
					        return 1;
					    }
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//…Ωø⁄◊È spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 3);
						    SafeSetPlayerPos(playerid, 962.8333,-60.0172,1001.1246);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//¥Û»¶ spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 2);
						    SafeSetPlayerPos(playerid, 2569.4744,-1284.6810,1065.3749);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//¿≠∏± spawn
					{
						if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 2);
						    SafeSetPlayerPos(playerid, 455.8776,1413.6802,1084.3080);
						    return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
				}
			}
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//Police Force spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerInterior(playerid,6);
				    rand = random(sizeof(gCopPlayerSpawns));
					SafeSetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
					SetPlayerFacingAngle(playerid, 270.0);
					return 1;
				}
				else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
		    }
		    if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//FBI spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerInterior(playerid,3);
					SafeSetPlayerPos(playerid, 299.7097,183.1322,1007.1719);
					SetPlayerFacingAngle(playerid, 90);
					return 1;
				}
				else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
		    }
			if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//π˙√ÒæØŒ¿∂” spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 0);
				    SafeSetPlayerPos(playerid, 2731.5229,-2451.3643,17.5937);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Fire/Ambulance spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerPos(playerid, 1174.9027,-1326.7284,14.5938);
					SetPlayerFacingAngle(playerid, 0);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//»˝∫œª· spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 5);
				    SafeSetPlayerPos(playerid, 2345.6570,-1185.5266,1027.9766);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//La Famiglia Sinatra spawn
			{
				if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 5);
				    SafeSetPlayerPos(playerid, 1265.4475,-794.9257,1084.0078);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)//, ÕÍ±œ. spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
			    {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 3);
				    SafeSetPlayerPos(playerid, 356.2998,151.9914,1025.7891);
					PlayerInfo[playerid][pLocal] = 241;
				    return 1;
				}
				else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
		    if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
		    {
		        if(PlayerInfo[playerid][pSpawn] == 3)
		        {
			        SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid, 1102.7017,-299.0774,73.9922);
					SafeSetPlayerInterior(playerid,0);
			        return 1;
			    }
		        else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
		    }
		    if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News spawn
		    {
		        if(PlayerInfo[playerid][pSpawn] == 3)
		        {
			        SetPlayerToTeamColor(playerid);
			        SafeSetPlayerInterior(playerid,3);
					SafeSetPlayerPos(playerid, 355.7899,204.0173,1008.3828);
					SafeGivePlayerWeapon(playerid, 43, 20);
			        return 1;
			    }
		        else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
		    }
		    if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pJob] == 13) //Taxi Cab Company spawn
		    {
		        if(PlayerInfo[playerid][pSpawn] == 3)
		        {
			        SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid, 1754.99,-1894.19,13.55);
					SafeSetPlayerInterior(playerid,0);
			        return 1;
				}
		        else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
		    }
		    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 || IsAnInstructor(playerid)) //Driving/Flying School spawn
		    {
		        if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid,3);
					SafeSetPlayerPos(playerid, 1494.4991,1308.9163,1093.2845);
					SetPlayerFacingAngle(playerid, 180);
			        return 1;
				}
		        else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
		    }
		    if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)//…Ωø⁄◊È spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 0);
				    SafeSetPlayerPos(playerid, 616.9447,-1538.7158,15.2904);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//…Ωø⁄◊È spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 0);
				    SafeSetPlayerPos(playerid, 683.0686,-473.8775,16.5363);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
		    if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//…Ωø⁄◊È spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 3);
				    SafeSetPlayerPos(playerid, 962.8333,-60.0172,1001.1246);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//¥Û»¶ spawn
			{
			    if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 2);
				    SafeSetPlayerPos(playerid, 2569.4744,-1284.6810,1065.3749);
				    return 1;
				}
			    else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//¿≠∏± spawn
			{
				if(PlayerInfo[playerid][pSpawn] == 3)
		        {
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, 2);
				    SafeSetPlayerPos(playerid, 455.8776,1413.6802,1084.3080);
				    return 1;
				}
				else
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
			}
			if(PlayerInfo[playerid][pFMember] != 255)
			{
			    if(PlayerInfo[playerid][pSpawn] == 2)
			    {
				    new family = PlayerInfo[playerid][pFMember];
				    SetPlayerToTeamColor(playerid);
				    SafeSetPlayerInterior(playerid, FamilyInfo[family][FamilyInterior]);
				    SafeSetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
				    SetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
				    return 1;
				}
				else if(PlayerInfo[playerid][pSpawn] == 0)
			    {
					SetPlayerToTeamColor(playerid);
					SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
					SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
					SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}
				else if(PlayerInfo[playerid][pSpawn] == 3)
				{
                    if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//Police Force spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerInterior(playerid,6);
						    rand = random(sizeof(gCopPlayerSpawns));
							SafeSetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
							SetPlayerFacingAngle(playerid, 270.0);
							return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//FBI spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerInterior(playerid,3);
							SafeSetPlayerPos(playerid, 299.7097,183.1322,1007.1719);
							SetPlayerFacingAngle(playerid, 90);
							return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
					if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//π˙√ÒæØŒ¿∂” spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 0);
						    SafeSetPlayerPos(playerid, 2731.5229,-2451.3643,17.5937);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Fire/Ambulance spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerPos(playerid, 1174.9027,-1326.7284,14.5938);
							SetPlayerFacingAngle(playerid, 0);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//»˝∫œª· spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 5);
						    SafeSetPlayerPos(playerid, 2345.6570,-1185.5266,1027.9766);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//La Famiglia Sinatra spawn
					{
						if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 5);
						    SafeSetPlayerPos(playerid, 1265.4475,-794.9257,1084.0078);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)// –≥§ spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
					    {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 3);
						    SafeSetPlayerPos(playerid, 356.2998,151.9914,1025.7891);
							PlayerInfo[playerid][pLocal] = 241;
						    return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
				    if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid, 1102.7017,-299.0774,73.9922);
							SafeSetPlayerInterior(playerid,0);
					        return 1;
					    }
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
					        SafeSetPlayerInterior(playerid,3);
							SafeSetPlayerPos(playerid, 355.7899,204.0173,1008.3828);
							SafeGivePlayerWeapon(playerid, 43, 20);
					        return 1;
					    }
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pJob] == 13) //Taxi Cab Company spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
					        SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid, 1754.99,-1894.19,13.55);
							SafeSetPlayerInterior(playerid,0);
					        return 1;
						}
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11 || IsAnInstructor(playerid)) //Driving/Flying School spawn
				    {
				        if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid,3);
							SafeSetPlayerPos(playerid, 1494.4991,1308.9163,1093.2845);
							SetPlayerFacingAngle(playerid, 180);
					        return 1;
						}
				        else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
				    }
				    if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)//…Ωø⁄◊È spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 0);
						    SafeSetPlayerPos(playerid, 616.9447,-1538.7158,15.2904);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//…Ωø⁄◊È spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 0);
						    SafeSetPlayerPos(playerid, 683.0686,-473.8775,16.5363);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
				    if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//…Ωø⁄◊È spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 3);
						    SafeSetPlayerPos(playerid, 962.8333,-60.0172,1001.1246);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//¥Û»¶ spawn
					{
					    if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 2);
						    SafeSetPlayerPos(playerid, 2569.4744,-1284.6810,1065.3749);
						    return 1;
						}
					    else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
					if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)//¿≠∏± spawn
					{
						if(PlayerInfo[playerid][pSpawn] == 3)
				        {
						    SetPlayerToTeamColor(playerid);
						    SafeSetPlayerInterior(playerid, 2);
						    SafeSetPlayerPos(playerid, 455.8776,1413.6802,1084.3080);
						    return 1;
						}
						else
					    {
							SetPlayerToTeamColor(playerid);
							SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
							SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
							SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
							TogglePlayerControllable(playerid, 1);
							return 1;
						}
					}
				}
			}
		    else
		    {
				SetPlayerToTeamColor(playerid);
				SafeSetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
				SetPlayerVirtualWorld(playerid, SpawnWorld[playerid]);
				SafeSetPlayerInterior(playerid, SpawnInterior[playerid]);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}*/
		}
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------
public SpawonDJ(playerid)//∂≥Ω·À¯∂®
{
	TogglePlayerControllable(playerid,0);
    return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
    new string[128];
	new name[MAX_PLAYER_NAME];
	new name2[MAX_PLAYER_NAME];
	new deathreason[20];
	new y, m, d;
	new h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	GetPlayerName(playerid, name, sizeof(name));
	GetPlayerName(killerid, name2, sizeof(name2));
	//±£¥ÊÀ¿Õˆ ±µƒµÿ÷∑
	MedicBill[playerid] = 1;

	GetPlayerPos(playerid,KillSave[playerid][Killx],KillSave[playerid][Killy],KillSave[playerid][Killz]);
	KillSave[playerid][KillInterior] =	GetPlayerInterior(playerid);
	if(killerid != INVALID_PLAYER_ID)
	{
		if(GetPlayerWeapon(killerid) != reason)
		{
		    if(AntiFakeKill == 1)
		    {
		        if(reason !=  51 || reason != 50 || reason != 18 || reason == 36 || reason == 35 || reason == 40 || reason == 16)
	        	{
	        	    FakeKillWarns[playerid] ++;
					if(FakeKillWarns[playerid] == 4)
					{
						format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆø…ƒ‹ « π”√¡ÀºŸÀ¿Õˆ.", name, playerid);
						SendClientMessageToAll(COLOR_NICERED, string);
						SendClientMessage(playerid,COLOR_LIGHTBLUE, "ƒ„“—±ªÃﬂ≥ˆƒ„ø…ƒ‹ π”√¡ÀºŸÀ¿.");
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Fake Death hacks.",d,m,y,h,mi,s,name);
						KickLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by the ∑¥Õ‚π“ºÏ≤‚ - Fake Death Hacks.",d,m,y,h,mi,s,name);
						AddPunishment(playerid, string);
						Kick(playerid);
					}
					else
					{
						format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ π”√¡ÀºŸÀ¿; «ÎºÏ≤ÈÀ˚!!", name, playerid);
						SendAdminMessage(COLOR_YELLOW, string);
						PlayerSuspicious[playerid] = 1;
						PlayerFakeDeathHacking[playerid] = 1;
						PlayerGotSpottedRecently[playerid] = 1;
						SetTimerEx("ResetAcWarn", 300000, 0, "i", playerid);
					}
				}
			}
		}
	}
	if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
	{
	    if(AntiDriveBy == 1)
	    {
	        new model = GetVehicleModel(GetPlayerVehicleID(killerid));
	        if(model != 520 || model != 425 || model != 432)
	        {
		        PlayerInfo[killerid][pWarns] ++;
			    if(PlayerInfo[playerid][pWarns] == 3)
				{
			        format(string, sizeof(string), "%s (%d),±ªÃﬂ≥ˆ∑˛ŒÒ∆˜,‘≠“Ú£∫π˝∂» π”√º›≥µ…±»À.", name2, killerid);
					SendClientMessageToAll(COLOR_NICERED, string);
					SendClientMessage(killerid,COLOR_LIGHTBLUE, "ƒ„±ªÃﬂ≥ˆ∑˛ŒÒ∆˜ ‘≠“Ú£∫π˝∂» π”√º›≥µ…±»À");
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Excessive Drive By Killing",d,m,y,h,mi,s,name2);
					KickLog(string);
					Kick(killerid);
				}
				else
				{
				    format(string, sizeof(string), "%s (%d),±ªæØ∏Ê≤ª“™º›≥µ…±»À.", name2, killerid);
					SendClientMessageToAll(COLOR_NICERED, string);
					SendClientMessage(killerid,COLOR_LIGHTBLUE, "ƒ„“—æ≠±ªæØ∏Ê≤ª“™π˝∂» π”√≥µ¡æ…±»À.");
					format(string, sizeof(string), "[PETER]: %s π˝∂» π”√º›≥µ…±»À,ÕÊº““—æ≠±ªæØ∏Ê.", name2);
					SendAdminMessage(COLOR_YELLOW, string);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Warned by ∑¥Õ‚π“ºÏ≤‚ - Reason: Driver drive-by kill.",d,m,y,h,mi,s);
					AddPunishment(killerid, string);
				}
			}
		}
	}
	if(killerid != INVALID_PLAYER_ID)
	{
	    if(reason == 0) { deathreason = "Melee"; }
	    else if(reason == 36 || reason == 35 || reason == 40 || reason == 16) { deathreason = "Explosion"; }
	    else if(reason == 18 || reason == 37) { deathreason = "Fire"; }
	    else if(reason == 51) { deathreason = "Explosion"; }
	    else if(reason == 50) { deathreason = "Heli-Kill"; }
	    else { GetWeaponName(reason, deathreason, sizeof(deathreason)); }
	    format(string, sizeof(string),"[–≈œ¢]: %s (%d) ±ª %s (%d) …±∫¶ - %s", name,playerid,name2,killerid,deathreason);
	    SendAdminMessage(COLOR_GREEN, string);
	}
	else
	{
	    new text[30];
	    if(reason == 51) { text = "±¨’®"; }
	    else if(reason == 53) { text = "—ÕÀ¿"; }
	    else if(reason == 54) { text = "“‚Õ‚"; }
	    else { text = "’˝≥£À¿Õˆ"; }
	    format(string, sizeof(string),"[–≈œ¢]: %s (%d) À¿¡À. (%s)",name,playerid, text);
	    SendAdminMessage(COLOR_GREEN, string);
	}

	new playercash;
	new victimteam = gTeam[playerid];
	new Float:px,Float:py,Float:pz;
	new killerteam = gTeam[killerid];
	TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
	gPlayerSpawned[playerid] = 0;
	
	if(Decoding[playerid] == 1)
	{
	    Decoding[playerid] = 0;
	    KillTimer(DecoderTimer);
		HideDecoder(playerid);
		SendClientMessage(playerid, COLOR_NICERED, "ƒ„¿Îø™¡À∆˚≥µΩ‚¬Î∆˜Õ£÷π!");
		decodecode = 0;
		Decoder = 0;
	}
	
	if(PlayerInfo[playerid][pAdminDuty] >= 1) { PlayerInfo[playerid][pAdminDuty] = 0; }
	GetPlayerPos(playerid, px, py, pz);
	


	if (PlayerInfo[killerid][pAchievement9] == 0 && PlayerInfo[killerid][pKills] == 1)
	{
	    TextDrawSetString(Textdraw64[killerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Newbie Killer (9) ~n~~n~~w~you won ~g~$100");
	    ShowAchievement(killerid);
		SafeGivePlayerMoney(killerid,100);
		PlayerInfo[killerid][pAchievement9] = 1;
	}
	if (PlayerInfo[killerid][pAchievement10] == 0 && PlayerInfo[killerid][pKills] == 75)
	{
	    TextDrawSetString(Textdraw64[killerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Serial Killer (10) ~n~~n~~w~you won ~g~$250");
	    ShowAchievement(killerid);
		SafeGivePlayerMoney(killerid,250);
		PlayerInfo[killerid][pAchievement10] = 1;
	}
	if (PlayerInfo[killerid][pAchievement11] == 0 && PlayerInfo[killerid][pKills] == 150)
	{
	    TextDrawSetString(Textdraw64[killerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Assasin (11) ~n~~n~~w~you won ~g~$500");
	    ShowAchievement(killerid);
		SafeGivePlayerMoney(killerid,500);
		PlayerInfo[killerid][pAchievement11] = 1;
	}
	if(gPlayerUsingLoopingAnim[playerid])
	{
        gPlayerUsingLoopingAnim[playerid] = 0;
        TextDrawHideForPlayer(playerid,txtAnimHelper);
	}
	if(WantedPoints[playerid] > 0)
	{
	    new dstring[128];
		new wanted = WantedPoints[playerid];
		new diecash = 0;
    	while(WantedPoints[playerid] > 0)
	    {
	        diecash += 500;
	        WantedPoints[playerid] --;
	    }
	    format(dstring, sizeof(dstring), "ƒ„±ª∑£»°¡À $%d “ÚŒ™ƒ„±ªÕ®º©Œ™ %d º∂.", diecash, wanted);
	    SendClientMessage(playerid, COLOR_YELLOW, dstring);
	    SafeGivePlayerMoney(playerid, - diecash);
	    PlayerInfo[playerid][pWantedDeaths] += 1;
	}
	WantedPoints[playerid] = 0;
	WantedLevel[playerid] = 0;
	if(PlayerInfo[playerid][pRegularRank] > 0) { SetPlayerHealth(playerid, 100.0); }
	else { SetPlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }

	gPlayerSpawned[playerid] = 1;
	SafeTime[playerid] = 60;
	Checked[playerid] = 1;
	PlayerGotSpottedRecently[playerid] = 1;
	SetTimerEx("ResetAcWarn",20000,false, "i", playerid);
	if(killerid != 255)
	{
		if(GetPlayerState(killerid) == 2)
		{
		    if(ProxDetectorS(20, killerid, playerid))
		    {
		        if(!IsPlayerInAnyVehicle(playerid))
		        {
					if(PlayerInfo[killerid][pMember] == 1||PlayerInfo[killerid][pLeader] == 1||PlayerInfo[killerid][pMember] == 2||PlayerInfo[killerid][pLeader] ==2)
		    		{
		    		    SendClientMessage(killerid, COLOR_YELLOW, "∑¢…˙¡ÀΩªÕ®“‚Õ‚ ¬π .");
						return 1;
					}
					SetPlayerCriminal(killerid,255,"π˝ ß…±»À");
					return 1;
				}
			}
		}
	}
	if (reason == 22)
	{
		if (PlayerInfo[killerid][pPistSkill] >= 0 && PlayerInfo[killerid][pPistSkill] <= 1000)
		{
		    PlayerInfo[killerid][pPistSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}
	if (reason == 23)
	{
		if (PlayerInfo[killerid][pSilenSkill] >= 0 && PlayerInfo[killerid][pSilenSkill] <= 1000)
		{
		    PlayerInfo[killerid][pSilenSkill] += 2;
		    SetPlayerSkills(killerid);
		}
		if (PlayerInfo[killerid][pAchievement0] == 0)
		{
		    TextDrawSetString(Textdraw64[killerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Silent Kill (0) ~n~~n~~w~you won ~g~$200 ~w~and ~p~50+ of ~y~Silenced Pistol Skill");
	    	ShowAchievement(killerid);
			PlayerInfo[killerid][pSilenSkill] += 50;
			SafeGivePlayerMoney(killerid,200);
			PlayerInfo[killerid][pAchievement0] = 1;
		}
	}
	if (reason == 24)
	{
		if (PlayerInfo[killerid][pDesertSkill] >= 0 && PlayerInfo[killerid][pDesertSkill] <= 1000)
		{
		    PlayerInfo[killerid][pDesertSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}

	if (reason == 25)
	{
		if (PlayerInfo[killerid][pShotgSkill] >= 0 && PlayerInfo[killerid][pShotgSkill] <= 1000)
		{
		    PlayerInfo[killerid][pShotgSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}
	if (reason == 26)
	{
		if (PlayerInfo[killerid][pSawnSkill] >= 0 && PlayerInfo[killerid][pSawnSkill] <= 800)
		{
		    PlayerInfo[killerid][pSawnSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}
	if (reason == 27)
	{
		if (PlayerInfo[killerid][pCombSkill] >= 0 && PlayerInfo[killerid][pCombSkill] <= 1000)
		{
		    PlayerInfo[killerid][pCombSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}

	if (reason == 28 || reason == 32)
	{
		if (PlayerInfo[killerid][pUziSkill] >= 0 && PlayerInfo[killerid][pUziSkill] <= 800)
		{
		    PlayerInfo[killerid][pUziSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}

	if (reason == 29)
	{
		if (PlayerInfo[killerid][pSmgSkill] >= 0 && PlayerInfo[killerid][pSmgSkill] <= 1000)
		{
		    PlayerInfo[killerid][pSmgSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}

	if (reason == 30)
	{
		if (PlayerInfo[killerid][pAkSkill] >= 0 && PlayerInfo[killerid][pAkSkill] <= 1000)
		{
		    PlayerInfo[killerid][pAkSkill] += 2;
		    SetPlayerSkills(killerid);
		}
	}

	if (reason == 31)
	{
		if (PlayerInfo[killerid][pM4Skill] >= 0 && PlayerInfo[killerid][pM4Skill] <= 1000)
		{
		    PlayerInfo[killerid][pM4Skill] += 2;
		    SetPlayerSkills(killerid);
		}
	}


	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "** µÁª∞∂œ¡À......");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(GettingCK[playerid] < 999)
	{
	    if(IsPlayerConnected(killerid))
	    {
	        if(OnCK[killerid] < 999)
	        {
	            new killer[MAX_PLAYER_NAME];
	            new dier[MAX_PLAYER_NAME];
	            GetPlayerName(playerid, dier, sizeof(dier));
				GetPlayerName(killerid, killer, sizeof(killer));
	            format(string, sizeof(string), "* %s ∂‘ƒ„Ω¯––ƒ±…±¡À,ƒ„≤ªƒ‹ÕÊ’‚∏ˆΩ«…´¡À",killer);
	            SendClientMessage(playerid, COLOR_LIGHTRED, string);
	            format(string, sizeof(string), "** %s ”–ƒøµÿµƒ…±À¿¡À %s **",killer,dier);
	            CKLog(string);
	            BroadCast(COLOR_LIGHTRED, string);
	            PlayerInfo[playerid][pCK] = 1;
	            if(GettingCK[playerid] < 999) { GettingCK[playerid] = 999; }
	            else if(OnCK[playerid] < 999) { OnCK[playerid] = 999; }
	            if(GettingCK[killerid] < 999) { GettingCK[killerid] = 999; }
	            else if(OnCK[killerid] < 999) { OnCK[killerid] = 999; }
	            KickPlayer[playerid] = 1;
	        }
	    }
	}
	if(PlayerInfo[playerid][pHeadValue] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(gTeam[killerid] == 10 || PlayerInfo[killerid][pLeader] == 8)
		    {
		        if(GoChase[killerid] == playerid)
		        {
		            //ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					SafeGivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string,128,"<< …± ÷ %s ÕÍ≥…¡À»ŒŒÒ ªÒµ√ %s µƒ $%d >>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(8, COLOR_YELLOW, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
	if(victimteam >= 4)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			new slice = 100; //$100
			playercash = GetPlayerMoney(playerid);
			if(gTeam[killerid] != 2) { WantedPoints[killerid] += 2; } //+ 2 wanted points
			if(SafeTime[playerid] <= 0)
			{
				if(gTeam[killerid] != gTeam[playerid])
				{
					if(GetPlayerState(killerid) == 1)
					{
						PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills] + 2;
					}
					else
					{
						PlayerInfo[killerid][pKills]++;
					}
					PlayerInfo[playerid][pKills]--;
				}
			}
			/*if (strlen(deathreason) > 0)// patch
			{
				if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill) || gTeam[killerid] == gTeam[playerid])//med kill criminal
				{
					format(string, sizeof(string), ".: %s murdered %s. (%s) :.", killer, name, deathreason);
				}
				else
				{
					format(string, sizeof(string), ".: %s murdered %s. (%s) for $%d :.", killer, name, deathreason, slice);
				}

			}
			else
			{
				if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill || gTeam[killerid] == gTeam[playerid]))
				{
					format(string, sizeof(string), ".: %s murdered %s :.", killer, name);
				}
				else
				{
					format(string, sizeof(string), ".: %s murdered %s for $%d :.", killer, name, slice);
				}
			}*/
			if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill) || (gTeam[killerid] == gTeam[playerid] && gTeam[playerid] != 4))
			{
				slice = 0;
			}
			if (((gTeam[killerid]) != 4) && ((gTeam[killerid]) == gTeam[playerid]))//no team kill
			{
				slice = 0;
			}
			if (playercash > 0)
			{
				SafeGivePlayerMoney(playerid, -slice);
			}
			else
			{
				slice = slice+500;
			}
			//SafeGivePlayerMoney(killerid, slice);
			//GameTextForPlayer(playerid, dmessage, 5000, 2);
			PlayerPlaySound(killerid, 1083, 0.0, 0.0, 0.0);
			if (((gTeam[killerid]) == 3) && reason != 49)
			{
				SetPlayerCriminal(killerid,255, "“ªº∂ƒ±…±");
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
				SetPlayerCriminal(killerid,255, "…À»À≤¢Ã”“›");
			}
		}
	}
	else if (victimteam == 2)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			// Cop kill
			PlayerInfo[playerid][pKills]--;
			if (gTeam[killerid] == 2)//cops kill cop
			{
				//format(string,128,".: Officer %s murdered Officer %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				SafeGivePlayerMoney(killerid, -suecost);
				SafeGivePlayerMoney(playerid, suecost+100);//+100pays hospital bill
			}
			else
			{
				//format(string,128,".: %s murdered Officer %s (%s) :.",killer,name,deathreason);
		    }
			if (gTeam[killerid] >= 3)
			{
			    WantedPoints[killerid] += 2; //+ 2 wanted points
				if(reason != 49)
				{
					SetPlayerCriminal(killerid,255, "“ªº∂ƒ±…±");
				}
				else if (reason == 49)
				{
					SetPlayerCriminal(killerid,255, "…À»À≤¢Ã”“›");
				}
			}
			if(gTeam[killerid] >= 5 && SafeTime[playerid] <= 0)
			{
				if(GetPlayerState(killerid) == 1)
				{
					PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills]+2;
				}
				else
				{
					PlayerInfo[killerid][pKills]++;
				}
				WantedPoints[killerid]+=2;
			}
			//BroadCast(COLOR_RED, string);
		}
	}
	else if (victimteam == 3)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			// Civ kill
			if ((gTeam[killerid]) == 2)//cops kill civ
			{
			    if(WantedLevel[playerid] < 1)
			    {
					//format(string,128,".: Officer %s murdered %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
					PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
					SafeGivePlayerMoney(killerid, -suecost);
					SafeGivePlayerMoney(playerid, suecost+10);//+100pays hospital bill
				}
			}
			else
			{
				//format(string,128,".: %s murdered %s (%s) :.",killer,name,deathreason);
				WantedPoints[killerid] += 2;
		    }
			if (((gTeam[killerid]) >= 3 || (gTeam[killerid]) == 1) && reason != 49)
			{
				SetPlayerCriminal(killerid,255, "“ªº∂ƒ±…±");
			}
			else if (((gTeam[killerid]) >= 3 || (gTeam[killerid]) == 1) && reason == 49)
			{
				SetPlayerCriminal(killerid,255, "…À»À≤¢Ã”“›");
			}
		    //BroadCast(COLOR_RED, string);
		}
	}
	else if (victimteam == 1)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(killerid, killer, sizeof(killer));
			// Civ kill
			if ((gTeam[killerid]) == 2)//cops kill civ
			{
				//format(string,128,".: Officer %s murdered Paramedic %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				SafeGivePlayerMoney(killerid, -suecost);
				SafeGivePlayerMoney(playerid, suecost+10);//+100pays hospital bill
			}
			else if ((gTeam[killerid]) == 1)//med kill civ
			{
				//format(string,128,".: Paramedic %s murdered %s (%s) and was sued for $%d :.",killer,name,deathreason,suecost);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				SafeGivePlayerMoney(killerid, -suecost);
				SafeGivePlayerMoney(playerid, suecost+10);//+100pays hospital bill
			}
			else
			{
				//format(string,128,".: %s murdered %s (%s) :.",killer,name,deathreason);
		    }
			if (((gTeam[killerid]) == 4) && reason != 49)
			{
				SetPlayerCriminal(killerid,255, "“ªº∂ƒ±…±");
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
				SetPlayerCriminal(killerid,255, "…À»À≤¢Ã”“›");
			}
		    //BroadCast(COLOR_RED, string);
		}
	}
	if (victimteam >= 3 && WantedPoints[playerid] > 0 && killerteam == 2)
	{
	    SetPlayerFree(playerid,killerid, "±ª…±¡À");
	}
	if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
	{
		if (BusrouteEast[playerid][0] != 0) BusrouteEnd(playerid, BusrouteEast[playerid][1]);
		else if (BusrouteWest[playerid][0] != 0) BusrouteEnd(playerid, BusrouteWest[playerid][1]);
		else BusrouteEnd(playerid, 0);
	}
	if(FarmerVar[playerid] != 0)
	{
	    FarmerVar[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	if(DrugFarmerVar[playerid] != 0)
	{
		DrugFarmerVar[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	if(SmugglerWork[playerid] != 0)
	{
	    SmugglerWork[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	killerid = INVALID_PLAYER_ID;
	SetRealMoney(playerid, ScriptMoney[playerid]);
	SetPlayerColor(playerid,0xBBBBBB00);
    SafeResetPlayerWeapons(playerid);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    SetRealMoney(playerid, ScriptMoney[playerid]);
	new pName[MAX_PLAYER_NAME];
	new string[128];
	InitLockDoors(playerid);
 	if(IsPlayerNPC(playerid)) return 1;
	STDPlayer[playerid] = 0;
 	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "** ¥À∑˛ŒÒ∆˜“™«Ûµ«¬º≤≈ø…“‘”Œœ∑ (Kicked) **");
        Kick(playerid);
 	}
 	if(PlayerInfo[playerid][pAdminDuty] == 1)
 	{
      	Delete3DTextLabel(DutyLabel[playerid]);
 		DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡π‹¿Ì \n ≤ª“™π•ª˜",0xFF000099,0,0,0,50,-1,1);
		Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
	}
	else if(PlayerInfo[playerid][pTesterDuty] == 1)
	{
	    Delete3DTextLabel(DutyLabel[playerid]);
		DutyLabel[playerid] = Create3DTextLabel("µ±÷µ≤‚ ‘ \n ≤ª“™π•ª˜",0x00AA0099,0,0,0,50,-1,1);
		Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
	}
 	if(!gPlayerAnimLibsPreloaded[playerid])
	 {
   		PreloadAnimLib(playerid,"BOMBER");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"PED");
		PreloadAnimLib(playerid,"MISC");
		PreloadAnimLib(playerid,"BLOWJOBZ");
		PreloadAnimLib(playerid,"RIFLE");
		PreloadAnimLib(playerid,"UZI");
		PreloadAnimLib(playerid,"SHOTGUN");
		PreloadAnimLib(playerid,"COLT45");
		PreloadAnimLib(playerid,"SILENCED");
		PreloadAnimLib(playerid,"GYMNASIUM");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"BSKTBALL");
		PreloadAnimLib(playerid,"GANGS");
		PreloadAnimLib(playerid,"FIGHT_D");
		PreloadAnimLib(playerid,"PAULNMAC");
		gPlayerAnimLibsPreloaded[playerid] = 1;
	}
	TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLeader] < 1)
	{
	    MedicBill[playerid] = 0;
	    new rand = random(sizeof(CIV));
		SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„≤ª «“ª∏ˆ±ª»œø…¡Ïµº»À£¨ƒ„œ÷‘⁄ «“ª∏ˆ∆Ω√Ò!");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
		PlayerInfo[playerid][pModel] = CIV[rand];
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 5)
	{
	    if(PlayerInfo[playerid][pMember] < 1)
	    {
	        MedicBill[playerid] = 0;
	        new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ˙≤ª «º“Õ•≥…‘±£¨ƒ„œ÷‘⁄ «“ª√˚∆Ω√Ò £°");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
            SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
			PlayerInfo[playerid][pModel] = CIV[rand];
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pMember] != 8)
	    {
	        MedicBill[playerid] = 0;
	        new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„≤ª «’‚“ªª˙ππµƒ≥…‘±£¨ƒ„œ÷‘⁄ «“ª√˚∆Ω√Ò £°");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
            SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
			PlayerInfo[playerid][pModel] = CIV[rand];
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 2 && PlayerInfo[playerid][pMember] > 3)
	{
	    MedicBill[playerid] = 0;
		new rand = random(sizeof(CIV));
		SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„”–√ª”–…Í«ÎªÚ±ª»Œ√¸æ¸πŸ/FBI/π˙√ÒæØŒ¿∂”,ƒ„÷ª «“ª∏ˆ∆’Õ®µƒ∆Ω√Ò!");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
		PlayerInfo[playerid][pModel] = CIV[rand];
		SpawnPlayer(playerid);
	}
	if(PlayerInfo[playerid][pRegularCount] <= 72000 && PlayerInfo[playerid][pRegularRank] == 0)
	{
	    PlayerInfo[playerid][pRegularRank] = 1;
	    GetPlayerName(playerid, pName, sizeof(pName));
	    format(string, sizeof(string), "%s “—◊‘∂ØÃ·…˝Œ™≥£øÕÕÊº“", pName);
	    SendClientMessageToAll(COLOR_PINK, string);
	    GameTextForPlayer(playerid, "~y~PROMOTED ~n~~p~REGULAR PLAYER !!!!!", 10000, 5);
	    if (PlayerInfo[playerid][pHelper] == 0)
	    {
	        PlayerInfo[playerid][pHelper] = 1;
	        SendClientMessage(playerid, COLOR_PINK, "ƒ„±ªÃ·…˝Œ™¡À“ª∏ˆ÷˙ ÷!");
		}
    	if (PlayerInfo[playerid][pAchievement7] == 0)
		{
		    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Regular Player (7) ~n~~n~~w~you won ~g~$200");
	    	ShowAchievement(playerid);
			SafeGivePlayerMoney(playerid,2500);
			PlayerInfo[playerid][pAchievement7] = 1;
		}
	}
	if(PlayerInfo[playerid][pRegularCount] <= 36000 && PlayerInfo[playerid][pRegularRank] == 1)
	{
	    PlayerInfo[playerid][pRegularRank] = 2;
	    GetPlayerName(playerid, pName, sizeof(pName));
	    format(string, sizeof(string), "%s “—◊‘∂ØÃ·…˝Œ™2º∂≥£øÕÕÊº“!", pName);
	    SendClientMessageToAll(COLOR_PINK, string);
	    GameTextForPlayer(playerid, "~y~PROMOTED ~n~~p~REGULAR PLAYER LEVEL 2!!!!!", 10000, 5);
    	if (PlayerInfo[playerid][pAchievement8] == 0)
		{
		    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Regular Level 2 (8) ~n~~n~~w~you won ~g~$5000");
	    	ShowAchievement(playerid);
			SafeGivePlayerMoney(playerid,5000);
			PlayerInfo[playerid][pAchievement8] = 1;
		}
	}
	if(PlayerInfo[playerid][pRegularCount] == 0 && PlayerInfo[playerid][pRegularRank] == 2)
	{
	    PlayerInfo[playerid][pRegularRank] = 3;
	    GetPlayerName(playerid, pName, sizeof(pName));
	    format(string, sizeof(string), "%s “—◊‘∂ØÃ·…˝Œ™3º∂≥£øÕÕÊº“!", pName);
	    SendClientMessageToAll(COLOR_PINK, string);
	    GameTextForPlayer(playerid, "~y~PROMOTED ~n~~p~REGULAR PLAYER LEVEL 3!!!!!", 10000, 5);
	    if (PlayerInfo[playerid][pHelper] == 1 || PlayerInfo[playerid][pHelper] == 0)
	    {
	        PlayerInfo[playerid][pHelper] = 2;
	        SendClientMessage(playerid, COLOR_PINK, "ƒ„±ªÃ·…˝Œ™¡À÷˜»À∞Ô ÷!");
		}
	}
	if (PlayerInfo[playerid][pAchievement5] == 0 && PlayerInfo[playerid][pConnectSeconds] >= 3600)
	{
	    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~One Hour! (5) ~n~~n~~w~you won ~g~$100");
    	ShowAchievement(playerid);
		SafeGivePlayerMoney(playerid,100);
		PlayerInfo[playerid][pAchievement5] = 1;
	}
	if (PlayerInfo[playerid][pAchievement6] == 0 && PlayerInfo[playerid][pConnectSeconds] >= 18000)
	{
	    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Five Hours! (6) ~n~~n~~w~you won ~g~$250");
	    ShowAchievement(playerid);
		SafeGivePlayerMoney(playerid,250);
		PlayerInfo[playerid][pAchievement6] = 1;
	}
	if(gTeam[playerid] == 3)
	{
	    if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
	    {
			SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„ «“ª∏ˆº“Õ•/∂”µƒ“ª≤ø∑÷, ƒ„“—æ≠±ª∆»Õ‚π€∆§∑Ù!");
			MedicBill[playerid] = 0;
			new model = PlayerInfo[playerid][pChar];
			if(PlayerInfo[playerid][pMember] == 1) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMember] == 2) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMember] == 3) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMember] == 4) { SetSpawnInfo(playerid, 1, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pMember] == 5) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMember] == 6) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMember] == 7) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pMember] == 8) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMember] == 9) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMember] == 10) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMember] == 11) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMember] == 12) { SetSpawnInfo(playerid, 1, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
            else if(PlayerInfo[playerid][pMember] == 13) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pMember] == 14) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMember] == 15) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMember] == 16) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pLeader] == 1) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 2) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 3) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 4) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 5) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 6) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 7) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 8) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 9) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 10) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 11) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
            else if(PlayerInfo[playerid][pLeader] == 12) { SetSpawnInfo(playerid, 1, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pLeader] == 13) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 14) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 15) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLeader] == 16) { SetSpawnInfo(playerid, 11, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			//SetSpawnInfo(playerid, team, model,0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pChar] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]); }
	else { SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]); }//…œœﬂ∆§∑Ù
	SetPlayerWeapons(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	IsCopBanned(playerid);
	return 1;
}


public UNrentcar(playerid)
{
		new idcar = GetPlayerVehicleID(playerid);
		new string[256];
   	    new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				//GameTextForPlayer(playerid, "~w~You no longer rent a car", 5000, 3);
                SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„ÕÀ◊‚¡À!");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /unrentcar",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
		}
		return 1;
}

public UNrentbike(playerid)
{
		new idcar = GetPlayerVehicleID(playerid);
		new string[256];
   	    new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				//GameTextForPlayer(playerid, "~w~You no longer rent a bike", 5000, 3);
                SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„ÕÀ◊‚¡À!");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /unrentbike",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
		}
		return 1;
}

public RentcarGY(playerid)
{
		new string[256];
   	    new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
        if(IsPlayerConnected(playerid))
		{
		    for(new i = 0; i < sizeof(rentcar); i++)
			{
				if(GetPlayerVehicleID(playerid) == rentcar[i]) continue;
			}
			//new hirefee = HireCost(GetPlayerVehicleID(playerid));
			if(SBizzInfo[1][sbProducts] == 0)
			{
				GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				return 1;
			}
			if (GetPlayerMoney(playerid) <  SBizzInfo[1][sbEntranceCost])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡«Æ !");
				return 1;
			}
			if(HireCar[playerid] != 299)
			{
				gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);

				new listitems[] = "ƒ„“—æ≠◊‚ΩË¡À“ª÷÷ΩªÕ®π§æﬂ.\nƒ„œ÷‘⁄ø…“‘ÕÀ◊‚‘≠¿¥µƒ≥µ◊‚”√œ÷‘⁄µƒ’‚¡æ≥µ.\nƒ„»∑∂®ÕÀ◊‚‘≠¿¥µƒ≥µ√¥?";
				ShowPlayerDialog(playerid,8523,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");

	 			//new listitems[] = "{FFFFFF}1\t{55EE55}ÕÀ◊‚\n{FFFFFF}2\t{55EE55}¿Îø™¥À≥µ.";//BY nill
				//ShowPlayerDialog(playerid,8523,DIALOG_STYLE_LIST,"ƒ„“—æ≠◊‚ΩË¡À“ª÷÷ΩªÕ®π§æﬂ",listitems,"»∑∂®","»°œ˚");
				return 1;
			}
			for(new i=0; i<MAX_PLAYERS; i++)
			{
			    if(HireCar[i] == GetPlayerVehicleID(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "¥À≥µ“—±ª◊‚”√!");
			        exitGY(playerid);
			        return 1;
			    }
			}
			/*if(PlayerInfo[playerid][pPbiskey] == 1)
			{
				GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
				TogglePlayerControllable(playerid, 1);
				return 1;
			}*/
			//CanTurnEngine[playerid] = 9999;
			new carid = GetPlayerVehicleID(playerid);
			CanTurnEngine[playerid] = carid;
			SafeGivePlayerMoney(playerid,-SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			OnPropUpdate(3,1);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			//format(string, sizeof(string), "~w~Don't forget to ~r~/unrentcar~n~~g~/lock ~w~to lock your car.",hirefee);
			SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„“—æ≠◊‚ΩË¡À¥À≥µ,œ÷‘⁄ø…“‘ π”√¡À!");
			gEngine[playerid] = 0;
			engineOn[GetPlayerVehicleID(playerid)] = 0;
			TogglePlayerControllable(playerid, 0);
			//GameTextForPlayer(playerid, string, 5000, 3);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /rentcar",d,m,y,h,mi,s,sendername);
			CommandLog(string);
  		}
  		return 1;
}

public RentbikeGY(playerid)
{
        new string[256];
   	    new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			//if(GetPlayerVehicleID(playerid) >= 112 && GetPlayerVehicleID(playerid) <= 130)
			//{
/*   				for(new i = 0; i < sizeof(rentbike); i++)
				{
					if(GetPlayerVehicleID(playerid) == rentbike[i]) continue;
				}
*/
				//new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if(SBizzInfo[0][sbProducts] == 1)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				/*if(PlayerInfo[playerid][pPbiskey] == 0)
				{
					GameTextForPlayer(playerid, "~w~No charge for the boss", 5000, 3);
					TogglePlayerControllable(playerid, 1);
					return 1;
				}*/
				if (GetPlayerMoney(playerid) <  SBizzInfo[0][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡«Æ !");
					return 1;
				}
				if(HireCar[playerid] != 299)
				{
					gCarLock[HireCar[playerid]] = 0;
					UnLockCar(HireCar[playerid]);
	 				//new listitems[] = "{FFFFFF}1\t{55EE55}ÕÀ◊‚\n{FFFFFF}2\t{55EE55}¿Îø™¥À≥µ.";//BY nill
					//ShowPlayerDialog(playerid,8524,DIALOG_STYLE_LIST,"ƒ„“—æ≠◊‚ΩË¡À“ª÷÷ΩªÕ®π§æﬂ",listitems,"»∑∂®","»°œ˚");
    				new listitems[] = "ƒ„“—æ≠◊‚ΩË¡À“ª÷÷ΩªÕ®π§æﬂ.\nƒ„œ÷‘⁄ø…“‘ÕÀ◊‚‘≠¿¥µƒ≥µ◊‚”√œ÷‘⁄µƒ’‚¡æ≥µ.\nƒ„»∑∂®ÕÀ◊‚‘≠¿¥µƒ≥µ√¥?";
					ShowPlayerDialog(playerid,8524,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
/*
					SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠◊‚ΩË¡À“ª÷÷ΩªÕ®π§æﬂ,«Îœ»ÕÀ◊‚");
					SendClientMessage(playerid, COLOR_GREY, " π”√/unrentbike ÕÀ◊‚2¬÷¿‡ΩªÕ®π§æﬂ");
					SendClientMessage(playerid, COLOR_GREY, " π”√/unrentcar  ÕÀ◊‚≥µ¿‡ΩªÕ®π§æﬂ");
					SendClientMessage(playerid, COLOR_GREY, " π”√/unrentboat ÕÀ◊‚¥¨¿‡ΩªÕ®π§æﬂ");
*/
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "    ¥À≥µ“—±ª◊‚”√ !");
				        exitGY(playerid);
				        return 1;
				    }
				}
				new carid = GetPlayerVehicleID(playerid);
				CanTurnEngine[playerid] = carid;
				SafeGivePlayerMoney(playerid,-SBizzInfo[0][sbEntranceCost]);
				SBizzInfo[0][sbTill] += SBizzInfo[0][sbEntranceCost];
				ExtortionSBiz(0, SBizzInfo[0][sbEntranceCost]);
				SBizzInfo[0][sbProducts]--;
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate(3,0);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				//format(string, sizeof(string), "~w~Don't forget to ~b~/unrentbike~n~~g~/lock ~w~to lock your bike",hirefee);
				SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„“—æ≠◊‚ΩË¡À¥À¿‡ΩªÕ®π§æﬂ,œ÷‘⁄ø…“‘ π”√¡À!");
				gEngine[playerid] = 0;
				engineOn[GetPlayerVehicleID(playerid)] = 0;
				TogglePlayerControllable(playerid, 0);
				//gEngine[GetPlayerVehicleID(playerid)] = 0;
				//GameTextForPlayer(playerid, string, 5000, 3);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /rentbike",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			//}
		}
        return 1;
}

public exitGY(playerid)
{
        new string[256];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
		    if(HouseEntered[playerid] != 9999)
		    {
				new i = HouseEntered[playerid];

				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					SafeSetPlayerInterior(playerid,0);
					SafeSetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					SetPlayerVirtualWorld(playerid,0);
					PlayerInfo[playerid][pVirWorld] = 0;
					HouseEntered[playerid] = 9999;
					if(HouseInfo[i][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if(tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
						}
					}
					return 1;
				}
			}
			if(BizzEntered[playerid] != 9999)
		    {
		        new i = BizzEntered[playerid];

				if (IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
				    SafeSetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					OnPlayerExitFood(playerid);
					SafeSetPlayerPos(playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
					SetPlayerVirtualWorld(playerid, 0);
					BizzEntered[playerid] = 9999;
				}
			}
			new carid = GetPlayerVehicleID(playerid);
			if (IsABus(carid))
			{
				TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
				if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0) BusrouteEnd(playerid, carid);
			}
			if (IsASweeper(carid))
			{
				TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
			}
			if(IsAHarvest(carid))
			{
			    if (carid != 0)
				{
					SetVehicleToRespawn(carid);
				}
				if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
				{
					FarmerPickup[playerid][0]--;
				}
			    TogglePlayerControllable(playerid, 1);
			    SafeRemovePlayerFromVehicle(playerid);
			    FarmerVar[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);

			}
			if(IsADrugHarvest(carid))
			{

			    if(DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
			    {
			        DrugFarmerPickup[playerid][0]--;
			    }
			    TogglePlayerControllable(playerid, 1);
			    SafeRemovePlayerFromVehicle(playerid);
			    DrugFarmerVar[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			}
			if(IsASmuggleCar(carid))
			{
			    TogglePlayerControllable(playerid, 1);
			    SafeRemovePlayerFromVehicle(playerid);
			    SmugglerWork[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			}
			if(Decoding[playerid] == 1)
			{
			    Decoding[playerid] = 0;
			    KillTimer(DecoderTimer);
				HideDecoder(playerid);
				SendClientMessage(playerid, COLOR_NICERED, "ƒ„¿Îø™¡À∆˚≥µΩ‚¬Î∆˜Õ£÷π!");
				decodecode = 0;
				Decoder = 0;
			}
			if(IsAnOwnableCar(carid) && CarInfo[carid][cOwned] == 0)
	   		{
	        	TogglePlayerControllable(playerid, 1);
	        	SafeRemovePlayerFromVehicle(playerid);
	    	}
	    	if(IsPlayerInAnyVehicle(playerid) && !engineOn[GetPlayerVehicleID(playerid)] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    	{
	    	    TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
			}
			if(GetPlayerVehicleID(playerid) >= 112 && GetPlayerVehicleID(playerid) <= 130 || GetPlayerVehicleID(playerid) >= 135 && GetPlayerVehicleID(playerid) <= 154)
			{
				TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 3,387.7978,173.8582,1008.3828))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,1481.0206,-1771.1138,18.7958);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 6,-1404.5299,-259.0602,1043.6563))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 8,-1443.0554,-581.1879,1055.0472))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 8,-1464.7732,1557.5533,1052.5313))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
			}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
		}

		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /exit",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
}

///////////////
forward GetFfJob(playerid);//ªÒ»°∑«∑®π§◊˜
public GetFfJob(playerid)
{
	if(PlayerInfo[playerid][pJob] == 0)
	{
		if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,1215.1304,-11.8431,1000.9219))
		{
					    //SendClientMessage(playerid, COLOR_WHITE, "* ºÀ≈Æπ§◊˜µ„");
					    //SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
					    //SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ºÀ≈Æ, º¸»Î /accept job.");
			GettingJob[playerid] = 3;
			new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ºÀ≈Æ, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ºÀ≈Æ√¥?";
			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			return 1;
		}
		else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,2072.5486,-1582.8029,13.4741))
		{
					    /*SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∂æ∑∑, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
					    SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
					    SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ∂æ∑∑, º¸»Î /accept job.");*/
			GettingJob[playerid] = 4;
			new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∂æ∑∑, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ∂æ∑∑√¥?";
			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			return 1;
		}
		else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,213.8549,-230.5761,1.7786))
		{
			  		    /*SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≤ƒ¡œ◊ﬂÀΩ∑∑, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
					    SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
					    SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ≤ƒ¡œ◊ﬂÀΩ∑∑, º¸»Î /accept job.");*/
			GettingJob[playerid] = 22;
			new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≤ƒ¡œ◊ﬂÀΩ∑∑, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ≤ƒ¡œ◊ﬂÀΩ∑∑√¥?";
			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			return 1;
		}
		else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,2022.1492,-1108.7837,26.2031))
		{
					   	/*SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∂æ∆∑◊ﬂÀΩ∑∑, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
					   	SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
					   	SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ∂æ∆∑◊ﬂÀΩ∑∑, º¸»Î /accept job.");*/
			GettingJob[playerid] = 20;
			new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∂æ∆∑◊ﬂÀΩ∑∑, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ∂æ∆∑◊ﬂÀΩ∑∑√¥?";
			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			return 1;
		}
		else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,-86.1251,2.6412,3.1172))
		{
					   	/*SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∂æ∆∑÷÷÷≤…Ã, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
					   	SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
					   	SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ∂æ∆∑÷÷÷≤…Ã, º¸»Î /accept job.");*/
			GettingJob[playerid] = 19;
			new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∂æ∆∑÷÷÷≤…Ã, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ∂æ∆∑÷÷÷≤…Ã√¥?";
			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			return 1;
		}
		else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,2137.6624,-2282.3455,20.6719))
		{
					   	/*SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ Œ‰∆˜÷∆‘Ï…Ã, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
					   	SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
					   	SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ Œ‰∆˜÷∆‘Ï…Ã, º¸»Î /accept job.");*/
			GettingJob[playerid] = 23;
			new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ Œ‰∆˜÷∆‘Ï…Ã, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ Œ‰∆˜÷∆‘Ï…Ã√¥?";
			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "** ƒ„»∑∂®’‚∏ΩΩ¸ƒ‹’“µΩ“ª∑›π§◊˜? !");
		}
	}
	else
	{
		new listitems[] = "ƒ„“—æ≠”–“ª∑›π§◊˜¡À\nƒ„–Ë“™»°œ˚µ±«∞µƒπ§◊˜≤≈ø…“‘’“∆‰À˚π§◊˜\nƒ„»∑∂®»°œ˚ƒ„µ±«∞µƒπ§◊˜√¥?";
		ShowPlayerDialog(playerid,8529,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
	}
	return 1;
}

public CKLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PayLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public KickLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public WarnLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/warn.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public BanLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AdminLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/admin.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public ReportLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/reports.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public CommandLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/commands.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AllCommandLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/allcommands.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public ExplodeLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/explosions.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public MovesLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/moves.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public PlaceLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/places.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public TelesLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/teleports.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public BugsLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/bugs.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public ChatLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/chat.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AdminChatLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/adminchat.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public SlapLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/slaps.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public AnnounceLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/announces.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public JailLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/jails.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public LoginLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/logins.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public MuteLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/mute.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public FreezeLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/freeze.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public GiveLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/sets,gives.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public FamilyChatLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/family.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public LocalChatLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/local.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PublicLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/public.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public RadioChatLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/radio.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public APMLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/apm.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PMLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/pm.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public DepartmentChatLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/department.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public ActionLog(string[])
{
	new entry[200];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("LARP/Logs/action.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}


public OnPlayerEnterCheckpoint(playerid)
{
	new string[128];
	new string2[128];
	
 	if(Searching[playerid] != 0)
 	{
		DisablePlayerCheckpoint(playerid);
		Searching[playerid] = 0;
		SendClientMessage(playerid, TEAM_GROVE_COLOR, "*  ±Í÷æ“—“∆≥˝.πßœ≤ƒ„µƒ≥µ’“µΩ¡À.");
    	return 1;
    }

	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
	    BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid]==1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    PlayerInfo[playerid][pJackSkill] ++;
			if(PlayerInfo[playerid][pJackSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒÕµ≥µººƒ‹œ÷‘⁄2º∂,ƒ„ª·◊¨∏¸∂‡µƒ«Æ∫Õ∏¸øÏµƒ◊∞ÃÓ ±º‰."); }
			else if(PlayerInfo[playerid][pJackSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒÕµ≥µººƒ‹œ÷‘⁄3º∂,ƒ„ª·◊¨∏¸∂‡µƒ«Æ∫Õ∏¸øÏµƒ◊∞ÃÓ ±º‰."); }
			else if(PlayerInfo[playerid][pJackSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒÕµ≥µººƒ‹œ÷‘⁄4º∂,ƒ„ª·◊¨∏¸∂‡µƒ«Æ∫Õ∏¸øÏµƒ◊∞ÃÓ ±º‰."); }
			else if(PlayerInfo[playerid][pJackSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒÕµ≥µººƒ‹œ÷‘⁄5º∂,ƒ„ª·◊¨∏¸∂‡µƒ«Æ∫Õ∏¸øÏµƒ◊∞ÃÓ ±º‰."); }
			new level = PlayerInfo[playerid][pJackSkill];
			if(level >= 0 && level <= 50)
			{
			    new rand = random(sizeof(SELLCAR1));
			    format(string, sizeof(string), "ƒ„¬ÙµÙ¡À“ª¡æ≥µªÒµ√%d$,ƒ„ª®∑—¡À20∑÷÷”ÕÍ≥….", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR1[rand]);
			    PlayerInfo[playerid][pCarTime] = 1200;
			}
			else if(level >= 51 && level <= 100)
			{
			    new rand = random(sizeof(SELLCAR2));
			    format(string, sizeof(string), "ƒ„¬ÙµÙ¡À“ª¡æ≥µªÒµ√%d$,ƒ„ª®∑—¡À18∑÷÷”ÕÍ≥….", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR2[rand]);
			    PlayerInfo[playerid][pCarTime] = 1080;
			}
			else if(level >= 101 && level <= 200)
			{
			    new rand = random(sizeof(SELLCAR3));
			    format(string, sizeof(string), "ƒ„¬ÙµÙ¡À“ª¡æ≥µªÒµ√%d$,ƒ„ª®∑—¡À16∑÷÷”ÕÍ≥….", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR3[rand]);
			    PlayerInfo[playerid][pCarTime] = 960;
			}
			else if(level >= 201 && level <= 400)
			{
			    new rand = random(sizeof(SELLCAR4));
			    format(string, sizeof(string), "ƒ„¬ÙµÙ¡À“ª¡æ≥µªÒµ√%d$,ƒ„ª®∑—¡À14∑÷÷”ÕÍ≥….", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, SELLCAR4[rand]);
			    PlayerInfo[playerid][pCarTime] = 840;
			}
			else if(level >= 401)
			{
			    new money = 6000;
			    format(string, sizeof(string), "ƒ„¬ÙµÙ¡À“ª¡æ≥µªÒµ√%d$,ƒ„ª®∑—¡À12∑÷÷”ÕÍ≥….", money);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SafeGivePlayerMoney(playerid, money);
			    PlayerInfo[playerid][pCarTime] = 720;
			}
			GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
			CP[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else
		{
		    GameTextForPlayer(playerid, "≤ª‘⁄≥µ…œ", 5000, 1);
		}
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~You are~n~~y~Home", 5000, 1);
		    }
		}
	}
	if (BusrouteEast[playerid][0] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
			new nextstop[64];
			BusrouteWest[playerid][0] = 0;
		    switch(BusrouteEast[playerid][0])
		    {
		        case 1:
		        {
					nextstop = "ª˙≥°";
		            SetPlayerCheckpoint(playerid, 1979.7369,-2171.4861,13.5363, 5.0);
					AdvertiseToPlayersAtBusStop(1979.7369,-2171.4861,13.5363, 0);
				}
				case 2:
				{
					nextstop = "Œ÷∑Úπ§≥ß";
				    SetPlayerCheckpoint(playerid, 2227.6953,-2201.9053,13.5164, 5.0);
					AdvertiseToPlayersAtBusStop(2227.6953,-2201.9053,13.5164, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 3:
				{
					nextstop = "¬Âøﬂ";
				    SetPlayerCheckpoint(playerid, 2719.9419,-2030.2104,13.5076, 5.0);
					AdvertiseToPlayersAtBusStop(2719.9419,-2030.2104,13.5076, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 4:
				{
					nextstop = "6Ω÷π„≥°";
				    SetPlayerCheckpoint(playerid, 2470.8059,-1926.7136,13.5125, 5.0);
					AdvertiseToPlayersAtBusStop(2470.8059,-1926.7136,13.5125, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 5:
				{
					nextstop = "10∫≈Ω÷«¯";
				    SetPlayerCheckpoint(playerid, 2348.0249,-1695.8247,13.5286, 5.0);
					AdvertiseToPlayersAtBusStop(2348.0249,-1695.8247,13.5286, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 6:
				{
					nextstop = "÷Ì»¶";
				    SetPlayerCheckpoint(playerid, 2422.4092,-1251.1915,23.9176, 5.0);
					AdvertiseToPlayersAtBusStop(2422.4092,-1251.1915,23.9176, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 7:
				{
					nextstop = "Ω◊ÿÈµ";
				    SetPlayerCheckpoint(playerid, 2717.7463,-1218.8141,64.9276, 5.0);
					AdvertiseToPlayersAtBusStop(2717.7463,-1218.8141,64.9276, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 8:
				{
					nextstop = "Ω‹Ï≥—∑∆˚≥µ¬√π›";
				    SetPlayerCheckpoint(playerid, 2173.1165,-1114.3069,25.4259, 5.0);
					AdvertiseToPlayersAtBusStop(2173.1165,-1114.3069,25.4259, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 9:
				{
					nextstop = "∏Ò¬◊π´‘∞";
				    SetPlayerCheckpoint(playerid, 2028.4354,-1259.1379,23.9287, 5.0);
					AdvertiseToPlayersAtBusStop(2028.4354,-1259.1379,23.9287, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 10:
				{
					nextstop = "π´Ωª≥µ’æ";
				    SetPlayerCheckpoint(playerid, 1203.5101,-1833.5771,13.4946, 5.0);
					AdvertiseToPlayersAtBusStop(1203.5101,-1833.5771,13.4946, 0);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 11:
				{
					nextstop = "Ω· ¯";
					TogglePlayerControllable(playerid, 0);
	                SendClientMessage(playerid, COLOR_YELLOW, "∞Õ ø»ŒŒÒÕÍ≥…,[ π”√]:/starteast ªÚ /startwestø™ º–¬“ª¬÷µƒ»ŒŒÒ..");
					SendClientMessage(playerid, COLOR_YELLOW, "[ π”√]:/exit¿Îø™∞Õ ø.");
				    DisablePlayerCheckpoint(playerid);
				}
			}
			BusrouteEast[playerid][0]++;
			if (strcmp(nextstop, "end", true) != 0)
			{
				format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~r~$3 Bonus~n~~n~~g~Next Stop: %s", nextstop);
				format(string2, sizeof(string2), "~n~~n~~n~~n~~n~~n~~n~~g~Next Stop: %s", nextstop);
			}
			else
			{
				string = "~g~End of Route~n~~n~~r~$50 completion bonus~n~~n~~w~/starteast to continue the route";
				string2 = "~n~~g~End of Route~n~~n~~w~Please leave the bus or wait for the next route";
				//BusrouteEast[playerid][0] = 0;
				SafeGivePlayerMoney(playerid, 47);
			}
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			for (new i=0; i<=MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i) &&  GetPlayerVehicleID(i) == BusrouteEast[playerid][1])
				{
					if (BusrouteEast[i][0] != 0) GameTextForPlayer(i, string, 10000, 3);
					else GameTextForPlayer(i, string2, 10000, 3);
				}
			}
			SafeGivePlayerMoney(playerid, 3);
			return 1;
		}
	}
	else if (BusrouteWest[playerid][0] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			new nextstop[64];
			BusrouteEast[playerid][0] = 0;
		    switch(BusrouteWest[playerid][0])
		    {
		        case 1:
		        {
					nextstop = "∞¢†ñùh≤º¿≠æ∆∞…";
		            SetPlayerCheckpoint(playerid, 1826.8738,-1634.5306,13.5588, 5.0);
					AdvertiseToPlayersAtBusStop(1826.8738,-1634.5306,13.5588, 1);
				}
				case 2:
				{
					nextstop = "∏Ò¬◊π´‘∞";
				    SetPlayerCheckpoint(playerid, 1856.7260,-1211.7167,20.3898, 5.0);
					AdvertiseToPlayersAtBusStop(1856.7260,-1211.7167,20.3898, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 3:
				{
					nextstop = "∫√¿≥ŒÎ∫∫±§µÍ";
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
				    SetPlayerCheckpoint(playerid, 1208.0479,-929.9481,42.9049, 5.0);
					AdvertiseToPlayersAtBusStop(1208.0479,-929.9481,42.9049, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 4:
				{
					nextstop = "∑∏◊ÔæÁ‘∫";
				    SetPlayerCheckpoint(playerid, 1119.0096,-1137.8805,23.7597, 5.0);
					AdvertiseToPlayersAtBusStop(1119.0096,-1137.8805,23.7597, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 5:
				{
					nextstop = "“¯––";
					SetPlayerCheckpoint(playerid, 1654.2733,-1662.2135,22.5156, 5.0);
					AdvertiseToPlayersAtBusStop(1654.2733,-1662.2135,22.5156, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 6:
				{
					nextstop = "»¶µÿ";
				    SetPlayerCheckpoint(playerid, 526.6218,-1480.9631,14.5567, 5.0);
					AdvertiseToPlayersAtBusStop(526.6218,-1480.9631,14.5567, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 7:
				{
					nextstop = " •¬Í¿˚—«∫£Ã≤";
				    SetPlayerCheckpoint(playerid, 443.9078,-1724.8008,10.0896, 5.0);
					AdvertiseToPlayersAtBusStop(443.9078,-1724.8008,10.0896, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 8:
				{
					nextstop = "Œ¨¬ﬁƒ…∫£Ã≤";
				    SetPlayerCheckpoint(playerid, 836.2728,-1788.8121,13.9260, 5.0);
					AdvertiseToPlayersAtBusStop(836.2728,-1788.8121,13.9260, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 9:
				{
					nextstop = "÷––ƒπ„≥°";
				    SetPlayerCheckpoint(playerid, 1508.7136,-1735.5184,13.4921, 5.0);
					AdvertiseToPlayersAtBusStop(1508.7136,-1735.5184,13.4921, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 10:
				{
					nextstop = "π´Ωª≥µ’æ";
				    SetPlayerCheckpoint(playerid, 1203.5101,-1833.5771,13.4946, 5.0);
					AdvertiseToPlayersAtBusStop(1203.5101,-1833.5771,13.4946, 1);
					SetTimerEx("busroutestoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„–Ë“™‘⁄’‚¿Ôµ»¥˝10√Î.");
				}
				case 11:
				{
					nextstop = "Ω· ¯";
					TogglePlayerControllable(playerid, 0);
	                SendClientMessage(playerid, COLOR_YELLOW, "∞Õ ø»ŒŒÒÕÍ≥…,[ π”√]:/starteast ªÚ /startwestø™ º–¬“ª¬÷µƒ»ŒŒÒ.");
					SendClientMessage(playerid, COLOR_YELLOW, "[ π”√]:/exit¿Îø™∞Õ ø.");
				    DisablePlayerCheckpoint(playerid);
	          	}
			}
			BusrouteWest[playerid][0]++;
			if (strcmp(nextstop, "end", true) != 0)
			{
				format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~r~$3 Bonus~n~~n~~g~Next Stop: %s", nextstop);
				format(string2, sizeof(string2), "~n~~n~~n~~n~~n~~n~~n~~g~Next Stop: %s", nextstop);
			}
			else
			{
				string = "~g~End of Route~n~~n~~r~$50 completion bonus~n~~n~~w~/startwest to continue the route";
				string2 = "~n~~g~End of Route~n~~n~~w~Please leave the bus or wait for the next route";
				//BusrouteWest[playerid][0] = 0;
				SafeGivePlayerMoney(playerid, 47);
			}
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			for (new i=0; i<=MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i) &&  GetPlayerVehicleID(i) == BusrouteWest[playerid][1])
				{
					if (BusrouteWest[i][0] != 0) GameTextForPlayer(i, string, 10000, 3);
					else GameTextForPlayer(i, string2, 10000, 3);
				}
			}
			SafeGivePlayerMoney(playerid, 3);
			return 1;
		}
	}
	if (BusShowLocationC[playerid] == 1)
	{
		DisablePlayerCheckpoint(playerid);
		BusShowLocationC[playerid] = 0;
		return 1;
	}
	if(FarmerVar[playerid] == 1)
	{
	    if (IsPlayerInAnyVehicle(playerid))
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new cash=(random(70-20)+20);
		    if(IsAHarvest(carid))
		    {
		        switch(FarmerPickup[playerid][0])
		        {
		            case 0:
		        	{
		            	SetPlayerCheckpoint(playerid, -205.9348,-1332.2749,10.4056, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 1:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 2:
		        	{
		        	    if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
		        	        JustStarted[playerid] = 0;
		        	    }
		            	SetPlayerCheckpoint(playerid, -548.5396,-1329.0653,19.6210, 5.0);
					}
					case 3:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 4:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
		        	        JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -370.9486,-1281.1089,29.8698, 5.0);
					}
					case 5:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 6:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
		        	        JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -258.3272,-1387.9211,10.1292, 5.0);
					}
					case 7:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 8:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
		        	        JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -288.8517,-1385.0117,9.8957, 5.0);
					}
					case 9:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 10:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
                   			JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -283.1325,-1338.2822,7.4280, 5.0);
					}
					case 11:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 12:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
                   			JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -224.5992,-1509.1902,7.4473, 5.0);
					}
					case 13:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 14:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
                   			JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -247.2859,-1528.8744,6.5904, 5.0);
					}
					case 15:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 16:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
                   			JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -283.9610,-1549.7180,6.4975, 5.0);
					}
					case 17:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 18:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
                   			JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -431.6107,-1334.0961,28.6561, 5.0);
					}
					case 19:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 20:
		        	{
		            	if(JustStarted[playerid] != 1)
		        	    {
		        	        PlayerInfo[playerid][pPayCheck] += cash * 5;
		            		format(string, sizeof(string), "~w~Added to your paycheck~n~~g~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		        	    }
		        	    else
		        	    {
                   			JustStarted[playerid] = 0;
		        	    }
		        	    SetPlayerCheckpoint(playerid, -476.4104,-1391.6769,20.4733, 5.0);
					}
					case 21:
		        	{
		            	SetPlayerCheckpoint(playerid, -376.7750,-1437.6874,25.7266, 5.0);
		            	if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
					}
					case 22:
		        	{
		            	DisablePlayerCheckpoint(playerid);
		            	TogglePlayerControllable(playerid, 0);
		            	GameTextForPlayer(playerid, "~w~Use /exit to leave a harvest~n~~r~Bonus 100$ in cash", 5000, 1);
		            	SafeGivePlayerMoney(playerid, 100);
					}
		        }
		        FarmerPickup[playerid][0]++;
		        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		    }
		}
		return 1;
	}
	if(MatsHolding[playerid] == 25)
	{
		if(PlayerInfo[playerid][pJob] == 22)
		{
 			DisablePlayerCheckpoint(playerid);
   			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			SafeGivePlayerMoney(playerid, 300);
			SendClientMessage(playerid, COLOR_WHITE, "ƒ„≥ˆ €¡À25∑›≤ƒ¡œ∏¯≤ƒ¡œ“¯––.");
			MatsHolding[playerid] = 0;
			matssys[MatsAmmount] += 25;
			GameTextForPlayer(playerid, "~w~Materials imported", 5000, 1);
			SaveMatsSystem();
		}
	    return 1;
	}
	if(IsPuttingMaterials[playerid] == 1)
	{
	    if(PlayerInfo[playerid][pJob] == 23)
	    {
	        if(PlayerInfo[playerid][pMats] < CreatingGunPrice[playerid])
	        {
	            SendClientMessage(playerid, COLOR_GREY, " ƒ„√ª”–◊„πªµƒ≤ƒ¡œ ");
	            return 1;
	        }
	        DisablePlayerCheckpoint(playerid);
	        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	        GameTextForPlayer(playerid, "~w~Materials delivered successfuly", 5000, 1);
	        PlayerInfo[playerid][pMats] -= CreatingGunPrice[playerid];
	        CreatingGunPrice[playerid] = 0;
	        IsPuttingMaterials[playerid] = 0;
			new randomize = random(3)+1;
	        if(randomize == 1) ProxDetector(40.0, playerid, "π§≥ß—Ô…˘∆˜£∫µΩÕ‚±ﬂ«◊√‹µƒ¥ÛÀÆµ¿£°",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        else if(randomize == 2) ProxDetector(40.0, playerid, "π§≥ß÷˜Ω≤»À£∫–ª'—≈blasta «‘⁄Õ‚√Ê£°",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        else ProxDetector(40.0, playerid, "π§≥ß—Ô…˘∆˜: ∏√À¿µƒ∆Ø¡¡∆®π…«πŒ“°£À¸µƒÕ‚√Êµ»¥˝—« !",COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        IsTakingGun[playerid] = 1;
	        SetPlayerCheckpoint(playerid, 2163.3430,-2271.9934,13.3293, 1.0);
	        return 1;
	    }
	    return 1;
	}
	if(IsTakingGun[playerid] == 1)
	{
	    if(PlayerInfo[playerid][pJob] == 23)
	    {
	        if(CreatingGun[playerid] == 0 || CreatingGunAmmo[playerid] == 0)
	        {
	            return 1;
	        }
	        DisablePlayerCheckpoint(playerid);
	        new gunname[24];
	        GetWeaponName(CreatingGun[playerid],gunname,sizeof(gunname));
	        format(string, sizeof(string), "** ƒ„∞— %s ∑≈‘⁄µÿ…œ.", gunname);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        SafeGivePlayerWeapon(playerid, CreatingGun[playerid], CreatingGunAmmo[playerid]);
	        CreatingGun[playerid] = 0;
	        CreatingGunAmmo[playerid] = 0;
	        IsTakingGun[playerid] = 0;
	        return 1;
	    }
	    return 1;
	}
	if(DrugFarmerVar[playerid] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new cash=(random(250-100)+100);
		    if(IsADrugHarvest(carid))
		    {
		        switch(DrugFarmerPickup[playerid][0])
		        {
		            case 0:
		            {
                        SetPlayerCheckpoint(playerid, -181.4144,167.2931,7.8413, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 1:
		            {
                        SetPlayerCheckpoint(playerid, -184.1222,-66.2325,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 2:
		            {
                        SetPlayerCheckpoint(playerid, -39.6705,-102.2681,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 3:
		            {
                        SetPlayerCheckpoint(playerid, 35.3907,-74.2866,0.9706, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 4:
		            {
                        SetPlayerCheckpoint(playerid, 58.6579,-3.7121,1.6909, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 5:
		            {
                        SetPlayerCheckpoint(playerid, 19.7974,43.5431,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 6:
		            {
                        SetPlayerCheckpoint(playerid, -34.1614,73.9170,3.1096, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 7:
		            {//drop-off
		                if(JustStarted[playerid] != 1)
		                {
		                	PlayerInfo[playerid][pPayCheck] += cash * 5;
		                	drugsys[DrugAmmount]++;
		                	format(string, sizeof(string), "~w~Added to your paycheck~n~~b~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		            		SaveDrugSystem();
						}
						else
						{
						    JustStarted[playerid] = 0;
						}
                        SetPlayerCheckpoint(playerid, 30.2059,20.1222,3.1172, 5.0);
		            }
		            case 8:
		            {
                        SetPlayerCheckpoint(playerid, -21.3052,-60.9220,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 9:
		            {
                        SetPlayerCheckpoint(playerid, -191.6069,-70.8331,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 10:
		            {
                        SetPlayerCheckpoint(playerid, -253.8518,-3.7909,2.5041, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 11:
		            {
                        SetPlayerCheckpoint(playerid, -178.0497,128.4783,3.8665, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 12:
		            {
                        SetPlayerCheckpoint(playerid, -110.8844,143.1536,3.1144, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 13:
		            {
                        SetPlayerCheckpoint(playerid, -34.1614,73.9170,3.1096, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 14:
		            {//drop-off
		                if(JustStarted[playerid] != 1)
		                {
		                	PlayerInfo[playerid][pPayCheck] += cash * 5;
		                	drugsys[DrugAmmount]++;
		                	format(string, sizeof(string), "~w~Added to your paycheck~n~~b~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		            		SaveDrugSystem();
						}
						else
						{
						    JustStarted[playerid] = 0;
						}
                        SetPlayerCheckpoint(playerid, -164.3909,28.9677,3.1172, 5.0);
		            }
		            case 15:
		            {
                        SetPlayerCheckpoint(playerid, -213.1695,-26.4404,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 16:
		            {
                        SetPlayerCheckpoint(playerid, -11.7208,-10.7312,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 17:
		            {
                        SetPlayerCheckpoint(playerid, 11.4609,-90.3436,2.0164, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 18:
		            {
                        SetPlayerCheckpoint(playerid, 63.1697,-22.5562,1.2136, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 19:
		            {
                        SetPlayerCheckpoint(playerid, 23.2130,30.9418,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 20:
		            {
                        SetPlayerCheckpoint(playerid, -134.6788,151.1453,3.9566, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 21:
		            {
                        SetPlayerCheckpoint(playerid, -34.1614,73.9170,3.1096, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 22:
		            {//drop-off
		                if(JustStarted[playerid] != 1)
		                {
		                	PlayerInfo[playerid][pPayCheck] += cash * 5;
		                	drugsys[DrugAmmount]++;
		                	format(string, sizeof(string), "~w~Added to your paycheck~n~~b~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		            		SaveDrugSystem();
						}
						else
						{
						    JustStarted[playerid] = 0;
						}
                        SetPlayerCheckpoint(playerid, 45.6651,35.6647,2.1518, 5.0);
		            }
		            case 23:
		            {
                        SetPlayerCheckpoint(playerid, 65.9438,-13.9811,1.3468, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 24:
		            {
                        SetPlayerCheckpoint(playerid, 17.1980,-86.7067,1.7758, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 25:
		            {
                        SetPlayerCheckpoint(playerid, -7.0889,-19.7445,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 26:
		            {
                        SetPlayerCheckpoint(playerid, -185.1862,155.1479,6.5185, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 27:
		            {
                        SetPlayerCheckpoint(playerid, -184.7949,-57.7402,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 28:
		            {
                        SetPlayerCheckpoint(playerid, -263.0331,-45.5427,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 29:
		            {
                        SetPlayerCheckpoint(playerid, -34.1614,73.9170,3.1096, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 30:
		            {//drop-off
		                if(JustStarted[playerid] != 1)
		                {
		                	PlayerInfo[playerid][pPayCheck] += cash * 5;
		                	drugsys[DrugAmmount]++;
		                	format(string, sizeof(string), "~w~Added to your paycheck~n~~b~$%d",cash);
		            		GameTextForPlayer(playerid, string, 5000, 1);
		            		SaveDrugSystem();
						}
						else
						{
						    JustStarted[playerid] = 0;
						}
                        SetPlayerCheckpoint(playerid, -255.7015,-3.0833,2.4276, 5.0);
		            }
		            case 31:
		            {
                        SetPlayerCheckpoint(playerid, -171.7835,-59.3110,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 32:
		            {
                        SetPlayerCheckpoint(playerid, -153.4347,143.9473,4.1833, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 33:
		            {
                        SetPlayerCheckpoint(playerid, 49.4775,24.9682,1.8078, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 34:
		            {
                        SetPlayerCheckpoint(playerid, -9.5707,-36.4109,3.1172, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 35:
		            {
                        SetPlayerCheckpoint(playerid, 35.6805,-95.6367,0.6169, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 36:
		            {
                        SetPlayerCheckpoint(playerid, -34.1614,73.9170,3.1096, 5.0);
                        if(JustStarted[playerid] != 0)
                        {
                        	JustStarted[playerid] = 0;
					 	}
		            }
		            case 37:
		            {//last drop-off
	                	PlayerInfo[playerid][pPayCheck] += cash * 5;
	                	drugsys[DrugAmmount]++;
	                	SaveDrugSystem();
                        DisablePlayerCheckpoint(playerid);
                        TogglePlayerControllable(playerid, 0);
                        GameTextForPlayer(playerid, "~w~Use /exit to leave a harvest~n~~b~This is enough for this payday", 5000, 1);
		            }
		        }
		        DrugFarmerPickup[playerid][0]++;
		        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		    }
		}
		return 1;
	}
	if(SmugglerWork[playerid] == 1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        new carid = GetPlayerVehicleID(playerid);
	        if(IsASmuggleCar(carid))
	        {
	            switch (SmugglerWork[playerid])
	            {
	                case 1:
	                {
	                    TogglePlayerControllable(playerid, 0);
	            		SendClientMessage(playerid, COLOR_WHITE, "∂æ∆∑Ω¯ªı≥…π¶, [ π”√]: /exit ¿Îø™∆˚≥µ.");
	            		PlayerInfo[playerid][pDrugs] += SmuggledDrugs[playerid];
	            		format(string, sizeof(string), "~b~%d ~w~grams of drugs imported",SmuggledDrugs[playerid]);
           				GameTextForPlayer(playerid, string, 5000, 1);
	            		DisablePlayerCheckpoint(playerid);
	            		SmuggledDrugs[playerid] = 0;
	            		SmugglerWork[playerid] = 0;
	            		OnPlayerUpdateEx(playerid);
	                }
	            }

	        }
	    }
	    return 1;
	}
	if(PlayerIsSweeping[playerid] == 1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        new carid = GetPlayerVehicleID(playerid);
	        if(IsASweeper(carid))
	        {
	            new cashes=(random(35-10)+10);
	            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	            format(string, sizeof(string), "~g~%d$ ~w~added to your paycheck",cashes);
	            GameTextForPlayer(playerid, string, 5000, 1);
	            DisablePlayerCheckpoint(playerid);
	            PlayerInfo[playerid][pPayCheck] += cashes * 5;
	            new randomss;
		        randomss = random(sizeof(gSweeperPoints));
		        SetPlayerCheckpoint(playerid, gSweeperPoints[randomss][0], gSweeperPoints[randomss][1], gSweeperPoints[randomss][2], 5.0);
	        }
	    }
	    return 1;
	}
	if (InAFoodPlace[playerid] != 0)
	{
		TogglePlayerControllable(playerid, 0);
		switch (InAFoodPlace[playerid])
		{
			case 1: // chicken
			{
				ShowMenuForPlayer(chickenmenu, playerid);
				SafeSetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			case 2: // burger
			{
				ShowMenuForPlayer(burgermenu, playerid);
				SafeSetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			case 3: // pizza
			{
				ShowMenuForPlayer(pizzamenu, playerid);
				SafeSetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			case 4: // donut
			{
				ShowMenuForPlayer(donutshop, playerid);
				SafeSetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
				SetPlayerFacingAngle(playerid, 280);
			}
		}
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if(IsOnTutorial[playerid] == 1)
	{
	    new Float:X, Float:Y, Float:Z;
	    GetPlayerPos(playerid, X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, 2, 1612.324,-2330.167,13.5469))
		{
      		DisablePlayerCheckpoint(playerid);
      		new TutStart[] = "ΩÃ≥Ãø™ º¡À\nƒ„»Áπ˚”–»Œ∫ŒŒ Ã‚ƒ„ø…“‘/n–¬ ÷∆µµ¿¡ƒÃÏªÚ /askq —ØŒ π‹¿Ì‘±.\n»Áπ˚ƒ„Õ¨“‚/rulesµƒÀ˘”–πÊ‘Ú.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
		    ShowPlayerDialog(playerid,255,DIALOG_STYLE_MSGBOX,"------------ΩÃ≥Ãø™ º------------",TutStart,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1689.5321,-2239.2610,-2.7107))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutAirport[] = "ƒ„œ÷‘⁄ «‘⁄¬Â…£Õ–Àπª˙≥°¡À\n‘⁄’‚¿Ô£¨ƒ„ø…“‘∑…µΩ¡Ì“ª∏ˆ≥« –..…ı÷¡ø…“‘‘⁄ƒ≥–©µÿ«¯Ã¯…°°£\n»Áπ˚ƒ„œÎ»•¡Ì“ª∏ˆ≥« –ªÚ’ﬂÃ¯…°«Î◊ﬂΩ¯Ωµ¬‰…°.\n√ø¥Œ∑…––ƒ„Ω´Ω¯»Î“ªº‹∑…ª˙µƒƒ⁄≤ø,’‚ ±ƒ„–Ë“™µ»¥˝∑…ª˙µΩ¥Ôƒ„“™»•µƒµÿ∑Ωœ¬∑…ª˙.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,256,DIALOG_STYLE_MSGBOX,"------------ª˙≥°------------",TutAirport,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1480.3043,-1739.3135,13.5469))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutCityHall[] = "ƒ„œ÷‘⁄ «‘⁄ –’˛Ã¸√≈ø⁄¡À\n’‚ « –’˛Ã¸,ƒ„ø…“‘‘⁄’‚¿Ô’“µΩπ§◊˜≤¢«“–Ë“™‘⁄’‚¿Ô…œÀ∞.\n»Áπ˚ƒ„œÎ’“µΩ“ª∑›∫œ∑®π§◊˜,ƒ„–Ë“™µΩ –’˛Ã¸µƒ«∞Ã®∞Ï¿Ì ÷–¯.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,257,DIALOG_STYLE_MSGBOX,"------------ –’˛Ã¸------------",TutCityHall,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1547.4700,-1675.7671,14.0981))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutLSPD[] = "ƒ„œ÷‘⁄ «‘⁄æØ≤Ïæ÷√≈ø⁄¡À\n’‚ «æØ≤Ïæ÷ «À˘”–æØ≤Ï…œ∞‡µƒµÿ∑Ω.\n»Áπ˚ƒ„”ˆµΩ¿ßƒ—,ƒ„ø…“‘÷±Ω”≤¶¥ÚµÁª∞:911 ◊™æØæ÷—∞«Û∞Ô÷˙.\n»Áπ˚ƒ„œÎ≥…Œ™“ª∏ˆæØ≤Ï«Î‘⁄¬€Ã≥…Í«Î.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
		    ShowPlayerDialog(playerid,258,DIALOG_STYLE_MSGBOX,"------------æØ≤Ïæ÷------------",TutLSPD,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1463.3116,-1023.6773,23.8331))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutBank[] = " ƒ„œ÷‘⁄ «‘⁄“¯––√≈ø⁄¡À.\nƒ„ø…“‘‘⁄’‚¿Ô¥Ê«Æ∫Õª„øÓ∏¯±»À,“¯––ª·Œ™ƒ„±£π‹ƒ„µƒ«Æ≤∆,ºı…Ÿ¡À±ª¥ÚΩŸµƒ∑Áœ’.\n’‚¿Ô≤ª»›–Ì–Ø¥¯»Œ∫ŒŒ£œ’µƒŒ‰∆˜,∏∫‘Œ‰∆˜Ω´ª·±ª ÿŒ¿√ª ’.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,259,DIALOG_STYLE_MSGBOX,"------------“¯––------------",TutBank,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1364.3809,-1279.9447,13.5469))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutAmmu[] = "ƒ„œ÷‘⁄ «‘⁄Œ‰∆˜µÍ√≈ø⁄¡À.\n‘⁄’‚¿Ôƒ„ø…“‘π∫¬ÚŒ‰∆˜,∫Õ—µ¡∑Œ‰∆˜ººƒ‹.\n»Ù“™—µ¡∑Œ‰∆˜«Î…œ2¬•.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,260,DIALOG_STYLE_MSGBOX,"------------Œ‰∆˜—µ¡∑-Œ‰∆˜µÍ ------------",TutAmmu,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1178.4044,-1323.0798,14.1184))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutHospital[] = "’‚¿Ô «“Ω‘∫£¨÷Œ¡∆…À’ﬂµƒµÿ∑Ω.\n‘⁄’‚¿Ôø…“‘÷Œ”˙ƒ„µƒº≤≤°£¨»√ƒ„µƒ…ÌÃÂ∏¸º”Ω°øµ.\n»Áπ˚ƒ„”–ΩÙº±«Èøˆø…“‘≤¶¥Ú£∫'911'¡™œµ“Ω‘∫.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
		    ShowPlayerDialog(playerid,261,DIALOG_STYLE_MSGBOX,"------------“Ω‘∫------------",TutHospital,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 2229.1575,-1727.0540,13.5469))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutGym[] = "’‚¿Ô «Ω°…Ìµƒ∫√µÿ∑Ω£¨º”«øƒ„µƒÃÂ÷ \n‘⁄’‚¿Ôƒ„ø…“‘—ßµΩ–¬µƒ≥‡ ÷≤´∂∑∑Á∏Ò.\n≈‡—µª·ª®∑—ƒ„“ª–©«Æµ´ «’‚—˘ª·»√ƒ„±‰µ√∏¸«ø◊≥.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,262,DIALOG_STYLE_MSGBOX,"------------Ω°…Ì∑ø ------------",TutGym,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 2243.9365,-1660.2887,15.2879))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutBinco[] = "’‚¿Ô «∑˛◊∞µÍ.\nƒ„ø…“‘‘⁄’‚¿Ôπ∫¬Ú◊‘º∫œ≤ª∂µƒ∆§∑Ù.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
      		ShowPlayerDialog(playerid,263,DIALOG_STYLE_MSGBOX,"------------∑˛◊∞µÍ------------",TutBinco,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 483.6973,-1489.8641,20.0528))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutRPC[] = " ’‚¿Ô «≥£øÕÕÊº“–›œ¢ “.\n’‚¿Ô «Œ“√«∂‘¥˝≥£‘⁄’‚¿Ô…˙ªÓµƒ»À√«◊º±∏µƒ.\nƒ„»Áπ˚ «≥£øÕÕÊº“ƒ„ªπƒ‹Ãÿ±ªÒµ√“ª–©∂ÓÕ‚µƒ»®œﬁ.\nƒ„œÎ≥…Œ™≥£øÕÕÊº“√¥(ƒ„µƒ‘⁄œﬂ ±º‰¥ÔµΩ1ÃÏº¥ø…)\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,264,DIALOG_STYLE_MSGBOX,"------------≥£øÕ–›œ¢ “ ------------",TutRPC,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 555.0895,-1261.9196,17.2422))
		{
		    DisablePlayerCheckpoint(playerid);
			new TutCars[] = " ’‚¿Ô «GROTTI∆˚≥µœ˙ €÷––ƒ.\nGROTTI∆˚≥µœ˙ €÷––ƒ «’‚¿Ô◊Ó¥Ûµƒ∆˚≥µΩª“◊ –≥°.\nƒ„ø…“‘‘⁄’‚¿Ôπ∫¬Úƒ„œ≤ª∂µƒ≥µªÚ’ﬂ≥ˆ €ƒ„µƒ≥µ.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,265,DIALOG_STYLE_MSGBOX,"------------∆˚≥µœ˙ €÷––ƒ------------",TutCars,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1510.0883,-1430.9789,13.5469))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutFbi[] = "’‚¿Ô «¡™∞Óµ˜≤Èæ÷.\n‘⁄’‚¿Ôƒ„ø…“‘”ÎFBIµƒ»À‘±º˚√Ê£¨¿¥¥Úª˜∑∏◊Ô.\n’‚¿Ô”–’˚∆Îµƒæ¸∂”∫Õ≥ˆ…´µƒµ˜≤È‘±.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,266,DIALOG_STYLE_MSGBOX,"------------¡™∞Óµ˜≤Èæ÷------------",TutFbi,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 2048.8523,-1900.5702,13.5538))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutLicenses[] = "’‚¿Ô «÷¥’’÷––ƒ.\n‘⁄’‚¿Ôƒ„ø…“‘∞Ï¿Ì∏˜÷÷ΩªÕ®÷¥’’.\n’‚—˘ƒ„≤≈ø…“‘ π”√œ‡πÿΩªÕ®π§æﬂ.\n\n\nœ÷‘⁄»√Œ“√«ºÃ–¯µƒΩÃ≥Ã, «Î—°‘Ò 'ºÃ–¯' <¥ÀΩÃ≥Ã≤ªƒ‹±ª»°œ˚>";
            ShowPlayerDialog(playerid,267,DIALOG_STYLE_MSGBOX,"------------÷¥’’÷––ƒ------------",TutLicenses,"ºÃ–¯","ºÃ–¯");
			PlayerPlaySound(playerid, 1057, X,Y,Z);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2, 1524.1573,-1674.2922,13.5469))
		{
		    DisablePlayerCheckpoint(playerid);
		    new TutEnd[] = "ƒ„¿¥µΩ¡À –÷––ƒ.\n’‚¿Ô «≥« –◊Ó∑±√¶µƒµÿ¥¯.\n“≤”–“ª–©’‚—˘µƒµÿ∑Ω24/7s£¨æ∆∞…£¨∫⁄ –£¨∑«∑®π§◊˜£¨ƒ„ªπ√ª”–º˚π˝°£\n”–“ª–©π§◊˜µ„ «∑«∑®µƒƒ„»ÙœÎ’“µΩÀ˚√««Î»•24/7≥¨ –π∫¬Ú“ª∏ˆGPS≤Âº˛Œ™ƒ„µƒGPS…˝º∂*‘ˆº”’‚–©∑«∑®π§◊˜µ„◊¯±Í*Õ®π˝‘⁄≥µ…œ π”√/gps¿¥’“µΩÀ˚√«.\n\n\nπßœ≤ƒ„ÕÍ≥…¡ÀÀ˘”–ΩÃ≥Ã.";
		    ShowPlayerDialog(playerid,268,DIALOG_STYLE_MSGBOX,"------------ΩÃ≥ÃΩ· ¯ ------------",TutEnd,"ºÃ–¯","ºÃ–¯");
			RingTone[playerid] = 20;
			//‡€ﬂÍ~~//SendClientMessage(playerid, COLOR_YELLOW, "∂Ã–≈: ƒ„ªπ‘⁄Œ™ƒ„µƒGPS√ª”–∑«∑®π§◊˜µ„∂¯∑¢≥Ó√¥?œ÷‘⁄∫√¡À±æπ´ÀæŒ™ƒ„Ã·π©µƒGPS≤Âº˛,»√ƒ„«·À…’“µΩ’‚–©µÿ∑Ω {0FF0F0}24/7≥¨ –≥ˆ €,∑¢º˛»À: ≤ª√˜ (555)");
		}
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid,5,300.5705,-134.0464,1004.0625))
	{
		if(PlayerInfo[playerid][pAmmuTrainTime] == 0)
		{
		    new listitems[] = "1\t«Î—°‘ÒœÓƒø\n2\t ÷«π\n3\tœ˚“Ù ÷«π\n4\t…≥”•\n5\t…¢µØ«π\n6\t∂Ãπ‹…¢µØ«π\n7\t¡¨…‰…¢µØ«π\n8\tTEC9 / MAC 10\n9\tSMG MP5\n10\tAK-47\n11\tM4"
		    ShowPlayerDialog(playerid,0,2,"ƒ„œÎ—µ¡∑ƒƒ—˘Œ‰∆˜?",listitems,"—µ¡∑","»°œ˚");
		    return 1;
		}
		else
		{
		    format(string, sizeof(string), "[¥ÌŒÛ]:ƒ˙±ÿ–Îµ»¥˝ %d √Î£¨≤≈ø…“‘ºÃ–¯—µ¡∑∆‰À˚Œ‰∆˜",PlayerInfo[playerid][pAmmuTrainTime]);
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}

	public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
	{
	    new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new string[128];
		
		
		if(dialogid == 8520)
		{
		    if(response)
		    {
				if(listitem == 0)
		        {
                    SendClientMessage(playerid, COLOR_GREY, "ƒ„œ÷‘⁄¥¶”⁄≤°Œ£◊¥Ã¨,ƒ„ø…“‘œÚ¬∑»À«Ûæ»,∑Ò‘Ú‘⁄200√Î∫ÛΩ´±ªÀÕÕ˘“Ω‘∫");
                    return 1;
				}
				else if(listitem == 1)
		        {
  					new rand;
					KillTimer(KillSpawnTK1[playerid]);
  					KillSpawnStart[playerid] = 0;
   					SetRealMoney(playerid, ScriptMoney[playerid]);
					PlayerInfo[playerid][pDeaths] += 1;
					SetPlayerHealth(playerid, 50.0);
   					SafeSetPlayerInterior(playerid, 3);
      				rand = random(sizeof(gMedicSpawns));
					SafeSetPlayerPos(playerid, gMedicSpawns[rand][0], gMedicSpawns[rand][1], gMedicSpawns[rand][2]); // Warp the player
					SetPlayerFacingAngle(playerid, 0);
   					TogglePlayerControllable(playerid, 0);
      				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~You need to rest now ...", 5000, 3);
        			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
        			if(PlayerInfo[playerid][pRegularRank] == 1)
	        		{
        				SetTimerEx("ReleaseFromHospital", 20000, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pRegularRank] == 2)
   					{
     					SetTimerEx("ReleaseFromHospital", 17500, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pRegularRank] == 3)
   					{
     					SetTimerEx("ReleaseFromHospital", 15000, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pAdmin] >= 1)
   					{
     					SetTimerEx("ReleaseFromHospital", 12500, 0, "i", playerid);
					}
					else if(PlayerInfo[playerid][pAdmin] >= 4)
   					{
      					SetTimerEx("ReleaseFromHospital", 10000, 0, "i", playerid);
					}
					else
					{
    					SetTimerEx("ReleaseFromHospital", 25000, 0, "i", playerid);
					}
   					PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
                    return 1;
				}
			}
		}
		
		if(dialogid == 8521)
		{
		    if(response)
		    {
      			RentbikeGY(playerid);
			}
   			else
			{
			    exitGY(playerid);
			}
			return 1;
		}
		
		if(dialogid == 8522)
		{
		    if(response)
		    {
      			RentcarGY(playerid);
			}
     		else
			{
			    exitGY(playerid);
			}
			return 1;
		}

		if(dialogid == 8523)
		{
		    if(response)
		    {
      			UNrentcar(playerid);
         		RentcarGY(playerid);
			}
			else
			{
			    exitGY(playerid);
			}
			return 1;
		}

		if(dialogid == 8524)
		{
		    if(response)
		    {
      			UNrentbike(playerid);
         		RentbikeGY(playerid);
			}
			else
			{
			    exitGY(playerid);
			}
			return 1;
		}

		if(dialogid == 8525)
		{
		    if(response)
		    {
				if(listitem == 0)
		        {
   			    	PlayerInfo[playerid][pSex] = 1;
   			    	SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„µƒ–‘±Œ™ƒ–.");
					new listitems[] = "{FFFFFF}«Î‘⁄œ¬∑ΩÃÓ–¥ƒ„µƒ≥ˆ…˙»’∆⁄{55EE55}\n∏Ò Ω(»’/‘¬/ƒÍ »Á:7/7/1993)";
					ShowPlayerDialog(playerid,8526,DIALOG_STYLE_INPUT,"ƒ„µƒ≥ˆ…˙»’∆⁄:",listitems,"»∑∂®","»°œ˚");
			    	new maleskin;
			    	maleskin = random(sizeof(CivMalePeds));
			    	SetPlayerSkin(playerid,CivMalePeds[maleskin][0]);
			    	PlayerInfo[playerid][pChar] = CivMalePeds[maleskin][0];
			    	PlayerInfo[playerid][pModel] = CivMalePeds[maleskin][0];
			    	RegistrationStep[playerid] = 2;
                    return 1;
				}
				else if(listitem == 1)
		        {
   			    	PlayerInfo[playerid][pSex] = 2;
   			    	SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„µƒ–‘±Œ™≈Æ.");
					new listitems[] = "{FFFFFF}«Î‘⁄œ¬∑ΩÃÓ–¥ƒ„µƒ≥ˆ…˙»’∆⁄{55EE55}\n∏Ò Ω(»’/‘¬/ƒÍ »Á:7/7/1993)";
					ShowPlayerDialog(playerid,8526,DIALOG_STYLE_INPUT,"ƒ„µƒ≥ˆ…˙»’∆⁄:",listitems,"»∑∂®","»°œ˚");
			    	new femaleskin;
			    	femaleskin = random(sizeof(CivFemalePeds));
			    	SetPlayerSkin(playerid, CivFemalePeds[femaleskin][0]);
			    	PlayerInfo[playerid][pChar] = CivFemalePeds[femaleskin][0];
			    	PlayerInfo[playerid][pModel] = CivFemalePeds[femaleskin][0];
			    	RegistrationStep[playerid] = 2;
                    return 1;
				}
			}
			else
			{
				new listitems[] = "{FFFFFF}ƒ–\n{FFFFFF}≈Æ";
				ShowPlayerDialog(playerid,8525,DIALOG_STYLE_LIST,"ƒ„µƒ–‘±:",listitems,"»∑∂®","»°œ˚");
			}
		}

	  	if(dialogid == 8526)
		{
		    if(response)
		    {
  				new year, month,day;
				getdate(year, month, day);
	        	new DateInfo[3][20];
				split(inputtext, DateInfo, '/');
				if(year - strvalEx(DateInfo[2]) > 100 || strvalEx(DateInfo[2]) < 1 || strvalEx(DateInfo[2]) >= year)
				{
					new listitems[] = "{FFFFFF}ÃÓ–¥∏Ò Ω¥ÌŒÛ,«Î÷ÿ–¬ÃÓ–¥{55EE55}\n∏Ò Ω(»’/‘¬/ƒÍ »Á:7/7/1993)";
					ShowPlayerDialog(playerid,8526,DIALOG_STYLE_INPUT,"ƒ„µƒ≥ˆ…˙»’∆⁄:",listitems,"»∑∂®","»°œ˚");
			    	return 1;
				}
				new check = year - strvalEx(DateInfo[2]);
				if(check == year)
				{
					new listitems[] = "{FFFFFF}ÃÓ–¥∏Ò Ω¥ÌŒÛ,«Î÷ÿ–¬ÃÓ–¥{55EE55}\n∏Ò Ω(»’/‘¬/ƒÍ »Á:7/7/1993)";
					ShowPlayerDialog(playerid,8526,DIALOG_STYLE_INPUT,"ƒ„µƒ≥ˆ…˙»’∆⁄:",listitems,"»∑∂®","»°œ˚");
			    	return 1;
				}
				if(strvalEx(DateInfo[1]) > month)
				{
			    	check -= 1;
				}
				else if(strvalEx(DateInfo[1]) == month && strval(DateInfo[0]) > day)
				{
			    	check -= 1;
				}
				PlayerInfo[playerid][pAge] = check;
				format(string, sizeof(string), "ƒ„ΩÒƒÍ «%dÀÍ.",PlayerInfo[playerid][pAge]);
				SendClientMessage(playerid, COLOR_YELLOW2, string);
				RegistrationStep[playerid] = 3;
				new listitems[] = "{FFFFFF}√¿÷ﬁ\n{FFFFFF}≈∑÷ﬁ\n{FFFFFF}—«÷ﬁ\n{FFFFFF}∑«÷ﬁ";
				ShowPlayerDialog(playerid,8527,DIALOG_STYLE_LIST,"ƒ„¿¥◊‘ƒ«¿Ô:",listitems,"»∑∂®","»°œ˚");
			}
			else
			{
				new listitems[] = "{FFFFFF}«Î‘⁄œ¬∑ΩÃÓ–¥ƒ„µƒ≥ˆ…˙»’∆⁄{55EE55}\n∏Ò Ω(»’/‘¬/ƒÍ »Á:7/7/1993)";
				ShowPlayerDialog(playerid,8526,DIALOG_STYLE_INPUT,"ƒ„µƒ≥ˆ…˙»’∆⁄:",listitems,"»∑∂®","»°œ˚");
			}
		}

		if(dialogid == 8527)
		{
		    if(response)
		    {
				if(listitem == 0)
		        {
   			    	PlayerInfo[playerid][pOrigin] = 1;
			    	SendClientMessage(playerid, COLOR_YELLOW2, "∫√µƒ,ƒ„¿¥◊‘ √¿÷ﬁ.");
			    	SendClientMessage(playerid, COLOR_LIGHTRED, "∏––ªƒ˙ÃÓ–¥µƒ◊ ¡œ.");
			    	//SendClientMessage(playerid, COLOR_LIGHTRED, "[“∆√Òæ÷œ˚œ¢]:ƒ„œ÷‘⁄±ªÀÕÕ˘LSª˙≥°...");
					RegistrationStep[playerid] = 0;
					PlayerInfo[playerid][pTut] = 1;
                	PlayerInfo[playerid][pPos_x] = 1612.324;
					PlayerInfo[playerid][pPos_y] = -2330.167;
					PlayerInfo[playerid][pPos_z] = 13.5469;
					MedicBill[playerid] = 0;
					SetPlayerSpawn(playerid);
					TogglePlayerControllable(playerid, 1);
					SafeGivePlayerMoney(playerid, 500);
                    return 1;
				}
				else if(listitem == 1)
		        {
			    	PlayerInfo[playerid][pOrigin] = 2;
			    	SendClientMessage(playerid, COLOR_YELLOW2, "∫√µƒ,ƒ„¿¥◊‘ ≈∑÷ﬁ.");
			    	SendClientMessage(playerid, COLOR_LIGHTRED, "∏––ªƒ˙ÃÓ–¥µƒ◊ ¡œ.");
   			    	//SendClientMessage(playerid, COLOR_LIGHTRED, "[“∆√Òæ÷œ˚œ¢]:ƒ„œ÷‘⁄±ªÀÕÕ˘LSª˙≥°...");
					RegistrationStep[playerid] = 0;
					PlayerInfo[playerid][pTut] = 1;
					PlayerInfo[playerid][pPos_x] = 1612.324;
					PlayerInfo[playerid][pPos_y] = -2330.167;
					PlayerInfo[playerid][pPos_z] = 13.5469;
					MedicBill[playerid] = 0;
					SetPlayerSpawn(playerid);
					TogglePlayerControllable(playerid, 1);
					SafeGivePlayerMoney(playerid, 500);
                    return 1;
				}
				else if(listitem == 2)
		        {
			    	PlayerInfo[playerid][pOrigin] = 3;
			    	SendClientMessage(playerid, COLOR_YELLOW2, "∫√µƒ,ƒ„¿¥◊‘ —«÷ﬁ.");
			    	SendClientMessage(playerid, COLOR_LIGHTRED, "∏––ªƒ˙ÃÓ–¥µƒ◊ ¡œ.");
			    	//SendClientMessage(playerid, COLOR_LIGHTRED, "[“∆√Òæ÷œ˚œ¢]:ƒ„œ÷‘⁄±ªÀÕÕ˘LSª˙≥°...");
					RegistrationStep[playerid] = 0;
					PlayerInfo[playerid][pTut] = 1;
					PlayerInfo[playerid][pPos_x] = 1612.324;
					PlayerInfo[playerid][pPos_y] = -2330.167;
					PlayerInfo[playerid][pPos_z] = 13.5469;
					MedicBill[playerid] = 0;
					SetPlayerSpawn(playerid);
					TogglePlayerControllable(playerid, 1);
					SafeGivePlayerMoney(playerid, 500);
                    return 1;
				}
				else if(listitem == 3)
		        {
   			    	PlayerInfo[playerid][pOrigin] = 4;
			    	SendClientMessage(playerid, COLOR_YELLOW2, "∫√µƒ,ƒ„¿¥◊‘ ∑«÷ﬁ.");
			    	SendClientMessage(playerid, COLOR_LIGHTRED, "∏––ªƒ˙ÃÓ–¥µƒ◊ ¡œ.");
			    	//SendClientMessage(playerid, COLOR_LIGHTRED, "[“∆√Òæ÷œ˚œ¢]:ƒ„œ÷‘⁄±ªÀÕÕ˘LSª˙≥°...");
					RegistrationStep[playerid] = 0;
					PlayerInfo[playerid][pTut] = 1;
					PlayerInfo[playerid][pPos_x] = 1612.324;
					PlayerInfo[playerid][pPos_y] = -2330.167;
					PlayerInfo[playerid][pPos_z] = 13.5469;
                	MedicBill[playerid] = 0;
					SetPlayerSpawn(playerid);
					TogglePlayerControllable(playerid, 1);
					SafeGivePlayerMoney(playerid, 500);
                    return 1;
				}
			}
			else
			{
				new listitems[] = "{FFFFFF}√¿÷ﬁ\n{FFFFFF}≈∑÷ﬁ\n{FFFFFF}—«÷ﬁ\n{FFFFFF}∑«÷ﬁ";
				ShowPlayerDialog(playerid,8527,DIALOG_STYLE_LIST,"ƒ„¿¥◊‘ƒ«¿Ô:",listitems,"»∑∂®","»°œ˚");
			}
		}

		if(dialogid == 8528)
		{
		    if(response)
		    {
	    		switch(listitem)
	    		{
	        		case 0:
	        		{
	        		    GettingJob[playerid] = 1;
       					new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ’ÏÃΩ, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ’ÏÃΩ√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
	        			//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ’ÏÃΩ, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
	    				//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
		   				//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ’ÏÃΩ, º¸»Î /accept job.");
	    				//TogglePlayerControllable(playerid,1);
		 			}
		 			case 1:
		 			{
		 	    		//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ¬… ¶, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ¬… ¶, º¸»Î /accept job.");
						GettingJob[playerid] = 2;
 						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ¬… ¶, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ¬… ¶√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
					case 2:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∑˛ŒÒ‘±, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ∑˛ŒÒ‘±, º¸»Î /accept job.");
						GettingJob[playerid] = 6;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∑˛ŒÒ‘±, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ∑˛ŒÒ‘±√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");

						//TogglePlayerControllable(playerid,1);
					}
					case 3:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ »≠ª˜ ÷, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ »≠ª˜ ÷, º¸»Î 1						.");
						GettingJob[playerid] = 12;
                        new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ »≠ª˜ ÷, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ »≠ª˜ ÷√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
 					case 4:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ø®≥µÀæª˙, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ø®≥µÀæª˙, º¸»Î /accept job.");
						GettingJob[playerid] = 16;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ø®≥µÀæª˙, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ø®≥µÀæª˙√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
  					case 5:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≈©√Ò, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ≈©√Ò, º¸»Î /accept job.");
						GettingJob[playerid] = 18;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≈©√Ò, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ≈©√Ò√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
   					case 6:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ Ãÿºº—›‘±, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ Ãÿºº—›‘±, º¸»Î /accept job.");
						GettingJob[playerid] = 11;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ Ãÿºº—›‘±, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ Ãÿºº—›‘±√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
	        		case 7:
	        		{
	        			//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≥ˆ◊‚≥µÀæª˙, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
	    				//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
		   				//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ≥ˆ◊‚≥µÀæª˙, º¸»Î /accept job.");
	    				GettingJob[playerid] = 13;
	    				new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≥ˆ◊‚≥µÀæª˙, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ≥ˆ◊‚≥µÀæª˙√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
	    				//TogglePlayerControllable(playerid,1);
		 			}
		 			case 8:
		 			{
		 	    		//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ π´≥µÀæª˙, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ π´≥µÀæª˙, º¸»Î /accept job.");
						GettingJob[playerid] = 14;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ π´≥µÀæª˙, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ π´≥µÀæª˙√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
					case 9:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ±®ÕØ, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ±®ÕØ, º¸»Î /accept job.");
						GettingJob[playerid] = 15;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ±®ÕØ, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ±®ÕØ√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
					case 10:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≈˚»¯µÍÕ‚ÀÕ‘±, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ≈˚»¯µÍÕ‚ÀÕ‘±, º¸»Î /accept job.");
						GettingJob[playerid] = 17;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ≈˚»¯µÍÕ‚ÀÕ‘±, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ≈˚»¯µÍÕ‚ÀÕ‘±√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
 					case 11:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ µ¿¬∑«Â…®π§, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ µ¿¬∑«Â…®π§, º¸»Î /accept job.");
						GettingJob[playerid] = 21;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ µ¿¬∑«Â…®π§, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ µ¿¬∑«Â…®π§√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
  					case 12:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∆˚≥µ–ﬁ¿Ìπ§, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ∆˚≥µ–ﬁ¿Ìπ§, º¸»Î /accept job.");
						GettingJob[playerid] = 7;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ∆˚≥µ–ﬁ¿Ìπ§, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ∆˚≥µ–ﬁ¿Ìπ§√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
   					case 13:
					{
   						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ±£Ô⁄, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.");
						//SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.");
						//SendClientMessage(playerid, COLOR_WHITE, "* »Áπ˚ƒ„»∑∂®“™≥…Œ™“ª√˚ ±£Ô⁄, º¸»Î /accept job.");
						GettingJob[playerid] = 8;
						new listitems[] = "* »Áπ˚ƒ„œÎ≥…Œ™“ª√˚ ±£Ô⁄, ≤¢ªÒµ√5–° ±µƒ∫œÕ¨.\n* ƒ„ ◊œ»–Ë“™«©∂©’‚∑›∫œÕ¨,“‘∫Û‘⁄ƒ„–Ë“™¥«÷∞ ±ª·–Ë“™”√µΩ.\nƒ„»∑∂®“™≥…Œ™“ª√˚ ±£Ô⁄√¥?";
		    			ShowPlayerDialog(playerid,8530,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
						//TogglePlayerControllable(playerid,1);
					}
				}
				return 1;
			}
		}

		if(dialogid == 8529)
		{
 			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
		    if(response)
		    {
	    		PlayerPlaySound(playerid, 1057, X,Y,Z);
		    	if(PlayerInfo[playerid][pJob] > 0)
		    	{
		        	if(PlayerInfo[playerid][pRegularRank] > 0)
		        	{
		            	if(PlayerInfo[playerid][pContractTime] >= 2)
						{
					    	SendClientMessage(playerid, COLOR_WHITE, "* ƒ„“—æ≠Ω‚≥˝¡Àƒ„œ÷‘⁄µƒπ§◊˜∫œÕ¨.");
					    	PlayerInfo[playerid][pJob] = 0;
					    	PlayerInfo[playerid][pChar] = 0;
					    	PlayerInfo[playerid][pContractTime] = 0;
					    	SetPlayerToTeamColor(playerid);
						}
						else
						{
						    	new chours = 2 - PlayerInfo[playerid][pContractTime];
							    format(string, sizeof(string), "* ƒ„ªπ”–%d∏ˆ–° ±µƒπ§◊˜∫œ‘º,≤ªƒ‹Ω‚≥˝π§◊˜.", chours / 2);
								SendClientMessage(playerid, COLOR_WHITE, string);
						}
     				}
        			else
		        	{
						if(PlayerInfo[playerid][pContractTime] >= 10)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "* ƒ„“—æ≠Ω‚≥˝¡Àƒ„œ÷‘⁄µƒπ§◊˜∫œÕ¨.");
						    PlayerInfo[playerid][pJob] = 0;
						    PlayerInfo[playerid][pChar] = 0;
						    PlayerInfo[playerid][pContractTime] = 0;
						    SetPlayerToTeamColor(playerid);
						}
						else
						{
						    new chours = 10 - PlayerInfo[playerid][pContractTime];
						    format(string, sizeof(string), "* ƒ„ªπ”–%d∏ˆ–° ±µƒπ§◊˜∫œ‘º,≤ªƒ‹Ω‚≥˝π§◊˜.", chours / 2);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–“ª∑›π§◊˜ƒÿ!");
				}
			}
			else
			{
				PlayerPlaySound(playerid, 1057, X,Y,Z);
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„»°œ˚¡À!");
			}
			return 1;
		}



		if(dialogid == 8530)
		{
 			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
		    if(response)
		    {
	    		PlayerPlaySound(playerid, 1057, X,Y,Z);
			    if(GettingJob[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„µ√µΩ’‚∑›π§◊˜¡À,≤¢«“«©∂©¡À“ª∏ˆ5–° ±µƒπ§◊˜∫œÕ¨.");
			        SendClientMessage(playerid, COLOR_WHITE, "* πßœ≤ƒ„µ√µΩ¡À“ª∑›–¬π§◊˜, ‰»Î/help≤Èø¥ƒ„µƒπ§◊˜√¸¡Ó.");
			        PlayerInfo[playerid][pJob] = GettingJob[playerid];
			        GettingJob[playerid] = 0;
			        SetPlayerToTeamColor(playerid);
			        if (PlayerInfo[playerid][pAchievement17] == 0)
					{
					    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Finally, a Job!! (17) ~n~~n~~w~you won ~g~$333");
	    				ShowAchievement(playerid);
						SafeGivePlayerMoney(playerid, 333);
						PlayerInfo[playerid][pAchievement17] = 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–‘⁄π§◊˜µƒµÿ∑Ω!");
			        //return 1;
			    }
			}
			else
			{
				PlayerPlaySound(playerid, 1057, X,Y,Z);
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„»°œ˚¡À!");
			}
			return 1;
		}


		if(dialogid == 8531)
		{
		    if(response)
		    {
	    		switch(listitem)
	    		{
			        case 0:
			        {
			      	    if(PlayerInfo[playerid][pPassport] == 0) return SendClientMessage(playerid, COLOR_GREY,"*  ◊œ»ƒ„–Ë“™“ª±æª§’’≤≈ø…“‘∞Ï¿Ì÷¥’’{FFFFF0}ª§’’‘⁄ –’˛Ã¸µƒª§’’øº ‘µ„øº»°!!");
						if(IsPlayerInRangeOfPoint(playerid, 3,1490.3195,1305.6976,1093.2964))
			          	{
			            	if(PlayerInfo[playerid][pCarLic] == 0)
							{
							    if(GetPlayerMoney(playerid) < 3500)
							    {
			             			SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ∞Ï¿Ìº› ª÷¥’’");
			             			return 1;
								}
								else
								{
			             			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ƒ„∞Ï¿Ì¡Àº› ª÷¥’’ª∞∑— $3, 500");
			             			SafeGivePlayerMoney(playerid, - 3500);
			             			PlayerInfo[playerid][pCarLic] = 1;
			             			OnPlayerUpdateEx(playerid);
									new y, m, d;
									new h,mi,s;
									getdate(y,m,d);
									gettime(h,mi,s);
									format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buydriving",d,m,y,h,mi,s,sendername);
									CommandLog(string);
								}
							}
							else
							{
								SendClientMessage(playerid, COLOR_LIGHTBLUE, " ƒ„“—æ≠”–º› ª÷¥’’¡À");
								return 1;
							}
						}
				 	}
		    		case 1:
			        {
			       	    if(PlayerInfo[playerid][pPassport] == 0) return SendClientMessage(playerid, COLOR_GREY,"*  ◊œ»ƒ„–Ë“™“ª±æª§’’≤≈ø…“‘∞Ï¿Ì÷¥’’{FFFFF0}ª§’’‘⁄ –’˛Ã¸µƒª§’’øº ‘µ„øº»°!!");
						if(IsPlayerInRangeOfPoint(playerid, 3,1490.3195,1305.6976,1093.2964))
			          	{
			            	if(PlayerInfo[playerid][pFlyLic] == 0)
							{
							    if(GetPlayerMoney(playerid) < 10500)
							    {
			             		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ∞Ï¿Ì∑…––÷¥’’");
			             		    return 1;
			             		}
			             		else
			             		{
			             			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ƒ„∞Ï¿Ì∑…––÷¥’’ª®∑—¡À $10, 500");
			             			SafeGivePlayerMoney(playerid, - 10500);
			             			PlayerInfo[playerid][pFlyLic] = 1;
			             			OnPlayerUpdateEx(playerid);
									new y, m, d;
									new h,mi,s;
									getdate(y,m,d);
									gettime(h,mi,s);
									format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buyflying",d,m,y,h,mi,s,sendername);
									CommandLog(string);
			             		}
							}
							else
							{
								SendClientMessage(playerid, COLOR_LIGHTBLUE, " ƒ„“—Ω¸”–∑…––÷¥’’¡À");
								return 1;
							}
						}
				 	}
				 	case 2:
			        {
			       	    if(PlayerInfo[playerid][pPassport] == 0) return SendClientMessage(playerid, COLOR_GREY,"*  ◊œ»ƒ„–Ë“™“ª±æª§’’≤≈ø…“‘∞Ï¿Ì÷¥’’{FFFFF0}ª§’’‘⁄ –’˛Ã¸µƒª§’’øº ‘µ„øº»°!!");
						if(IsPlayerInRangeOfPoint(playerid, 3,1490.3195,1305.6976,1093.2964))
			          	{
			            	if(PlayerInfo[playerid][pBoatLic] == 0)
							{
							    if(GetPlayerMoney(playerid) < 5500)
							    {
							        SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ∞Ï¿Ì∫Ω∫£÷¥’’");
							        return 1;
							    }
							    else
							    {
			             			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ƒ„∞Ï¿Ì¡À∫Ω∫£÷¥’’ª®∑—¡À$5, 500");
			             			SafeGivePlayerMoney(playerid, - 5500);
			             			PlayerInfo[playerid][pBoatLic] = 1;
			             			OnPlayerUpdateEx(playerid);
									new y, m, d;
									new h,mi,s;
									getdate(y,m,d);
									gettime(h,mi,s);
									format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buysailing",d,m,y,h,mi,s,sendername);
									CommandLog(string);
			             		}
							}
							else
							{
								SendClientMessage(playerid, COLOR_LIGHTBLUE, " ƒ„“—æ≠”–∫Ω∫£÷¥’’¡À");
								return 1;
							}
						}
				 	}
				}
			}
            else{SendClientMessage(playerid, COLOR_GREY, "** ƒ„»°œ˚¡À!");}
            return 1;
		}

		if(dialogid == 8532)
		{
		    if(response)
		    {
                if(OnOfficerTest[playerid] == 0)
                {
                    if(PlayerInfo[playerid][pCopLic] == 0)
                    {
                        if(PlayerInfo[playerid][pOfficerTime] == 0)
                        {
                            if(PlayerInfo[playerid][pCarLic] == 1 && PlayerInfo[playerid][pPassport] == 1)
                            {
				                ClearChatbox(playerid, 10);
				                TestStep[playerid] = 1;
							    SendClientMessage(playerid, COLOR_YELLOW,"1 - Ω«…´∞Á—›¥˙±Ì ≤√¥ƒÿ?");
							    ClearChatbox(playerid, 4);
							    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
							    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
							    SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ““™œÒ“ª∏ˆ∫œ∑®µƒπ´√Ò,◊Ò ÿ’‚¿ÔµƒπÊ‘Ú.");
							    SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
							    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
							    OnOfficerTest[playerid] = 1;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GRAD1, "±ÿ–Î «∫œ∑® –√Ò≤¢–Ë“™≥÷”–º›’’!");
								return 1;
							}
						}
						else
						{
						    format(string, sizeof(string),"* ƒ„–Ë“™µ»¥˝ %d ∑÷÷”,‘Ÿø™ º–¬µƒ≤‚ ‘...",(PlayerInfo[playerid][pPassportTime] / 60))
							SendClientMessage(playerid, COLOR_GRAD1, string);
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„“—æ≠”–“ª∏ˆª§’’¡À,≤ª”√‘Ÿ¥Œøº»°¡À...");
						return 1;
					}
				}
			}
			return 1;
		}

		if(dialogid == 8533)
		{
		    if(response)
		    {
                if(OnPassportTest[playerid] == 0)
                {
                    if(PlayerInfo[playerid][pPassport] == 0)
                    {
                        if(PlayerInfo[playerid][pPassportTime] == 0)
                        {
			                ClearChatbox(playerid, 10);
			                TestStep[playerid] = 1;
						    SendClientMessage(playerid, COLOR_YELLOW,"1 - Ω«…´∞Á—›¥˙±Ì ≤√¥ƒÿ?");
						    ClearChatbox(playerid, 4);
						    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
						    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
						    SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ““™œÒ“ª∏ˆ∫œ∑®µƒπ´√Ò,◊Ò ÿ’‚¿ÔµƒπÊ‘Ú.");
						    SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
						    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
						    OnPassportTest[playerid] = 1;
						    GameTextForPlayer(playerid, "~w~Type ~y~/canceltest ~w~if you wish to finish the test ~g~(No Fees)",10000,4);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /taketest",d,m,y,h,mi,s,sendername);
							CommandLog(string);
						}
						else
						{
						    format(string, sizeof(string),"* ƒ„–Ë“™µ»¥˝ %d ∑÷÷”,‘Ÿø™ º–¬µƒ≤‚ ‘...",(PlayerInfo[playerid][pPassportTime] / 60))
							SendClientMessage(playerid, COLOR_GRAD1, string);
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„“—æ≠”–“ª∏ˆª§’’¡À,≤ª”√‘Ÿ¥Œøº»°¡À...");
						return 1;
					}
				}
			}
			return 1;
		}

		if(dialogid == 8534)
		{
		    if(response)
		    {
            	if(PlayerInfo[playerid][pGunLic] == 0)
				{
				    if(PlayerInfo[playerid][pPassport] == 1)
				    {
					    if(GetPlayerMoney(playerid) < 20500)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ∞Ï¿ÌŒ‰∆˜–Ìø…÷§");
					        return 1;
					    }
					    else
					    {
	             			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ƒ„∞Ï¿ÌŒ‰∆˜–Ìø…÷§ª®∑—¡À$20, 500");
	             			SafeGivePlayerMoney(playerid, - 20500);
	             			PlayerInfo[playerid][pGunLic] = 1;
	             			OnPlayerUpdateEx(playerid);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buygunlic",d,m,y,h,mi,s,sendername);
							CommandLog(string);
	             		}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "  ◊œ»ƒ„–Ë“™“ª±æª§’’≤≈ø…“‘∞Ï¿ÌŒ‰∆˜–Ìø…÷§{FFFFF0}ª§’’‘⁄ –’˛Ã¸µƒª§’’øº ‘µ„øº»°");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " ƒ„“—æ≠”–¡ÀŒ‰∆˜–Ìø…÷§");
					return 1;
				}
				return 1;
			}
		}
		//8535“—±ª π”√

		if(dialogid == 8536)
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0:
					{
	        			SendClientMessage(playerid, COLOR_GRAD6,"::’ ªß::");
	        			SendClientMessage(playerid, COLOR_GREEN,"::{FFFFF0}/stats[’Àªß◊¥Ã¨◊ ¡œ]/account[’Àªß ⁄»®](»Á:–ﬁ∏ƒ√‹¬Î,√˚≥∆)");
					}
				    case 1:
					{
						SendClientMessage(playerid, COLOR_GRAD6,"::≥£”√::");
						SendClientMessage(playerid, COLOR_GREEN,"1 :: /pay[∏¯«Æ]/charity[æËøÓ]/time[ ±º‰]/buy[π∫¬Ú]/switchkey[ƒ√ªÿ‘ø≥◊]");
						SendClientMessage(playerid, COLOR_GREEN,"2 :: /id[≤Èø¥ÕÊº“√˚◊÷]/drink[∫»]/clothes[“¬∑˛]/doro/wo/doorshout/buygun[¬Ú«π]/lock[ø™/À¯]");
						SendClientMessage(playerid, COLOR_GREEN,"3 :: /licenses[÷¥’’]/skill[ººƒ‹]/showlicenses(/sl)[÷¥’’’π æ]/report[±®∏Ê]/atalk[‘⁄œﬂ∞Ô÷˙](/re)port[æŸ±®]");
						SendClientMessage(playerid, COLOR_GREEN,"4 :: /animlist[∂Ø◊˜¡–±Ì]/stopanim[Õ£÷π∂Ø◊˜]/fuel[”Õ±Ì]/cancel[»°œ˚]/accept[Õ¨“‚]/eject[«˝÷œ¬≥µ]/chatmode/lotto[π∫¬Ú≤ ∆±]");
						SendClientMessage(playerid, COLOR_GREEN,"5 :: /fill[º””Õ] /admins (/f)actionlist[◊È÷Ø∆µµ¿]/fightstyle/usedrugs[∑˛”√“©ŒÔ /contract[œ¬µ•∏¯…± ÷]");
						SendClientMessage(playerid, COLOR_GREEN,"6 :: /(wi)ndows[ø™/πÿ≥µ¥∞]/coin[∂™”≤±“] /trunk[∫Û≥µœ‰](/inv)entory[«π–µ±£œ’œ‰]/give[∏¯”Ë]/resetupgrades(50k)[÷ÿ÷√ Ù–‘µ„]");
						SendClientMessage(playerid, COLOR_GREEN,"7 :: /gateopen[¥Úø™¥Û√≈]/sid[’π æ…Ì∑›÷§] /smoke[≥È—Ã]/(sur)render[Õ∂Ωµ]");
				        SendClientMessage(playerid, COLOR_GREEN,"8 :: {FFFFF0}(/o)oc[ ¿ΩÁ¡ƒÃÏ] /me[ª∑æ≥œ˚œ¢]/(ad)vertise[π„∏Ê](/cw)hisper[Àæª˙Àµª∞](/s)hout[¥Û∫∞]/(w)hisper[∂˙”Ô]");
						SendClientMessage(playerid, COLOR_GREEN,"9 :: {FFFFF0}(/b)[µÿ«¯∆µµ¿]/(l)ocal[±æµÿ](/f)action[∞Ô≈…∆µµ¿]/do[∂Ø◊˜]/togfam[πÿ±’º“◊Â∆µµ¿]/togpm[πÿ±’ÀΩ»À∆µµ¿]/togphone[ø™/πÿ ÷ª˙]");
					}
				    case 2:
					{
  						SendClientMessage(playerid, COLOR_GRAD6,"::“¯––::");
						SendClientMessage(playerid, COLOR_GREEN,"::/balance[≤È—Ø¥ÊøÓ]/withdraw[»°øÓ]/deposit[¥ÊøÓ]/wiretransfer[ª„øÓ]/atmwithdraw[ATMª˙Ã·øÓ]");
					}
				    case 3:
					{
  						if (PlayerInfo[playerid][pPnumber] > 0)
						{
							SendClientMessage(playerid, COLOR_WHITE,"*** ÷ª˙∞Ô÷˙***");
							SendClientMessage(playerid, COLOR_GRAD3,"/call 'eg:[¥Ú ÷ª˙] /call 911'[π´π≤«Ûæ»µÁª∞] /ucall[»°œ˚≤¶¥Ú]/pickup[Ω” ÷ª˙]");
							SendClientMessage(playerid, COLOR_GRAD3,"(/h)angup[Ω· ¯Õ®ª∞] /number£®“™‘⁄24/7¿Ô¬Ú£©[µÁª∞±æ] /sms[∑¢∂Ã–≈] ");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE,"ƒ„√ª”– ÷ª˙ƒ„ø…“‘»•27/7π∫¬Ú");
						}
					}
				    case 4:
					{
     					SendClientMessage(playerid, COLOR_WHITE,"***∑øŒ›∞Ô÷˙***");
						SendClientMessage(playerid, COLOR_GRAD3,"/enter[Ω¯»Î] /exit[¿Îø™] /open[…œÀ¯/Ω‚À¯] /home[±Íµ„] /heal[µ˜—¯+HP] /houseupgrade (/hu)[◊∞‰Í] /setrentable[≥ˆ◊‚◊¥øˆ]");
						SendClientMessage(playerid, COLOR_GRAD3,"/evictall[«˝÷»´≤ø∑øøÕ] /evict[÷≥ˆ∑øøÕ] /setrent[…Ë∂®∑øŒ›◊‚Ω] /housewithdraw[∑øŒ›±£œ’œ‰] /store[] /load[] /checksafe[]");
					}
				    case 5:
					{
						SendClientMessage(playerid, COLOR_WHITE,"***± º«∞Ô÷˙***");
						SendClientMessage(playerid, COLOR_GRAD3,"/shownotes[≤Èø¥± º«] /deletenote[…æ≥˝± º«] /createnote[–¬‘ˆ± º«] /givenote[∏¯”Ë± º«]");
					}
				    case 6:
					{
  						SendClientMessage(playerid, COLOR_WHITE,"***◊‚∑ø∞Ô÷˙***");
						SendClientMessage(playerid, COLOR_GRAD3,"/unrent[ÕÀ◊‚] /enter[Ω¯»Î] /exit[¿Îø™] /lock[…œÀ¯] /home[±Íµ„]");
					}
				    case 7:
					{
						SendClientMessage(playerid, COLOR_WHITE,"***≤˙“µ∞Ô÷˙***");
						SendClientMessage(playerid, COLOR_GRAD3,"/bizinfo[≤˙“µ◊ —∂] /bizfee[√≈ø®∑—] /bizname[≤˙“µ√˚◊÷] /prodprice[ ’π∫] /extortion[π…∂´]");
						SendClientMessage(playerid, COLOR_GRAD4,"/enter[Ω¯»Î] /exit[¿Îø™] /open[…œÀ¯/Ω‚À¯] /sellbiz[¬ÙµÙ≤˙“µ] /bizbank[≤˙“µ±£œ’œ‰] /bizwithdraw[≤˙“µ»°«Æ]");
					}
				    case 8:
					{
					    if (PlayerInfo[playerid][pLeader] >= 1 )
					    {
					        SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					        if(PlayerInfo[playerid][pLeader] != 7)
					        {
								SendClientMessage(playerid, COLOR_WHITE,"***¡Ïµº∞Ô÷˙***");
								SendClientMessage(playerid, COLOR_GRAD3,"/invite[—˚«Î] /uninvite[Ãﬂ≥˝] /giverank[…Ë÷√Ω◊º∂]");
							}
							if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 16)
							{
							    SendClientMessage(playerid, COLOR_GRAD3,"/lockhq[∑‚À¯◊‹≤ø]");
							}
							if(PlayerInfo[playerid][pLeader] == 7)
							{
								SendClientMessage(playerid, COLOR_GRAD3,"/govinvite[º“◊Â—˚«Î] /govuninvite[º“◊ÂÃﬂ≥˝] /settax[’˛∏ÆÀ∞ ’] /givetax (∏¯æØ≤Ï“ª–©«Æ)");
							}
							SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚◊È÷Ø¿œ¥Û!");
						}
					}
				    case 9:
					{
				        SendClientMessage(playerid, COLOR_WHITE,"*** IRC∆µµ¿∞Ô÷˙ ***");
				        SendClientMessage(playerid, COLOR_WHITE,"(/irc join [±‡∫≈] ªÚ /irc join [±‡∫≈] [√‹¬Î])  (/irc leave[¿Îø™∆µµ¿])");
						SendClientMessage(playerid, COLOR_WHITE,"(/irc Password [±‡∫≈])  (/irc NeedPass [±‡∫≈])  (/irc Lock [±‡∫≈])");
						SendClientMessage(playerid, COLOR_WHITE,"(/irc Admins[∆µµ¿π‹¿Ì‘±])  (/irc MOTD [∆µµ¿—∂œ¢])  (/irc status [±‡∫≈])  (/i [ƒ⁄»›])");
					}
				    case 10:
					{
						SendClientMessage(playerid, COLOR_WHITE,"***µˆ”„∞Ô÷˙***");
						SendClientMessage(playerid, COLOR_GRAD3,"/fish (µˆ”„/≤∂”„)   /fishes (”„«Âµ•)");
						SendClientMessage(playerid, COLOR_GRAD3,"/throwback (∂™µÙ◊Ó∫Û“ªÃı”„)   /throwbackall(∂™µÙ»´≤ø”„)");
						SendClientMessage(playerid, COLOR_GRAD3,"/releasefish (∑≈…˙”„)");
					}
	    			case 11:
					{
						SendClientMessage(playerid, COLOR_WHITE,"***≈Î‚ø∞Ô÷˙***");
						SendClientMessage(playerid, COLOR_GRAD3,"/cook (≈Î‚ø)   /cooked (≈Î‚ø«Âµ•)");
						SendClientMessage(playerid, COLOR_GRAD3,"/eat (≥‘)");
					}
	    			case 12:
					{
			   			if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14)
						{
			   				SendClientMessage(playerid, COLOR_YELLOW2, ":: …Ωø⁄◊È :: (/r)adio (/jap)aneese /steal");
			   			}
			   			else if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15)
						{
			   				SendClientMessage(playerid, COLOR_YELLOW2, ":: ¥Û»¶∞Ô :: (/r)adio (/rus)sian");
			   			}
			   			else if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
						{
			   				SendClientMessage(playerid, COLOR_YELLOW2, ":: »˝∫œª· :: (/r)adio (/spa)nish /steal");
			   			}
			   			else if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
						{
			   				SendClientMessage(playerid, COLOR_YELLOW2, ":: La Famiglia Sinatra :: /gateopen /tuningopen (/r)adio /italian");
			   			}
			   			else
			   			{
			   			    SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„ƒø«∞≤ª‘⁄»Œ∫Œ∞Ô≈…");
			   			}
					}
	    			case 13:
					{
				        if(IsAPDMember(playerid) && PlayerInfo[playerid][pDBanned] == 0)
						{
				            SendClientMessage(playerid, COLOR_GRAD6, "::æØ≤Ï::");
				   			SendClientMessage(playerid, COLOR_YELLOW2, "/r[∂‘Ω≤ª˙]/d[’˛∏Æ∂‘Ω≤ª˙]/m[¿©“Ù∆˜]/arrest[πÿ—∫]/duty[…œ∞‡]/wanted[Õ®º©√˚µ•]/cu[ ÷ÓÌ]/undercover[Œ±◊∞]/drugtest[∂æ∆∑ºÏ≤‚]");
							SendClientMessage(playerid, COLOR_YELLOW2, "/frisk[À—…Ì]/friskinv[À—±£œ’œ‰]/take[√ª ’]/ticket[∑£µ•]/gov[’˛∏ÆπŸ‘±∆µµ¿]/ram[∆∆√≈]/su[Õ®º©]/drag[¿≠…œ≥µ]/copuntie[Ω‚ø™ ÷ÓÌ]/mir givepassport[∏¯”ËŒ‰∆˜÷¥’’]");
							SendClientMessage(playerid, COLOR_YELLOW2, "/showbadge[œ‘ æª’’¬]/tlc[≤È—Ø¿¥µÁ]/weplicense[Œ‰∆˜÷¥’’]/mdc[∑∏◊Ô◊ ¡œø‚]/ta[µÁª˜]/bk[«Î«Û÷ß‘Æ]/checkspeed[ºÏ≤ÈÀŸ∂»]/breathtest[æ∆æ´ºÏ≤‚]");
							SendClientMessage(playerid, COLOR_YELLOW2, "/bkc[»°œ˚÷ß‘Æ]/crb[¬∑’œ]/rub[«Â≥˝¬∑’œ]/rrball[«Â≥˝À˘”–¬∑’œ]");
				   		}
				   		else if(IsAnFbi(playerid) && PlayerInfo[playerid][pDBanned] == 0)
						{
				   			SendClientMessage(playerid, COLOR_YELLOW2, "::¡™∞Óµ˜≤Èæ÷::");
							SendClientMessage(playerid, COLOR_YELLOW2, " /r[ŒﬁœﬂµÁ] /d[’˛∏Æ∆µµ¿] /m[¿©“Ù∆˜] /su[Õ®º©] /mdc[∑∏◊Ô◊ ¡œø‚] /farrest[æ–¡Ù] /wanted[◊Ô∑∏√˚µ•] /friskinv[À—±£œ’œ‰]");
							SendClientMessage(playerid, COLOR_YELLOW2, " /frisk[À—…Ì] /take[√ª ’] /ticket[∑£µ•] /ram[∆∆√≈] /drag[«ø÷∆…œ≥µ] /copuntie[Ω‚ø™ ÷ÓÌ] /cu[ ÷ÓÌ] /ta[µÁª˜] /showbadge[œ‘ æª’’¬] /agent[Œ‘µ◊] /checkspeed[ºÏ≤ÈÀŸ∂»]");
						   	SendClientMessage(playerid, COLOR_YELLOW2, " /crb[¬∑’œ] /rub[«Â≥˝¬∑’œ] /rrball[«Â≥˝À˘”–¬∑’œ] /gov[’˛∏ÆπŸ‘±∆µµ¿] /duty[…œ∞‡]/mir");
						   	SendClientMessage(playerid, COLOR_YELLOW2, " /tcl /bk[«Î«Û÷ß‘Æ] /bkc[»°œ˚÷ß‘Æ] /breathtest[æ∆æ´ºÏ≤‚] /drugtest[∂æ∆∑ºÏ≤‚] /givepassport[∏¯ª§’’]");
				   		}
				   		else if(IsAnNg(playerid) && PlayerInfo[playerid][pDBanned] == 0)
						{
				            SendClientMessage(playerid, COLOR_YELLOW2, "::æ¸»À::");
				   			SendClientMessage(playerid, COLOR_YELLOW2, " /r[ŒﬁœﬂµÁ] /d[’˛∏Æ∆µµ¿] /m[¿©“Ù∆˜] /su[Õ®º©] /mdc[∑∏◊Ô◊ ¡œø‚] /sarrest[æ–¡Ù] /wanted[◊Ô∑∏√˚µ•] /cu[ ÷ÓÌ] /ta[µÁª˜]");
							SendClientMessage(playerid, COLOR_YELLOW2, " /frisk[À—…Ì] /friskinv[À—±£œ’œ‰] /take[√ª ’] /ticket[∑£µ•] (/gov)ernment[’˛∏ÆπŸ‘±∆µµ¿] /ram[∆∆√≈] /drag[«ø÷∆…œ≥µ] /copuntie[Ω‚ø™ ÷ÓÌ] /duty[…œ∞‡] /checkspeed givepassport");
							SendClientMessage(playerid, COLOR_YELLOW2, " /soldier /crb[¬∑’œ] /rub[«Â≥˝¬∑’œ] /rrball[«Â≥˝À˘”–¬∑’œ] /showbadge[œ‘ æª’’¬]");
							SendClientMessage(playerid, COLOR_YELLOW2, " /tcl /bk[«Î«Û÷ß‘Æ] /bkc[»°œ˚÷ß‘Æ] /breathtest[æ∆æ´ºÏ≤‚] /drugtest[∂æ∆∑ºÏ≤‚] /mir");
				   		}
				   		else if(IsAFreecop(playerid) && PlayerInfo[playerid][pDuty] == 1)
						{
				            SendClientMessage(playerid, COLOR_YELLOW2, "::æØ≤Ï::");
				   			SendClientMessage(playerid, COLOR_YELLOW2, " /r[∂‘Ω≤ª˙] /d[’˛∏Æ∂‘Ω≤ª˙] /m[¿©“Ù∆˜] /su[Õ®º©] /mdc[∑∏◊Ô◊ ¡œø‚] /cu[ ÷ÓÌ] /wanted[◊Ô∑∏√˚µ•]");
							SendClientMessage(playerid, COLOR_YELLOW2, " /bk[«Î«Û÷ß‘Æ] /bkc[»°œ˚÷ß‘Æ] /mir /arrest[æ–¡Ù] /duty[…œ∞‡] /checkspeed");
						}
						else
						{
		    				SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„ƒø«∞≤ª‘⁄æØ≤Ï/FBI/æ¸∂”µƒ◊È÷Ø");
						}
						if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5)
				   		{
							SendClientMessage(playerid, TEAM_VAGOS_COLOR, ":: Law Leader :: /hunter /hydra /rhino /predator /dv /hydrarights /hunterrights /rhinorights /predrights");
						}
					}
	    			case 14:
					{
     					if(PlayerInfo[playerid][pJob] == 1) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-’ÏÃΩ:: /find[’“—∞ƒø±Í]"); }
					    else if(PlayerInfo[playerid][pJob] == 2) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-¬… ¶ :: /free[±£ Õ]"); }
					    else if(PlayerInfo[playerid][pJob] == 3) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-ºÀ≈Æ :: /sex[Ω”øÕ]"); }
					    else if(PlayerInfo[playerid][pJob] == 4) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∂æ∑∑ :: /selldrugs[¬Ù∂æ∆∑] /get drugs[ªÒµ√∂æ∆∑]"); }
					    else if(PlayerInfo[playerid][pJob] == 5) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-Õµ≥µ‘Ù :: /dropcar[Õµ≥µ]"); }
					    else if(PlayerInfo[playerid][pJob] == 6) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∑˛ŒÒ‘± :: /showmenu[œ‘ æ≤Àµ•] /cookuniform[≥¯ ¶÷∆∑˛]"); }
					    else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-–¬Œ≈º«’ﬂ :: /paper[±®÷Ω] /papers[≈˙∑¢±®÷Ω] /live[≤…∑√] /news [–¬Œ≈]"); }
					    else if(PlayerInfo[playerid][pJob] == 7) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∆˚≥µººπ§ :: /repair[–ﬁ≥µ] /refill[º””Õ] /duty[…œ∞‡] /tow"); }
					    else if(PlayerInfo[playerid][pJob] == 8) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-±£Ô⁄ :: /guard[±£ª§]"); }
					    else if(PlayerInfo[playerid][pJob] == 10) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∆˚≥µæ≠œ˙…Ã :: /sellcar[¬Ù∆˚≥µ]"); }
					    else if(PlayerInfo[playerid][pJob] == 11) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-ÃÊ…Ì—›‘± :: /startstunt[ø™ ºÃÿºº] /stopstunt[Õ£÷πÃÿºº]"); }
					    else if(PlayerInfo[playerid][pJob] == 12) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-»≠ª˜ ÷ :: /fight[’Ω∂∑] /boxstats[»≠ª˜◊¥Ã¨]"); }
					    else if(PlayerInfo[playerid][pJob] == 13 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-µƒ øÀæª˙ :: /fare[≥µ∑—] "); }
					    else if(PlayerInfo[playerid][pJob] == 14) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∞Õ øÀæª˙ :: /fare[≥µ∑—]"); }
					    else if(PlayerInfo[playerid][pJob] == 15) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-ÀÕ±®‘± :: /papers[±®÷Ω≤È—Ø] /bring[ƒ√±®÷Ω] /deliver[¬Ù±®]"); }
					    else if(PlayerInfo[playerid][pJob] == 16) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-ø®≥µÀæª˙ :: /buyprods[¬Úªı] /sellprods[¬Ùªı] /load[∂¡»°ªıŒÔ¡ø]"); }
					    else if(PlayerInfo[playerid][pJob] == 17) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-≈˚»¯◊– :: /duty[…œ∞‡] /sellpizza[¬Ù≈˚»¯]"); }
					    else if(PlayerInfo[playerid][pJob] == 18) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-≈©√Ò :: /startharvest[ø™ º ’∏Ó] /stopharvest[Õ£÷π ’∏Ó]"); }
					    else if(PlayerInfo[playerid][pJob] == 19) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∑«∑®≈©√Ò :: /startdrugharvest[ø™ º÷∆∂æ∆∑] /stopdrugharvest[Õ£÷π÷∆∂æ∆∑]"); }
					    else if(PlayerInfo[playerid][pJob] == 20) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-∂æ∆∑◊ﬂÀΩ :: /smuggledrugs[◊ﬂÀΩ∂æ∆∑] /selldrugsto[¬Ú∂æ∆∑]"); }
					    else if(PlayerInfo[playerid][pJob] == 21) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-«ÂΩ‡π§ :: /startsweep[ø™ º«Â…®] /stopsweep[Õ£÷π«Â…®]"); }
					    else if(PlayerInfo[playerid][pJob] == 22) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-≤ƒ¡œ◊ﬂÀΩ :: /smugglemats[◊ﬂÀΩ≤ƒ¡œ] /sellmats[¬Ù≤ƒ¡œ]"); }
					    else if(PlayerInfo[playerid][pJob] == 23) {
					    SendClientMessage(playerid,COLOR_YELLOW2,"::π§◊˜-æ¸ª…Ã»À :: /creategun[÷∆‘Ï«π] /buymats[¬Ú≤ƒ¡œ]"); }
			            else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) {
					    SendClientMessage(playerid,COLOR_YELLOW2,":: …± ÷ :: /portable[…± ÷µÁƒ‘] /findpl[’“—∞ƒø±Í]"); }
					    else {SendClientMessage(playerid,COLOR_YELLOW2,"ƒ„ªπ√ª”–»Œ∫Œπ§◊˜ƒÿ!(ƒ„ø…“‘»• –’˛∏Æ»•’“µΩπ§◊˜)");}
					    if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11){
					    SendClientMessage(playerid,COLOR_YELLOW2,":: ∏®µº‘± :: /startlesson[ø™ º…œøŒ] /stoplesson[Õ£÷π…œøŒ] /givelicense[∑¢÷¥’’]"); }
					}
				}
			}
			else
			{
                SendClientMessage(playerid,COLOR_YELLOW2,"ƒ„πÿ±’¡À∞Ô÷˙≤Àµ•");
			}
			return 1;
		}



		if(dialogid == 6655 && response)
		{
		    if(strlen(inputtext) > 60 && strlen(inputtext) < 6)
				return ShowPlayerDialog(playerid, 6655,DIALOG_STYLE_INPUT, "∑ø◊”√˚≥∆","‘⁄œ¬√ÊµƒøÚ÷–º¸»Î–¬µƒ∑ø◊”√˚≥∆\n◊Ó…Ÿ ‰»Î◊÷∑˚ = 6, ◊Ó¥Û ‰»Î◊÷∑˚ = 60\n≤ªø…“‘…∂“≤≤ª ‰»Î","»∑∂®","»°œ˚");

            if(strfind(inputtext,"~",true) != -1)
			   	return ShowPlayerDialog(playerid, 6655,DIALOG_STYLE_INPUT, "≤˙“µ√˚◊÷","‘⁄œ¬√ÊµƒøÚ÷–º¸»Î–¬µƒ∑ø◊”√˚≥∆\n◊Ó…Ÿ ‰»Î◊÷∑˚ = 6, ◊Ó¥Û ‰»Î◊÷∑˚ = 60\n≤ªø…“‘…∂“≤≤ª ‰»Î ","»∑∂®","»°œ˚");

			new house = PlayerInfo[playerid][pPhousekey];

			strmid(HouseInfo[house][hMessage],inputtext,0,strlen(inputtext),255);
			OnPropTextdrawUpdate(1,house);
		}
		if(dialogid == 6656 && response)
		{
		    if(strlen(inputtext) > 60 && strlen(inputtext) < 6)
				return ShowPlayerDialog(playerid, 6655,DIALOG_STYLE_INPUT, "≤˙“µ√˚◊÷","‘⁄œ¬√ÊµƒøÚ÷–º¸»Î–¬µƒ∑ø◊”√˚≥∆\n◊Ó…Ÿ ‰»Î◊÷∑˚ = 6, ◊Ó¥Û ‰»Î◊÷∑˚ = 60\n≤ªø…“‘…∂“≤≤ª ‰»Î","»∑∂®","»°œ˚");

			if(strfind(inputtext,"~",true) != -1)
			   	return ShowPlayerDialog(playerid, 6655,DIALOG_STYLE_INPUT, "≤˙“µ√˚◊÷","‘⁄œ¬√ÊµƒøÚ÷–º¸»Î–¬µƒ∑ø◊”√˚≥∆\n◊Ó…Ÿ ‰»Î◊÷∑˚ = 6, ◊Ó¥Û ‰»Î◊÷∑˚ = 60\n≤ªø…“‘…∂“≤≤ª ‰»Î","»∑∂®","»°œ˚");

			new bizz = PlayerInfo[playerid][pPbiskey];

			strmid(BizzInfo[bizz][bMessage],inputtext,0,strlen(inputtext),255);
			OnPropTextdrawUpdate(2,bizz);
		}
		
		if(dialogid == 19992)
		{
			if(response)
			{
			    new inter = strval(inputtext);
			    format(string, sizeof(string),"LARP/Vehicles/%d.ini",inter);
			    
				if(!dini_Exists(string))
				{
				    SendClientMessage(playerid, COLOR_GREY,"* Œ¥÷™Œƒº˛!");
                    ShowPlayerDialog(playerid,19990,DIALOG_STYLE_LIST,"—°‘Òƒ„œÎ÷ÿ–¬º”‘ÿµƒŒƒº˛","1\t≥µ¡æŒƒº˛\n2\t∑ø◊”Œƒº˛\n3\tBizzŒƒº˛\n4\tSBizzŒƒº˛","—°‘Ò","»°œ˚");
				}
				else
				{
				    OnPropUpdate(4,inter);
				}
			}
		}
		if(dialogid == 19993)
		{
			if(response)
			{
			    new inter = strval(inputtext);
			    format(string, sizeof(string),"LARP/Properties/%d.ini",inter);

				if(!dini_Exists(string))
				{
				    SendClientMessage(playerid, COLOR_GREY,"* Œ¥÷™Œƒº˛!");
                    ShowPlayerDialog(playerid,19990,DIALOG_STYLE_LIST,"—°‘Òƒ„œÎ÷ÿ–¬º”‘ÿµƒŒƒº˛","1\t≥µ¡æŒƒº˛\n2\t∑ø◊”Œƒº˛\n3\tBizzŒƒº˛\n4\tSBizzŒƒº˛","—°‘Ò","»°œ˚");
				}
				else
				{
				    OnPropUpdate(1,inter);
				}
			}
		}
		if(dialogid == 19994)
		{
			if(response)
			{
  				new inter = strval(inputtext);
			    format(string, sizeof(string),"LARP/Bizzes/%d.ini",inter);

				if(!dini_Exists(string))
				{
				    SendClientMessage(playerid, COLOR_GREY,"* Œ¥÷™Œƒº˛!");
                    ShowPlayerDialog(playerid,19990,DIALOG_STYLE_LIST,"—°‘Òƒ„œÎ÷ÿ–¬º”‘ÿµƒŒƒº˛","1\t≥µ¡æŒƒº˛\n2\t∑ø◊”Œƒº˛\n3\tBizzŒƒº˛\n4\tSBizzŒƒº˛","—°‘Ò","»°œ˚");
				}
				else
				{
				    OnPropUpdate(2,inter);
				}
			}
		}
		if(dialogid == 19995)
		{
			if(response)
			{
			    new inter = strval(inputtext);
			    format(string, sizeof(string),"LARP/SBizzes/%d.ini",inter);

				if(!dini_Exists(string))
				{
				    SendClientMessage(playerid, COLOR_GREY,"* Œ¥÷™Œƒº˛!");
                    ShowPlayerDialog(playerid,19990,DIALOG_STYLE_LIST,"—°‘Òƒ„œÎ÷ÿ–¬º”‘ÿµƒŒƒº˛","1\t≥µ¡æŒƒº˛\n2\t∑ø◊”Œƒº˛\n3\tBizzŒƒº˛\n4\tSBizzŒƒº˛","—°‘Ò","»°œ˚");
				}
				else
				{
				    OnPropUpdate(3,inter);
				}
			}
		}
		if(dialogid == 19990)
		{
		    if(response)
		    {
				if(listitem == 0)
		        {
		            ShowPlayerDialog(playerid, 19992,DIALOG_STYLE_INPUT,"≥µ¡æŒƒº˛","º¸»Îƒ„œÎ÷ÿ–¬º”‘ÿµƒ≥µ¡æID \n (0-599)","»∑∂®","»°œ˚");
				}
				else if(listitem == 1)
		        {
		            ShowPlayerDialog(playerid, 19993,DIALOG_STYLE_INPUT,"∑ø◊”Œƒº˛","º¸»Îƒ„œÎ÷ÿ–¬º”‘ÿµƒ∑ø◊”ID \n (0-1022)","»∑∂®","»°œ˚");
				}
				else if(listitem == 2)
		        {
		            ShowPlayerDialog(playerid, 19994,DIALOG_STYLE_INPUT,"≤˙“µŒƒº˛","º¸»Îƒ„œÎ÷ÿ–¬º”‘ÿµƒ≤˙“µID \n (0-29)","»∑∂®","»°œ˚");
				}
				else if(listitem == 3)
		        {
		            ShowPlayerDialog(playerid, 19994,DIALOG_STYLE_INPUT,"S≤˙“µŒƒº˛","º¸»Îƒ„œÎ÷ÿ–¬º”‘ÿµƒS≤˙“µID  \n (0-11)","»∑∂®","»°œ˚");
				}
			}
		}
		if(dialogid == 19999)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
					if(PlayerInfo[playerid][pLeader] == 5)
					{
					    if(SurenosSecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    SurenosSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– »˝∫œª· ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(SurenosSecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    SurenosSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– »˝∫œª· ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î £°");
							}
					    }
					    else if(SurenosSecurity == 3)
					    {
					        SurenosSecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– »˝∫œª· ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
					else if(PlayerInfo[playerid][pLeader] == 6)
					{
					    if(SignatraSecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    SignatraSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– ¬Ûµ¬¡÷∞Ô ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(SignatraSecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    SignatraSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– ¬Ûµ¬¡÷∞Ô ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(SignatraSecurity == 3)
					    {
					        SignatraSecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– ¬Ûµ¬¡÷∞Ô ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
					else if(PlayerInfo[playerid][pLeader] == 14)
					{
					    if(YamaguchiSecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    YamaguchiSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– …Ωø⁄◊È ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(YamaguchiSecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    YamaguchiSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– …Ωø⁄◊È ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(YamaguchiSecurity == 3)
					    {
					        YamaguchiSecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– …Ωø⁄◊È ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
					else if(PlayerInfo[playerid][pLeader] == 15)
					{
					    if(BratvaSecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    BratvaSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– ¥Û»¶∞Ô ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(BratvaSecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    BratvaSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– ¥Û»¶∞Ô ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(BratvaSecurity == 3)
					    {
					        BratvaSecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– ¥Û»¶∞Ô ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
					else if(PlayerInfo[playerid][pLeader] == 16)
					{
					    if(ViceSecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    ViceSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– Vice ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(ViceSecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    ViceSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– Vice ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(ViceSecurity == 3)
					    {
					        ViceSecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– Vice ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
					else if(PlayerInfo[playerid][pLeader] == 13)
					{
					    if(AnarchySecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    AnarchySecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– √¿π˙”ÃÃ´∞Ô ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(AnarchySecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    AnarchySecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– √¿π˙”ÃÃ´∞Ô ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(AnarchySecurity == 3)
					    {
					        AnarchySecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– √¿π˙”ÃÃ´∞Ô ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
					else if(PlayerInfo[playerid][pLeader] == 8)
					{
					    if(HitmanSecurity == 1)
					    {
					        if(GetPlayerMoney(playerid) < 100000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -100000);
							    HitmanSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– Hitmen ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(HitmanSecurity == 2)
					    {
					        if(GetPlayerMoney(playerid) < 250000)
							{
								SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú≤ª∆’‚∏ˆ!");
								return 1;
							}
							else
							{
							    SafeGivePlayerMoney(playerid, -250000);
							    HitmanSecurity ++;
							    SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘Ã·∏ﬂ, À˘”– Hitmen ∆˚≥µœ÷‘⁄”– 9 Œª ˝◊÷¥˙¬Î !");
							}
					    }
					    else if(HitmanSecurity == 3)
					    {
					        HitmanSecurity --;
					        SafeGivePlayerMoney(playerid, 200000);
					        SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– Hitmen ∆˚≥µœ÷‘⁄”– 7 Œª ˝◊÷¥˙¬Î !");
					    }
					}
				}
				else if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pLeader] == 5)
					{
					    if(SurenosSecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
				   			SurenosSecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– »˝∫œª· ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 6)
					{
					    if(SignatraSecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
							SignatraSecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– ¬Ûµ¬¡÷∞Ô ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 14)
					{
					    if(YamaguchiSecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
							YamaguchiSecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– …Ωø⁄◊È ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 15)
					{
					    if(BratvaSecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
							BratvaSecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– ¥Û»¶∞Ô ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 16)
					{
					    if(ViceSecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
							ViceSecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– Vice ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 13)
					{
					    if(AnarchySecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
							AnarchySecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– Son of Anarchy ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
					else if(PlayerInfo[playerid][pLeader] == 8)
					{
					    if(HitmanSecurity == 2)
					    {
							SafeGivePlayerMoney(playerid, 750000);
							HitmanSecurity --;
							SendClientMessage(playerid, COLOR_GREY,"* ∞≤»´–‘ΩµµÕ, À˘”– Hitmen ∆˚≥µœ÷‘⁄”– 5 Œª ˝◊÷¥˙¬Î !");
						}
					}
				}
			}
			SaveSecurity();
  			for(new c = 1; c < MAX_VEHICLES; c ++)
			{
			    if(!IsAnOwnableCar(c))
			    {
					EncodeVehicle(c);
				}
			}
		}
		if(dialogid == 20000)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            if(Decoder == 0)
		            {
			            new checking;
			            new carid = GetPlayerVehicleID(playerid);
						if(IsAnOwnableCar(carid))
						{
						    checking = CarInfo[carid][cCode];
						}
						else
						{
						    checking = VehiclePass[carid];
						}
						if(checking != -1)
						{
						    SetPlayerCriminal(playerid,255,"Õµ«‘“ª¡æ≥µ");
						    ShowDecoder(playerid);
						    Decoding[playerid] = 1;
							Digits = GetDigits(checking);
							if(PlayerInfo[playerid][pAdminDuty] == 1)
							{
							    ProxDetector(30.0, playerid, "*π‹¿Ì‘±”√À˚µƒ∫⁄øÕ…Ë±∏£¨≤¢ ‘Õº∆∆“Î≥µµƒ√‹¬Î", COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
							{
							    ProxDetector(30.0, playerid, "*ƒ∞…˙»À”√À˚µƒ∫⁄øÕ…Ë±∏£¨≤¢ ‘Õº∆∆“Î≥µµƒ√‹¬Î", COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
							{
								format(string, sizeof(string), "* %s ”√À˚µƒ∫⁄øÕ…Ë±∏£¨≤¢ ‘Õº∆∆“Î≥µµƒ√‹¬Î", sendername);
				                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							DecoderTimer = SetTimerEx("DecodePassword",20,true,"ii",playerid, carid);
							SendClientMessage(playerid, COLOR_GREY,"*Ω‚¬Î»Î√≈ - º«◊°£∫’‚ «¥ø¥‚µƒ‘À∆¯£¨Ω‚¬Î∆˜”√ÀÊª˙ ˝◊÷«ø––ºÏ≤È£°");
							decodecode = 0;
						}
						else return SendClientMessage(playerid, COLOR_GREY,"*¥À≥µ√ª”–À¯∂®!");
						Decoder = 1;
					}
					else return SendClientMessage(playerid, COLOR_GREY,"*“—æ≠ π”√“Î¬Î∆˜,«Îµ»¥˝!");
				}
				else if(listitem == 1)
				{
					SafeRemovePlayerFromVehicle(playerid);
					TogglePlayerControllable(playerid, 1);
				}
			}
		}
		if(dialogid == 1000)
		{
		    if(response)
		    {
		        new ownvehkey;
	            if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
                else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { ownvehkey = PlayerInfo[playerid][pPcarkey2]; }
	            new carsellprice = GetVehiclePrice(ownvehkey) / 5;
	            PlayerInfo[playerid][pMats] += carsellprice;
             	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	            format(string, sizeof(string), "~w~You have scratched your car for: ~n~~g~%d materials", carsellprice);
	            GameTextForPlayer(playerid, string, 10000, 3);
	            
	            if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
					PlayerInfo[playerid][pPcarkey] = 9999;
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
					PlayerInfo[playerid][pPcarkey2] = 9999;

				SafeRemovePlayerFromVehicle(playerid);
				DestroyVehicle(ownvehkey);
	            TogglePlayerControllable(playerid, 1);
	            
	            format(string, sizeof(string),"LARP/Vehicles/%d.ini",ownvehkey);
         		fremove(string);
	            
	            OnPlayerUpdateEx(playerid);
	            TogglePlayerDynamicCP(playerid, scratchcarcp, 1);
       		}
		}
		if(dialogid == 300)
		{
		    if(response)
		    {
		        if(listitem == 0)
				{
					PlayerInfo[playerid][pFS] = 0;
					SetPlayerSkills(playerid);
					SendClientMessage(playerid, COLOR_GREY,"* —°‘Ò±Í◊º!");
				}
				else if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pBoxiSkill] == 1)
				    {
						PlayerInfo[playerid][pFS] = 1;
						SetPlayerSkills(playerid);
						SendClientMessage(playerid, COLOR_GREY,"*—°‘Ò»≠ª˜!");
					}
				}
				else if(listitem == 2)
				{
				    if(PlayerInfo[playerid][pKungSkill] == 1)
				    {
						PlayerInfo[playerid][pFS] = 2;
						SetPlayerSkills(playerid);
						SendClientMessage(playerid, COLOR_GREY,"*—°‘Òπ¶∑Ú!");
					}
				}
				else if(listitem == 3)
				{
				    if(PlayerInfo[playerid][pKneeSkill] == 1)
				    {
						PlayerInfo[playerid][pFS] = 4;
						SetPlayerSkills(playerid);
						SendClientMessage(playerid, COLOR_GREY,"* —°‘Òœ•∂•Õ∑!");
					}
				}
				else if(listitem == 4)
				{
				    if(PlayerInfo[playerid][pGrabSkill] == 1)
				    {
						PlayerInfo[playerid][pFS] = 3;
						SetPlayerSkills(playerid);
						SendClientMessage(playerid, COLOR_GREY,"* —°‘Ò◊•Ãﬂ!");
					}
				}
				else if(listitem == 5)
				{
				    if(PlayerInfo[playerid][pElbowSkill] == 1)
				    {
						PlayerInfo[playerid][pFS] = 5;
						SetPlayerSkills(playerid);
						SendClientMessage(playerid, COLOR_GREY,"* —°‘ÒÕ∆÷‚!");
					}
				}
			}
		}
		/*
		if(dialogid == 999)
		{
		    if(response)
		    {
		        if(listitem == 0)
				{
				    PlayerInfo[playerid][pSpawn] = 0;
				    SendClientMessage(playerid, COLOR_GREY,"* ◊Ó∫Û“ª∏ˆ±£¥ÊŒª÷√“—±ª—°”√÷ÿ…˙µ„. (/resetspawn)");
				}
				else if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pPhousekey] < 999)
				    {
				    	PlayerInfo[playerid][pSpawn] = 1;
				    	SendClientMessage(playerid, COLOR_GREY,"* ∑ø◊”“—±ª—°”√◊˜Œ™ “ƒ⁄÷ÿ…˙µ„. (/selectspawn)");
					}
                    else return SendClientMessage(playerid,COLOR_GREY,"* ƒ„√ª”–»Œ∫Œ∑øŒ›!");
				}
				else if(listitem == 2)
				{
				    if(PlayerInfo[playerid][pFMember] < 255)
				    {
				    	PlayerInfo[playerid][pSpawn] = 2;
				    	SendClientMessage(playerid, COLOR_GREY,"* º“Õ•±ª—°Œ™÷ÿ…˙µ„. (/selectspawn)");
					}
					else return SendClientMessage(playerid,COLOR_GREY,"* ƒ„√ª”–»Œ∫Œº“Õ•!");
				}
				else if(listitem == 3)
				{
				    if(PlayerInfo[playerid][pMember] != 0 || PlayerInfo[playerid][pLeader] != 0)
				    {
				    	PlayerInfo[playerid][pSpawn] = 3;
				    	SendClientMessage(playerid, COLOR_GREY,"* ∞Ô≈…±ª—°Œ™÷ÿ…˙µ„. (/selectspawn)");
					}
					else return SendClientMessage(playerid,COLOR_GREY,"* ƒ„√ª”–»Œ∫Œ≈…±!");
				}
			}
		}
		*/
		if(dialogid == 1300)
		{
		    if(response)
		    {
		        new car = GetPlayerVehicleID(playerid);
		        if(listitem == 0)
		        {
					new Float:X,Float:Y,Float:Z,Float:A;
					GetVehiclePos(car,X,Y,Z);
                    GetVehicleZAngle(car, A);
					CarInfo[car][cLocationx] = X;
					CarInfo[car][cLocationy] = Y;
					CarInfo[car][cLocationz] = Z;
					CarInfo[car][cAngle] = A;
					format(string, sizeof(string), "~n~ You have parked your vehicle in this location. ~n~");
					GameTextForPlayer(playerid, "You have parked your vehicle in this position. It will respawn here.", 10000, 3);
				}
				else if(listitem == 1)
				{
				    new list[] = "»≈¡˜∆˜ \n “˝«Ê’÷ \n ∂•∞Â \n ≤‡±£œ’∏‹\n µ∆ \n º”ÀŸ∆˜ \n ≈≈∆¯π‹ \n ≥µ¬÷ \n ¡¢ÃÂ…˘“ÙœÏ \n “∫—π◊∞÷√ \n «∞±£œ’∏‹ \n ∫Û±£œ’∏‹ \n ”“Õ®∑Á \n ◊ÛÕ®∑Á";
				    ShowPlayerDialog(playerid, 1301,DIALOG_STYLE_LIST,"—°‘Ò∏ƒ◊∞",list,"»∑∂®","»°œ˚");
				}
				else if(listitem == 2)
				{
				    SaveVehicleComponents(car);
				    SendClientMessage(playerid, COLOR_GREY,"* ∆˚≥µ…œµƒÀ˘”––ﬁ∏ƒ,“—±ª±£¥Ê!");
    			}
				else if(listitem == 3)
				{
                    new list[] = "»≈¡˜∆˜ \n“˝«Ê’÷ \n ∂•∞Â \n ≤‡±£œ’∏‹\n µ∆ \n º”ÀŸ∆˜ \n ≈≈∆¯π‹ \n ≥µ¬÷ \n ¡¢ÃÂ…˘“ÙœÏ \n “∫—π◊∞÷√ \n «∞±£œ’∏‹ \n ∫Û±£œ’∏‹ \n ”“Õ®∑Á \n ◊ÛÕ®∑Á";
				    ShowPlayerDialog(playerid, 1302,DIALOG_STYLE_LIST,"—°‘Ò∏ƒ◊∞",list,"»∑∂®","»°œ˚");
				}
				else if(listitem == 4)
				{
				    ClearVehicleComponents(car);
				    SendClientMessage(playerid, COLOR_GREY,"* ∆˚≥µ…œµƒÀ˘”––ﬁ∏ƒ,“—±ª±£¥Ê!");
    			}
			}
		}
		if(dialogid == 1301)
		{
			if(response)
			{
			    new car = GetPlayerVehicleID(playerid);
			    if(listitem == 0)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 0);
           			new component = CarInfo[car][cComponent0];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent0] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ»≈¡˜∆˜");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ»≈¡˜∆˜£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ»≈¡˜∆˜!");
						return 1;
					}
				}
				if(listitem == 1)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 1);
           			new component = CarInfo[car][cComponent1];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent1] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ“˝«Ê’÷");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ“˝«Ê’÷, π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ“˝«Ê’÷!");
						return 1;
					}
				}
				if(listitem == 2)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 2);
           			new component = CarInfo[car][cComponent2];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent2] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ∂•∞Â");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ∂•∞Â£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ∂•∞Â!");
						return 1;
					}
				}
				if(listitem == 3)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 3);
           			new component = CarInfo[car][cComponent3];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent0] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ≤‡±£œ’∏‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ≤‡±£œ’∏‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ≤‡±£œ’∏‹!");
						return 1;
					}
				}
				if(listitem == 4)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 4);
           			new component = CarInfo[car][cComponent4];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent4] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒµ∆");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆµ∆£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒµ∆!");
						return 1;
					}
				}
				if(listitem == 5)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 5);
           			new component = CarInfo[car][cComponent5];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent5] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒº”ÀŸ∆˜");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆº”ÀŸ∆˜£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒº”ÀŸ∆˜!");
						return 1;
					}
				}
				if(listitem == 6)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 6);
           			new component = CarInfo[car][cComponent6];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent6] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ≈≈∆¯π‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ≈≈∆¯π‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ≈≈∆¯π‹!");
						return 1;
					}
				}
				if(listitem == 7)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 7);
           			new component = CarInfo[car][cComponent7];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent7] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ≥µ¬÷");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ≥µ¬÷£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ≥µ¬÷!");
						return 1;
					}
				}
				if(listitem == 8)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 8);
           			new component = CarInfo[car][cComponent8];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent8] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ¡¢ÃÂ“ÙœÏ");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ¡¢ÃÂ“ÙœÏ£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ¡¢ÃÂ“ÙœÏ!");
						return 1;
					}
				}
				if(listitem == 9)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 9);
           			new component = CarInfo[car][cComponent9];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent9] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ“∫—π◊∞÷√");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ“∫—π◊∞÷√£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ“∫—π◊∞÷√!");
						return 1;
					}
				}
				if(listitem == 10)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 10);
           			new component = CarInfo[car][cComponent10];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent10] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ«∞±£œ’∏‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ«∞±£œ’∏‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ«∞±£œ’∏‹!");
						return 1;
					}
				}
				if(listitem == 11)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 11);
           			new component = CarInfo[car][cComponent11];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent11] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ∫Û±£œ’∏‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ∫Û±£œ’∏‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ∫Û±£œ’∏‹!");
						return 1;
					}
				}
				if(listitem == 12)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 12);
           			new component = CarInfo[car][cComponent12];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent12] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ◊ÛÕ®∑Á");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ◊ÛÕ®∑Á£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ◊ÛÕ®∑Á!");
						return 1;
					}
				}
				if(listitem == 13)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 13);
           			new component = CarInfo[car][cComponent13];
           			if(component2 != 0)
           			{
				        if(component == 0)
				        {
				            CarInfo[car][cComponent13] = component2;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ”“Õ®∑Á");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ”“Õ®∑Á£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ”“Õ®∑Á!");
						return 1;
					}
				}
			}
		}
		if(dialogid == 1302)
		{
			if(response)
			{
			    new car = GetPlayerVehicleID(playerid);
			    if(listitem == 0)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 0);
           			new component = CarInfo[car][cComponent0];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent0] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ»≈¡˜∆˜");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ”“Õ®∑Á£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ»≈¡˜∆˜!");
						return 1;
					}
				}
				if(listitem == 1)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 1);
           			new component = CarInfo[car][cComponent1];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent1] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ“˝«Ê’÷");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ“˝«Ê’÷£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ“˝«Ê’÷!");
						return 1;
					}
				}
				if(listitem == 2)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 2);
           			new component = CarInfo[car][cComponent2];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent2] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ∂•∞Â");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ∂•∞Â£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ∂•∞Â!");
						return 1;
					}
				}
				if(listitem == 3)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 3);
           			new component = CarInfo[car][cComponent3];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent0] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ≤‡±£œ’∏‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ≤‡±£œ’∏‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ≤‡±£œ’∏‹!");
						return 1;
					}
				}
				if(listitem == 4)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 4);
           			new component = CarInfo[car][cComponent4];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent4] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒµ∆");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆµ∆£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒµ∆!");
						return 1;
					}
				}
				if(listitem == 5)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 5);
           			new component = CarInfo[car][cComponent5];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent5] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒº”ÀŸ∆˜");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆº”ÀŸ∆˜£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒº”ÀŸ∆˜!");
						return 1;
					}
				}
				if(listitem == 6)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 6);
           			new component = CarInfo[car][cComponent6];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent6] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ≈≈∆¯π‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ≈≈∆¯π‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ≈≈∆¯π‹!");
						return 1;
					}
				}
				if(listitem == 7)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 7);
           			new component = CarInfo[car][cComponent7];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent7] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ≥µ¬÷");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ≥µ¬÷£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ≥µ¬÷!");
						return 1;
					}
				}
				if(listitem == 8)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 8);
           			new component = CarInfo[car][cComponent8];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent8] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ¡¢ÃÂ“ÙœÏ");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ¡¢ÃÂ“ÙœÏ£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ¡¢ÃÂ“ÙœÏ!");
						return 1;
					}
				}
				if(listitem == 9)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 9);
           			new component = CarInfo[car][cComponent9];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent9] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ“∫—π◊∞÷√");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ“∫—π◊∞÷√£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ“∫—π◊∞÷√!");
						return 1;
					}
				}
				if(listitem == 10)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 10);
           			new component = CarInfo[car][cComponent10];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent10] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ«∞±£œ’∏‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ«∞±£œ’∏‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ«∞±£œ’∏‹!");
						return 1;
					}
				}
				if(listitem == 11)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 11);
           			new component = CarInfo[car][cComponent11];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent11] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ∫Û±£œ’∏‹");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ∫Û±£œ’∏‹£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ∫Û±£œ’∏‹!");
						return 1;
					}
				}
				if(listitem == 12)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 12);
           			new component = CarInfo[car][cComponent12];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent12] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ◊ÛÕ®∑Á");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ◊ÛÕ®∑Á£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ◊ÛÕ®∑Á!");
						return 1;
					}
				}
				if(listitem == 13)
			    {
           			new component2 = GetVehicleComponentInSlot(car, 13);
           			new component = CarInfo[car][cComponent13];
           			if(component2 != 0)
           			{
				        if(component != 0)
				        {
				            CarInfo[car][cComponent13] = 0;
				            SendClientMessage(playerid, COLOR_GREY,"* ƒ„±£¥Ê¡Àƒ„µƒ”“Õ®∑Á");
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠”–“ª∏ˆ”“Õ®∑Á£¨ π”√«Â≥˝—°œÓ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–±£¥Êƒ„µƒ”“Õ®∑Á!");
						return 1;
					}
				}
			}
		}
		if(dialogid == 1250) // Admin Tut - The Start
		{
		    if(response)
      		{
		        new message[] = "”–∫‹∂‡µƒ∂´Œ˜£¨±ÿ–Î∏¸∏ƒ,¥Úø™Script, À—À˜πÿº¸◊÷ \"changeme\"≤¢∏¸∏ƒŒƒ±æ°£ \n ’‚ «±ÿ–Îµƒ£¨À˘“‘«Î£¨◊ˆµΩ’‚“ªµ„;◊™µΩ”Œœ∑ƒ£ Ω∫ÕŒƒº˛º–£¨¥Úø™larp.pwn£¨∞¥Ctrl + F»ª∫ÛÀ—À˜ \"changeme\"\n ∏ƒ±‰≥…ƒ„◊‘º∫µƒ,’‚ «∫‹÷ÿ“™ \n\n ’‚“ª–≈œ¢Ω´≥ˆœ÷‘⁄√ø¥Œµ«¬º÷±µΩƒ„º¸»Î/BlackJesus \n\n\n\n\n\n ∏––ª¥Ûº“, CuervO - Ω≈±æ¥¥◊˜»À";
				ShowPlayerDialog(playerid, 1251, DIALOG_STYLE_MSGBOX, "ΩÃ≥Ã",message,"»∑∂®","»°œ˚");
			}
			else
			{
       			SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªƒ‹»°œ˚’‚“ªΩÃ≥Ã!");
				new message[] = "ª∂”≠; ∏√Ω≈±æºÏ≤‚µΩƒ„ø…ƒ‹ «µ⁄“ª¥Œ¥Úø™∑˛ŒÒ∆˜. \n\n\n Œ“ « Cuervo, Œ“ª·ΩÃƒ„“ª–© ¬«È,ƒ„±ÿ–Î–ﬁ∏ƒÀ˚µƒΩ≈±æ. \n\n\n ∞¥ \"ºÃ–¯\"ºÃ–¯—ßœ∞±æΩÃ≥Ã";
				ShowPlayerDialog(playerid, 1250, DIALOG_STYLE_MSGBOX, "ª∂”≠.......",message,"ºÃ–¯","»°œ˚");
			}
		}
		if(dialogid == 1244)
		{
		    if(response)
		    {
				if (gPlayerAccount[playerid] != 0)
				{
					//ShowPlayerDialog(playerid, 1245, DIALOG_STYLE_INPUT,"ª∂”≠π‚¡Ÿ,«Îœ»µ«¬º","«Î‘⁄œ¬√Ê ‰»Îƒ„µƒ√‹¬Î£∫","µ«¬º","ÕÀ≥ˆ");
					SendClientMessage(playerid, COLOR_YELLOW2, "ª∂”≠¿¥µΩ{0FFF0F}ƒ≥ƒ≥∑˛ŒÒ∆˜");
					SendClientMessage(playerid, COLOR_LIGHTRED, "{FFFFF0}ƒ„“—æ≠◊¢≤·π˝¡À«Î ‰»Î{F0FFF0} /login {FFFFF0}Ω¯––{FF0FF0}µ«¬º!");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW2, "ª∂”≠¿¥µΩ{0FFF0F}ƒ≥ƒ≥∑˛ŒÒ∆˜");
					SendClientMessage(playerid, COLOR_LIGHTRED, "{FFFFF0}ƒ„ «–¬ÕÊº“ªπ√ª”–’Àªß◊ ¡œ«Î ‰»Î{F0FFF0} /login {FFFFF0}Ω¯––{FF0FF0}◊¢≤·!");
					//ShowPlayerDialog(playerid, 1246, DIALOG_STYLE_INPUT,"ª∂”≠π‚¡Ÿ,«Îœ»◊¢≤·","«Î‘⁄œ¬√Ê ‰»Îƒ„“™◊¢≤·µƒ√‹¬Î£∫","◊¢≤·","ÕÀ≥ˆ");
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has accepted the terms and conditions.",d,m,y,h,mi,s,sendername);
				LoginLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY,"* ƒ„—°‘Ò¡À \"æ‹æ¯\", ƒ„≤ªÕ¨“‚∑˛ŒÒ∆˜ÃıøÓ,÷’÷π”Œœ∑");
				Kick(playerid);
			}
		}
		if(dialogid == 333)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
		            ShowPlayerDialog(playerid, 335, DIALOG_STYLE_INPUT,"»∑»œƒ„µƒ√‹¬Î","≥ˆ”⁄∞≤»´‘≠“Ú«Î‘Ÿ¥Œ ‰»Îƒ„µ±«∞µƒ√‹¬Î.","»∑∂®","»°œ˚");
				}
				else if(listitem == 1)
				{
					if(PlayerInfo[playerid][pLevel] >= 0)
					{
						new nxtlevel = PlayerInfo[playerid][pLevel]+1;
						new expamount = nxtlevel*levelexp;
						new infostring[128];
						if (PlayerInfo[playerid][pExp] < expamount)
						{
							format(infostring, 128, "** ƒ„–Ë“™ %d ◊÷ÿµ„, ƒ„ƒø«∞”– [%d] !",expamount,PlayerInfo[playerid][pExp]);
							SendClientMessage(playerid, COLOR_GRAD1, infostring);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							PlayerPlayMusic(playerid);
							/*SafeGivePlayerMoney(playerid, (-costlevel));*/
							PlayerInfo[playerid][pLevel]++;
							if(PlayerInfo[playerid][pRegularRank] > 0)
							{
							    PlayerInfo[playerid][pExp] -= expamount;
							    new total = PlayerInfo[playerid][pExp];
							    if(total > 0)
							    {
							        PlayerInfo[playerid][pExp] = total;
							    }
							    else
							    {
							        PlayerInfo[playerid][pExp] = 0;
							    }
							}
							else
							{
								PlayerInfo[playerid][pExp] = 0;
							}
							PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
							GameTextForPlayer(playerid, string, 5000, 1);
							format(infostring, 128, "* ƒ„¬Ú¡Àµ»º∂ %d  π”√  /account —°‘Ò…˝º∂∏ƒ±‰ƒ„µƒµ»º∂. (/upgrade)", nxtlevel);
							SendClientMessage(playerid, COLOR_GRAD1, infostring);
							format(infostring, 128, "* ƒ„”– %d Œ¥”√ª˝∑÷…˝º∂",PlayerInfo[playerid][gPupgrade]);
							SendClientMessage(playerid, COLOR_GRAD2, infostring);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /levelup (%d)",d,m,y,h,mi,s,sendername,nxtlevel);
							CommandLog(string);
						}
					}
				}
				if(listitem == 2)
		        {
		            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
		            ShowPlayerDialog(playerid, 338, DIALOG_STYLE_INPUT,"»∑»œƒ„µƒ√‹¬Î","≥ˆ”⁄∞≤»´‘≠“Ú«Î‘Ÿ¥Œ ‰»Îƒ„µ±«∞µƒ√‹¬Î.","»∑∂®","»°œ˚");
				}
				else if(listitem == 3)
				{
				    new regularrank = PlayerInfo[playerid][pRegularRank];
				    new playerlevel = PlayerInfo[playerid][pLevel];
				    new money = ScriptMoney[playerid];
				    new bankmoney = PlayerInfo[playerid][pAccount];
				    new punished = PlayerInfo[playerid][pPunished];
					new ptime = PlayerInfo[playerid][pConnectSeconds];
				    new playersip[24];
				    GetPlayerIp(playerid, playersip, sizeof(playersip));
				    new info[466];
				    new string1[256];
				    new string2[210];
				    format(string1, sizeof(string1),"ƒ„∫√, %s. \n\n\nƒ„µƒID «: %d, ƒ„µƒ≥£øÕµ»º∂ «: %d, ƒ„µƒµ»º∂: %d. \n\n\nƒ„µ±«∞µƒIP «: %s \nƒ„…œ¥Œ¿Îø™µƒ ±º‰: %s, …œ¥ŒµƒIP: %s. \nƒ„◊¢≤·’Àªß ±º‰: %s.",sendername, playerid, regularrank, playerlevel, playersip, PlayerInfo[playerid][pLastSeen], PlayerInfo[playerid][pIP],PlayerInfo[playerid][pRegistredDate]);
					format(string2, sizeof(string2),"\nƒ„ ‹µΩπ‹¿Ì‘±¥¶∑£ %d ¥Œ. \n\n\n ƒ„…Ì…œ◊∞”–$%d,“¯––¥ÊøÓ «$%d. \n\n ƒ„µƒ‘⁄œﬂ ±º‰ «: %d –° ± | π≤º∆: %d ∑÷÷” | π≤º∆: %d √Î.",punished,money, bankmoney,(ptime / 3600), (ptime / 60), ptime);
					format(info, 512,"%s%s",string1,string2);
				    ShowPlayerDialog(playerid, 337,DIALOG_STYLE_MSGBOX,"--------- ’Àªß–≈œ¢ --------",info,"»∑∂®","»°œ˚");
				}
                else if(listitem == 4)
		        {
		            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
		            ShowPlayerDialog(playerid, 340, DIALOG_STYLE_INPUT,"»∑»œƒ„µƒ√‹¬Î","≥ˆ”⁄∞≤»´‘≠“Ú«Î‘Ÿ¥Œ ‰»Îƒ„µ±«∞µƒ√‹¬Î.","»∑∂®","»°œ˚");
				}
				else if(listitem == 5)
		        {
		            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
		            ShowPlayerDialog(playerid, 343, DIALOG_STYLE_INPUT,"»∑»œƒ„µƒ√‹¬Î","≥ˆ”⁄∞≤»´‘≠“Ú«Î‘Ÿ¥Œ ‰»Îƒ„µ±«∞µƒ√‹¬Î.","»∑∂®","»°œ˚");
				}
				else if(listitem == 6)
		        {
		            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
		            ShowPlayerDialog(playerid, 350, DIALOG_STYLE_INPUT,"»∑»œƒ„µƒ√‹¬Î","≥ˆ”⁄∞≤»´‘≠“Ú«Î‘Ÿ¥Œ ‰»Îƒ„µ±«∞µƒ√‹¬Î.","»∑∂®","»°œ˚");
				}
				else if(listitem == 7)
		        {
		            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
		            ShowPlayerDialog(playerid, 351, DIALOG_STYLE_INPUT,"»∑»œƒ„µƒ√‹¬Î","≥ˆ”⁄∞≤»´‘≠“Ú«Î‘Ÿ¥Œ ‰»Îƒ„µ±«∞µƒ√‹¬Î.","»∑∂®","»°œ˚");
				}
			}
		}
		if(dialogid == 334)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 334, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
		}
		if(dialogid == 335)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 335, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
					    ShowPlayerDialog(playerid, 336, DIALOG_STYLE_INPUT,"√‹¬Î∏¸∏ƒ","«Î‘⁄œ¬√Ê ‰»Îƒ„µƒ–¬√‹¬Î:","∫√µƒ","∑µªÿ");
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 336)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 335, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
		    		ShowPlayerDialog(playerid, 342, DIALOG_STYLE_INPUT,"√‹¬Î∏¸∏ƒ","«Î‘⁄œ¬√Ê‘Ÿ¥Œ ‰»Îƒ„µƒ–¬√‹¬Î:","∫√µƒ","∑µªÿ");
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 337)
		{
		    if(response)
		    {
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 338)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 339, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    SendClientMessage(playerid, TEAM_GROVE_COLOR,"* ƒ„œ÷‘⁄ø…“‘ π”√…˝º∂! (/upgrade)");
					    CanUseUpgrade[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 339)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 339, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
         				SendClientMessage(playerid, TEAM_GROVE_COLOR,"* ƒ„œ÷‘⁄ø…“‘ π”√…˝º∂! (/upgrade)");
					    CanUseUpgrade[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 340)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 340, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    SendClientMessage(playerid, TEAM_GROVE_COLOR,"*ƒ„œ÷‘⁄ø…“‘ π”√∏¸∏ƒ√˚≥∆π¶ƒ‹! (/changename)");
					    CanChangeName[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 341)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 341, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
			  	    new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    SendClientMessage(playerid, TEAM_GROVE_COLOR,"*ƒ„œ÷‘⁄ø…“‘ π”√∏¸∏ƒ√˚≥∆π¶ƒ‹! (/changename)");
					    CanChangeName[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 342)
		{
		    if(response)
		    {
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 335, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
   					if(strcmp(Typed[playerid],inputtext, true ) == 0 )
					{
					    new password2 = num_hash(inputtext);
				  	    PlayerInfo[playerid][pKey] = password2;
						format(string, sizeof(string),"* ƒ„µƒ–¬√‹¬Î: %s, ∏¸∏ƒ≥…π¶",inputtext);
						SendClientMessage(playerid, TEAM_GROVE_COLOR,string);
						ShowPlayerDialog(playerid, 336, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 343)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 343, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
          			new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    SendClientMessage(playerid, TEAM_GROVE_COLOR,"* ƒ„œ÷‘⁄ø…“‘ π”√ÕÀ≥ˆ∞Ô≈…µƒπ¶ƒ‹¡À! (/quitfaction)");
					    CanLeaveFaction[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 350)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 350, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
 			  		new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    SendClientMessage(playerid, TEAM_GROVE_COLOR,"*ƒ„œ÷‘⁄ø…“‘ π”√≥ˆ €∑ø◊”µƒπ¶ƒ‹!(/sellhouse)");
					    SendClientMessage(playerid, COLOR_NICERED,"* «Îº«◊°, Õ®π˝≥ˆ €ƒ„µƒ∑ø◊”ƒ„Ω´ ß»•ƒ„“—æ≠¥Ê¥¢µƒ“ª«–! º«◊≈ /load ÷Æ«∞µƒ“ª«–!!!");
					    CanSellHouse[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
		if(dialogid == 351)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 351, DIALOG_STYLE_INPUT,"«Î‘Ÿ ‰»Î“ª¥Œ","ƒ„µƒ√‹¬Î≤ª’˝»∑! \n«Î‘Ÿ¥Œ ‰»Îƒ„µƒ√‹¬Î»√Œ“√«Ω¯––…Ì∑› ∂±","∫√µƒ","∑µªÿ");
			  	}
			  	else
			  	{
          			new password2 = num_hash(inputtext);
			 		if(PlayerInfo[playerid][pKey] == password2)
					{
					    SendClientMessage(playerid, TEAM_GROVE_COLOR,"*ƒ„œ÷‘⁄ø…“‘ π”√≥ˆ €bizzπ¶ƒ‹!(/sellbiz)");
					    CanSellBizz[playerid] = 1;
					    SetTimerEx("ResetUpgradeUse", 60000, true, "i", playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"*√‹¬Î¥ÌŒÛ!");
					}
				}
			}
			else
			{
			    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST,"«Î—°‘Ò“ª∏ˆœÓƒø","1\t –ﬁ∏ƒ√‹¬Î \n2\t Ã·∏ﬂƒ„µƒµ»º∂ \n3\t  ⁄»®…˝º∂ \n4\t ’Àªß–≈œ¢ \n5\t  ⁄»®∏¸∏ƒ√˚≥∆ \n6\t  ⁄»®ÕÀ≥ˆ∞Ô≈…\n7\t  ⁄»®≥ˆ €∑øŒ›\n8\t  ⁄»®≥ˆ €Bizz","—°‘Ò","»°œ˚");
			}
		}
	  	if(dialogid == 1245)
		{
		    if(response)
		    {
		        strmid(Typed[playerid], inputtext, 0, strlen(inputtext), 255);
                if(!strcmp(Typed[playerid], "None", true))
				{
					ShowPlayerDialog(playerid, 1245, DIALOG_STYLE_INPUT,"«Î‘⁄¥À ‰»Îƒ„µƒµ«¬º√‹¬Î","ƒ„µƒ√‹¬Î≤ª’˝»∑!\n«Î‘⁄œ¬√Ê ‰»Îƒ„µƒ√‹¬Î£∫","µ«¬º","ÕÀ≥ˆ");
			  	}
			  	else
			  	{
		        	OnPlayerLogin(playerid, inputtext);
				}
			}
			else
			{
			    Kick(playerid);
			}
		}
		if(dialogid == 1246)
		{
		    if(response == 1)
		    {
		        if(strlen(inputtext) < 3)
				{
				    ShowPlayerDialog(playerid, 1246, DIALOG_STYLE_INPUT,"«Î‘⁄¥À ‰»Îƒ„µƒ◊¢≤·√‹¬Î","ƒ„µƒ√‹¬ÎÃ´∂Ã¡À!\n«Î‘⁄œ¬√Ê ‰»Îƒ„“™◊¢≤·µƒ√‹¬Î£∫","◊¢≤·","ÕÀ≥ˆ");
				    return 1;
				}
                if(strlen(inputtext) > 20)
                {
                    ShowPlayerDialog(playerid, 1246, DIALOG_STYLE_INPUT,"«Î‘⁄¥À ‰»Îƒ„µƒ◊¢≤·√‹¬Î","ƒ„µƒ√‹¬ÎÃ´≥§¡À!\n«Î‘⁄œ¬√Ê ‰»Îƒ„“™◊¢≤·µƒ√‹¬Î£∫","◊¢≤·","ÕÀ≥ˆ");
                    return 1;
                }
		        OnPlayerRegister(playerid, inputtext);
    		}
			else
			{
			    Kick(playerid);
			}
		}
		if(dialogid == 1240)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2717.9792;
					TelePosGps[playerid][tY] = -2405.2048;
					SetPlayerRouting(playerid, 2717.9792,-2405.2048);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Army Base");
				}
				else if(listitem == 1)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2047.0006;
					TelePosGps[playerid][tY] = -1905.5575;
					SetPlayerRouting(playerid, 2047.0006,-1905.5575);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª ÷¥’’÷––ƒ");
				}
				else if(listitem == 2)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2514.7600;
					TelePosGps[playerid][tY] = -1519.4685;
					SetPlayerRouting(playerid, 2514.7600,-1519.4685);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Off Roads Dealership");
				}
				else if(listitem == 3)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2596.6575;
					TelePosGps[playerid][tY] = -1632.2941;
					SetPlayerRouting(playerid, 2596.6575,-1632.2941);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Car Graveyard");
				}
				else if(listitem == 4)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2127.0134;
					TelePosGps[playerid][tY] = -1137.1017;
					SetPlayerRouting(playerid, 2127.0134,-1137.1017);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Coutz And Shoutz Dealership");
				}
				else if(listitem == 5)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1789.3593;
					TelePosGps[playerid][tY] = -1294.4882;
					SetPlayerRouting(playerid, 1789.3593,-1294.4882);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª π„≤•π´Àæ");
				}
				else if(listitem == 6)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1520.9916;
					TelePosGps[playerid][tY] = -1450.6512;
					SetPlayerRouting(playerid, 1520.9916,-1450.6512);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª FBI ◊‹≤ø");
				}
				else if(listitem == 7)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1367.3927;
					TelePosGps[playerid][tY] = -1278.2708;
					SetPlayerRouting(playerid, 1367.3927,-1278.2708);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Ammunation");
				}
				else if(listitem == 8)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1175.9061;
					TelePosGps[playerid][tY] = -1323.3114;
					SetPlayerRouting(playerid, 1175.9061,-1323.3114);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Hospital");
				}
				else if(listitem == 9)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 551.9272;
					TelePosGps[playerid][tY] = -1274.9121;
					SetPlayerRouting(playerid, 551.9272,-1274.9121);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª GROTTI");
				}
				else if(listitem == 10)
		        {
                    Gps[playerid] = 1;
                    TelePosGps[playerid][tX] = 478.5240;
					TelePosGps[playerid][tY] = -1495.4603;
					SetPlayerRouting(playerid, 478.5240,-1495.4603);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª ≥£øÕ–›œ¢ “");
				}
				else if(listitem == 11)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 617.9719;
					TelePosGps[playerid][tY] = -1530.0857;
					SetPlayerRouting(playerid, 617.9719,-1530.0857);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª LS Fire Department");
				}
				else if(listitem == 12)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 298.1871;
					TelePosGps[playerid][tY] = -1517.8085;
					SetPlayerRouting(playerid, 298.1871,-1517.8085);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Low Riders Dealership");
				}
				else if(listitem == 13)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1484.6884;
					TelePosGps[playerid][tY] = -1771.7438;
					SetPlayerRouting(playerid, 1484.6884,-1771.7438);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª  –’˛Ã¸");
				}
				else if(listitem == 14)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1550.1317;
					TelePosGps[playerid][tY] = -1376.0255;
					SetPlayerRouting(playerid, 1550.1317,-1676.0225);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª LS æØ≤Ïæ÷");
				}
				else if(listitem == 15)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1755.1904;
					TelePosGps[playerid][tY] = -1839.9189;
					SetPlayerRouting(playerid, 1755.1904,-1893.9189);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Taxi Co. ◊‹≤ø");
				}
                else if(listitem == 16)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2518.1897;
					TelePosGps[playerid][tY] = -2233.4109;
					SetPlayerRouting(playerid, 2518.1897,-2233.4109);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Boats Dealership");
				}
				else if(listitem == 17)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1099.9955;
					TelePosGps[playerid][tY] = -1202.0293;
					SetPlayerRouting(playerid, 1099.9951,-1202.0293);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Trucks Dealership");//asdda
				}
				else if(listitem == 18)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = -1596.1532;
					TelePosGps[playerid][tY] = 115.1059;
					SetPlayerRouting(playerid, -1596.1532,115.1059);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª  •∑∆“Æ¬ﬁ Exportations Docks");
				}
				else if(listitem == 19)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1432.1233;
					TelePosGps[playerid][tY] = 1396.5969;
					SetPlayerRouting(playerid, 1432.1233,1396.5969);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª ¿≠ÀπŒ¨º”Àπ Airport Exportation Point");
				}
			}
			else
			{
			    Gps[playerid] = 0;
			    SendClientMessage(playerid, 0xFFFFFFFF, "ƒ„πÿ±’¡Àƒ„µƒGPS");
			    TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
			}
		}
		if(dialogid == 1241)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2717.9792;
					TelePosGps[playerid][tY] = -2405.2048;
					SetPlayerRouting(playerid, 2717.9792,-2405.2048);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Army Base");
				}
				else if(listitem == 1)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2047.0006;
					TelePosGps[playerid][tY] = -1905.5575;
					SetPlayerRouting(playerid, 2047.0006,-1905.5575);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª ÷¥’’÷––ƒ");
				}
				else if(listitem == 2)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2514.7600;
					TelePosGps[playerid][tY] = -1519.4685;
					SetPlayerRouting(playerid, 2514.7600,-1519.4685);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Off Roads Dealership");
				}
				else if(listitem == 3)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2596.6575;
					TelePosGps[playerid][tY] = -1632.2941;
					SetPlayerRouting(playerid, 2596.6575,-1632.2941);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Car Graveyard");
				}
				else if(listitem == 4)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2127.0134;
					TelePosGps[playerid][tY] = -1137.1017;
					SetPlayerRouting(playerid, 2127.0134,-1137.1017);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Coutz And Shoutz Dealership");
				}
				else if(listitem == 5)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1789.3593;
					TelePosGps[playerid][tY] = -1294.4882;
					SetPlayerRouting(playerid, 1789.3593,-1294.4882);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª π„≤•π´Àæ");
				}
				else if(listitem == 6)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1520.9916;
					TelePosGps[playerid][tY] = -1450.6512;
					SetPlayerRouting(playerid, 1520.9916,-1450.6512);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª FBI ◊‹≤ø");
				}
				else if(listitem == 7)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1367.3927;
					TelePosGps[playerid][tY] = -1278.2708;
					SetPlayerRouting(playerid, 1367.3927,-1278.2708);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Ammunation");
				}
				else if(listitem == 8)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1175.9061;
					TelePosGps[playerid][tY] = -1323.3114;
					SetPlayerRouting(playerid, 1175.9061,-1323.3114);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Hospital");
				}
				else if(listitem == 9)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 551.9272;
					TelePosGps[playerid][tY] = -1274.9121;
					SetPlayerRouting(playerid, 551.9272,-1274.9121);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª GROTTI");
				}
				else if(listitem == 10)
		        {
                    Gps[playerid] = 1;
                    TelePosGps[playerid][tX] = 478.5240;
					TelePosGps[playerid][tY] = -1495.4603;
					SetPlayerRouting(playerid, 478.5240,-1495.4603);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª ≥£øÕ–›œ¢ “");
				}
				else if(listitem == 11)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 617.9719;
					TelePosGps[playerid][tY] = -1530.0857;
					SetPlayerRouting(playerid, 617.9719,-1530.0857);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª LS Fire Department");
				}
				else if(listitem == 12)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 298.1871;
					TelePosGps[playerid][tY] = -1517.8085;
					SetPlayerRouting(playerid, 298.1871,-1517.8085);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Low Riders Dealership");
				}
				else if(listitem == 13)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1484.6884;
					TelePosGps[playerid][tY] = -1771.7438;
					SetPlayerRouting(playerid, 1484.6884,-1771.7438);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª  –’˛Ã¸");
				}
				else if(listitem == 14)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1550.1317;
					TelePosGps[playerid][tY] = -1376.0255;
					SetPlayerRouting(playerid, 1550.1317,-1676.0225);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª LS æØ≤Ïæ÷");
				}
				else if(listitem == 15)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1755.1904;
					TelePosGps[playerid][tY] = -1839.9189;
					SetPlayerRouting(playerid, 1755.1904,-1893.9189);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Taxi Co. ◊‹≤ø");
				}
                else if(listitem == 16)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2518.1897;
					TelePosGps[playerid][tY] = -2233.4109;
					SetPlayerRouting(playerid, 2518.1897,-2233.4109);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Boats Dealership");
				}
				else if(listitem == 17)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1099.9955;
					TelePosGps[playerid][tY] = -1202.0293;
					SetPlayerRouting(playerid, 1099.9951,-1202.0293);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª Trucks Dealership");//asdda
				}
				else if(listitem == 18)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = -1596.1532;
					TelePosGps[playerid][tY] = 115.1059;
					SetPlayerRouting(playerid, -1596.1532,115.1059);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª  •∑∆“Æ¬ﬁ Exportations Docks");
				}
				else if(listitem == 19)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1432.1233;
					TelePosGps[playerid][tY] = 1396.5969;
					SetPlayerRouting(playerid, 1432.1233,1396.5969);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª ¿≠ÀπŒ¨º”Àπ Airport Exportation Point");
				}
				else if(listitem == 20)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2137.6948;
					TelePosGps[playerid][tY] = -2282.4058;
		            SetPlayerRouting(playerid, 2137.6948,-2282.4058);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Arms Dealers Job Point.");
				}
				else if(listitem == 21)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2230.3557;
					TelePosGps[playerid][tY] = -2285.9153;
		            SetPlayerRouting(playerid, 2230.3557,-2285.9153);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª The Materials Bank");
				}
				else if(listitem == 22)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 2072.1609;
					TelePosGps[playerid][tY] = -1582.4437;
		            SetPlayerRouting(playerid, 2072.1609,-1582.4437);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Drugs Dealers Job Point");
				}
				else if(listitem == 23)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 1424.1018;
					TelePosGps[playerid][tY] = -1317.8696;
		            SetPlayerRouting(playerid, 1424.1018,-1317.8696);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Drugs Bank 1.");
				}
				else if(listitem == 24)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 523.1111;
					TelePosGps[playerid][tY] = -1812.7820;
		            SetPlayerRouting(playerid, 523.1111,-1812.7820);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Drugs Bank 2.");
				}
				else if(listitem == 25)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = -86.0141;
					TelePosGps[playerid][tY] = 2.6020;
		            SetPlayerRouting(playerid, -86.0141,2.6020);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Drugs Farmer Job Point.");
				}
				else if(listitem == 26)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 213.7746;
					TelePosGps[playerid][tY] = -231.2097;
		            SetPlayerRouting(playerid, 213.7746,-231.2097);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Materials Smuggler Job Point.");
				}
				else if(listitem == 27)
		        {
		            Gps[playerid] = 1;
		            TelePosGps[playerid][tX] = 248.0487;
					TelePosGps[playerid][tY] = -33.4691;
		            SetPlayerRouting(playerid, 248.0487,-33.4691);
		            TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		            SendClientMessage(playerid, COLOR_GREY,"* œ÷‘⁄∂®Œª the Materials Packages Factory.");
				}
			}
			else
			{
			    Gps[playerid] = 0;
			    SendClientMessage(playerid, 0xFFFFFFFF, "ƒ„πÿ±’¡Àƒ„µƒGPS");
			    TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
			}
		}
		if(dialogid == 123)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {//grotti
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 551.3881,-1279.2095,17.2482);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to GROTTI",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 551.3881,-1279.2095,17.2482);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ GROTTI.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to GROTTI",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 1)
		        {//bob's lowriders
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 299.6796,-1520.5288,24.6007);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Bob's Lowriders",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 299.6796,-1520.5288,24.6007);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Bob's Lowriders.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Bob's Lowriders",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 2)
		        {//Coutz And Shoutz
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 2126.8079,-1129.5212,25.5298);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Coutz And Shoutz",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 2126.8079,-1129.5212,25.5298);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Coutz And Shoutz.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Coutz And Shoutz",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 3)
		        {//All Terrain
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 2520.2568,-1519.0847,23.9407);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to All Terainz",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 2520.2568,-1519.0847,23.9407);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ All Terainz.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to All Terainz",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 4)
		        {//airport dealership
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 1749.5895,-2548.6216,13.5469);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Airport dealership",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 1749.5895,-2548.6216,13.5469);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Airport dealership.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Airport dealership",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 5)
		        {//bikes dealership
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 2787.3777,-1613.0219,10.9219);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Bikes Dealership",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 2787.3777,-1613.0219,10.9219);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Bikes Dealership.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Bikes Dealership",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 6)
		        {//sea dealership
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 2498.383300,-2263.643066,3.196316);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Boats Dealership",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 2498.383300,-2263.643066,3.196316);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Boats Dealership.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Boats Dealership",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else if(listitem == 7)
		        {//trucks dealership
		            if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, 1099.995117,-1202.029296,17.804687);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						LinkVehicleToInterior(tmpcar, 0);
						SetPlayerVirtualWorld(playerid, 0);
						OnPlayerExitFood(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Trucks Dealership",d,m,y,h,mi,s,sendername);
						TelesLog(string);
					}
					else
					{
						SafeSetPlayerPos(playerid, 1099.995117,-1202.029296,17.804687);
						SetPlayerVirtualWorld(playerid, 0);
					}
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Trucks Dealership.", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					SafeSetPlayerInterior(playerid,0);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Trucks Dealership",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
			}
		}
		if(dialogid == 222)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "œ÷‘⁄,ƒ„Ω´‘⁄±æµÿ¡ƒÃÏÀµª∞!");
		            PlayerInfo[playerid][pChatMode] = 0;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "œ÷‘⁄,ƒ„Ω´‘⁄OOC¡ƒÃÏÀµª∞!");
				    PlayerInfo[playerid][pChatMode] = 1;
				}
			}
		}
		if(dialogid == 3213)
		{
		    if(!response)
		    {
				PlayerInfo[playerid][pAppearList] = 0;
				PlayerInfo[playerid][pAdmin] = 1338;
				UcAdmin[playerid] = 1;
				SendClientMessage(playerid, COLOR_GREY, "ƒ„œ÷‘⁄ «π‹¿Ì‘±!");
			}
			else
			{
				triedtobeadmin[playerid] = 1;
			}
		}
		if(dialogid == 151)
		{
		    if(response)
		    {
		        if(listitem == 0)
		        {
		            if(PlayerInfo[playerid][pAchievement0] == 0)
		            {
		                ShowPlayerDialog(playerid,200,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Silent Kill \n Achievement ID: 0 \n Achievement Objective: Kill Someone with a Silenced Colt45 \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,200,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Silent Kill \n Achievement ID: 0 \n\n Achievement Objective: Kill Someone with a Silenced Colt45 \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 1)
		        {
		            if(PlayerInfo[playerid][pAchievement1] == 0)
		            {
		                ShowPlayerDialog(playerid,201,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name:  I can Shout \n Achievement ID: 1 \n Achievement Objective: Shout... \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		            	ShowPlayerDialog(playerid,201,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name:  I can Shout \n Achievement ID: 1 \n Achievement Objective: Shout... \n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 2)
		        {
		            if(PlayerInfo[playerid][pAchievement2] == 0)
		            {
		                ShowPlayerDialog(playerid,202,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: For the Team \n Achievement ID: 2 \n Achievement Objective: Talk in the Radio \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,202,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: For the Team \n Achievement ID: 2 \n\n Achievement Objective: Talk in the Radio \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 3)
		        {
		            if(PlayerInfo[playerid][pAchievement3] == 0)
		            {
		                ShowPlayerDialog(playerid,203,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Admin Loves You \n Achievement ID: 3 \n Achievement Objective: Get Blinded by an Admin \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,203,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Admin Loves You \n Achievement ID: 3 \n\n Achievement Objective: Get Blinded by an Admin \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 4)
		        {
		            if(PlayerInfo[playerid][pAchievement4] == 0)
		            {
		                ShowPlayerDialog(playerid,204,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Admin Hates You \n Achievement ID: 4 \n Achievement Objective: Get Unblinded by an Admin. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,204,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Admin Hates You \n Achievement ID: 4 \n\n Achievement Objective: Get Unblinded by an Admin. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 5)
		        {
		            if(PlayerInfo[playerid][pAchievement5] == 0)
		            {
		                ShowPlayerDialog(playerid,205,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: One Hour! \n Achievement ID: 5 \n Achievement Objective: Play One Hour. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,205,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: One Hour! \n Achievement ID: 5 \n\n Achievement Objective: Play One Hour. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 6)
		        {
		            if(PlayerInfo[playerid][pAchievement6] == 0)
		            {
		                ShowPlayerDialog(playerid,206,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Five Hours! \n Achievement ID: 6 \n Achievement Objective: Play Five Hour. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,206,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Five Hours! \n Achievement ID: 6 \n\n Achievement Objective: Play Five Hour. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 7)
		        {
		            if(PlayerInfo[playerid][pAchievement7] == 0)
		            {
		                ShowPlayerDialog(playerid,207,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Regular Player \n Achievement ID: 7 \n Achievement Objective: Become a Regular Player. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,207,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Regular Player \n Achievement ID: 7 \n\n Achievement Objective: Become a Regular Player. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 8)
		        {
		            if(PlayerInfo[playerid][pAchievement8] == 0)
		            {
		                ShowPlayerDialog(playerid,208,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Regular Player Level 2 \n Achievement ID: 8 \n Achievement Objective: Become a Regular Player Level 2. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,208,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Regular Player Level 2 \n Achievement ID: 8 \n\n Achievement Objective: Become a Regular Player Level 2. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 9)
		        {
		            if(PlayerInfo[playerid][pAchievement9] == 0)
		            {
		                ShowPlayerDialog(playerid,209,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Newbie Killer \n Achievement ID: 9 \n Achievement Objective: Kill Someone. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,209,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Newbie Killer \n Achievement ID: 9 \n\n Achievement Objective: Kill Someone. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 10)
		        {
		            if(PlayerInfo[playerid][pAchievement10] == 0)
		            {
		                ShowPlayerDialog(playerid,210,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Serial Killer \n Achievement ID: 10 \n Achievement Objective: Kill 75 Players. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,210,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Serial Killer \n Achievement ID: 10 \n\n Achievement Objective: Kill 75 Players. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 11)
		        {
		            if(PlayerInfo[playerid][pAchievement11] == 0)
		            {
		                ShowPlayerDialog(playerid,211,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Assassin \n Achievement ID: 11 \n Achievement Objective: Kill 150 Players. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,211,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Assassin \n Achievement ID: 11 \n\n Achievement Objective: Kill 150 Players. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 12)
		        {
		            if(PlayerInfo[playerid][pAchievement12] == 0)
		            {
		                ShowPlayerDialog(playerid,212,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Acme Dinamyte \n Achievement ID: 12 \n Achievement Objective: Get Exploded by an Admin. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,212,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Acme Dinamyte \n Achievement ID: 12 \n\n Achievement Objective: Get Exploded by an Admin. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 13)
		        {
		            if(PlayerInfo[playerid][pAchievement13] == 0)
		            {
		                ShowPlayerDialog(playerid,213,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Illegal Weaponry \n Achievement ID: 13 \n Achievement Objective: Get Killed by the Hand of God. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,213,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Illegal Weaponry \n Achievement ID: 13 \n\n Achievement Objective: Get Killed by the Hand of God. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 14)
		        {
		            if(PlayerInfo[playerid][pAchievement14] == 0)
		            {
		                ShowPlayerDialog(playerid,214,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Illegal Weaponry \n Achievement ID: 14 \n Achievement Objective: Buy a Weapon in the Ammunation. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,214,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Illegal Weaponry \n Achievement ID: 14 \n\n Achievement Objective: Buy a Weapon in the Ammunation. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 15)
		        {
		            if(PlayerInfo[playerid][pAchievement15] == 0)
		            {
		                ShowPlayerDialog(playerid,215,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Fitness \n Achievement ID: 15 \n Achievement Objective: Train Yourself at the GYM. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,215,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Fitness \n Achievement ID: 15 \n\n Achievement Objective: Train Yourself at the GYM. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 16)
		        {
					new list[] = "16\tAt The End\n17\tFinally, a Job!!!\n18\tHome Sweet Home\n19\tA Dirty Mind\n20\tYou're a Hooker, Sir.\n\n\n\t Go Back...";
            		ShowPlayerDialog(playerid,150,DIALOG_STYLE_LIST,"Achievements",list, "»∑∂®","»°œ˚");
				}
			}
		}
		if(dialogid == 150)
		{
		    if(response)
		    {
          		if(listitem == 0)
		        {
		            if(PlayerInfo[playerid][pAchievement16] == 0)
		            {
		                ShowPlayerDialog(playerid,216,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: At The End \n Achievement ID: 16 \n Achievement Objective: Finish your Tutorial. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,216,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: At The End \n Achievement ID: 16 \n\n Achievement Objective: Finish your Tutorial. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 1)
		        {
		            if(PlayerInfo[playerid][pAchievement17] == 0)
		            {
		                ShowPlayerDialog(playerid,217,DIALOG_STYLE_MSGBOX,"Acievements","Achievement Name: Finally, a Job!!! \n Achievement ID: 17 \n Achievement Objective: Get a Job. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,217,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: Finally, a Job!!!  \n Achievement ID: 17 \n\n Achievement Objective: Get a Job. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 2)
		        {
		            if(PlayerInfo[playerid][pAchievement18] == 0)
		            {
		                ShowPlayerDialog(playerid,218,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: Home Sweet Home \n Achievement ID: 18 \n Achievement Objective: Buy your First House. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,218,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: Home Sweet Home  \n Achievement ID: 18 \n\n Achievement Objective: Buy your First House. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 3)
		        {
		            if(PlayerInfo[playerid][pAchievement19] == 0)
		            {
		                ShowPlayerDialog(playerid,219,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: A Dirty Mind \n Achievement ID: 19 \n Achievement Objective: Wank. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,219,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: A Dirty Mind \n Achievement ID: 19 \n\n Achievement Objective: Wank. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 4)
		        {
		            if(PlayerInfo[playerid][pAchievement20] == 0)
		            {
		                ShowPlayerDialog(playerid,220,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: You're a Hooker, Sir. \n Achievement ID: 20 \n Achievement Objective: Give a Blowjob. \n Status: NOT EARNED","»∑∂®","»°œ˚");
					}
					else
		            {
		                ShowPlayerDialog(playerid,220,DIALOG_STYLE_MSGBOX,"Achievements","Achievement Name: You're a Hooker, Sir. \n Achievement ID: 20 \n\n Achievement Objective: Give a Blowjob. \n\n Status: EARNED!","»∑∂®","»°œ˚");
					}
				}
				else if(listitem == 5)
				{
				    new list[] = "0\tSilent Kill\n1\tI Can Shout\n2\tFor the Team\n3\tAdmin Loves You\n4\tAdmin Hates You\n5\tOne Hour!\n6\tFive Hours!\n7\tRegular Player\n8\tRegular Player Level 2\n9\tNewbie Killer\n10\tSerial Killer\n11\tAssassin\n12\tAcme Dinamyte\n13\tA Black Hole\n14\tIllegal Weapon\n15\tFitness \n\t Next Page....";
	            	ShowPlayerDialog(playerid,151,DIALOG_STYLE_LIST,"Achievements",list, "»∑∂®","»°œ˚");
				}
			}
		}
		if(dialogid == 88)
		{
			if(response)
			{
			    if (listitem == 0 && GetPlayerMoney(playerid) > 50)
				{
					SafeGivePlayerMoney(playerid, -50);
					GameTextForPlayer(playerid, "~r~-$50", 5000, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                SafeGivePlayerWeapon(playerid, 10, 1);
					SendClientMessage(playerid, COLOR_GRAD4, "–‘ÕÊæﬂπ∫¬Ú£¨»Áπ˚ƒ„ «±‰Ã¨µƒª∞£¨ƒ„ƒ‹¬˙◊„ƒ„◊‘º∫£°");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /usedildo.");
					return 1;
				}
				else if (listitem == 1 && GetPlayerMoney(playerid) > 35)
				{
					SafeGivePlayerMoney(playerid, -35);
					GameTextForPlayer(playerid, "~r~-$35", 5000, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                SafeGivePlayerWeapon(playerid, 12, 1);
					SendClientMessage(playerid, COLOR_GRAD4, "–‘ÕÊæﬂπ∫¬Ú£¨»Áπ˚ƒ„ «±‰Ã¨µƒª∞£¨ƒ„ƒ‹¬˙◊„ƒ„◊‘º∫£°");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /usedildo.");
					return 1;
				}
				else if (listitem == 2 && GetPlayerMoney(playerid) > 10)
				{
					SafeGivePlayerMoney(playerid, -10);
					GameTextForPlayer(playerid, "~r~-$10", 5000, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                SafeGivePlayerWeapon(playerid, 11, 1);
					SendClientMessage(playerid, COLOR_GRAD4, "–‘ÕÊæﬂπ∫¬Ú£¨»Áπ˚ƒ„ «±‰Ã¨µƒª∞£¨ƒ„ƒ‹¬˙◊„ƒ„◊‘º∫£°");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /usedildo.");
					return 1;
				}
				else if (listitem == 3 && GetPlayerMoney(playerid) > 15)
				{
					SafeGivePlayerMoney(playerid, -15);
					GameTextForPlayer(playerid, "~r~-$15", 5000, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                SafeGivePlayerWeapon(playerid, 13, 1);
					SendClientMessage(playerid, COLOR_GRAD4, "–‘ÕÊæﬂπ∫¬Ú£¨»Áπ˚ƒ„ «±‰Ã¨µƒª∞£¨ƒ„ƒ‹¬˙◊„ƒ„◊‘º∫£°");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /usedildo.");
					return 1;
				}
				else if (listitem == 4 && GetPlayerMoney(playerid) > 1)
				{
                    SafeGivePlayerMoney(playerid, -15);
					GameTextForPlayer(playerid, "~r~-$15", 5000, 1);
					Condom[playerid] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú±‹‘–Ã◊");
					return 1;
				}
			}
		}
		if(dialogid == 69)
		{
		    if(response)
		    {
				if (listitem == 0 && GetPlayerMoney(playerid) > 149)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 150 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 150 - price;
				        format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
				    }
				    else
				    {
				        format(string, sizeof(string), "~r~-$%d", 150);
						GameTextForPlayer(playerid, string, 5000, 1);
						SafeGivePlayerMoney(playerid,-150);
						SBizzInfo[9][sbTill] += 150;
						ExtortionSBiz(9, 150);
				    }
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new randphone = 100000 + random(899999);//minimum 1000  max 9999
					PlayerInfo[playerid][pPnumber] = randphone;
					format(string, sizeof(string), "** ƒ„π∫¬Ú¡À“ª≤ø ÷ª˙ƒ„µƒµÁª∞∫≈¬Î «: %d", randphone);
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_GRAD5, "ƒ„ø…“‘ÀÊ ± π”√/stats≤Èø¥ƒ„µƒµÁª∞∫≈¬Î");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ƒ„ø…“‘º¸»Î /help ≤Èø¥ ÷ª˙œ‡πÿµƒ∞Ô÷˙.");
					return 1;
				}
				else if (listitem == 1 && GetPlayerMoney(playerid) > 500)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 500 - price;
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,-500);
						SBizzInfo[9][sbTill] += 500;
						ExtortionSBiz(9, 500);
						format(string, sizeof(string), "~r~-$%d", 500);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					new prize;
					new symb1[32]; new symb2[32]; new symb3[32];
					new randcard1 = random(10);//minimum 1000  max 9999
					new randcard2 = random(10);//minimum 1000  max 9999
					new randcard3 = random(10);//minimum 1000  max 9999
					if(randcard1 >= 5)
					{
						format(symb1, sizeof(symb1), "~b~]");
						randcard1 = 1;
					}
					else if(randcard1 <= 4 && randcard1 >= 2)
					{
						format(symb1, sizeof(symb1), "~g~]");
						randcard1 = 2;
					}
					else if(randcard1 < 2)
					{
						format(symb1, sizeof(symb1), "~y~]");
						randcard1 = 3;
					}
					if(randcard2 >= 5)
					{
						format(symb2, sizeof(symb2), "~b~]");
						randcard2 = 1;
					}
					else if(randcard2 <= 4 && randcard2 >= 2)
					{
						format(symb2, sizeof(symb2), "~g~]");
						randcard2 = 2;
					}
					else if(randcard2 < 2)
					{
						format(symb2, sizeof(symb2), "~y~]");
						randcard2 = 3;
					}
					if(randcard3 >= 5)
					{
						format(symb3, sizeof(symb3), "~b~]");
						randcard3 = 1;
					}
					else if(randcard3 <= 4 && randcard3 >= 2)
					{
						format(symb3, sizeof(symb3), "~g~]");
						randcard3 = 2;
					}
					else if(randcard3 < 2)
					{
						format(symb3, sizeof(symb3), "~y~]");
						randcard3 = 3;
					}
					if(randcard1 == randcard2 && randcard1 == randcard3)
					{
						if(randcard1 > 5)
						{
							prize = 2500;
						}
						if(randcard1 <= 4 && randcard1 >= 2)
						{
							prize = 1500;
						}
						if(randcard1 < 2)
						{
							prize = 500;
						}
						SafeGivePlayerMoney(playerid,prize);
						SBizzInfo[9][sbTill] -= prize;
						ExtortionSBiz(9, prize);
						format(string, sizeof(string), "%s %s %s ~n~~n~~w~~g~$%d",symb1,symb2,symb3, prize);
					}
					else
					{
						format(string, sizeof(string), "%s %s %s ~n~~n~~w~~r~$0",symb1,symb2,symb3);
					}
					GameTextForPlayer(playerid, string, 3000, 3);
					return 1;
				}
				else if (listitem == 2 && GetPlayerMoney(playerid) > 10)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						GameTextForPlayer(playerid, "~r~-$10", 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,- 10);
						SBizzInfo[9][sbTill] += 10;
						ExtortionSBiz(9, 10);
						format(string, sizeof(string), "~r~-$%d", 100);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                PlayerInfo[playerid][pPhoneBook] = 1;
					format(string, sizeof(string), "   ƒ„π∫¬Ú¡ÀµÁª∞≤æƒ„œ÷‘⁄ø…“‘≤Èø¥À˘”–ÕÊº“µƒµÁª∞¡À!");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /number <id/name>.");
					return 1;
				}
				else if (listitem == 3 && GetPlayerMoney(playerid) > 10)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
				    {
						new skill = 10 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 10 - price;
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,-10);
						SBizzInfo[9][sbTill] += 10;
						ExtortionSBiz(9, 10);
						format(string, sizeof(string), "~r~-$%d", 10);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					gDice[playerid] = 1;
					format(string, sizeof(string), "   ƒ„π∫¬Ú¡À˜ª◊”ƒ„ø…“‘Õ∂≈◊À¸.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /dice ");
					return 1;
				}
				else if (listitem == 4 && GetPlayerMoney(playerid) > 20)
				{
				    PlayerInfo[playerid][pFuel] = 20;
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /fillup");
				    GameTextForPlayer(playerid, "~r~-$20", 5000, 1);
					return 1;
				}
				else if (listitem == 5 && GetPlayerMoney(playerid) > 1)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 1 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 1 - price;
						SafeGivePlayerMoney(playerid,- payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,-1);
						format(string, sizeof(string), "~r~-$%d", 1);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					Condom[playerid] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "π∫¬Ú¡À±‹‘–Ã◊.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					return 1;
				}
				else if (listitem == 6 && GetPlayerMoney(playerid) > 49)
				{
					SafeGivePlayerMoney(playerid, - 50);
					format(string, sizeof(string), "~r~-$%d", 50);
					GameTextForPlayer(playerid, string, 5000, 1);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "π∫¬Ú¡Àœ‡ª˙.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SafeGivePlayerWeapon(playerid, 43, 20);
					return 1;
				}
				else if (listitem == 7 && GetPlayerMoney(playerid) > 499)
				{
				    if(PlayerInfo[playerid][pLevel] < 5)
				    {
						SendClientMessage(playerid, COLOR_GREY, "ƒ„–Ë“™5º∂≤≈ø…“‘π∫¬ÚÀ¸");
						return 1;
				    }
				    if(PlayerInfo[playerid][pMask] != 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠”–“ª∏ˆ¡À");
						return 1;
				    }
				    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				    {
	                    GameTextForPlayer(playerid, "~w~Free", 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid, - 500);
						format(string, sizeof(string), "~r~-$%d", 500);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "π∫¬Ú¡À√Êæﬂ.");
					GameTextForPlayer(playerid, string, 5000, 1);
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, " π”√÷∏ƒœ: ”√∑® /maskon[¥˜…œ√Êæﬂ] ªÚ /maskoff[Õ—µÙ√Êæﬂ]");
					PlayerInfo[playerid][pMask] = 1;
					return 1;
				}
				else if (listitem == 8 && GetPlayerMoney(playerid) > 99)
				{
				    if(PlayerInfo[playerid][pWatch] != 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠”–“ª∏ˆ¡À");
				        return 1;
				    }
				    SafeGivePlayerMoney(playerid, - 100);
				    format(string, sizeof(string), "~r~-$%d", 100);
				    GameTextForPlayer(playerid, string, 5000, 1);
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    format(string, sizeof(string), "π∫¬Ú¡À ÷±Ì.");
				    SendClientMessage(playerid, COLOR_WHITE, " π”√÷∏ƒœ: /time");
				    SendClientMessage(playerid, COLOR_GRAD4, string);
				    PlayerInfo[playerid][pWatch] = 1;
					TextDrawShowForPlayer(playerid, Textdraw56);
					TextDrawShowForPlayer(playerid, Textdraw57);
					TextDrawShowForPlayer(playerid, Textdraw58);
				}
				else if (listitem == 9 && GetPlayerMoney(playerid) > 149)
				{
				    if(PlayerInfo[playerid][pFishTool] != 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "** ƒ„“—æ≠”–“ª∏ˆ¡À !");
				        return 1;
				    }
				    SafeGivePlayerMoney(playerid, - 150);
				    format(string, sizeof(string), "~r~-$%d", 150);
				    GameTextForPlayer(playerid, string, 5000, 1);
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú¡Àµˆ”„π§æﬂœ‰.");
				    PlayerInfo[playerid][pFishTool] = 1;
				}
				else if (listitem == 10 && GetPlayerMoney(playerid) > 9)
				{
				    if(Rope[playerid] >= 5)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "** ƒ„”–5∏ˆ¡À£°");
				        return 1;
				    }
				    SafeGivePlayerMoney(playerid, - 10);
				    format(string, sizeof(string), "~r~-$%d", 10);
				    GameTextForPlayer(playerid, string, 5000, 1);
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú¡À…˛À˜.");
				    SendClientMessage(playerid, COLOR_GRAD4, "Ã· æ: ƒ„œ÷‘⁄ø…“‘/tie.");
				    Rope[playerid]++;
				}
				else if (listitem == 11 && GetPlayerMoney(playerid) > 49)
				{
				    SafeGivePlayerMoney(playerid, - 50);
				    format(string, sizeof(string), "~r~-$%d", 50);
				    GameTextForPlayer(playerid, string, 5000, 1);
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    SendClientMessage(playerid, COLOR_GRAD4, "≈Á∆·πﬁπ∫¬Ú≥…π¶.");
				    SafeGivePlayerWeapon(playerid, 41, 200);
				}
				else if (listitem == 12 && GetPlayerMoney(playerid) > 4)
				{
				    if(PlayerInfo[playerid][pLighter] != 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "** ƒ„“—æ≠”–“ª∏ˆ¥Úªª˙¡À£¨“™ƒ«√¥∂‡∏…¬Ô∑≈ª√¥! ");
				        return 1;
				    }
				    SafeGivePlayerMoney(playerid, - 5);
				    PlayerInfo[playerid][pLighter] = 30;
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    format(string, sizeof(string), "~r~-$%d", 5);
				    GameTextForPlayer(playerid, string, 5000, 1);
				    SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú¡À¥Úªª˙.");
				    OnPlayerUpdateEx(playerid);
				    return 1;
				}
				else if (listitem == 13 && GetPlayerMoney(playerid) > 29)
				{
				    if(PlayerInfo[playerid][pCigarettes] != 0)
				    {
				        format(string, sizeof(string), "   ƒ„œ÷‘⁄”– %d ÷ßœ„—Ã .", PlayerInfo[playerid][pCigarettes]);
				        SendClientMessage(playerid, COLOR_GREY, string);
				        return 1;
				    }
				    SafeGivePlayerMoney(playerid, - 30);
				    PlayerInfo[playerid][pCigarettes] = 20;
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				    format(string, sizeof(string), "~r~-$%d", 30);
				    GameTextForPlayer(playerid, string, 5000, 1);
				    SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú¡Àœ„—Ã.");
				    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ƒ„œ÷‘⁄ø…“‘/smoke!");
				    OnPlayerUpdateEx(playerid);
				}
				else if (listitem == 14 && GetPlayerMoney(playerid) > 250)
				{
				    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 250 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 250 - price;
						SafeGivePlayerMoney(playerid, - payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid, - 250);
						format(string, sizeof(string), "~r~-$%d", 250);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "π∫¬Ú¡À“ªÃ®CD-≤•∑≈ª˙.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /music");
					PlayerInfo[playerid][pCD] = 1;
					return 1;
				}
				else if (listitem == 15 && GetPlayerMoney(playerid) > 1500)
				{
					if(PlayerInfo[playerid][pGPS] == 0)
			    	{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„ªπ√ª”–GPSµº∫Ω“«ƒÿ,ƒ„“™≤Âº˛∏…¬Ô?");
						return 1;
					}
					if(PlayerInfo[playerid][pGPS] == 2)
			    	{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„“—æ≠”–¡ÀGPS≤Âº˛¡À");
						return 1;
					}
					PlayerInfo[playerid][pGPS] = 2;
					if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 1500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 1500 - price;
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,-1500);
						SBizzInfo[9][sbTill] += 1500;
						ExtortionSBiz(9, 1500);
						GameTextForPlayer(playerid, "~r~-1500", 5000, 1);
					}
					SBizzInfo[9][sbProducts]--;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú¡ÀGPS≤Âº˛.");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /gpsfind <X> <Y> <Z>ªÚ/gps");
					return 1;
				}
				else if (listitem == 16 && GetPlayerMoney(playerid) > 500)
				{
					PlayerInfo[playerid][pSpeedo] = 1;
					if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 500 - price;
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,-500);
						SBizzInfo[9][sbTill] += 500;
						ExtortionSBiz(9, 500);
						GameTextForPlayer(playerid, "~r~-500", 5000, 1);
					}
					SBizzInfo[9][sbProducts]--;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "π∫¬Ú¡À≥µÀŸ∂»±Ì.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /speedo ");
					return 1;
				}
				else if (listitem == 17 && GetPlayerMoney(playerid) > 1500)
				{
					if(PlayerInfo[playerid][pGPS] == 1 || PlayerInfo[playerid][pGPS] == 2)
			    	{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„“—æ≠”–¡ÀGPSµº∫Ω“«¡À");
						return 1;
					}
					PlayerInfo[playerid][pGPS] = 1;
					if(PlayerInfo[playerid][pTraderPerk] > 0)
			    	{
						new skill = 1500 / 100;
						new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
						new payout = 1500 - price;
						SafeGivePlayerMoney(playerid,- payout);
						SBizzInfo[9][sbTill] += payout;
						ExtortionSBiz(9, payout);
						format(string, sizeof(string), "~r~-$%d", payout);
						GameTextForPlayer(playerid, string, 5000, 1);
					}
					else
					{
					    SafeGivePlayerMoney(playerid,-1500);
						SBizzInfo[9][sbTill] += 1500;
						ExtortionSBiz(9, 1500);
						GameTextForPlayer(playerid, "~r~-1500", 5000, 1);
					}
					SBizzInfo[9][sbProducts]--;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "π∫¬Ú¡ÀGPSµº∫Ω“«.");
					SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: …œ≥µ ‰»Î/gps π”√µº∫Ω“«");
					return 1;
				}
			}
		}
		if(dialogid == 57)
		{
		    if(response)
		    {
		        if(listitem == 0)
  				{
                    if(PlayerInfo[playerid][pRank] >= 1)
					{
    					SetPlayerSkin(playerid, 287);
	                   	PlayerInfo[playerid][pChar] = 287;
                   	 	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ø±¯÷∆∑˛.");
						return 1;
					}
				}
				else if(listitem == 1)
                {
                    if(PlayerInfo[playerid][pRank] >= 3)
					{
					    if(PlayerInfo[playerid][pSex] == 1)
				    	{
		                   	SetPlayerSkin(playerid, 73);
	                    	PlayerInfo[playerid][pChar] = 73;
	                       	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ «¡Ì“ª÷÷ ø±¯÷∆∑˛.");
	                       	return 1;
						}
					}
				}
   				else if(listitem == 2)
                {
                   	if(PlayerInfo[playerid][pRank] >= 4)
					{
                        if(PlayerInfo[playerid][pSex] == 1)
				    	{
		                   	SetPlayerSkin(playerid, 240);
	                       	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ¿Ò“«∑˛.");
	                       	return 1;
						}
						else
						{
							SetPlayerSkin(playerid, 194);
	                       	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ¿Ò“«∑˛.");
	                       	return 1;
						}
					}
				}
	   			else if(listitem == 3)
       			{
                    if(PlayerInfo[playerid][pRank] >= 1)
					{
	                   	SetPlayerSkin(playerid, 70);
                       	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « µ—È “Õ‚Ã◊.");
                       	return 1;
					}
				}
				else if(listitem == 4)
                {
                    if(PlayerInfo[playerid][pRank] >= 8)
					{
						SetPlayerSkin(playerid, 179);
                   	 	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « Ãÿ÷÷≤ø∂”÷∆∑˛.");
						return 1;
					}
				}
				else if(listitem == 5)
				{
                    if(PlayerInfo[playerid][pRank] >= 1)
					{
     					if(PlayerInfo[playerid][pSex] == 2)
				    	{
							SetPlayerSkin(playerid, 191);
							PlayerInfo[playerid][pChar] = 191;
					    	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ≈Æ’Ω øÃ◊◊∞");
						}
					}
				}
				else if(listitem == 6)
				{
				    if(PlayerInfo[playerid][pRank] >= 1)
					{
     					if(PlayerInfo[playerid][pSex] == 2)
				    	{
					    	SetPlayerSkin(playerid, 141);
					    	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ «¡Ì“ª÷÷≈Æ’Ω øÃ◊◊∞");
						}
					}
				}
				else if(listitem == 7)
                {
                    if(PlayerInfo[playerid][pRank] >= 1)
					{
				   		new originalskin = PlayerInfo[playerid][pChar];
						SetPlayerSkin(playerid, originalskin);
                   	 	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ƒ¨»œÃ◊◊∞.");
						return 1;
					}
				}
			}
		}
		if(dialogid == 56)
		{
		    if(response)
			{
			    if(listitem == 0)
                {
                	if(PlayerInfo[playerid][pRank] >= 2)
					{
    					SetPlayerSkin(playerid, 286);
						PlayerInfo[playerid][pChar] = 286;
                    	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ¡™∞Óµ˜≤Èæ÷Õ‚Ã◊.");
						return 1;
					}
				}
				else if(listitem == 1)
    			{
                    if(PlayerInfo[playerid][pRank] >= 1)
					{
				    	new originalskin = PlayerInfo[playerid][pModel];
						SetPlayerSkin(playerid, originalskin);
                   	 	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ∆Ω√Òµƒ∆§∑Ù.");
						return 1;
					}
				}
   				else if(listitem == 2)
       			{
                   	if(PlayerInfo[playerid][pRank] >= 5)
					{
					    if(PlayerInfo[playerid][pSex] == 1)
				    	{
		                   	SetPlayerSkin(playerid, 294);
	                       	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ¿Ò“«∑˛.");
	                       	return 1;
         				}
					}
				}
   				else if(listitem == 3)
       			{
         			if(PlayerInfo[playerid][pRank] >= 2)
					{
					    if(PlayerInfo[playerid][pSex] == 1)
				    	{
	    					SetPlayerSkin(playerid, 104);
	        				SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « Œ‘µ◊ƒ–1.");
	           				return 1;
	           			}
					}
				}
   				else if(listitem == 4)
       			{
                   	if(PlayerInfo[playerid][pRank] >= 2)
					{
					    if(PlayerInfo[playerid][pSex] == 1)
				    	{
		                    SetPlayerSkin(playerid, 120);
	                        SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « Œ‘µ◊ƒ–2.");
	                        return 1;
	                    }
	 				}
				}
   				else if(listitem == 5)
       			{
        			if(PlayerInfo[playerid][pRank] >= 2)
					{
					    if(PlayerInfo[playerid][pSex] == 2)
				    	{
	    					SetPlayerSkin(playerid, 194);
	        				SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « Œ‘µ◊≈Æ1.");
	           				return 1;
						}
					}
				}
   				else if(listitem == 6)
       			{
        			if(PlayerInfo[playerid][pRank] >= 3)
					{
					    if(PlayerInfo[playerid][pSex] == 2)
				    	{
							SetPlayerSkin(playerid, 193);
	     					SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « Œ‘µ◊≈Æ2.");
	         				return 1;
						}
					}
				}
   				else if(listitem == 7)
       			{
          			if(PlayerInfo[playerid][pRank] >= 1)
					{
	                   	SetPlayerSkin(playerid, 70);
                       	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « µ—È “Õ‚Ã◊.");
                       	return 1;
					}
				}
				else if(listitem == 8)
				{
                    if(PlayerInfo[playerid][pRank] >= 1)
					{
					    if(PlayerInfo[playerid][pSex] == 2)
				    	{
							SetPlayerSkin(playerid, 150);
					    	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ≈ÆÃÿπ§1.");
						}
					}
				}
				else if(listitem == 9)
				{
				  	if(PlayerInfo[playerid][pRank] >= 1)
					{
					    if(PlayerInfo[playerid][pSex] == 2)
				    	{
						   	SetPlayerSkin(playerid, 141);
						   	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ≈ÆÃÿπ§2.");
						}
					}
				}
  				else if(listitem == 10)
           	 	{
              		if(PlayerInfo[playerid][pRank] >= 1)
					{
				   		new originalskin = PlayerInfo[playerid][pChar];
						SetPlayerSkin(playerid, originalskin);
                   	 	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄µƒ¥©◊≈ « ƒ¨»œÃ◊◊∞.");
						return 1;
					}
				}
			}
		}
		if(dialogid == 55)
		{
		    if(response)
		    {
   				if(listitem == 0)
       			{
       			    if(PlayerInfo[playerid][pSex] == 1)
				    {
	          			SetPlayerSkin(playerid, 165);
	             		SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊Ãÿπ§.");
	               		SetPlayerColor(playerid, TEAM_HIT_COLOR);
	                 	return 1;
					}
				}
    			else if(listitem == 1)
       			{
       			    if(PlayerInfo[playerid][pSex] == 1)
				    {
		                SetPlayerSkin(playerid, 217);
		                SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  π§◊˜»À‘±.");
		                SetPlayerColor(playerid, TEAM_HIT_COLOR);
		                return 1;
					}
                }
                else if(listitem == 2)
				{
				    if(PlayerInfo[playerid][pSex] == 1)
				    {
						SetPlayerSkin(playerid, 170);
						SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  Õ¨–‘¡µƒ–◊”.");
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						return 1;
					}
				}
                else if(listitem == 3)
                {
                    if(PlayerInfo[playerid][pSex] == 1)
				    {
	                   	SetPlayerSkin(playerid, 21);
	                    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  ºÀ≈Æ.");
	                    SetPlayerColor(playerid, TEAM_HIT_COLOR);
	                    return 1;
					}
				}
				else if(listitem == 4)
				{
				    if(PlayerInfo[playerid][pSex] == 1)
					{
	   					new rand = random(sizeof(RandomMaleSkins));
						SetPlayerSkin(playerid, RandomMaleSkins[rand][0]);
	        			SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  ÀÊª˙µƒ»ÀŒÔ.");
	           			SetPlayerColor(playerid, TEAM_HIT_COLOR);
	           			return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "*ƒ„ «“ª∏ˆ≈Æ»À, π”√ÀÊª˙Œ‘µ◊≈Æµƒ—°‘Ò!");
					    return 1;
					}

				}
    			else if(listitem == 5)
                {
                    if(PlayerInfo[playerid][pSex] == 1)
				    {
	                   	SetPlayerSkin(playerid, 72);
	                    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  Àπ∆§Ê“∆§ ø.");
	                    SetPlayerColor(playerid, TEAM_HIT_COLOR);
	                    return 1;
					}
                }
                else if(listitem == 6)
               	{
               	    if(PlayerInfo[playerid][pSex] == 2)
				    {
	                    SetPlayerSkin(playerid, 152);
	                    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  æ∆µÍ∑˛ŒÒ‘±.");
	                    SetPlayerColor(playerid, TEAM_HIT_COLOR);
	                    return 1;
					}
                }
      			else if(listitem == 7)
				{
				    if(PlayerInfo[playerid][pSex] == 2)
				    {
	 					new rand = random(sizeof(RandomFemaleSkins));
						SetPlayerSkin(playerid, RandomFemaleSkins[rand][0]);
	      				SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  ÀÊª˙≈Æ–‘.");
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "*ƒ„ «ƒ––‘, π”√ÀÊª˙Œ‘µ◊ƒ–µƒ—°‘Ò!");
					    return 1;
					}

  				}
   				else if(listitem == 8)
    			{
    			    if(PlayerInfo[playerid][pSex] == 2)
				    {
	               		SetPlayerSkin(playerid, 192);
	                   	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «Œ‘µ◊ √◊–™∂˚Í©ƒ….");
	                    SetPlayerColor(playerid, TEAM_HIT_COLOR);
					   	return 1;
					}
       			}
          		else if(listitem == 9)
            	{
            	    if(PlayerInfo[playerid][pSex] == 2)
				    {
	                  	SetPlayerSkin(playerid, 193);
	                  	SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «Œ‘µ◊ ø≠µŸ’≤.");
	                  	SetPlayerColor(playerid, TEAM_HIT_COLOR);
	                    return 1;
					 }
             	}
          		else if(listitem == 10)
            	{
                   	GetPlayerName(playerid, sendername, sizeof(sendername));
                   	format(string,sizeof(string), "* %s ∞—À˚µƒŒ‘µ◊÷∆∑˛∑≈ªÿµΩ¡À∏¸“¬ “", sendername);
                   	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				   	new originalskin = PlayerInfo[playerid][pChar];
					SetPlayerSkin(playerid, originalskin);
     				SafeResetPlayerWeapons(playerid);
					SafeGivePlayerWeapon(playerid, 3, 1);
					SafeGivePlayerWeapon(playerid, 24, 400);
					SafeGivePlayerWeapon(playerid, 41, 999);
					SafeGivePlayerWeapon(playerid, 25, 50);
					if(PlayerInfo[playerid][pRank] == 1) { SetPlayerColor(playerid,0x33CCFF00); }
			   		else if(PlayerInfo[playerid][pRank] == 2) { SetPlayerColor(playerid,0x2641FE00); }
			   		else if(PlayerInfo[playerid][pRank] == 3) { SetPlayerColor(playerid,0x2641FE00); }
			   		else if(PlayerInfo[playerid][pRank] == 4) { SetPlayerColor(playerid,0x2641FE00); }
			   		else if(PlayerInfo[playerid][pRank] == 5) { SetPlayerColor(playerid,0x3333CC00); }
			    	else if(PlayerInfo[playerid][pRank] == 6) { SetPlayerColor(playerid,0x3333CC00); }
   					else if(PlayerInfo[playerid][pRank] == 7) { SetPlayerColor(playerid,0x3333CC00); }
    				else if(PlayerInfo[playerid][pRank] == 8) { SetPlayerColor(playerid,0x3333CC00); }
				}
			}
		}

		if(dialogid == 50)
		{
		    if(response)
		    {
   				if (listitem == 0)
				{
				    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				    {
				        if(PlayerInfo[playerid][pRank] >= 1)
				        {
				 	       	SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 24, 150);
							SafeGivePlayerWeapon(playerid, 41, 500);
				    		PlayerInfo[playerid][pChar] = 267;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							OnSwatDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À—ßæØ÷∆∑˛,≤¢–Ø¥¯◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
				    }
   				}
				else if (listitem == 1)
				{
    				if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				    {
				        if(PlayerInfo[playerid][pRank] >= 2)
				        {
					        SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 24, 200);
							SafeGivePlayerWeapon(playerid, 41, 650);
							SafeGivePlayerWeapon(playerid, 25, 25);
							OnSwatDuty[playerid] = 0;
				    		PlayerInfo[playerid][pChar] = 284;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡ÀΩªæØ÷∆∑˛,≤¢–Ø◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
				else if (listitem == 2)
				{
    				if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
					    if(PlayerInfo[playerid][pRank] >= 3)
					    {
						    SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 43, 85);
						    SafeGivePlayerWeapon(playerid, 24, 150);
				    		PlayerInfo[playerid][pChar] = 280;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
						    OnSwatDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
	  						format(string, sizeof(string), "* %s ¥©…œ¡À—≤æØ÷∆∑˛,≤¢–Ø¥¯¡À◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
				else if (listitem == 3)
				{
				    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
					    if(PlayerInfo[playerid][pRank] >= 4)
					    {
						    SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 24, 150);
							SafeGivePlayerWeapon(playerid, 41, 650);
							
	    					PlayerInfo[playerid][pChar] = 281;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							
       						OnSwatDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡ÀæØ≥§µƒ÷∆∑˛,≤¢–Ø¥¯¡À◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
	 			}
				else if (listitem == 4)
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
					    if(PlayerInfo[playerid][pRank] >= 5)
					    {
						    SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
				   		 	SafeGivePlayerWeapon(playerid, 23, 250);
					    	SafeGivePlayerWeapon(playerid, 33, 25);
	    					PlayerInfo[playerid][pChar] = 266;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							OnSwatDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À∂Ω≤Ï÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
				else if (listitem == 5)
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
					    if(PlayerInfo[playerid][pRank] >= 6)
					    {
						    SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
				   		 	SafeGivePlayerWeapon(playerid, 23, 250);
					    	SafeGivePlayerWeapon(playerid, 33, 25);
	    					PlayerInfo[playerid][pChar] = 265;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
					    	OnSwatDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À∏ﬂº∂∂Ω≤Ï÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
				else if (listitem == 6)
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
					    if(PlayerInfo[playerid][pRank] >= 7)
					    {
	    					PlayerInfo[playerid][pChar] = 283;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
     						SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 24, 150);
							SafeGivePlayerWeapon(playerid, 41, 250);
							SafeGivePlayerWeapon(playerid, 25, 50);
							OnSwatDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À∏±æ÷≥§÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
				else if (listitem == 7)
				{
    				if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				    {
				        if(PlayerInfo[playerid][pRank] >= 8)
				        {
					        SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 200);
						    SafeGivePlayerWeapon(playerid, 41, 850);
						    SafeGivePlayerWeapon(playerid, 17, 5);
						    SafeGivePlayerWeapon(playerid, 27, 50);
					    	SafeGivePlayerWeapon(playerid, 31, 125);
					    	SafeGivePlayerWeapon(playerid, 29, 200);
					    	SafeGivePlayerWeapon(playerid, 34, 25);
					    	OnSwatDuty[playerid] = 0;
	    					PlayerInfo[playerid][pChar] = 288;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡Àæ÷≥§÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				else if (listitem == 8)
				{
				    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				    {
				        if(PlayerInfo[playerid][pRank] >= 2)
				        {
							SafeSetPlayerArmour(playerid, 100);
	    	                SetPlayerHealth(playerid, 100);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À∑¿µØ±≥–ƒ,≥‘¡À“ª–©√Ê∞¸»¶.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒπŸ÷∞ªπ≤ªπª.");
						}
					}
				}
				else if (listitem == 9)
				{
				    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
					    if(PlayerInfo[playerid][pSwat] >= 1)
					    {
							SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 200);
						    SafeGivePlayerWeapon(playerid, 41, 850);
						    SafeGivePlayerWeapon(playerid, 17, 5);
					    	SafeGivePlayerWeapon(playerid, 29, 175);
							//SetPlayerSkin(playerid, 285);
  							PlayerInfo[playerid][pChar] = 285;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							OnSwatDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡ÀSWAT÷∆∑˛,≤¢–Ø¥¯¡À◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒSWATµƒµ»º∂≤ªπª.");
						}
					}
				}
				else if (listitem == 10)
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					{
                        if(PlayerInfo[playerid][pSwat] >= 2)
                        {
							SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 225);
						    SafeGivePlayerWeapon(playerid, 41, 950);
						    SafeGivePlayerWeapon(playerid, 17, 10);
					    	SafeGivePlayerWeapon(playerid, 31, 150);
					    	SafeGivePlayerWeapon(playerid, 29, 200);
	 		 				//SetPlayerSkin(playerid, 285);
  							PlayerInfo[playerid][pChar] = 285;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
	 		 				OnSwatDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡ÀSWAT÷∆∑˛,≤¢–Ø¥¯¡À◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒSWATµƒµ»º∂≤ªπª.");
						}
					}
				}
				else if (listitem == 11)
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		   			{
   						if(PlayerInfo[playerid][pSwat] >= 3)
   						{
			   			    SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 250);
						    SafeGivePlayerWeapon(playerid, 41, 1250);
						    SafeGivePlayerWeapon(playerid, 16, 10);
						    SafeGivePlayerWeapon(playerid, 27, 100);
					    	SafeGivePlayerWeapon(playerid, 31, 250);
					    	SafeGivePlayerWeapon(playerid, 29, 350);
							//SetPlayerSkin(playerid, 285);
							PlayerInfo[playerid][pChar] = 285;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							OnSwatDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡ÀSWAT÷∆∑˛,≤¢–Ø¥¯¡À◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒSWATµƒµ»º∂≤ªπª.");
						}
					}
				}
				else if (listitem == 12)
				{
					if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
		   			{
   						if(PlayerInfo[playerid][pSwat] >= 4)
   						{
			   			    SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 250);
						    SafeGivePlayerWeapon(playerid, 41, 1250);
						    SafeGivePlayerWeapon(playerid, 16, 10);
						    SafeGivePlayerWeapon(playerid, 27, 100);
					    	SafeGivePlayerWeapon(playerid, 31, 250);
					    	SafeGivePlayerWeapon(playerid, 29, 350);
         					SafeGivePlayerWeapon(playerid, 30, 350);
          					SafeGivePlayerWeapon(playerid, 31, 350);
							//SetPlayerSkin(playerid, 285);
							PlayerInfo[playerid][pChar] = 285;
							SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]);
							OnSwatDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡ÀSWAT÷∆∑˛,≤¢–Ø¥¯¡À◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„µƒSWATµƒµ»º∂≤ªπª.");
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„√ª”–¥©¥˜–¬µƒ÷∆∑˛,ƒ„œ÷‘⁄ «‘≠¿¥∑˛◊∞.");
			}
		}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		if(dialogid == 51)
		{
		    if(response)
		    {
				if (listitem == 0)
				{
				    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				    {
						if(PlayerInfo[playerid][pRank] >= 1)
						{
				        	SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 24, 125);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 25, 75);
							SafeGivePlayerWeapon(playerid, 29, 200);
							SafeGivePlayerWeapon(playerid, 41, 250);
							SetPlayerSkin(playerid, 163);
							OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
				    }
   				}
				else if (listitem == 1)
				{
				    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				    {
  						if(PlayerInfo[playerid][pRank] >= 2)
						{
    	 					SafeResetPlayerWeapons(playerid);
    	 					SetPlayerSkin(playerid, 164);
				        	SafeGivePlayerWeapon(playerid, 41, 400);
							SafeGivePlayerWeapon(playerid, 24, 175);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 29, 250);
							SafeGivePlayerWeapon(playerid, 25, 75);
							OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 2)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
					    if(PlayerInfo[playerid][pRank] >= 2)
						{
					    	SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 43, 100);
					    	SafeGivePlayerWeapon(playerid, 23, 200);
					    	SafeGivePlayerWeapon(playerid, 4, 1);
					    	OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
  							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 3)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
					    if(PlayerInfo[playerid][pRank] >= 3)
						{
					    	SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 43, 125);
					    	SafeGivePlayerWeapon(playerid, 4, 1);
					    	SafeGivePlayerWeapon(playerid, 23, 250);
					    	SafeGivePlayerWeapon(playerid, 46, 1);
							SafeGivePlayerWeapon(playerid, 17, 35);
							SetPlayerSkin(playerid, 186);
							OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 4)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
                        if(PlayerInfo[playerid][pTactical] >= 1)
						{
							SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 200);
						    SafeGivePlayerWeapon(playerid, 41, 850);
						    SafeGivePlayerWeapon(playerid, 17, 10);
					    	SafeGivePlayerWeapon(playerid, 29, 300);
					    	SafeGivePlayerWeapon(playerid, 31, 150);
					    	SafeGivePlayerWeapon(playerid, 46, 1);
							SetPlayerSkin(playerid, 285);
							OnTacticalDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 5)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
                        if(PlayerInfo[playerid][pTactical] >= 2)
						{
							SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 3, 1);
					    	SafeGivePlayerWeapon(playerid, 24, 225);
					    	SafeGivePlayerWeapon(playerid, 41, 999);
					    	SafeGivePlayerWeapon(playerid, 17, 15);
					    	SafeGivePlayerWeapon(playerid, 29, 325);
				    		SafeGivePlayerWeapon(playerid, 31, 200);
				    		SafeGivePlayerWeapon(playerid, 46, 1);
				    		SafeGivePlayerWeapon(playerid, 34, 15);
 	 						SetPlayerSkin(playerid, 285);
 	 						OnTacticalDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 6)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	   				{
	   				    if(PlayerInfo[playerid][pTactical] >= 3)
						{
	   				    	SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 3, 1);
					    	SafeGivePlayerWeapon(playerid, 24, 275);
					    	SafeGivePlayerWeapon(playerid, 41, 1250);
					    	SafeGivePlayerWeapon(playerid, 16, 5);
					    	SafeGivePlayerWeapon(playerid, 27, 100);
					    	SafeGivePlayerWeapon(playerid, 29, 400);
				    		SafeGivePlayerWeapon(playerid, 31, 200);
				    		SafeGivePlayerWeapon(playerid, 46, 1);
				    		SafeGivePlayerWeapon(playerid, 34, 25);
							SetPlayerSkin(playerid, 285);
							OnTacticalDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 7)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				    {
	   				    if(PlayerInfo[playerid][pTactical] >= 4)
						{
					    	SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 3, 1);
					    	SafeGivePlayerWeapon(playerid, 23, 150);
					    	SafeGivePlayerWeapon(playerid, 34, 50);
	   	 					SafeGivePlayerWeapon(playerid, 46, 1);
	   	 					SafeGivePlayerWeapon(playerid, 41, 1500);
							SetPlayerSkin(playerid, 285);
							OnTacticalDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 8)
				{
					if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
					{
	    				if(PlayerInfo[playerid][pRank] >= 1)
						{
							SafeSetPlayerArmour(playerid, 100);
   		    	        	SetPlayerHealth(playerid, 100);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À∑¿µØ±≥–ƒ,≥‘¡À“ª–©√Ê∞¸»¶.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 9)
				{
				    if(PlayerInfo[playerid][pMember] >= 2 || PlayerInfo[playerid][pLeader] == 2)
				    {
				        if(PlayerInfo[playerid][pRank] >= 2)
				        {
						    new originalskin = PlayerInfo[playerid][pChar];
							SetPlayerSkin(playerid, originalskin);
		     				SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 41, 400);
							SafeGivePlayerWeapon(playerid, 24, 175);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 29, 250);
							SafeGivePlayerWeapon(playerid, 25, 75);
							OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 10)
				{
    				if(PlayerInfo[playerid][pMember] >= 2 || PlayerInfo[playerid][pLeader] == 2)
				    {
    					if(PlayerInfo[playerid][pRank] >= 6)
						{
				    		new originalskin = PlayerInfo[playerid][pChar];
							SetPlayerSkin(playerid, originalskin);
							SafeResetPlayerWeapons(playerid);
		    				SafeGivePlayerWeapon(playerid, 3, 1);
		    				SafeGivePlayerWeapon(playerid, 24, 250);
							SafeGivePlayerWeapon(playerid, 41, 850);
							SafeGivePlayerWeapon(playerid, 16, 3);
		    				SafeGivePlayerWeapon(playerid, 27, 50);
		    				SafeGivePlayerWeapon(playerid, 29, 300);
		   					SafeGivePlayerWeapon(playerid, 31, 100);
		   					SafeGivePlayerWeapon(playerid, 46, 1);
							SafeGivePlayerWeapon(playerid, 34, 25);
                            OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 11)
				{
    				if(PlayerInfo[playerid][pMember] >= 2 || PlayerInfo[playerid][pLeader] == 2)
				    {
    					if(PlayerInfo[playerid][pRank] >= 2)
						{
							SetPlayerSkin(playerid, 294);
							SafeResetPlayerWeapons(playerid);
		    				SafeGivePlayerWeapon(playerid, 3, 1);
		    				SafeGivePlayerWeapon(playerid, 24, 50);
							SafeGivePlayerWeapon(playerid, 41, 250);
		    				SafeGivePlayerWeapon(playerid, 25, 25);
		    				SafeGivePlayerWeapon(playerid, 29, 125);
							SafeGivePlayerWeapon(playerid, 33, 50);
							OnTacticalDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
			}
		}
		if(dialogid == 52)
		{
		    if(response)
		    {
		    	if (listitem == 0)
				{
				    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
				    {
						if(PlayerInfo[playerid][pRank] >= 1)
						{
				        	SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 24, 175);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 25, 25);
							SafeGivePlayerWeapon(playerid, 41, 200);
							SafeGivePlayerWeapon(playerid, 31, 50);
							SetPlayerSkin(playerid, 287);
							OnSpecialFDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
				    }
   				}
				else if (listitem == 1)
				{
				    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
				    {
  						if(PlayerInfo[playerid][pRank] >= 2)
						{
    	 					SafeResetPlayerWeapons(playerid);
    	 					SetPlayerSkin(playerid, 287);
				        	SafeGivePlayerWeapon(playerid, 41, 300);
							SafeGivePlayerWeapon(playerid, 24, 125);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 29, 100);
							SafeGivePlayerWeapon(playerid, 25, 25);
							SafeGivePlayerWeapon(playerid, 31, 150);
							SafeGivePlayerWeapon(playerid, 17, 5);
							OnSpecialFDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 2)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
					    if(PlayerInfo[playerid][pRank] >= 2)
						{
					    	SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 43, 100);
					    	SafeGivePlayerWeapon(playerid, 23, 125);
					    	SafeGivePlayerWeapon(playerid, 4, 1);
					    	OnSpecialFDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
  							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 3)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
					    if(PlayerInfo[playerid][pRank] >= 3)
						{
					    	SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 43, 125);
					    	SafeGivePlayerWeapon(playerid, 4, 1);
					    	SafeGivePlayerWeapon(playerid, 23, 150);
					    	SafeGivePlayerWeapon(playerid, 46, 1);
							SafeGivePlayerWeapon(playerid, 17, 10);
							SafeGivePlayerWeapon(playerid, 34, 50);
							OnSpecialFDuty[playerid] = 0;
							SetPlayerSkin(playerid, 73); // 191 Female
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 4)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
                        if(PlayerInfo[playerid][pSpecialF] >= 1)
						{
							SafeResetPlayerWeapons(playerid);
						    SafeGivePlayerWeapon(playerid, 3, 1);
						    SafeGivePlayerWeapon(playerid, 24, 150);
						    SafeGivePlayerWeapon(playerid, 41, 700);
						    SafeGivePlayerWeapon(playerid, 17, 10);
					    	SafeGivePlayerWeapon(playerid, 29, 175);
					    	SafeGivePlayerWeapon(playerid, 31, 225);
					    	SafeGivePlayerWeapon(playerid, 34, 10);
					    	SafeGivePlayerWeapon(playerid, 46, 1);
							SetPlayerSkin(playerid, 179);
							OnSpecialFDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 5)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
                        if(PlayerInfo[playerid][pSpecialF] >= 2)
						{
							SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 3, 1);
					    	SafeGivePlayerWeapon(playerid, 24, 175);
					    	SafeGivePlayerWeapon(playerid, 41, 850);
					    	SafeGivePlayerWeapon(playerid, 17, 13);
					    	SafeGivePlayerWeapon(playerid, 29, 200);
				    		SafeGivePlayerWeapon(playerid, 31, 250);
				    		SafeGivePlayerWeapon(playerid, 46, 1);
				    		SafeGivePlayerWeapon(playerid, 34, 15);
 	 						SetPlayerSkin(playerid, 179);
 	 						OnSpecialFDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 6)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	   				{
	   				    if(PlayerInfo[playerid][pSpecialF] >= 3)
						{
	   				    	SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 3, 1);
					    	SafeGivePlayerWeapon(playerid, 24, 200);
					    	SafeGivePlayerWeapon(playerid, 41, 1000);
					    	SafeGivePlayerWeapon(playerid, 16, 5);
					    	SafeGivePlayerWeapon(playerid, 27, 50);
					    	SafeGivePlayerWeapon(playerid, 29, 250);
				    		SafeGivePlayerWeapon(playerid, 31, 300);
				    		SafeGivePlayerWeapon(playerid, 46, 1);
				    		SafeGivePlayerWeapon(playerid, 34, 25);
				    		SafeGivePlayerWeapon(playerid, 36, 3);
							SetPlayerSkin(playerid, 179);
							OnSpecialFDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 7)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
				    {
	   				    if(PlayerInfo[playerid][pSpecialF] >= 1)
						{
					    	SafeResetPlayerWeapons(playerid);
					    	SafeGivePlayerWeapon(playerid, 4, 1);
					    	SafeGivePlayerWeapon(playerid, 23, 200);
					    	SafeGivePlayerWeapon(playerid, 34, 75);
	   	 					SafeGivePlayerWeapon(playerid, 46, 1);
	   	 					SafeGivePlayerWeapon(playerid, 41, 1500);
				    		SafeGivePlayerWeapon(playerid, 39, 5);
							SetPlayerSkin(playerid, 287);
							OnSpecialFDuty[playerid] = 1;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 8)
				{
					if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
					{
	    				if(PlayerInfo[playerid][pRank] >= 1)
						{
							SafeSetPlayerArmour(playerid, 100);
   		    	        	SetPlayerHealth(playerid, 100);
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À∑¿µØ±≥–ƒ,≥‘¡À“ª–©√Ê∞¸»¶.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 9)
				{
				    if(PlayerInfo[playerid][pMember] >= 3 || PlayerInfo[playerid][pLeader] == 3)
				    {
				        if(PlayerInfo[playerid][pRank] >= 3)
				        {
						    new originalskin = PlayerInfo[playerid][pChar];
							SetPlayerSkin(playerid, originalskin);
		     				SafeResetPlayerWeapons(playerid);
             				SafeGivePlayerWeapon(playerid, 41, 300);
							SafeGivePlayerWeapon(playerid, 24, 125);
							SafeGivePlayerWeapon(playerid, 3, 1);
							SafeGivePlayerWeapon(playerid, 29, 100);
							SafeGivePlayerWeapon(playerid, 25, 25);
							SafeGivePlayerWeapon(playerid, 31, 150);
							SafeGivePlayerWeapon(playerid, 17, 5);
							OnSpecialFDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 10)
				{
    				if(PlayerInfo[playerid][pMember] >= 3 || PlayerInfo[playerid][pLeader] == 3)
				    {
    					if(PlayerInfo[playerid][pRank] >= 6)
						{
				    		new originalskin = PlayerInfo[playerid][pChar];
							SetPlayerSkin(playerid, originalskin);
							SafeResetPlayerWeapons(playerid);
		    				SafeGivePlayerWeapon(playerid, 3, 1);
		    				SafeGivePlayerWeapon(playerid, 24, 200);
							SafeGivePlayerWeapon(playerid, 41, 700);
							SafeGivePlayerWeapon(playerid, 16, 3);
		    				SafeGivePlayerWeapon(playerid, 27, 50);
		    				SafeGivePlayerWeapon(playerid, 29, 175);
		   					SafeGivePlayerWeapon(playerid, 31, 250);
		   					SafeGivePlayerWeapon(playerid, 46, 1);
							SafeGivePlayerWeapon(playerid, 34, 20);
							OnSpecialFDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
				else if (listitem == 11)
				{
    				if(PlayerInfo[playerid][pMember] >= 3 || PlayerInfo[playerid][pLeader] == 3)
				    {
    					if(PlayerInfo[playerid][pRank] >= 2)
						{
							SetPlayerSkin(playerid, 240);
							SafeResetPlayerWeapons(playerid);
		    				SafeGivePlayerWeapon(playerid, 3, 1);
		    				SafeGivePlayerWeapon(playerid, 24, 50);
							SafeGivePlayerWeapon(playerid, 41, 500);
		    				SafeGivePlayerWeapon(playerid, 25, 25);
		    				SafeGivePlayerWeapon(playerid, 29, 75);
		    				SafeGivePlayerWeapon(playerid, 31, 100);
							SafeGivePlayerWeapon(playerid, 33, 45);
							OnSpecialFDuty[playerid] = 0;
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* %s ¥©…œ¡À÷∆∑˛,≤¢–Ø¥¯¡ÀÀ˘–Ëµƒ◊∞±∏.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
					}
				}
			}
		}
		if(dialogid == 255) // Tut 1 - The Start
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1689.5321,-2239.2610,-2.7107, 2); // Airport
				PlayerCame(playerid, 1689.5321,-2239.2610,-2.7107);
				PlayerInfo[playerid][pTutDone] = 1;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1689.5321,-2239.2610,-2.7107, 2); // Airport
				PlayerCame(playerid, 1689.5321,-2239.2610,-2.7107);
				PlayerInfo[playerid][pTutDone] = 1;
			}
		}
		if(dialogid == 256) // Tut 2 - Teh Airport
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1480.3043,-1739.3135,13.5469,2); //  –’˛Ã¸
				PlayerCame(playerid, 1480.3043,-1739.3135,13.5469);
				PlayerInfo[playerid][pTutDone] = 2;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1480.3043,-1739.3135,13.5469,2); //  –’˛Ã¸
				PlayerCame(playerid, 1480.3043,-1739.3135,13.5469);
				PlayerInfo[playerid][pTutDone] = 2;
			}
		}
		if(dialogid == 257) // Tut 3 - Le  –’˛Ã¸
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1547.4700,-1675.7671,14.0981,2); // æØ≤Ï
				PlayerCame(playerid, 1547.4700,-1675.7671,14.0981);
			 	PlayerInfo[playerid][pTutDone] = 3;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1547.4700,-1675.7671,14.0981,2); // æØ≤Ï
				PlayerCame(playerid, 1547.4700,-1675.7671,14.0981);
			 	PlayerInfo[playerid][pTutDone] = 3;
			}
		}
		if(dialogid == 258) // Tut 4 - El SAPD!!
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1463.3116,-1023.6773,23.8331,2); // “¯––
				PlayerCame(playerid, 1463.3116,-1023.6773,23.8331);
				PlayerInfo[playerid][pTutDone] = 4;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1463.3116,-1023.6773,23.8331,2); // “¯––
				PlayerCame(playerid, 1463.3116,-1023.6773,23.8331);
				PlayerInfo[playerid][pTutDone] = 4;
			}
		}
		if(dialogid == 259) // Tut 5 - The “¯––
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1364.3809,-1279.9447,13.5469,2); // Ammunation
				PlayerCame(playerid, 1364.3809,-1279.9447,13.5469);
				PlayerInfo[playerid][pTutDone] = 5;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1364.3809,-1279.9447,13.5469,2); // Ammunation
				PlayerCame(playerid, 1364.3809,-1279.9447,13.5469);
				PlayerInfo[playerid][pTutDone] = 5;
			}
		}
		if(dialogid == 260) // Tut 6 - TheAmmu
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1178.4044,-1323.0798,14.1184,2); // Hospital
				PlayerCame(playerid, 1178.4044,-1323.0798,14.1184);
				PlayerInfo[playerid][pTutDone] = 6;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1178.4044,-1323.0798,14.1184,2); // Hospital
				PlayerCame(playerid, 1178.4044,-1323.0798,14.1184);
				PlayerInfo[playerid][pTutDone] = 6;
			}
		}
		if(dialogid == 261) // Tut 7 - TheHosptial
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 2229.1575,-1727.0540,13.5469,2); //Ω°…Ì∑ø
				PlayerCame(playerid, 2229.1575,-1727.0540,13.5469);
				PlayerInfo[playerid][pTutDone] = 7;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 2229.1575,-1727.0540,13.5469,2); //Ω°…Ì∑ø
				PlayerCame(playerid, 2229.1575,-1727.0540,13.5469);
				PlayerInfo[playerid][pTutDone] = 7;
			}
		}
		if(dialogid == 262) // Tut 8 - The Gym
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 2243.9365,-1660.2887,15.2879,2); // Binco
				PlayerCame(playerid, 2243.9365,-1660.2887,15.2879);
				PlayerInfo[playerid][pTutDone] = 8;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 2243.9365,-1660.2887,15.2879,2); // Binco
				PlayerCame(playerid, 2243.9365,-1660.2887,15.2879);
				PlayerInfo[playerid][pTutDone] = 8;
			}
		}
		if(dialogid == 263) // Tut 9 - TheClothes Store
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 483.6973,-1489.8641,20.0528,2); // RPC
				PlayerCame(playerid, 483.6973,-1489.8641,20.0528);
				PlayerInfo[playerid][pTutDone] = 9;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 483.6973,-1489.8641,20.0528,2); // RPC
				PlayerCame(playerid, 483.6973,-1489.8641,20.0528);
				PlayerInfo[playerid][pTutDone] = 9;
			}
		}
		if(dialogid == 264) // Tut 10 - The RPC
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 555.0895,-1261.9196,17.2422,2); // ∆˚≥µæ≠œ˙…Ãship
				PlayerCame(playerid, 555.0895,-1261.9196,17.2422);
				PlayerInfo[playerid][pTutDone] = 10;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 555.0895,-1261.9196,17.2422,2); // ∆˚≥µæ≠œ˙…Ãship
				PlayerCame(playerid, 555.0895,-1261.9196,17.2422);
				PlayerInfo[playerid][pTutDone] = 10;
			}
		}
		if(dialogid == 265) // Tut 11 - The Dealership
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1510.0883,-1430.9789,13.5469,2); //  FBI
				PlayerCame(playerid, 1510.0883,-1430.9789,13.5469);
				PlayerInfo[playerid][pTutDone] = 11;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1510.0883,-1430.9789,13.5469,2); //  FBI
				PlayerCame(playerid, 1510.0883,-1430.9789,13.5469);
				PlayerInfo[playerid][pTutDone] = 11;
			}
		}
		if(dialogid == 266) // Tut 12 - The FBI
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 2048.8523,-1900.5702,13.5538,2); // ÷¥’’÷––ƒ
				PlayerCame(playerid, 2048.8523,-1900.5702,13.5538);
				PlayerInfo[playerid][pTutDone] = 12;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 2048.8523,-1900.5702,13.5538,2); // ÷¥’’÷––ƒ
				PlayerCame(playerid, 2048.8523,-1900.5702,13.5538);
				PlayerInfo[playerid][pTutDone] = 12;
			}
		}
		if(dialogid == 267) // Tut 13 - The ÷¥’’÷––ƒ
		{
		    if(response)
		    {
				SetPlayerCheckpoint(playerid, 1524.1573,-1674.2922,13.5469,2); // Pershing
				PlayerCame(playerid, 1524.1573,-1674.2922,13.5469);
				PlayerInfo[playerid][pTutDone] = 13;
			}
			else
			{
				SetPlayerCheckpoint(playerid, 1524.1573,-1674.2922,13.5469,2); // Pershing
				PlayerCame(playerid, 1524.1573,-1674.2922,13.5469);
				PlayerInfo[playerid][pTutDone] = 13;
			}
		}
		if(dialogid == 268) // Tut 14 - TheEnd
		{
		    if(response)
		    {
				new Float:X, Float:Y,Float:Z;
				GetPlayerPos(playerid, X,Y,Z);
				IsOnTutorial[playerid] = 0;
				PlayerInfo[playerid][pTutDone] = 20;
				PlayerPlaySound(playerid, 1058, X,Y,Z);
				if(PlayerInfo[playerid][pTut] == 5)
				{
				    SafeGivePlayerMoney(playerid, 1);
				    GameTextForPlayer(playerid, "Mission Complete! ~n~1$",5000,0);
				}
				else
				{
    				SafeSetPlayerPos(playerid,1612.324,-2330.167,13.5469);
        			SetCameraBehindPlayer(playerid);
				    SafeGivePlayerMoney(playerid, 7500);
				    GameTextForPlayer(playerid, "Mission Complete! ~n~7500$",5000,0);
				    PlayerInfo[playerid][pRegularCount] -= 500;
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
                    SendClientMessage(playerid, COLOR_GREY, "ƒ„ÕÍ≥…¡ÀÀ˘”–ΩÃ≥Ã!");
				    /*
				    if (PlayerInfo[playerid][pAchievement16] == 0)
					{
				 		ShowPlayerDialog(playerid,516,DIALOG_STYLE_MSGBOX,"≥…æÕ:\n ‘⁄◊Ó∫Û... (16)","◊£∫ÿƒ„, ƒ„ªÒµ√¡À¡À'‘⁄Ω· ¯'ª’’¬ \n ƒ„ªÒµ√¡À 500$","»∑∂®","»°œ˚");
						SafeGivePlayerMoney(playerid, 500);
						PlayerInfo[playerid][pAchievement16] = 1;
					}
					*/
				}
			}
			else
			{
				new Float:X, Float:Y,Float:Z;
				GetPlayerPos(playerid, X,Y,Z);
				IsOnTutorial[playerid] = 0;
				PlayerInfo[playerid][pTutDone] = 20;
				PlayerPlaySound(playerid, 1058, X,Y,Z);
				if(PlayerInfo[playerid][pTut] == 5)
				{
				    SafeGivePlayerMoney(playerid, 1);
				    GameTextForPlayer(playerid, "Mission Complete! ~n~1$",5000,0);
				}
				else
				{
				    SafeSetPlayerPos(playerid,1612.324,-2330.167,13.5469);
				    SetCameraBehindPlayer(playerid);
				    SafeGivePlayerMoney(playerid, 7500);
				    GameTextForPlayer(playerid, "Mission Complete! ~n~7500$",5000,0);
				    PlayerInfo[playerid][pRegularCount] -= 500;
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
				    SendClientMessage(playerid, COLOR_GREY, " ");
        			SendClientMessage(playerid, COLOR_GREY, "ƒ„ÕÍ≥…¡ÀÀ˘”–ΩÃ≥Ã!");

				    /*
				    if (PlayerInfo[playerid][pAchievement16] == 0)
					{
				 		ShowPlayerDialog(playerid,516,DIALOG_STYLE_MSGBOX,"≥…æÕ:\n ‘⁄◊Ó∫Û... (16)","◊£∫ÿƒ„, ƒ„ªÒµ√¡À¡À'‘⁄Ω· ¯'ª’’¬ \n ƒ„ªÒµ√¡À 500$","»∑∂®","»°œ˚");
						SafeGivePlayerMoney(playerid, 500);
						PlayerInfo[playerid][pAchievement16] = 1;
					}
					*/
				}
			}
		}
		if(dialogid == 0) // Ammunation
		{
			if(response)
			{
				if(listitem == 1)
				{
				    if(GetPlayerMoney(playerid) > 49)
					{
					    if(PlayerInfo[playerid][pPistSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ º ÷«π—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainPistol", 2500, false, "i", playerid);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 2)
				{
				    if(GetPlayerMoney(playerid) > 75)
				    {
				        if(PlayerInfo[playerid][pSilenSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ ºœ˚…˘ ÷«π—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainSilenced", 2500, false, "i", playerid);
	                    }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 3)
				{
				    if(GetPlayerMoney(playerid) > 150)
				    {
				        if(PlayerInfo[playerid][pDesertSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ º…≥ƒÆ÷Æ”• ÷«π—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainDeagle", 2500, false, "i", playerid);
						}
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 4)
				{
				    if(GetPlayerMoney(playerid) > 125)
				    {
				        if(PlayerInfo[playerid][pShotgSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ º¡‘«π—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainShotgun", 2500, false, "i", playerid);
	                    }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 5)
				{
				    if(GetPlayerMoney(playerid) > 100)
				    {
				        if(PlayerInfo[playerid][pSawnSkill] < 800)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ º∂Ã≈Á—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainSawn", 2500, false, "i", playerid);
	                    }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 6)
				{
				    if(GetPlayerMoney(playerid) > 200)
				    {
				        if(PlayerInfo[playerid][pCombSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ ºˆ±µØ«π —µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainCombat", 2500, false, "i", playerid);
	                    }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 7)
				{
				    if(GetPlayerMoney(playerid) > 125)
				    {
				        if(PlayerInfo[playerid][pUziSkill] < 800)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ ºª˙«π—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainUzi", 2500, false, "i", playerid);
				        }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 8)
				{
				    if(GetPlayerMoney(playerid) > 155)
				    {
				        if(PlayerInfo[playerid][pSmgSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ ºMP5—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainSmg", 2500, false, "i", playerid);
				        }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 9)
				{
				    if(GetPlayerMoney(playerid) > 140)
				    {
				        if(PlayerInfo[playerid][pAkSkill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ ºAK-47—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainAk47", 2500, false, "i", playerid);
				        }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
				else if(listitem == 10)
	            {
	                if(GetPlayerMoney(playerid) > 140)
				    {
				        if(PlayerInfo[playerid][pM4Skill] < 1000)
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫Œ“√«Ω´“™ø™ ºM4—µ¡∑");
					    	TrainTimer[playerid] = SetTimerEx("TrainM4", 2500, false, "i", playerid);
	                    }
	                    else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫’‚∏ˆŒ‰∆˜ƒ„“—æ≠ «◊®º“º∂µƒ¡À!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ΩÃ¡∑£∫ƒ„√ª”–◊„πªµƒ«Æ∞°!");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, 0xFFFFFFFF, "ƒ„—°‘Ò¡À»°œ˚");
			}
			return 1;
		}
		if(dialogid == 5) // /turn for admins
		{
			if(response)
			{
				if(listitem == 0)
				{
				    if(PlayerInfo[playerid][pAdmin] < 5)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(ViewAdmin[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "*ƒ„“—æ≠πÿ±’¡Àπ‹¿Ìœ˚œ¢!");
				        ViewAdmin[playerid] = 0;
				        format(string, 128, "[π‹¿Ì]: %s πÿ±’¡Àπ‹¿Ìœ˚œ¢.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(ViewAdmin[playerid] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "*ƒ„“—æ≠¥Úø™¡Àπ‹¿Ìœ˚œ¢!");
				        ViewAdmin[playerid] = 1;
				        format(string, 128, "[π‹¿Ì]: %s ¥Úø™¡Àπ‹¿Ìœ˚œ¢.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pViewPms] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "*ƒ„“—æ≠πÿ±’¡ÀPMœ˚œ¢!");
				        PlayerInfo[playerid][pViewPms] = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡ÀPMœ˚œ¢.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(PlayerInfo[playerid][pViewPms] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "*ƒ„“—æ≠¥Úø™¡ÀPMœ˚œ¢!");
				        PlayerInfo[playerid][pViewPms] = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡ÀPMœ˚œ¢.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 2)
				{
				    if(PlayerInfo[playerid][pAdmin] < 4)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
					if(PlayerInfo[playerid][pAppearList] == 1)
					{
					    PlayerInfo[playerid][pAppearList] = 0;
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥”‘⁄œﬂπ‹¿Ì√˚µ•÷–…æ≥˝¡À◊‘º∫!");
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥”‘⁄œﬂπ‹¿Ì√˚µ•÷–…æ≥˝¡À◊‘º∫.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(PlayerInfo[playerid][pAppearList] == 0)
					{
					   	PlayerInfo[playerid][pAppearList] = 1;
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥”‘⁄œﬂπ‹¿Ì√˚µ•÷–ÃÌº”¡À◊‘º∫!");
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥”‘⁄œﬂπ‹¿Ì√˚µ•÷–ÃÌº”¡À◊‘º∫.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}

				}
				else if(listitem == 3)
				{
				    if(HelpMessages[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’Ω” ’«Û÷˙œ˚œ¢!");
				        HelpMessages[playerid] = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’Ω” ’«Û÷˙œ˚œ¢.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(HelpMessages[playerid] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™Ω” ’«Û÷˙œ˚œ¢!");
				        HelpMessages[playerid] = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™Ω” ’«Û÷˙œ˚œ¢.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 4)
				{
				    if(PlayerInfo[playerid][pAdmin] < 2)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(noooc == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„“—πÿ±’¡ÀOOC¡ƒÃÏ!");
				        SendClientMessageToAll(COLOR_LIGHTRED, "* OOC¡ƒÃÏ“—±ªπ‹¿Ì‘±Ω˚”√");
				        noooc = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s “—πÿ±’¡ÀOOC¡ƒÃÏ.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(noooc == 1)
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ƒ„“—¥Úø™¡ÀOOC¡ƒÃÏ!");
					    SendClientMessageToAll(COLOR_LIGHTRED, "* OOC¡ƒÃÏ“—±ªπ‹¿Ì‘±¥Úø™");
				        noooc = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s “—¥Úø™¡ÀOOC¡ƒÃÏ.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 5)
				{
				    if(Untouchable[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À“µ÷˜±£ª§!");
				        Untouchable[playerid] = 0;
					}
					else if(Untouchable[playerid] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À“µ÷˜±£ª§!");
				        Untouchable[playerid] = 1;
					}
				}
			}
		}
		if(dialogid == 1234) // /turn for admins
		{
			if(response)
			{
				if(listitem == 0)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiBunnyJump == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À Õ√◊”Ã¯ ºÏ≤‚!");
				        AntiBunnyJump = 0;
				        format(string, 128, "[π‹¿Ì]: %s πÿ±’¡À Õ√◊”Ã¯ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiBunnyJump == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À Õ√◊”Ã¯ ºÏ≤‚!");
				        AntiBunnyJump = 1;
				        format(string, 128, "[π‹¿Ì]: %s ¥Úø™¡À Õ√◊”Ã¯ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 1)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiWeaponHack == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ∫⁄øÕŒ‰∆˜ ºÏ≤‚!");
				        AntiWeaponHack = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ∫⁄øÕŒ‰∆˜ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiWeaponHack == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ∫⁄øÕŒ‰∆˜ ºÏ≤‚!");
				        AntiWeaponHack = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ∫⁄øÕŒ‰∆˜ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 2)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiInteriorHack == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À  “ƒ⁄∫⁄øÕ ºÏ≤‚!");
				        AntiInteriorHack = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À  “ƒ⁄∫⁄øÕ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiInteriorHack == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À  “ƒ⁄∫⁄øÕ ºÏ≤‚!");
				        AntiInteriorHack = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À  “ƒ⁄∫⁄øÕ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 3)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiJetpackHack == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ≈Á∆¯±≥∞¸∫⁄øÕ ºÏ≤‚!");
				        AntiJetpackHack = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ≈Á∆¯±≥∞¸∫⁄øÕ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiJetpackHack == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ≈Á∆¯±≥∞¸∫⁄øÕ ºÏ≤‚!");
				        AntiJetpackHack = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ≈Á∆¯±≥∞¸∫⁄øÕ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 4)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiMoneyHack == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À À¢«Æ∫⁄øÕ ºÏ≤‚!");
				        AntiMoneyHack = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À À¢«Æ∫⁄øÕ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiMoneyHack == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À À¢«Æ∫⁄øÕ ºÏ≤‚!");
				        AntiMoneyHack = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À À¢«Æ∫⁄øÕ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 5)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiAfk == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ∑¥AFK ºÏ≤‚!");
				        AntiAfk = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ∑¥AFK ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiAfk == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ∑¥AFK ºÏ≤‚!");
				        AntiAfk = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ∑¥AFK ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 6)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiName == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ∑¥∑«∑¥œ‡√˚≥∆ ºÏ≤‚!");
				        AntiName = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ∑¥∑«∑¥œ‡√˚≥∆ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiName == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ∑¥∑«∑¥œ‡√˚≥∆ ºÏ≤‚!");
				        AntiName = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ∑¥∑«∑¥œ‡√˚≥∆ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 7)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
					if(AntiDriveBy == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À º›≥µ…±»À ºÏ≤‚!");
				        AntiDriveBy = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À º›≥µ…±»À ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiDriveBy == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À º›≥µ…±»À ºÏ≤‚!");
				        AntiDriveBy = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À º›≥µ…±»À ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 8)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
				    if(AntiFakeKill == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ∑¥ºŸÀ¿Õˆ ºÏ≤‚!");
				        AntiFakeKill = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ∑¥ºŸÀ¿Õˆ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiFakeKill == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ∑¥ºŸÀ¿Õˆ ºÏ≤‚!");
				        AntiFakeKill = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ∑¥ºŸÀ¿Õˆ ºÏ≤‚.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 9)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
					if(AntiHighPing == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ∏ﬂpingÃﬂ!");
				        AntiHighPing = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ∏ﬂpingÃﬂ.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiHighPing == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ∏ﬂpingÃﬂ!");
				        AntiHighPing = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ∏ﬂpingÃﬂ.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
				else if(listitem == 10)
				{
				    ShowPlayerDialog(playerid, 13337,DIALOG_STYLE_INPUT,"◊Ó¥Û»›–ÌPing","‘⁄’‚¿Ô ‰»Î◊Ó¥Û»›–Ìµƒping÷µ,±ÿ–ÎÃÓ–¥ ˝◊÷!","»∑∂®","»°œ˚");
				}
				else if(listitem == 11)
				{
				    if(PlayerInfo[playerid][pAdmin] < 6)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
						return 1;
					}
					if(AntiSpam == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„πÿ±’¡À ∑¥À¢∆¡Ãﬂ!");
				        AntiSpam = 0;
				        format(string, sizeof(string), "[π‹¿Ì]: %s πÿ±’¡À ∑¥À¢∆¡Ãﬂ.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
					else if(AntiSpam == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„¥Úø™¡À ∑¥À¢∆¡Ãﬂ!");
				        AntiSpam = 1;
				        format(string, sizeof(string), "[π‹¿Ì]: %s ¥Úø™¡À ∑¥À¢∆¡Ãﬂ.",sendername);
				        ABroadCast(COLOR_LIGHTRED, string, 5);
					}
				}
			}
			SaveAnticheat();
		}
		if(dialogid == 13337)
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pAdmin] < 6)
				{
					SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
					return 1;
				}
				new final = strval(inputtext);
				if(final != 0)
				{
				    if (final > 65535 || final < 100)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "* ping◊Ó¥Û≤ª≥¨π˝ 65535 ◊Ó–°≤ªƒ‹µÕ”⁄ 100");
						ShowPlayerDialog(playerid, 13337,DIALOG_STYLE_INPUT,"◊Ó¥Û»›–ÌPing (100-65535)","‘⁄’‚¿Ô ‰»Î◊Ó¥Û»›–Ìµƒping÷µ,±ÿ–ÎÃÓ–¥ ˝◊÷!","»∑∂®","»°œ˚");
						return 1;
					}
					MaxPing = final;
					format(string, sizeof(string),"* ◊Ó¥Û»›–Ìµƒping…Ë÷√Œ™ %d",final);
					SendClientMessage(playerid, COLOR_GREY,string);
					format(string,sizeof(string),"* ◊Ó¥Û»›–Ìµƒping…Ë÷√Œ™ %d ”… %s (%d)",final,sendername,playerid);
					SendClientMessageToAll(COLOR_CREAM,string);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has set the max ping to %d",d,m,y,h,mi,s,sendername, final);
					AdminLog(string);
				}
				else return SendClientMessage(playerid, COLOR_GREY,"* Œﬁ–ß÷µ±ÿ–Î¥Û”⁄100!") && ShowPlayerDialog(playerid, 13337,DIALOG_STYLE_INPUT,"◊Ó¥Û»›–ÌPing (100-65535)","‘⁄’‚¿Ô ‰»Î◊Ó¥Û»›–Ìµƒping÷µ,±ÿ–ÎÃÓ–¥ ˝◊÷!","»∑∂®","»°œ˚");
			}
		}
		return 0;
	}


public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    /*if ( pickupid == license_pu )
	{
       GameTextForPlayer(playerid, "~y~You can get a ~r~Driving license ~n~~w~Type /buydriving to get a license ~n~~r~(Costs: 1 000 $)", 5000, 3);
	}
    if ( pickupid == license_pu2 )
	{
       GameTextForPlayer(playerid, "~y~You can get a ~r~Flying license ~n~~w~Type /buyflying to get a license ~n~~r~(Costs: 65 000 $)", 5000, 3);
    }
    if ( pickupid == license_pu3 )
	{
       GameTextForPlayer(playerid, "~y~You can get a ~r~Sailing license ~n~~w~Type /buysailing to get a license ~n~~r~(Costs: 15 000 $)", 5000, 3);
	}
    if ( pickupid == license_pu4 )
    {
       GameTextForPlayer(playerid, "~y~You can get a ~r~Gun license ~n~~w~Type /buygunlic to get a license ~n~~r~(Costs: 35 000 $)", 5000, 3);
	}
    if ( pickupid == license_pu5 )
    {
       GameTextForPlayer(playerid, "~y~You can get a ~r~Fishing license ~n~~w~Type /buyfishing to get a license ~n~~r~ (Costs: 5 000 $)", 5000, 3);
	}*/
	
	if ( pickupid == Para1 )
	{
	    GameTextForPlayer(playerid, "~y~Los Santos Int. ~n~~w~If you wish to Fly to Somewhere type ~y~/flyto",4000,3);
	}
	if ( pickupid == Para1 )
	{
	    GameTextForPlayer(playerid, "~y~Los Santos Int. ~n~~w~If you wish to Fly to Somewhere type ~y~/flyto",4000,3);
	}
	if ( pickupid == Para2 )
	{
	    GameTextForPlayer(playerid, "~y~San Fierro Int. ~n~~w~If you wish to Fly to Somewhere type ~y~/flyto",4000,3);
	}
	if ( pickupid == Para3 )
	{
	    GameTextForPlayer(playerid, "~y~Las Venturas Int. ~n~~w~If you wish to Fly to Somewhere type ~y~/flyto",4000,3);
	}
	if ( pickupid == Para4 )
	{
	    GameTextForPlayer(playerid, "~y~Verdant Meadows Airport ~n~~w~If you wish to Fly to Somewhere type ~y~/flyto",4000,3);
	}
	if ( pickupid == rpc_money  )
	{
	    if(RpcMoney[playerid] == 0)
	    {
		    new Float:X, Float:Y, Float:Z;
		    GetPlayerPos(playerid, X,Y,Z);
		    if(PlayerInfo[playerid][pRegularRank] == 1)
		    {
			    SafeGivePlayerMoney(playerid,150);
			    GameTextForPlayer(playerid, "~w~Found ~g~$150 ~w~!", 4000, 3);
		    	PlayerPlaySound(playerid, 1056, X, Y, Z);
		    	RpcMoney[playerid] = 1;
			}
			else if(PlayerInfo[playerid][pRegularRank] == 2)
			{
			    SafeGivePlayerMoney(playerid,250);
			    GameTextForPlayer(playerid, "~w~Found ~g~$250 ~w~!", 4000, 3);
		    	PlayerPlaySound(playerid, 1056, X, Y, Z);
		    	RpcMoney[playerid] = 1;
			}
			else if(PlayerInfo[playerid][pRegularRank] == 3)
			{
			    SafeGivePlayerMoney(playerid,500);
			    GameTextForPlayer(playerid, "~w~Found ~g~$500 ~w~!", 4000, 3);
		    	PlayerPlaySound(playerid, 1056, X, Y, Z);
		    	RpcMoney[playerid] = 1;
			}
		}
	}
 	if ( pickupid == rpc_armor  )
	{
	    if(RpcArmor[playerid] == 0)
	    {
			if(PlayerInfo[playerid][pRegularRank] == 3)
			{
			    GameTextForPlayer(playerid, "~w~Found a ~b~Body Armour ~w~!", 4000, 3);
				new Float:X, Float:Y, Float:Z;
			    GetPlayerPos(playerid, X,Y,Z);
			    PlayerPlaySound(playerid, 1056, X, Y, Z);
			    RpcArmor[playerid] = 1;
			    SafeSetPlayerArmour(playerid, 100);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„∑¢œ÷¡À∑¿µØ“¬µ´ «ƒ„∞—À¸∂™µÙ¡À.   ÷ª”– ≥£øÕ lvl 3 ≤≈ø…“‘ π”√À¸");
			}
		}
 	}
 	if ( pickupid == rpc_parachute  )
	{
	    if(RpcPara[playerid] == 0)
	    {
		    if(PlayerInfo[playerid][pRegularRank] >= 1)
		    {
			    GameTextForPlayer(playerid, "~w~Found a ~b~Parachute ~w~!", 4000, 3);
			    new Float:X, Float:Y, Float:Z;
			    GetPlayerPos(playerid, X,Y,Z);
			    PlayerPlaySound(playerid, 1056, X, Y, Z);
			    SafeGivePlayerWeapon(playerid, 46,1);
			    RpcPara[playerid] = 1;
			}
		}
 	}
 	if ( pickupid == tall_death  )
	{
	    GameTextForPlayer(playerid, "~w~Good Bye ~r~World ~w~!", 4000, 3);
	    new Float:X, Float:Y, Float:Z;
	    GetPlayerPos(playerid, X,Y,Z);
	    SafeSetPlayerPos(playerid,1551.9875, -1323.7058, 330.0601);
	    PlayerPlaySound(playerid, 1130, X, Y, Z);
 	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
    new Float:PlayerHealth;
    new Health = GetPlayerHealth(playerid, PlayerHealth);
    if(Current == BurgerShot)
	{
	 	switch(row)
	 	{
	  		case 0:
	  		{
	  			SafeGivePlayerMoney(playerid, -3);
	  			if(Health <= 74.9)
	  			{
	  				SetPlayerHealth(playerid, PlayerHealth+25);
				}
				else
				{
				    SetPlayerHealth(playerid, 100.0);
				}
	  			SendClientMessage(playerid, 0xFFC801C8, "∑˛ŒÒ‘±: ∏––ªƒ„π∫¬Ú ”§∂˘∫∫±§,◊£ƒ„”√≤Õ”‰øÏ!");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				TogglePlayerControllable(playerid, 1);
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
				return 1;
			}
			case 1:
	  		{
	  			SafeGivePlayerMoney(playerid, -6);
	  			if(Health <= 49.9)
	  			{
	  				SetPlayerHealth(playerid, PlayerHealth+50);
				}
				else
				{
				    SetPlayerHealth(playerid, 100.0);
				}
	  			SendClientMessage(playerid, 0xFFC801C8, "∑˛ŒÒ‘±: ∏––ªƒ„π∫¬Ú À´≤„ƒÃ¿“,◊£ƒ„”√≤Õ”‰øÏ!");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				TogglePlayerControllable(playerid, 1);
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
				return 1;
			}
			case 2:
	  		{
	  			SafeGivePlayerMoney(playerid, -9);
	  			SetPlayerHealth(playerid, 100);
	  			SendClientMessage(playerid, 0xFFC801C8, "∑˛ŒÒ‘±: ∏––ªƒ„π∫¬Ú Ãÿ¿Ô∆’∂˚ª™∫∫±§,◊£ƒ„”√≤Õ”‰øÏ!");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				TogglePlayerControllable(playerid, 1);
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
				return 1;
			}
			case 3:
			{
			    if(PlayerTied[playerid] != 1 || PlayerCuffed[playerid] != 1)
			    {
			        TogglePlayerControllable(playerid, 1);

				}
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
			    return 1;
			}
		}
	}
	if(Current == CluckinBell)
	{
	 	switch(row)
	 	{
	  		case 0:
	  		{
	  			SafeGivePlayerMoney(playerid, -3);
	  			if(Health <= 74.9)
	  			{
	  				SetPlayerHealth(playerid, PlayerHealth+25);
				}
				else
				{
				    SetPlayerHealth(playerid, 100.0);
				}
	  			SendClientMessage(playerid, 0xFFC801C8, "∑˛ŒÒ‘±: œ¬ŒÁ∫√,–ª–ªƒ˙∂‘Œ“√«µƒ ≥ŒÔ”––À»§!");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				TogglePlayerControllable(playerid, 1);
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
				return 1;
			}
			case 1:
	  		{
	  			SafeGivePlayerMoney(playerid, -6);
	  			if(Health <= 49.9)
	  			{
	  				SetPlayerHealth(playerid, PlayerHealth+50);
				}
				else
				{
				    SetPlayerHealth(playerid, 100.0);
				}
	  			SendClientMessage(playerid, 0xFFC801C8, "∑˛ŒÒ‘±:Œ“√«∏––ªƒ˙£¨œ£Õ˚ƒ˙œÌ ‹ƒ˙µƒº¶≥·£¨”–“ª∏ˆ√¿∫√µƒ“ªÃÏ!");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				TogglePlayerControllable(playerid, 1);
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
				return 1;
			}
			case 2:
	  		{
	  			SafeGivePlayerMoney(playerid, -9);
	  			SetPlayerHealth(playerid, 100);
	  			SendClientMessage(playerid, 0xFFC801C8, "∑˛ŒÒ‘±: Œ“√«œ£Õ˚ƒ„≥‘µƒ’‚“ª«–, ƒ‹»√ƒ„”–“ª∏ˆ”‰øÏ–ƒ«È!");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				TogglePlayerControllable(playerid, 1);
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
				return 1;
			}
			case 3:
			{
			    if(PlayerTied[playerid] != 1 || PlayerCuffed[playerid] != 1)
			    {
			        TogglePlayerControllable(playerid, 1);

				}
				SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
			    return 1;
			}
		}
	}
   	if(Current == burgermenu || Current == chickenmenu || Current == pizzamenu || Current == donutshop)
	{
		TogglePlayerControllable(playerid, 1);
		if (row != 10) // 10 = Leave
		{
			if (GetPlayerMoney(playerid) <= 0)
			{
				GameTextForPlayer(playerid, "~r~Not Enough Cash", 5000, 1);
				return 1;
			}
			new actstring[128];
			new sendername[64];
			new Float:health;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			GetPlayerHealth(playerid, health);
			if (row == 7 || row == 8) // Drink
			{
				format(actstring, sizeof(actstring), "* %s drinks from their cup.", sendername);
				SafeGivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			else // Meal
			{
				switch (row)
				{
					case 1:
					{
					    if(Current == donutshop) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘À˚µƒÃÃ»¶.", sendername);
						else format(actstring, sizeof(actstring), "* %s ‘⁄≥‘À˚µƒÃÃ»¶.", sendername);
						SafeGivePlayerMoney(playerid, -2);
						SetPlayerHealth(playerid, health + 20);
					}
					case 2:
					{
						if (Current == chickenmenu) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘”ÕƒÂµƒ’®º¶øÈ.", sendername);
						else if (Current == pizzamenu) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘”ÕƒÂµƒ±»»¯±˝.", sendername);
						else if (Current == donutshop) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘ÃÃ»¶.", sendername);
						else format(actstring, sizeof(actstring), "* %s eats their cheeseburger.", sendername);
						SafeGivePlayerMoney(playerid, -4);
						SetPlayerHealth(playerid, health + 50);
					}
					case 3:
					{
						if (Current == pizzamenu) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘”ÕƒÂµƒ±»»¯±˝.", sendername);
						else if (Current == donutshop) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘Ãÿ¥Û–ÕÃÃ»¶.", sendername);
						else format(actstring, sizeof(actstring), "* %s eats their greasy sandwich.", sendername);
						SafeGivePlayerMoney(playerid, -5);
						SetPlayerHealth(playerid, health + 80);
					}
					case 4:
					{
					    if (Current == donutshop) format(actstring, sizeof(actstring), "* %s ‘⁄≥‘≥¨¥ÛÃÃ»¶.", sendername);
					    else format(actstring, sizeof(actstring), "* %s ‘⁄≥‘–¬œ ≈◊…≥¿≠.", sendername);
						SafeGivePlayerMoney(playerid, -3);
						SetPlayerHealth(playerid, health + 35);
					}
				}
				if (Current == burgermenu) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,0,1);
				else if (Current == chickenmenu) ApplyAnimation(playerid,"FOOD","EAT_Chicken",4.1,0,1,1,0,1);
				else if (Current == pizzamenu) ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,0,1);
				else if (Current == donutshop) ApplyAnimation(playerid,"FOOD","EAT_Pizza",4.1,0,1,1,0,1);
				if (GetPlayerMoney(playerid) > 100) SetPlayerHealth(playerid, 100);
			}
			ProxDetector(30.0, playerid, actstring, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		}
	}
	if(Current == Licenses)
	{
	    switch(row)
	    {
	        case 0:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* »Áπ˚ƒ˙œÎ∞Ï¿Ìº› ª÷¥’’ π”√:/buydriving *");
	    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Œ“√«œ£Õ˚ƒ˙ƒ‹‘⁄µ¿¬∑ΩªÕ®≤ª“™≥¨ÀŸ£°–°–ƒº› ª£° *");
	    		SendClientMessage(playerid, COLOR_LIGHTRED, "* [º› ª÷¥’’∑—: 3,500$] *");
	    		TogglePlayerControllable(playerid,1);
		 	}
    		case 1:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* »Áπ˚ƒ˙œÎ∞Ï¿Ì∑…––÷¥’’ π”√: /buyflying *");
	    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Œ“√«œ£Õ˚ƒ˙ƒ‹‘⁄ø’÷–ΩªÕ®≤ª“™∑…µƒÃ´µÕ!*");
                SendClientMessage(playerid, COLOR_LIGHTRED, "* [∑…––÷¥’’∑—: 10,500$] *");
				TogglePlayerControllable(playerid,1);
		 	}
		 	case 2:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* »Áπ˚ƒ˙œÎ∞Ï¿Ì¥¨≤∞÷¥’’ π”√: /buysailing *");
	    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Œ“√«œ£Õ˚ƒ˙ƒ‹‘⁄∫£…œΩªÕ®◊¢“‚∞≤»´≤ª“™œÒÃ©Ãπƒ·øÀ∫≈“ª—˘±Ø≤“£° *");
                SendClientMessage(playerid, COLOR_LIGHTRED, "* [¥¨≤∞÷¥’’∑—: 5,500$] *");
				TogglePlayerControllable(playerid,1);
		 	}
		 	case 3:
	        {
         		HideMenuForPlayer(Licenses, playerid);
	            TogglePlayerControllable(playerid,1);
		 	}
		}
	}

	if(Current == Guide)
	{
	    switch(row)
	    {
	        case 0:
	        {
	            SendClientMessage(playerid, COLOR_GREEN, "______________”Œœ∑πÊ‘Ú_______________");
	            SendClientMessage(playerid, COLOR_GRAD5, "* 1«Î≤ª“™ π”√◊˜±◊∆˜");
	            SendClientMessage(playerid, COLOR_GRAD5, "* 2«Î≤ª“™DMªÏ’Ω,’‚¿Ô «RP∑˛ŒÒ∆˜");
	            SendClientMessage(playerid, COLOR_GRAD5, "* 3’‚¿Ôƒ„–Ë“™∞Á—›“ª∏ˆ…˙ªÓΩ«…´");
	            SendClientMessage(playerid, COLOR_GRAD5, "* 4«Î◊Ò ÿ’‚¿ÔµƒπÊ‘Ú");
	            SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
	            TogglePlayerControllable(playerid,1);
	        }
	        case 1:
	        {
	            HideMenuForPlayer(Guide, playerid);
	            ShowMenuForPlayer(JobLocations, playerid);
	        }
	        case 2:
	        {
	            SendClientMessage(playerid, COLOR_GREEN, "÷¥’’÷––ƒµƒŒª÷√“—æ≠”√∫Ïµ„±Í ∂µΩ¡À–°µÿÕº.");
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: µ±ƒ„µΩ¡Àƒ«¿Ô º¸»Î /licensers ø…“‘¥Úø™ø…∞Ï¿Ì÷¥’’µƒ¡–±Ì");
	            SetPlayerCheckpoint(playerid,2048.352,-1900.153,13.5538,5.0);
	            TogglePlayerControllable(playerid,1);
	        }
	        case 3:
	        {
	            SendClientMessage(playerid, COLOR_GREEN, "∆˚≥µ≥ˆ◊‚µ„“—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1696.5543,-1053.4685,23.9063,5.0);
	            TogglePlayerControllable(playerid,1);
	        }
	        case 4:
	        {
	            SendClientMessage(playerid, COLOR_GREEN, "Binco∑˛ ŒµÍ“—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ:µ±ƒ„µΩ¡Àƒ«¿Ô  º¸»Î /clothes ø…“‘π∫¬Ú∑˛◊∞.");
	            SetPlayerCheckpoint(playerid,2244.3423,-1665.5542,15.4766,5.0);
	            TogglePlayerControllable(playerid,1);
	        }
	        case 5:
	        {
	            HideMenuForPlayer(Guide, playerid);
	            TogglePlayerControllable(playerid,1);
	        }
	    }
	}
	if(Current == JobLocations)
	{
	    switch(row)
	    {
	        case 0:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "’ÏÃΩπ§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1481.0206,-1771.1138,18.7958,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 1:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "¬… ¶π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1481.0206,-1771.1138,18.7958,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 2:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "∑˛ŒÒ‘±π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1498.2079,-1581.2236,13.5498,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 3:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "÷∞“µ»≠ª˜ ÷ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2229.9011,-1721.2582,13.5613,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 4:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "ø®≥µÀæª˙π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2439.7710,-2120.9285,13.5469,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 5:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "≈©√Òπ§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,-382.6660,-1426.5121,26.2410,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 6:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "≥ˆ◊‚≥µÀæª˙π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1791.5248,-1900.1350,13.3978,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 7:
	        {
	            SendClientMessage(playerid, COLOR_LIGHTRED, "π´≥µÀæª˙π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1154.2208,-1770.8203,16.5992,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 8:
			{
				HideMenuForPlayer(JobLocations, playerid);
				ShowMenuForPlayer(JobLocations2, playerid);
			}
			case 9:
			{
			    HideMenuForPlayer(JobLocations, playerid);
	            ShowMenuForPlayer(Guide, playerid);
			}
	    }
	}
	if(Current == JobLocations2)
	{
	    switch(row)
	    {
	        case 0:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "±®ÕØπ§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1788.9150,-1292.7264,13.5861,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 1:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "≈˚»¯µÍÕ‚ÀÕ‘±π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2101.7620,-1812.5922,13.5547,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 2:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "µ¿¬∑«Â…®π§π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1611.5129,-1893.6997,13.5469,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 3:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "∆˚≥µ–ﬁ¿Ìπ§π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2077.52,-2013.56,13.54,5.0);
	            TogglePlayerControllable(playerid,1);
			}
 			case 4:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "±£Ô⁄π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,1481.0206,-1771.1138,18.7958,5.0);
	            TogglePlayerControllable(playerid,1);
			}
  			case 5:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Ãÿºº—›‘±π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2695.4043,-1704.3582,11.8438,5.0);
	            TogglePlayerControllable(playerid,1);
			}
   			case 6:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "ºÀ≈Æπ§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2421.4998,-1219.2438,25.5617,5.0);
	            TogglePlayerControllable(playerid,1);
			}
			case 7:
			{
				HideMenuForPlayer(JobLocations2, playerid);
				ShowMenuForPlayer(JobLocations3, playerid);
			}
 			case 8:
			{
				HideMenuForPlayer(JobLocations2, playerid);
				ShowMenuForPlayer(JobLocations, playerid);
			}
			case 9:
			{
			    HideMenuForPlayer(JobLocations2, playerid);
			    ShowMenuForPlayer(Guide, playerid);
			}
	    }
	}
 	if(Current == JobLocations3)
	{
	    switch(row)
	    {
	        case 0:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "∂æ∑∑π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2072.5486,-1582.8029,13.4741,5.0);
	            TogglePlayerControllable(playerid,1);
			}
 	        case 1:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "∂æ∆∑÷÷÷≤…Ãπ§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,-69.0584,-20.6116,3.1172,5.0);
	            TogglePlayerControllable(playerid,1);
			}
  	        case 2:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "∂æ∆∑◊ﬂÀΩ∑∑π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2022.1492,-1108.7837,26.2031,5.0);
	            TogglePlayerControllable(playerid,1);
			}
   	        case 3:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "≤ƒ¡œ◊ﬂÀΩ∑∑π§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,213.8549,-230.5761,1.7786,5.0);
	            TogglePlayerControllable(playerid,1);
			}
   			case 4:
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Œ‰∆˜÷∆‘Ï…Ãπ§◊˜µ„ “—æ≠”√∫Ïµ„±Í ∂µΩ–°µÿÕº.");
	            SetPlayerCheckpoint(playerid,2137.6624,-2282.3455,20.6719,5.0);
	            TogglePlayerControllable(playerid,1);
			}
  			case 5:
			{
				HideMenuForPlayer(JobLocations3, playerid);
				ShowMenuForPlayer(JobLocations2, playerid);
			}
 			case 6:
			{
			    HideMenuForPlayer(JobLocations3, playerid);
			    ShowMenuForPlayer(Guide, playerid);
			}
	    }
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	new Menu:Current = GetPlayerMenu(playerid);
	if(!IsValidMenu(Current)) return 1;
	ShowMenuForPlayer(Current, playerid);
	TogglePlayerControllable(playerid,1);
	SetTimerEx("CanDriveThruAgain", 7000, 0, "i", playerid);
	return 1;
}

public RefreshMenuHeader(playerid,Menu:menu,text[])
{
	SetMenuColumnHeader(menu,0,text);
	ShowMenuForPlayer(menu,playerid);
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}


public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[128];
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	new vehicle = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER && (pveh != 509 && pveh != 481 && pveh != 510) && IsPlayerInAnyVehicle(playerid) && !IsAHarvest(vehicle) && !IsADrugHarvest(vehicle) && !IsASweeper(vehicle))
	{
		SetTimerEx("Startup", 1, false, "ii", playerid, vehicle);
		SetTimerEx("engine2", 2500, false, "i", playerid);
	}
/*
	else if(newstate == PLAYER_STATE_DRIVER && (pveh != 509 && pveh != 481 && pveh != 510) && IsPlayerInAnyVehicle(playerid) && !IsAHarvest(vehicle) && !IsADrugHarvest(vehicle) && !IsASweeper(vehicle))
	{
		SetTimerEx("Startup", 1, false, "ii", playerid, vehicle);
		SetTimerEx("engine2", 2500, false, "i", playerid);
	}
*/
	if(newstate == PLAYER_STATE_DRIVER && (pveh == 420 || pveh == 438))
	{
	    SetRealMoney(playerid, ScriptMoney[playerid]);
	}
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
	   	if(Decoding[playerid] == 1)
		{
		    Decoding[playerid] = 0;
		    KillTimer(DecoderTimer);
			HideDecoder(playerid);
			SendClientMessage(playerid, COLOR_NICERED, "ƒ„¿Îø™¡À∆˚≥µΩ‚¬Î∆˜Õ£÷π!");
			decodecode = 0;
			Decoder = 0;
		}
		ScriptWeaponsUpdated[playerid] = 1;
	    SetTimerEx("UpdateWeapons",2000,false,"i",playerid);
	}
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    TogglePlayerControllable(playerid, 1);
		if(PlayerInfo[playerid][pAdminDuty] == 1)
	 	{
	 	    Delete3DTextLabel(DutyLabel[playerid]);
	 		DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡π‹¿Ì \n «ÎŒπ•ª˜!",0xFF000099,0,0,0,50,-1,1);
			Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		}
		else if(PlayerInfo[playerid][pTesterDuty] == 1)
		{
		    Delete3DTextLabel(DutyLabel[playerid]);
			DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡≤‚ ‘ \n «ÎŒπ•ª˜!",0x00AA0099,0,0,0,50,-1,1);
			Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		}
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* ƒ„œ÷‘⁄œ¬∞‡¡À◊¨»°¡À $%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SafeGivePlayerMoney(playerid, TransportMoney[playerid]);
			/*ConsumingMoney[playerid] = 1;*/
			TransportValue[playerid] = 0;
			TransportMoney[playerid] = 0;
			SetPlayerToTeamColor(playerid);
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(string, sizeof(string), "~w~The ride cost~n~~r~$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Passenger left the taxi~n~~g~Earned $%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				SafeGivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerMoney(playerid) < TransportValue[i])
	                {
	                    format(string, sizeof(string), "* ƒ„–Ë“™ $%d ≤≈ø…“‘Ω¯»Î.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeRemovePlayerFromVehicle(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(string, sizeof(string), "* ƒ„÷ß∏∂¡À $%d ∏¯≥ˆ◊‚≥µÀæª˙.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* ≥ÀøÕ %s Ω¯»Î¡Àƒ„µƒ≥µ.", name);
							SendClientMessage(i, COLOR_WHITE, string);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(string, sizeof(string), "* ƒ„÷ß∏∂¡À $%d ∏¯π´≥µÀæª˙.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* ≥ÀøÕ %s Ω¯»Î¡Àƒ„µƒ≥µ.", name);
							SendClientMessage(i, COLOR_WHITE, string);
	                    }
						SafeGivePlayerMoney(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	    if(PlayerInfo[playerid][pAdminDuty] == 1)
	 	{
	 	    Delete3DTextLabel(DutyLabel[playerid]);
	 		DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡π‹¿Ì \n «ÎŒπ•ª˜!",0xFF000099,0,0,0,50,-1,1);
			Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		}
		else if(PlayerInfo[playerid][pTesterDuty] == 1)
		{
		    Delete3DTextLabel(DutyLabel[playerid]);
			DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡≤‚ ‘ \n «ÎŒπ•ª˜!",0x00AA0099,0,0,0,50,-1,1);
			Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		}
	}
	if(newstate == PLAYER_STATE_WASTED)
	{
		if(WantedLevel[playerid] >= 1)
		{
		    new price = WantedLevel[playerid] * 1000;
			new count;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(gTeam[i] == 2 && CrimInRange(30.0, playerid,i))
				    {
						count = 1;
						format(string, sizeof(string), "~w~Running Suspect~r~Killed~n~Bonus~g~$%d", price);
						GameTextForPlayer(i, string, 5000, 1);
						//ConsumingMoney[i] = 1;
						SafeGivePlayerMoney(i, price / 2);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			if(count == 1)
			{
				SafeGivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				PlayerInfo[playerid][pJailed] = 1;
			    PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(600);
			    format(string, sizeof(string), "* ƒ„–Ë“™‘⁄º‡”¸¥˝ %d √Î≤¢«“∑£»°¡Àƒ„ $%d “ÚŒ™ƒ„≥ØæØ≤Ïø™«π≤¢Ã”“›.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, string);//arrest
			    WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
				TextDrawShowForPlayer(playerid, Textdraw1[playerid]);
			}
		}
	}

	if(newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		TextDrawShowForPlayer(playerid, Textdraw39[playerid]);
		TextDrawShowForPlayer(playerid, Textdraw40[playerid]);
		if(PlayerInfo[playerid][pAdminDuty] == 1)
	 	{
	 	    Delete3DTextLabel(DutyLabel[playerid]);
	 		DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡π‹¿Ì \n «ÎŒπ•ª˜!",0xFF000099,0,0,0,50,-1,1);
			Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		}
		else if(PlayerInfo[playerid][pTesterDuty] == 1)
		{
		    Delete3DTextLabel(DutyLabel[playerid]);
			DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡≤‚ ‘ \n «ÎŒπ•ª˜!",0x00AA0099,0,0,0,50,-1,1);
			Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
		}
		if(IsASalesVehicle(newcar))
		{
			TogglePlayerControllable(playerid, 0);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~w~Welcome, type ~b~/v buy ~w~to buy this car, or ~b~/exit~w~ if you don't wanna buy it!",10000,4);
            if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: œ˙ €∆˚≥µ");
		}
		else
		{
			if(PlayerInfo[playerid][pCarLic] < 0)
			{
			    if(GetPlayerDrunkLevel(playerid) >= 6000)
				{
				    WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "æ∆∫Ûº›≥µ");
				}

			}
			else if(GetPlayerDrunkLevel(playerid) >= 6000)
			{
			    WantedPoints[playerid] += 1;
				SetPlayerCriminal(playerid,255, "æ∆∫Ûº›≥µ");
			}
		}
		if(IsModelABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„ªπ≤ª÷™µ¿»Á∫Œø™¥¨,À˘“‘ƒ„¿Îø™¡À¥¨ ! !");
			    SafeRemovePlayerFromVehicle(playerid);
			    TogglePlayerControllable(playerid, 1);
			}
		}
		else if(IsModelAPlane(newcar) || IsModelAHeli(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 1) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„ªπ≤ª÷™µ¿»Á∫Œø™∑…ª˙£¨À˘“‘ƒ„¿Îø™¡À∑…ª˙ ! !");
			    SafeRemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1); }
			}
		}
		else
		{
		    if(PlayerInfo[playerid][pCarLic] == 0)
		    {
				if(TakingLesson[playerid] == 0)
				{
			    
					SendClientMessage(playerid, COLOR_YELLOW, "   ƒ„ªπ√ª”–º›’’ƒÿ!–°–ƒæØ≤Ï¥˛≤∂ƒ„.");
				}
			}
		}
  		if(IsAnOwnableCar(newcar))
		{
			if(PlayerInfo[playerid][pPcarkey] == newcar) { CanTurnEngine[playerid] = newcar; }
			else if(PlayerInfo[playerid][pPcarkey2] == newcar) { CanTurnEngine[playerid] = newcar; }
			else
			{
			    if(PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "  ƒ„ø…“‘º› ª’‚¡æ≥µ“ÚŒ™ƒ„ «÷µ∞‡π‹¿Ì‘± !");
				}
			    else
			    {
					if(CarInfo[newcar][cLock] == 1)
					{
				        CanTurnEngine[playerid] = 9999;
				    	TogglePlayerControllable(playerid, 0);
				    	if(PlayerInfo[playerid][pDecoder] == 1)
				    	{
				    	    SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√ƒ„µƒΩ‚¬Î∆˜/decode Ω‚À¯");
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ∆˚≥µ√ª”–…œÀ¯,ƒ„ø…“‘∆Ù∂ØÀ¸!");
					    CanTurnEngine[playerid] = newcar;
					}
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: Ownable ≥µ");
		}
		else if(IsAnAmbulance(newcar))
		{
		    if(PlayerInfo[playerid][pMember]== 4 && JobDuty[playerid] == 1 || PlayerInfo[playerid][pLeader]== 4 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
			    if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: æ»ª§≥µ");
		}
  		else if(IsACopCar(newcar))
		{
		    if(IsAFreecop(playerid) && PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][pMember]== 1 && PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][pLeader]== 1 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: æØ≥µ");
		}
		else if(IsAFiremenCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember]== 12 && JobDuty[playerid] == 1 || PlayerInfo[playerid][pLeader]== 12 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
      		else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: œ˚∑¿≥µ");
		}
		else if(IsAnAdminCar(newcar))
		{
		    if(PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 4) { }
		    else
			{
				SafeRemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„±ÿ–Î «π‹¿Ì(lvl 4+) ≤≈ø…“‘ π”√’‚¡æ≥µ");
			}
		}
		else if(IsAnFbiCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember]== 2 && PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][pLeader]== 2 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
				if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: ¡™∞Óµ˜≤Èæ÷≥µ");
			}
		}
		else if(IsNgCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pDuty] == 1 || PlayerInfo[playerid][pLeader]== 3 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6)
			{
				CanTurnEngine[playerid] = newcar;
			}
		    else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: NG Car");
		}
		else if(IsASwatCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember]== 1 && PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pSwat]>= 1 && GetPlayerSkin(playerid) == 285 || PlayerInfo[playerid][pLeader]== 1 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessage(playerid, COLOR_LIGHT_BLUE,"[µ˜ ‘]: SWAT Car");
		}
		else if(IsATacticalCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember]== 2 && PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pTactical] >= 1 && GetPlayerSkin(playerid) == 285 || PlayerInfo[playerid][pLeader]== 2 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: Tactical Car");
		}
		else if(IsASpecialFCar(newcar))
		{
		    if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pDuty] == 1 && PlayerInfo[playerid][pSpecialF] >= 1 && GetPlayerSkin(playerid) == 179 || PlayerInfo[playerid][pLeader]== 3 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: SpecialF Car");
		}
		else if(IsAGovernmentCar(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 3||PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 7||PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
			{
		        if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: Government Car");
		}
		else if(IsAGangCar(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 5||PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
      		else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: »˝∫œª· Car");
		}
		else if(IsAGangCar2(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 6||PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: ¬Ûµ¬¡÷∞Ô Car");
		}
		else if(IsAGangCar3(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 14||PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: …Ωø⁄◊È Car");
		}
		else if(IsAGangCar4(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 15||PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: ¥Û»¶∞Ô car");
		}
		else if(IsAGangCar5(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 16||PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: Vice Car");
		}
		else if(IsAGangCar6(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 13||PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: Anarchy Car");
		}
		else if(IsAGangCar7(newcar))
		{
		    if(PlayerInfo[playerid][pLeader] == 8 ||PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else
      		{
				if(PlayerInfo[playerid][pDecoder] == 1)
			    {
			        CanTurnEngine[playerid] = 9999;
			    	TogglePlayerControllable(playerid, 0);
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„ø…“‘ π”√Ω‚¬Î∆˜ /decode∑Ò‘Úº¸»Î/exit¿Îø™");
				}
				else
				{
					SafeRemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ƒ„√ª”–Ω‚¬Î∆˜,ƒ„≤ªƒ‹∆∆Ω‚’‚¡æ≥µ");
				}
			}
			if(cDebug == 1) SendClientMessageToAll(COLOR_LIGHT_BLUE,"[µ˜ ‘]: Hitmen Car");
		}
		else if(IsAPizzabike(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 17 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6) { CanTurnEngine[playerid] = newcar; }
		    else {
		    CanTurnEngine[playerid] = 9999;
	        SafeRemovePlayerFromVehicle(playerid);
	        SendClientMessage(playerid, COLOR_GREY,"ƒ„√ª”–’‚¡æ◊‘––≥µµƒ‘ø≥◊.");}
		}
		else if(IsABus(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 14 || PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6)
			{
			    GameTextForPlayer(playerid, "~w~Use /starteast or /startwest to begin your bus route", 5000, 3);
				SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„“—æ≠Ω¯»Î¡À“ª¡æπ´π≤∆˚≥µ,º¸»Î/ EXIT»°œ˚¬∑æ∂—°‘Ò");
				SendClientMessage(playerid, COLOR_YELLOW2, "“™ø™ º◊ˆµƒŒ˜œﬂ, π”√/startwest.“™ø™ º◊ˆµƒ∂´œﬂ, π”√/starteast.");
				new routezonecheck = IsInBusrouteZone(playerid);
				if (routezonecheck == 0) SendClientMessage(playerid, COLOR_YELLOW, "◊¢“‚£∫ƒ„◊ÓΩ¸µƒ¬∑œﬂ «∂´.");
				else if (routezonecheck == 1) SendClientMessage(playerid, COLOR_YELLOW, "◊¢“‚£∫ƒ„◊ÓΩ¸µƒ¬∑œﬂ «Œ˜.");
				TogglePlayerControllable(playerid, 0);
				CanTurnEngine[playerid] = newcar;
			}
		}
		else if(IsATruck(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 16)
			{
				format(string, sizeof(string), "≤˙∆∑: %d/%d", PlayerHaul[newcar][pLoad],PlayerHaul[newcar][pCapasity]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_WHITE, "–≈œ¢: ƒ„ø…“‘œÚ∆Û“µÃ·π©≤˙∆∑’π æ.");
				SendClientMessage(playerid, COLOR_WHITE, "–≈œ¢: √¸¡Ó « /load /buyprods /sellprods");
			}
			CanTurnEngine[playerid] = newcar;
		}
		else if(IsASweeper(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 21)
		    {
		        if(PlayerIsSweeping[playerid] == 0)
		        {
		        	TogglePlayerControllable(playerid, 0);
		        	GameTextForPlayer(playerid, "~g~/startsweep ~w~ to start sweeping~n~Type ~r~/exit ~w~to leave the sweeper", 5000, 3);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘Õ®π˝º¸»Î/stopsweepÕ£÷π«Â…®.");
				}
		    }
		    CanTurnEngine[playerid] = newcar;
		}
		else if(IsARentableCar(newcar))
		{
			if (HireCar[playerid] != newcar)
			{
				//format(string, sizeof(string), "~w~You can Rent this car~n~Cost:~g~$%d~n~~w~To rent type ~g~/rentcar~w~~n~to get out type ~r~/exit",SBizzInfo[1][sbEntranceCost]);
				//GameTextForPlayer(playerid, string, 5000, 3);
				//TogglePlayerControllable(playerid, 0);
				CanTurnEngine[playerid] = 9999;
	 			//new listitems[] = "{FFFFFF}1\t{55EE55}◊‚≥µ\n{FFFFFF}2\t{55EE55}¿Îø™¥À≥µ.";//BY nill
				//ShowPlayerDialog(playerid,8522,DIALOG_STYLE_LIST,"«Î—°‘Ò:",listitems,"»∑∂®","»°œ˚");
				new listitems[] = "¥À≥µø…“‘◊‚”√.\nƒ„»∑∂®◊‚”√’‚¡æ≥µ√¥?";
				ShowPlayerDialog(playerid,8522,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");

			}
			else
			{
				CanTurnEngine[playerid] = newcar;
			}
		}
		else if(IsARentableBike(newcar))
		{
		    if (HireCar[playerid] != newcar)
			{
				//TogglePlayerControllable(playerid, 0);
                CanTurnEngine[playerid] = 9999;
				//format(string, sizeof(string), "~w~You can Rent this bike~n~Cost:~g~$%d~n~~w~To rent type ~g~/rentbike~w~~n~to get out type ~r~/exit",SBizzInfo[0][sbEntranceCost]);
				//GameTextForPlayer(playerid, string, 5000, 3);
		 		//new listitems[] = "{FFFFFF}1\t{55EE55}◊‚≥µ\n{FFFFFF}2\t{55EE55}¿Îø™¥À≥µ.";//BY nill
				//ShowPlayerDialog(playerid,8521,DIALOG_STYLE_LIST,"«Î—°‘Ò:",listitems,"»∑∂®","»°œ˚");
   				new listitems[] = "¥À≥µø…“‘◊‚”√.\nƒ„»∑∂®◊‚”√’‚¡æ≥µ√¥?";
				ShowPlayerDialog(playerid,8521,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			}
			else
			{
				CanTurnEngine[playerid] = newcar;
			}
		}
		else if(IsAHarvest(newcar))
		{
			if(PlayerInfo[playerid][pJob] == 18)
			{
			    if(FarmerVar[playerid] == 0)
			    {
			    	SendClientMessage(playerid, COLOR_RED, "___________≈©√Ò÷∏ƒœ___________");
			    	SendClientMessage(playerid, COLOR_WHITE, "** ≈©√Ò ** /startharvest[ ’∏Ó], /stopharvest ªÚ /exit [Õ£÷π ’∏Ó]");
			    	SendClientMessage(playerid, COLOR_RED, "__________________________________");
			    	TogglePlayerControllable(playerid, 0);
				}
				else { }
			}
			CanTurnEngine[playerid] = newcar;
		}
		else if(IsADrugHarvest(newcar))
		{
			if(PlayerInfo[playerid][pJob] == 19)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "____________∂æ∆∑÷÷÷≤…Ã÷∏ƒœ____________");
			    SendClientMessage(playerid, COLOR_WHITE, "** ∂æ∆∑÷÷÷≤…Ã ** /startdrugharvest[ ’∏Ó∂æ∆∑], /stopdrugharvest ªÚ /exit [Õ£÷π ’∏Ó∂æ∆∑]");
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "_________________________________________");
			    TogglePlayerControllable(playerid, 0);
			}
			CanTurnEngine[playerid] = newcar;
		}
		else if(IsASmuggleCar(newcar))
		{
		    if(PlayerInfo[playerid][pJob] == 20)
		    {
				SendClientMessage(playerid, COLOR_YELLOW, "Ã· æ: ƒ„œ÷‘⁄ø…“‘◊ﬂÀΩ∂æ∆∑¡À!");
    		}
    		CanTurnEngine[playerid] = newcar;
		}
		else
		{
		    CanTurnEngine[playerid] = newcar;
		}
		
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	return 1;
}

public HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //bullit
		}
		case 70:
		{
			return 130000; //infurnus
		}
		case 71:
		{
			return 100000; //turismo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public OnVehicleSpawn(vehicleid)
{
	if(IsAnOwnableCar(vehicleid))
	{
		if(CarInfo[vehicleid][cPaintjob] != 999)
		{
			ChangeVehiclePaintjob(vehicleid, CarInfo[vehicleid][cPaintjob]);
		}
		SetVehicleModifications(vehicleid);
		SetVehicleVirtualWorld(vehicleid, CarInfo[vehicleid][cVirWorld]);
		ChangeVehicleColor(vehicleid, CarInfo[vehicleid][cColorOne],CarInfo[vehicleid][cColorTwo]);
	}
	new model = GetVehicleModel(vehicleid);
	if(model == 520)
	{
	    DestroyVehicle(vehicleid);
	    Hydras --;
	}
	if(model == 425)
	{
	    DestroyVehicle(vehicleid);
	    Hunters --;
	}
	if(model == 432)
	{
	    DestroyVehicle(vehicleid);
	    Rhinos --;
	}
	if(model == 430)
	{
	    DestroyVehicle(vehicleid);
	    Predators --;
	}
	return 1;
}

public CarCheck()
{
	new string[128];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
	        /*SetVehicleParamsForPlayer(99, j, 0, 0);
	        SetVehicleParamsForPlayer(100, j, 0, 0);
	        SetVehicleParamsForPlayer(101, j, 0, 0);
	        SetVehicleParamsForPlayer(102, j, 0, 0);
	        SetVehicleParamsForPlayer(103, j, 0, 0);
	        SetVehicleParamsForPlayer(104, j, 0, 0);
	        SetVehicleParamsForPlayer(105, j, 0, 0);
	        SetVehicleParamsForPlayer(106, j, 0, 0);
	        SetVehicleParamsForPlayer(107, j, 0, 0);
	        SetVehicleParamsForPlayer(108, j, 0, 0);
	        SetVehicleParamsForPlayer(109, j, 0, 0);*/
		    new Float:health;
		    GetPlayerHealth(j, health);
			if(STDPlayer[j]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_WHITE, "*  ”…”⁄–‘≤° ß»•¡À 4 µ„Ω°øµ.");
			}
			else if(STDPlayer[j]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_WHITE, "*  ”…”⁄–‘≤° ß»•¡À 8 µ„Ω°øµ.");
			}
			else if(STDPlayer[j]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 20.0);
			    SendClientMessage(j, COLOR_WHITE, "*  ”…”⁄–‘≤° ß»•¡À 12 µ„Ω°øµ.");
			}

			if(GetPlayerMoney(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(string, sizeof(string), "ƒ„µƒ’ÆŒÒ,»Áπ˚‘⁄œ¬¥Œ≤ªªπ«Â $%d ƒ«ƒ„æÕ»•◊¯¿Œ∞….", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
					DebtMoney[j] = GetPlayerMoney(j);
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pJob] == 5)
				{
					SetVehicleParamsForPlayer(c, i, 0, 0);
				}
			}
		}
		if (gLastDriver[c] == 301)
		{
//			CarRespawn(c);
		}
		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//foundowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

/*public CarTow(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
	SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
	return 1;
}

public CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return 1;
}*/
stock AllCarRespawn()
{
	new CarPd;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    CarPd = 0;
		for(new j = 0; j < MAX_PLAYERS; j++)
		{
			if(IsPlayerConnected(j))
			{
				if(IsPlayerInVehicle(j, i))
				{
					CarPd = 1;
					continue;
				}
			}
		}
		if(CarPd == 0)
		{
			SetVehicleToRespawn(i);
		}
	}
}
public LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}

public UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!IsAPlane(carid))
			{
				SetVehicleParamsForPlayer(carid,i,0,0);
			}
		}
	}
}

public InitLockDoors(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 254)
		{
			c++;
			if (gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid,0,1);
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] != 255)
			{
    			PlayerSpectatePlayer(i,playerid);
			}
		}
	}
	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
	if(IsAnOwnableCar(vehicleid))
	{
	   	new Float:x,Float:y,Float:z;
		new Float:a;
		GetVehiclePos(vehicleid, x, y, z);
		GetVehicleZAngle(vehicleid, a);
		CarInfo[vehicleid][cLocationx] = x;
		CarInfo[vehicleid][cLocationy] = y;
		CarInfo[vehicleid][cLocationz] = z;
		CarInfo[vehicleid][cAngle] = a;
		OnPropUpdate(4,vehicleid);
	}
/*	if(CarAutolock[vehicleid] == 1)
	{
	    for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				SetVehicleParamsForPlayer(vehicleid,i,0,1);
				GameTextForPlayer(playerid,"~w~Car~n~~r~Autolocked",2500,3);
				return 1;
			}
		}
	}*/
/*	new keycar = PlayerInfo[playerid][pPcarkey];
	new vehicle = GetPlayerVehicleID(playerid);
	if(IsAnOwnableCar(vehicleid))
	{
	   	if(keycar == vehicleid)
		{
	   		for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if (IsPlayerConnected(i))
			    {
			       	SetVehicleParamsForPlayer(vehicleid,i,0,1);
			    }
				GameTextForPlayer(playerid, "~w~Vehicle~n~~r~Auto-Locked", 10000, 3);
				CarInfo[keycar][cLock] = 1;
   			}
		}
		else if(keycar2 == vehicleid)
		{
	   		for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if (IsPlayerConnected(i))
			    {
			       	SetVehicleParamsForPlayer(vehicleid,i,0,1);
			    }
				GameTextForPlayer(playerid, "~w~Vehicle~n~~r~Auto-Locked", 10000, 3);
				CarInfo[keycar2][cLock] = 1;
   			}
		}
		else if(keycar3 == vehicleid)
		{
	   		for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if (IsPlayerConnected(i))
			    {
			       	SetVehicleParamsForPlayer(vehicleid,i,0,1);
			    }
				GameTextForPlayer(playerid, "~w~Vehicle~n~~r~Auto-Locked", 10000, 3);
				CarInfo[keycar3][cLock] = 1;
   			}
		}
	}*/
	TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
	if(UsingBelt[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„”–ƒ„µƒ∞≤»´¥¯/Õ∑ø¯,»•≥˝À¸√«ÕÀ≥ˆ≥µ¡æ");
		UsingBelt[playerid] = 0;
	}
	if(IsAHarvest(vehicleid))
	{
	    if(FarmerVar[playerid] == 1)
	    {
			SetTimer("FarmerExit", 7000, 0);
			GameTextForPlayer(playerid, "~n~~w~You have ~r~7~w~ seconds~n~to get back on a harvest", 5000, 3);
	    }
	}
	if(IsADrugHarvest(vehicleid))
	{
	    if(DrugFarmerVar[playerid] == 1)
	    {
			SetTimer("DrugFarmerExit", 7000, 0);
			GameTextForPlayer(playerid, "~n~~w~You have ~b~7~w~ seconds~n~to get back on a harvest", 5000, 3);
	    }
	}
	if(IsASmuggleCar(vehicleid))
	{
	    if(SmugglerWork[playerid] == 1)
	    {
	        SetTimer("SmugglerExit", 7000, 0);
	        GameTextForPlayer(playerid, "~n~~w~You have ~r~7~w~ seconds~n~to get back in car", 5000, 3);
		}
	}
	if(gGas[playerid] == 1)
	{
	    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Left car", 500, 3);
	}
	if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
	{
		BusrouteEnd(playerid, vehicleid);
	}
	if (IsABus(vehicleid))
	{
		for (new i=0; i<=MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (BusrouteEast[i][0] != 0 && BusrouteEast[i][1] == vehicleid)
				{
					//BusrouteEast[i][2] --;
					GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~g~Passenger Left The Bus", 5000, 3);
				}
				else if (BusrouteWest[i][0] != 0 && BusrouteWest[i][1] == vehicleid)
				{
					//BusrouteWest[i][2] --;
					GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~g~Passenger Left The Bus", 5000, 3);
				}
			}
		}
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	new string[768];
	//PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	//PlayerInfo[playerid][pModel] = Peds[classid][0];
    if(IsPlayerNPC(playerid))
	{
	    SpawnPlayer(playerid);
		return 1;
	}
	if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
		ClearChatbox(playerid, 10);
		format(string, sizeof(string), "ª∂”≠¿¥µΩƒ≥ƒ≥∑˛ŒÒ∆˜[µ±«∞∞Ê±æ]:{0FF0F0} %s ", Version);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		SendClientMessage(playerid, COLOR_YELLOW2, " ");
		new message[] = "\t\t\t\t\t\t ƒ≥ƒ≥Ω«…´∞Á—›∑˛ŒÒ∆˜-{00F0F0}∑˛ŒÒ∆˜ÃıøÓ \n\n\n\n\n\n {0FFFF0}1-{F000F0}================================================================\n\n {0FFFF0}2-{F000F0}================================================================";
		new message2[] = "\n\n {0FFFF0}3-{F000F0}================================================================\n\n {0FFFF0}4-{F000F0}================================================================\n\n {0FFFF0}5-{F000F0}================================================================\n\n\n «Î—°‘Ò :{FF0FFF}'Õ¨“‚'ÃıøÓ ªÚ 'æ‹æ¯'{0FFFFF}ÃıøÓ";
		format(string, sizeof(string),"%s %s",message,message2);
		ShowPlayerDialog(playerid, 1244, DIALOG_STYLE_MSGBOX,"ª∂”≠¿¥µΩƒ≥ƒ≥Ω«…´∞Á—›∑˛ŒÒ∆˜",string,"Õ¨“‚","æ‹æ¯");
		PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
		//PlayerInfo[playerid][pModel] = Peds[classid][0];
		SetPlayerTeamFromClass(playerid,classid);
	}
	else
	{
		SpawnPlayer(playerid);
	}
	return false;
}

public SetupPlayerForClassSelection(playerid)
{
 switch (gTeam[playerid])
	{
		case TEAM_BLUE:
		{
			SafeSetPlayerInterior(playerid,5);
			SafeSetPlayerPos(playerid,323.4,305.6,999.1);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerCameraPos(playerid,323.4-1.5-1.0,305.6,999.1+0.7);
			SetPlayerCameraLookAt(playerid,323.4-1.0,305.6,999.1+0.7);

		}
		case TEAM_ADMIN:
		{
		    SafeSetPlayerInterior(playerid,3);
			SafeSetPlayerPos(playerid,-2654.4,1424.2,912.4);
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerCameraPos(playerid,-2654.4-1.5,1424.2,912.4+0.7);
			SetPlayerCameraLookAt(playerid,-2654.4,1424.2,912.4+0.7);
		}
		default:
		{
		    SafeSetPlayerInterior(playerid,3);
			SafeSetPlayerPos(playerid,361.8270,174.0347,1008.3893);
			SetPlayerFacingAngle(playerid,90);
		    SetPlayerCameraPos(playerid, 361.7270,169.0347,1008.3893);
		    SetPlayerCameraLookAt(playerid,361.8270,174.0347,1008.3893);
		}
	}
}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
  if (classid >= 1 && classid <= 14)
	{
		gTeam[playerid] = 11; //admin
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
	    new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		new string[128];
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "Unknown");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		if(PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pTesterDuty] == 1)
		{
			format(string, sizeof(string),"ƒ„µƒ◊Ô–– « %s, ±®∏Ê»À %s, µ´ƒ„ «π‹¿Ì/≤‚ ‘»À‘±À˘“‘≤ªº∆∑∏◊Ô",reason,turner);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		strmid(PlayerInfo[playerid][pCrimeReason], reason, 0, strlen(reason), 255);
		PlayerInfo[playerid][pWanted] = 1;
		PlayerInfo[playerid][pWantedLevel] = points;
  		PlayerInfo[playerid][pCrimes] += 1;
	    SetPlayerColor(playerid, 0xFF990000);
		format(turnmes, sizeof(turnmes), "ƒ„∑∏◊Ô¡À.‘≠“Ú: %s. ±®∏Ê»À: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_DARKNICERED, turnmes);
		PlayCrimeReportForPlayer(playerid,playerid,5);
		if(points > 0)
		{
		    new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == 3) { gTeam[playerid] = 4; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "ƒ„µ±«∞µƒÕ®º©µ»º∂: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(IsACop(i) && PlayerInfo[i][pDuty] == 1)
					    {
							format(cbjstore, sizeof(turnmes), "◊‹≤ø: À˘”–APBµ•Œª: º«’ﬂ: %s",turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							format(cbjstore, sizeof(turnmes), "◊‹≤ø: ◊Ô––: %s, ±®∏Ê»À: %s",reason,turned);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							PlayCrimeReportForPlayer(i,playerid,5);
						}
					}
				}
			}
		}
	}//not connected
	return 1;
}
//---------------------------------------------------------

public SetPlayerCriminalEx(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
	    new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		new string[128];
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "Unknown");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		if(PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pTesterDuty] == 1)
		{
			format(string, sizeof(string),"ƒ„µƒ◊Ô–– « %s, ±®∏Ê»À %s, µ´ƒ„ «π‹¿Ì/≤‚ ‘»À‘±À˘“‘≤ªº∆∑∏◊Ô",reason,turner);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		SendClientMessage(playerid, COLOR_LIGHTRED, "»Áπ˚ƒ„œÎÕ∂∞∏◊‘ ◊«Îº¸»Î /(sur)render!");
		strmid(PlayerInfo[playerid][pCrimeReason], reason, 0, strlen(reason), 255);
		PlayerInfo[playerid][pWanted] = 1;
		PlayerInfo[playerid][pWantedLevel] = points;
  		PlayerInfo[playerid][pCrimes] += 1;
	    SetPlayerColor(playerid, 0xFF990000);
		format(turnmes, sizeof(turnmes), "ƒ„∑∏◊Ô¡À.‘≠“Ú: %s. ±®∏Ê»À: %s.",reason,turner);
        PlayCrimeReportForPlayer(playerid,playerid,5);
		SendClientMessage(playerid, COLOR_DARKNICERED, turnmes);
		if(points > 0)
		{
		    new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == 3) { gTeam[playerid] = 4; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "ƒ„µ±«∞µƒÕ®º©µ»º∂: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(IsACop(i))
					    {
							format(cbjstore, sizeof(turnmes), "◊‹≤ø: À˘”–APBµ•Œª: º«’ﬂ: %s",turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							format(cbjstore, sizeof(turnmes), "◊‹≤ø: ◊Ô––: %s, ±®∏Ê»À: %s",reason,turned);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							PlayCrimeReportForPlayer(i,playerid,5);
						}
					}
				}
			}
		}
	}//not connected
	return 1;
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "∂Ã–≈: %s, “ÚŒ™ƒ„ %s, ƒ„≤ª‘Ÿ «∑∏◊Ôœ”“…»À, ∑¢º˛»À: MOLE (555)",turned,reason);
		RingTone[playerid] = 20;
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
			    {
					format(crbjstore, sizeof(crbjstore), "◊‹≤ø: À˘”–µ•Œª◊¢“‚,%s“—æ≠ÕÍ≥…µƒ»ŒŒÒ",turner);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "◊‹≤ø: %s “—±ª¥¶¿Ì, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
				}
			}
		}
	}
}

public RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}

public RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}


public PeterAC()
{
	new weaponid, ammo;
	new plname[64], string[128];
	new y, m, d;
	new h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
			GetPlayerName(i, plname, sizeof(plname));
			if(AntiWeaponHack == 1)
			{
				if (PlayerGotSpottedRecently[i] == 0)
				{
					if(ScriptWeaponsUpdated[i] == 0)
				    {
						for (new c = 0; c < 13; c++)
						{
							GetPlayerWeaponData(i, c, weaponid, ammo);
							if (weaponid != 0 && ammo != 0)
							{
								if (ScriptWeapons[i][c] != weaponid)
								{
								    new weapon[24]; GetWeaponName(weaponid, weapon, 24);
								    
	        						format(string, sizeof(string), "%s (%d), ±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ π”√∫⁄øÕŒ‰∆˜.", plname, i);
									SendClientMessageToAll(COLOR_NICERED, string);
									format(string, sizeof(string),"ƒ„±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ƒ„ π”√∫⁄øÕŒ‰∆˜ %s (%d)",weapon,weaponid);
									SendClientMessage(i,COLOR_LIGHTBLUE, string);
									format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Banned %s for Weapon Hacking a %s (%d)",d,m,y,h,mi,s,plname,weapon,weaponid);
									BanLog(string);
									format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Banned by the ∑¥Õ‚π“ºÏ≤‚ - Weapon Hacking a %s with %d ammo.",d,m,y,h,mi,s,plname,weapon,weaponid);
									AddPunishment(i, string);
									SafeResetPlayerWeapons(i);
									ScriptBan(i,999,"Weapon Hacks");
								}
							}
						}
					}
				}
			}
			if(AntiJetpackHack == 1)
			{
				new pSpecialAction = GetPlayerSpecialAction(i);
				if (pSpecialAction == SPECIAL_ACTION_USEJETPACK)
				{
					TogglePlayerControllable(i, 0);
					format(string, sizeof(string), "∑¥Õ‚π“ºÏ≤‚: ƒ„±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜≈Á∆¯±≥∞¸∫⁄øÕ. »’∆⁄: %d/%d/%d  ±º‰: %d:%d:%d",d,m,y,h,mi,s);
					SendClientMessage(i, COLOR_LIGHTRED, string);
					SendClientMessage(i, COLOR_LIGHTRED, "∑¥Õ‚π“ºÏ≤‚: »Áπ˚ƒ„»œŒ™’‚ «ŒÛ≈–∂œ,ƒ„ø…“‘±®∏Ê∏¯∑˛ŒÒ∆˜ø™∑¢»À‘±");
		    		SendClientMessage(i, COLOR_BLUE, "∑¥Õ‚π“ºÏ≤‚: …Í«ÎΩ‚∑‚«Î»•Œ“√«µƒ¬€Ã≥!");
					OnPlayerUpdateEx(i);
					ScriptBan(i,999,"Jetpack Hacks");
					format(string, sizeof(string), "%s, ±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚µΩ≈Á∆¯±≥∞¸∫⁄øÕ", plname);
					SendClientMessageToAll(COLOR_NICERED, string);
				}
			}
			if(AntiMoneyHack == 1)
			{
				if(PlayerGotSpottedRecently[i] == 0)
				{
			        if(!IsAtCandySprunk(i))
			        {
						if(GetPlayerMoney(i) != ScriptMoney[i])
						{
						    if(ScriptMoneyUpdated[i] == 0)
						    {
							    if(IsAtPaySpray(i) || IsAtTransfender(i))
							    {
							        SetRealMoney(i, GetPlayerMoney(i));
								}
								if((GetPlayerMoney(i) - ScriptMoney[i]) >= 500 && (GetPlayerMoney(i) - ScriptMoney[i]) != 0)
								{
								    if(admins == 0 || afkadmins == admins)
				        			{
			  							format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ ø…ƒ‹ π”√¡ÀÀ¢«Æ∫⁄øÕ.", plname, i);
										SendClientMessageToAll(COLOR_NICERED, string);
										format(string, sizeof(string), "ƒ„±ªÃﬂ≥ˆ¡À∑˛ŒÒ∆˜Õ®π˝ ∑¥Õ‚π“ºÏ≤‚ ø…ƒ‹ π”√¡ÀÀ¢«Æ∫⁄øÕ ($%d)",(GetPlayerMoney(i) - ScriptMoney[i]));
										SendClientMessage(i,COLOR_LIGHTBLUE, string);
										format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Money Hacking ($%d)",d,m,y,h,mi,s,plname,(GetPlayerMoney(i) - ScriptMoney[i]));
										KickLog(string);
										format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by the ∑¥Õ‚π“ºÏ≤‚ - Money Hacking.",d,m,y,h,mi,s,plname);
										AddPunishment(i, string);
										Kick(i);
									}
								    format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ « π”√¡À À¢«Æ∫⁄øÕ; «ÎºÏ≤ÈÀ˚/À˝!!", plname, i);
									SendAdminMessage(COLOR_YELLOW, string);
									PlayerSuspicious[i] = 1;
									PlayerMoneyHacking[i] = 1;
									PlayerSuspiciousMoney[i] = (GetPlayerMoney(i) - ScriptMoney[i]);
									PlayerGotSpottedRecently[i] = 1;
									SetTimerEx("ResetAcWarn", 300000, 0, "i", i);
								}
								else
								{
								    if((GetPlayerMoney(i) - ScriptMoney[i]) >= 1)
								    {
									    format(string, sizeof(string), "[PETER]: %s (%d) µƒ«Æ ˝≤ª’˝≥£, «ÎºÏ≤ÈÀ˚/À˝!!", plname, i);
										SendAdminMessage(COLOR_YELLOW, string);
										PlayerSuspicious[i] = 1;
										PlayerOnCashInbalance[i] = 1;
										PlayerSuspiciousMoney[i] = (GetPlayerMoney(i) - ScriptMoney[i]);
										PlayerGotSpottedRecently[i] = 1;
										SetTimerEx("ResetAcWarn", 90000, 0, "i", i);
									}
								}
							}
						}
					}
				}
			}
			if(AntiInteriorHack == 1)
			{
				if(GetPlayerInterior(i) != PlayerInfo[i][pInt])
				{
	   				format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ « π”√¡À  “ƒ⁄∫⁄øÕ; «ÎºÏ≤ÈÀ˚/À˝!!", plname,i);
					SendAdminMessage(COLOR_YELLOW, string);
					PlayerSuspicious[i] = 1;
					PlayerInteriorHacking[i] = 1;
					PlayerSuspiciousInterior[i] = GetPlayerInterior(i);
					PlayerGotSpottedRecently[i] = 1;
					SetTimerEx("ResetAcWarn", 300000, 0, "i", i);
				}
			}
		}
	}
	return 1;
}

public GpsCheck()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(IsPlayerInAnyVehicle(i) && Gps[i] == 1)
			{
			   	SetPlayerRouting(i,TelePosGps[i][tX],TelePosGps[i][tY]);
			}
		}
	}
	return 1;
}


public OtherTimer()
{
    new Float:maxspeed = 275.0;
    new plname[MAX_PLAYER_NAME];
	new string[128];
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new zone[MAX_ZONE_NAME];
	new d,m,y,h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new ping = GetPlayerPing(i);
	        if(ping > MaxPing)
	        {
	            if(FirstSpawn[i] == 0)
	            {
	                if(PlayerInfo[i][pAdmin] < 1)
					{
		        		format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ À˚µƒping≥¨π˝œﬁ÷∆ ˝¡ø.", plname, i);
						SendClientMessageToAll(COLOR_NICERED, string);
						SendClientMessage(i,COLOR_LIGHTBLUE, "ƒ„±ªÃﬂ≥ˆ¡À∑˛ŒÒ∆˜Õ®π˝ ∑¥Õ‚π“ºÏ≤‚ ƒ„µƒping≥¨π˝œﬁ÷∆ ˝¡ø");
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Exceeding the Maximun Ping",d,m,y,h,mi,s,plname);
						KickLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by The ∑¥Õ‚π“ºÏ≤‚ - Exceeding maximun ping allowed.",d,m,y,h,mi,s);
						AddPunishment(i, string);
						Kick(i);
					}
				}
			}
	        if(PlayerInfo[i][pInteriorNr] == 0)
			{
		        GetPlayer2DRadarZone(i, zone, MAX_ZONE_NAME);
		        format(string,sizeof(string),"%s",zone);
		        TextDrawSetString(Textdraw49[i], string);
			}
			else if(PlayerInfo[i][pInteriorNr] == 1)
			{
		        TextDrawSetString(Textdraw49[i], "L.S.P.D");
			}
			else if(PlayerInfo[i][pInteriorNr] == 2)
			{
		        TextDrawSetString(Textdraw49[i], "City Hall");
			}
			else if(PlayerInfo[i][pInteriorNr] == 3)
			{
		        TextDrawSetString(Textdraw49[i], "Bank");
			}
			else if(PlayerInfo[i][pInteriorNr] == 4)
			{
		        TextDrawSetString(Textdraw49[i], "FBI HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 5)
			{
		        TextDrawSetString(Textdraw49[i], "Army HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 6)
			{
		        TextDrawSetString(Textdraw49[i], "Yamaguchi HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 7)
			{
		        TextDrawSetString(Textdraw49[i], "La Vice HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 8)
			{
		        TextDrawSetString(Textdraw49[i], "Bratva HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 9)
			{
		        TextDrawSetString(Textdraw49[i], "Surenos HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 10)
			{
		        TextDrawSetString(Textdraw49[i], "Regulars Lounge");
			}
			else if(PlayerInfo[i][pInteriorNr] == 11)
			{
		        TextDrawSetString(Textdraw49[i], "DMW");
			}
			else if(PlayerInfo[i][pInteriorNr] == 12)
			{
		        TextDrawSetString(Textdraw49[i], "24/7");
			}
			else if(PlayerInfo[i][pInteriorNr] == 13)
			{
		        TextDrawSetString(Textdraw49[i], "Ammunation");
			}
			else if(PlayerInfo[i][pInteriorNr] == 14)
			{
		        TextDrawSetString(Textdraw49[i], "Weapon Store");
			}
			else if(PlayerInfo[i][pInteriorNr] == 15)
			{
		        TextDrawSetString(Textdraw49[i], "Gym");
			}
			else if(PlayerInfo[i][pInteriorNr] == 16)
			{
		        TextDrawSetString(Textdraw49[i], "Binco");
			}
			else if(PlayerInfo[i][pInteriorNr] == 17)
			{
		        TextDrawSetString(Textdraw49[i], "Pig Pen");
			}
			else if(PlayerInfo[i][pInteriorNr] == 18)
			{
		        TextDrawSetString(Textdraw49[i], "Alhambra");
			}
			else if(PlayerInfo[i][pInteriorNr] == 20)
			{
		        TextDrawSetString(Textdraw49[i], "Cluckin' Bell");
			}
			else if(PlayerInfo[i][pInteriorNr] == 21)
			{
		        TextDrawSetString(Textdraw49[i], "Burger Shoot");
			}
			else if(PlayerInfo[i][pInteriorNr] == 22)
			{
		        TextDrawSetString(Textdraw49[i], "Pizza Hut");
			}
			else if(PlayerInfo[i][pInteriorNr] == 23)
			{
		        TextDrawSetString(Textdraw49[i], "Firemen HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 24)
			{
		        TextDrawSetString(Textdraw49[i], "Hitmen HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 25)
			{
		        TextDrawSetString(Textdraw49[i], "DD Stadium");
			}
			else if(PlayerInfo[i][pInteriorNr] == 26)
			{
		        TextDrawSetString(Textdraw49[i], "Ten Green");
			}
			else if(PlayerInfo[i][pInteriorNr] == 28)
			{
		        TextDrawSetString(Textdraw49[i], "Raven's Airlines");
			}
			else if(PlayerInfo[i][pInteriorNr] == 29)
			{
		        TextDrawSetString(Textdraw49[i], "Hospital");
			}
			else if(PlayerInfo[i][pInteriorNr] == 30)
			{
		        TextDrawSetString(Textdraw49[i], "Donut Store");
			}
			else if(PlayerInfo[i][pInteriorNr] == 31)
			{
		        TextDrawSetString(Textdraw49[i], "¬Ûµ¬¡÷ HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 32)
			{
		        TextDrawSetString(Textdraw49[i], "ABC Studio");
			}
			else if(PlayerInfo[i][pInteriorNr] == 33)
			{
		        TextDrawSetString(Textdraw49[i], "Yellow Cab HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 34)
			{
		        TextDrawSetString(Textdraw49[i], "Sex Shop");
			}
			else if(PlayerInfo[i][pInteriorNr] == 35)
			{
		        TextDrawSetString(Textdraw49[i], "Sub Urban");
			}
			else if(PlayerInfo[i][pInteriorNr] == 36)
			{
		        TextDrawSetString(Textdraw49[i], "ZIP");
			}
			else if(PlayerInfo[i][pInteriorNr] == 37)
			{
		        TextDrawSetString(Textdraw49[i], "Victim");
			}
			else if(PlayerInfo[i][pInteriorNr] == 38)
			{
		        TextDrawSetString(Textdraw49[i], "Restaurant");
			}
   			else if(PlayerInfo[i][pInteriorNr] == 39)
			{
		        TextDrawSetString(Textdraw49[i], "House");
			}
			else if(PlayerInfo[i][pInteriorNr] == 40)
			{
		        TextDrawSetString(Textdraw49[i], "Sons of Anarchy HQ");
			}
			else if(PlayerInfo[i][pInteriorNr] == 41)
			{
		        TextDrawSetString(Textdraw49[i], "Ministery of ~n~Defense HQ");
			}
			else
			{
			    TextDrawSetString(Textdraw49[i], "Unknown ~n~~r~Contact a Developer.");
			}
	        format(string, sizeof(string),"$%d",PlayerInfo[i][pAccount]);
	        TextDrawSetString(Textdraw51[i], string);
	        new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
				{
					SendClientMessage(i, COLOR_WHITE, "Ã· æ: ƒ„œ÷‘⁄ø…“‘ ‰»Î/login <√‹¬Î>Ω¯––µ«¬º");
				}
			}
		    if(GetPlayerState(i) == 2)
		    {
     			new kmh = GetPlayerSpeed(i, true);
				if ((BusrouteEast[i][0] >= 0 && BusrouteWest[i][0] >= 0))
				{
					if(PlayerInfo[i][pSpeedo] == 2)
					{
						if(kmh >= 0 && kmh <= 80)
						{
							format(string, 64, "~w~Speed: ~g~~h~%d ~w~KM/h.", kmh);
						}
						else if(kmh >= 81 && kmh <= 120)
						{
							format(string, 64, "~w~Speed: ~y~~h~%d ~w~KM/h.", kmh);
						}
						else if(kmh >= 121)
						{
							format(string, 64, "~w~Speed: ~r~~h~%d ~w~KM/h.", kmh);
						}
						TextDrawSetString(Textdraw39[i], string);
					}
					if(kmh > maxspeed && PlayerInfo[i][pAdmin] < 6)
					{
						new tmpcar = GetPlayerVehicleID(i);
						if(!IsAPlane(tmpcar) || tmpcar < 1698)
						{
							if(!IsPlayerNPC(i))
							{
							    if(PlayerGotSpottedRecently[i] == 0)
							    {
							        if(admins == 0 || afkadmins == admins)
								    {
			        					format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ À˚ø…ƒ‹ π”√¡À∫⁄øÕπ§æﬂº”ÀŸ.", plname, i);
										SendClientMessageToAll(COLOR_NICERED, string);
										SendClientMessage(i,COLOR_LIGHTBLUE, "ƒ„±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜ ∑¥Õ‚π“ºÏ≤‚ ƒ„ø…ƒ‹ π”√¡À∫⁄øÕπ§æﬂº”ÀŸ");
										format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Speed Hacking",d,m,y,h,mi,s,plname);
										KickLog(string);
	                                    format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by the ∑¥Õ‚π“ºÏ≤‚ - Speed Hacking.",d,m,y,h,mi,s,plname);
										AddPunishment(i, string);
										Kick(i);
									}
									GetPlayerName(i, plname, sizeof(plname));
									format(string, 128, "[PETER]: %s (%d) ÀŸ∂»≤ª’˝≥£ %d km/h; «Î¡¢º¥ºÏ≤ÈÀ˚/À˝!!",plname,i,kmh);
									SendAdminMessage(COLOR_YELLOW,string);
									PlayerSuspicious[i] = 1;
									PlayerSpeedHacking[i] = 1;
									PlayerSuspiciousSpeed[i] = kmh;
									PlayerGotSpottedRecently[i] = 1;
	                                SetTimerEx("ResetAcWarn", 60000, 0, "i", i);
								}
							}
						}
					}
				}
				if(gGas[i] == 1)
		   		{
		   		    new vehicle = GetPlayerVehicleID(i);
            		if(IsModelAPlane(vehicle) || IsModelABoat(vehicle) || IsModelABycicle(vehicle) || IsADrugHarvest(vehicle) || IsAHarvest(vehicle) || IsModelAHeli(vehicle))
  		   			{
          				format(string, sizeof(string), "~w~Fuel: ~g~~h~N/A");
					}
					else if(vehicle >= 1698)
					{
     					format(string, sizeof(string), "~w~Fuel: ~p~Unknow");
					}
					else
					{
					    if(Gas[vehicle] > 10)
					    {
	                       	format(string, sizeof(string), "~w~Fuel: ~g~~h~%d/~w~100%.",Gas[vehicle]);
						}
						else
						{
						    format(string, sizeof(string), "~w~Fuel: ~r~~h~%d/~w~100%.",Gas[vehicle]);
						}
					}
					TextDrawSetString(Textdraw40[i], string);
   		 		}
			}
		    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new house = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(house == 242)
						{
						    SafeSetPlayerInterior(i,0);
							SafeSetPlayerPos(i,-2518.5967,-623.2701,132.7679);
							PlayerInfo[i][pLocal] = 255;
						}
						/*if(house >= 99 && house != 10000)
						{
							SafeSetPlayerPos(i, BizzInfo[house-99][bEntranceX], BizzInfo[house-99][bEntranceY],BizzInfo[house-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SafeSetPlayerInterior(i,0);
						}*/
						else if(house < 99 && house != 10000)
						{
							SafeSetPlayerPos(i, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SafeSetPlayerInterior(i,0);
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(string, sizeof(string), "* %sµƒ ÷ª˙œÏ¡À.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(string, sizeof(string), "~w~The call cost~n~~r~$%d",CallCost[i]);
				SafeGivePlayerMoney(i, -CallCost[i]);
				SBizzInfo[2][sbTill] += CallCost[i];
				ExtortionSBiz(2, CallCost[i]);
				GameTextForPlayer(i, string, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{//≥ˆ◊‚≥µÀæª˙ and passenger only
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, string, 15000, 6);
			}
			if (BusrouteEast[i][0] != 0 || BusrouteWest[i][0] != 0)
			{
				if (!IsPlayerInAnyVehicle(i) || !IsABus(GetPlayerVehicleID(i)))
				if (vehicleid != 0)
				{
					if (!IsABus(vehicleid))
					{
						if (BusrouteEast[i][0] != 0) BusrouteEnd(i, BusrouteEast[i][1]);
						else if (BusrouteWest[i][0] != 0) BusrouteEnd(i, BusrouteWest[i][1]);
					}
				}
				else
				{
					if (BusrouteEast[i][0] != 0) BusrouteEnd(i, BusrouteEast[i][1]);
					else if (BusrouteWest[i][0] != 0) BusrouteEnd(i, BusrouteWest[i][1]);
				}
			}
			if (IsABus(vehicleid) && GetPlayerState(i) == 2 && PlayerInfo[i][pJob] != 14)
			{
				RemovePlayerFromVehicle(i);
			}
		}
	}
	return 1;
}

public AmmuTrain()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
   		{
   		    if(PlayerInfo[i][pAmmuTrainTime] > 0)
		    {
                PlayerInfo[i][pAmmuTrainTime]--;
			}
		}
	}
	return 1;
}


public RegularCount()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
   		{
   		    if(PlayerInfo[i][pRegularCount] > 0)
		    {
                PlayerInfo[i][pRegularCount]--;
			}
			if(PlayerInfo[i][pPassportTime] > 0)
			{
                PlayerInfo[i][pPassportTime]--;
			}
			if(PlayerInfo[i][pOfficerTime] > 0)
			{
                PlayerInfo[i][pOfficerTime]--;
			}
   			PlayerInfo[i][pConnectSeconds] += 1;
		}
	}
	return 1;
}

public CanRobAgain()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
   		{
   		    if(PlayerInfo[i][pRobTime] > 0)
		    {
                PlayerInfo[i][pRobTime]--;
			}
		}
	}
	return 1;
}


public SetPlayerUnjail()
{
//	new plname[MAX_PLAYER_NAME];
	new string[128];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new newcar = GetPlayerVehicleID(i);
			new level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 1; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 11; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0 && WantLawyer[i] == 0)
				{
					PlayerInfo[i][pJailTime]--;
					format(string, sizeof(string),"~y~Time Left in Jail: ~n~~w~%d Seconds.",PlayerInfo[i][pJailTime]);
					TextDrawSetString(Textdraw1[i],string);
				}
				if(PlayerInfo[i][pJailTime] <= 0 && WantLawyer[i] == 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SafeSetPlayerInterior(i, 6);
						SafeSetPlayerPos(i,246.8439,70.0776,1003.6406);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
					    SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					    SafeSetPlayerInterior(i, 0);
					    SafeSetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					else if(PlayerInfo[i][pJailed] == 3)
					{
					    SafeSetPlayerInterior(i, 3);
					    SafeSetPlayerPos(i, 240.6664,115.1158,1003.2188);
					}
					else if(PlayerInfo[i][pJailed] == 4)
					{
					    SafeSetPlayerInterior(i, 10);
					    SafeSetPlayerPos(i, 229.6727,146.6346,1003.0234);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GRAD1,"ø¥ ÿ:ƒ„“—æ≠±ª Õ∑≈≥ˆ”¸.");
					SendClientMessage(i, COLOR_GRAD1,"ø¥ ÿ:Œ“√«œ£Õ˚ƒ„ƒ‹¥”–¬◊ˆ»À.");
					format(string, sizeof(string), "~g~Freedom~n~~w~Try to be a better citizen");
					GameTextForPlayer(i, string, 5000, 1);
					new originalskin = PlayerInfo[i][pChar];
					SetPlayerSkin(i, originalskin);
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
					TextDrawHideForPlayer(i, Textdraw1[i]);
				}
			}
		    if(IsABoat(newcar))
			{
			    if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2)
				{
				    SafeRemovePlayerFromVehicle(i);
				}
			}
			else if(IsAPlane(newcar))
			{
			    if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
				    if(TakingLesson[i] == 1) { }
				}
			}
			else
			{
				if(PlayerInfo[i][pCarLic] < 1 && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == 2)
				{
					if(TakingLesson[i] == 1) { }
				}
			}//Done with car check
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
   			if(MedicTime[i] > 0)
			{
			    if(MedicTime[i] == 3)
			    {
			        SafeSetPlayerInterior(i, 3);
			        new Float:X, Float:Y, Float:Z;
			        GetPlayerPos(i, X,Y,Z);
			        SetPlayerCameraPos(i, X - 3, Y, Z);
			        SetPlayerCameraLookAt(i,X,Y,Z);
			    }
			    MedicTime[i] ++;
			    if(MedicTime[i] >= NeedMedicTime[i])
			    {
					new cut = deathcost; //PlayerInfo[playerid][pLevel]*deathcost;
					//SafeGivePlayerMoney(i, -cut);
					format(string, sizeof(string), "“Ω…˙: ƒ„µƒ“Ω¡∆∑—”√ « $%d, ◊£ƒ„Ω°øµ√ø“ªÃÏ.", cut);
					SendClientMessage(i, TEAM_CYAN_COLOR, string);
					TogglePlayerControllable(i, 1);
			        MedicBill[i] = 0;
			        MedicTime[i] = 0;
			        NeedMedicTime[i] = 0;
			        PlayerInfo[i][pDeaths] += 1;
			        PlayerFixRadio(i);
			        ClearAnimations(i);
			        SpawnPlayer(i);
			    }
			}
			if(WantLawyer[i] >= 1)
			{
			    CallLawyer[i] = 111;
			    if(WantLawyer[i] == 1)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "ƒ„–Ë“™“ª√˚ ¬… ¶¬? (º¸»Î yesªÚno)");
				}
				WantLawyer[i] ++;
				if(WantLawyer[i] == 8)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "ƒ„–Ë“™“ª√˚ ¬… ¶¬? (º¸»Î yesªÚno)");
				}
	            if(WantLawyer[i] == 15)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "ƒ„–Ë“™“ª√˚ ¬… ¶¬? (º¸»Î yesªÚno)");
				}
				if(WantLawyer[i] == 20)
				{
				    SendClientMessage(i, COLOR_YELLOW2, "√ª”–¬… ¶Ã·π©∏¯ƒ„, ƒ„µƒº‡”¸…˙ªÓø™ º.");
				    WantLawyer[i] = 0;
				    CallLawyer[i] = 0;
				}
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(GetPlayerDrunkLevel(i) >= 6000)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					format(string, sizeof(string), "~p~You are Drunk! ~n~~y~Level: %d",GetPlayerDrunkLevel(i));
					GameTextForPlayer(i, string, 4000, 1);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 0;
			    if(PlayerStoned[i] == 0)
			    {
			        PlayerStoned[i] = 2;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 0);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 0);
					}
			    }
			}
			if(PlayerInfo[i][pCarTime] > 0)
			{
			    if(PlayerInfo[i][pCarTime] <= 0)
			    {
			        PlayerInfo[i][pCarTime] = 0;
			    }
			    else
			    {
			        PlayerInfo[i][pCarTime] -= 1;
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~Match Started", 5000, 1);
					TogglePlayerControllable(i, 1);
					RoundStarted = 1;
				}
			    else
				{
				    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RoundStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SafeSetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SafeSetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SafeSetPlayerInterior(Boxer1, 5); SafeSetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pJob] == 12)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "»≠ª˜–¬Œ≈: %s “—æ≠’Ω §¡Àπ⁄æ¸ %s £¨œ÷‘⁄ «–¬µƒ»≠ª˜π⁄æ¸.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_WHITE, "»Áπ˚ƒ„ «÷∞“µ»≠ª˜ ÷ƒ„ª·“ª÷± «π⁄æ¸µƒ");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "»≠ª˜–¬Œ≈: »≠ª˜π⁄æ¸ %s ¥Ú”Æ¡À %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* ƒ„∞‹∏¯¡À %s.", winner);
								SendClientMessage(Boxer1, COLOR_WHITE, string);
								GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* ƒ„¥Ú”Æ¡À %s.", loser);
								SendClientMessage(Boxer2, COLOR_WHITE, string);
								GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "* ƒ„¥ÚµƒΩÓ∆£¡¶æ°«Îæ°øÏ»•≥‘µ„∂´Œ˜≤π≥‰ÃÂ¡¶.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "* ƒ„¥Úµƒ∫‹≥ˆ¡¶,µ´ «ƒ„æıµ√ƒ„ªπ”–æ¢.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* ƒ„¥ÚµƒΩÓ∆£¡¶æ°«Îæ°øÏ»•≥‘µ„∂´Œ˜≤π≥‰ÃÂ¡¶.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* ƒ„¥Úµƒ∫‹≥ˆ¡¶,µ´ «ƒ„æıµ√ƒ„ªπ”–æ¢.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SafeSetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SafeSetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SafeSetPlayerInterior(Boxer1, 5); SafeSetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pJob] == 12)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "»≠ª˜–¬Œ≈: %s “—æ≠’Ω §¡Àπ⁄æ¸ %s £¨œ÷‘⁄ «–¬µƒ»≠ª˜π⁄æ¸.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_WHITE, "»Áπ˚ƒ„ «÷∞“µ»≠ª˜ ÷ƒ„ª·“ª÷± «π⁄æ¸µƒ");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "»≠ª˜–¬Œ≈: »≠ª˜π⁄æ¸ %s ¥Ú”Æ¡À %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* ƒ„∞‹∏¯¡À %s.", winner);
								SendClientMessage(Boxer2, COLOR_WHITE, string);
								GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* ƒ„¥Ú”Æ¡À %s.", loser);
								SendClientMessage(Boxer1, COLOR_WHITE, string);
								GameTextForPlayer(Boxer1, "~g~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "* ƒ„¥ÚµƒΩÓ∆£¡¶æ°«Îæ°øÏ»•≥‘µ„∂´Œ˜≤π≥‰ÃÂ¡¶.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_WHITE, "* ƒ„¥Úµƒ∫‹≥ˆ¡¶,µ´ «ƒ„æıµ√ƒ„ªπ”–æ¢.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* ƒ„¥ÚµƒΩÓ∆£¡¶æ°«Îæ°øÏ»•≥‘µ„∂´Œ˜≤π≥‰ÃÂ¡¶.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_WHITE, "* ƒ„¥Úµƒ∫‹≥ˆ¡¶,µ´ «ƒ„æıµ√ƒ„ªπ”–æ¢.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            InRing = 0;
			            RoundStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(FindTime[i] > 0)
			{
			    if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(BusAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicCallTime[i] == 90) { MedicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 90 - MedicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MedicCallTime[i] += 1;
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicCallTime[i] == 30) { MechanicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 30 - MechanicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MechanicCallTime[i] += 1;
				}
			}
			if(PizzaCallTime[i] > 0)
   			{
       			if(PizzaCallTime[i] == 90) { PizzaCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
       			else
    			{
        			format(string, sizeof(string), "%d", 90 - PizzaCallTime[i]);
     				GameTextForPlayer(i, string, 1500, 6);
     				PizzaCallTime[i] += 1;
    			}
   			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(IsSmoking[i] > 0)
			{
			    if(IsSmoking[i] == 1)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
				    if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s ≥ÈÕÍ¡Àœ„—Ã.", sendername); }
					else { format(string, sizeof(string), "* %s ≥ÈÕÍ¡ÀÀ˚µƒœ„—Ã.", sendername); }
				    ProxDetector(30.0, i, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				    new Float:PlayerHealth;
				    GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
				    if(UsingSmokeAnim[i] == 1)
				    {
				        UsingSmokeAnim[i] = 0;
				        ClearAnimations(i);
				    }
			    }
			    if(IsSmoking[i] == 51)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
			        if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s «·«·µØ∂Ø◊≈—Ãª“.", sendername); }
					else { format(string, sizeof(string), "* %s «·«·µØ∂Ø◊≈—Ãª“.", sendername); }
			        ProxDetector(30.0, i, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			        new Float:PlayerHealth;
			        GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
			    }
			    if(IsSmoking[i] == 31)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
			        if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s «·«·µØ∂Ø◊≈—Ãª“.", sendername); }
					else { format(string, sizeof(string), "* %s «·«·µØ∂Ø◊≈—Ãª“.", sendername); }
			        ProxDetector(30.0, i, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			        new Float:PlayerHealth;
			        GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
			    }
			    if(IsSmoking[i] == 11)
			    {
			        new sendername[MAX_PLAYER_NAME];
			        GetPlayerName(i, sendername, sizeof(sendername));
			        if(PlayerInfo[i][pSex] == 1) { format(string, sizeof(string), "* %s «·«·µØ∂Ø◊≈—Ãª“.", sendername); }
					else { format(string, sizeof(string), "* %s «·«·µØ∂Ø◊≈—Ãª“.", sendername); }
			        ProxDetector(30.0, i, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			        new Float:PlayerHealth;
			        GetPlayerHealth(i, PlayerHealth);
				    SetPlayerHealth(i, PlayerHealth+7);
			    }
			    IsSmoking[i] -= 1;
			}
		}
	}
}

public CheckGas()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	        	if(Gas[vehicle] >= 1)
		   		{
		   		    if(Gas[vehicle] <= 10)
				    {
			   			PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0);
			   			if(gGas[i] == 0)
					   	{
			   				GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Fuel is low",5000,3);
						}
				    }
					if(IsModelAPlane(vehicle) || IsModelABycicle(vehicle) || IsModelABoat(vehicle) || IsAHarvest(vehicle) || IsADrugHarvest(vehicle) || IsASweeper(vehicle) || engineOn[vehicle] == 0 || vehicle >= 1579 || IsModelAHeli(vehicle)) { Gas[vehicle]++; }
	              	Gas[vehicle]--;
		   		}
	   			else
	           	{
	              	NoFuel[i] = 1;
	              	TogglePlayerControllable(i, 0);
		        	GameTextForPlayer(i,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~No fuel in Vehicle",1500,3);
				}
			}
    	}
	}
	return 1;
}

public Fillup()
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    new string[128];
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
			if(Refueling[i] == 1)
		    {
		        if(IsACopCar(VID) || IsAnFbiCar(VID) || IsAnAmbulance(VID) || IsAnFiretruck(VID) || IsNgCar(VID) || IsAGovernmentCar(VID))
		        {
		            Gas[VID] += FillUp;
		            FillUp = FillUp * SBizzInfo[3][sbEntranceCost];
		            format(string,sizeof(string),"* ∆˚≥µº”ÕÍ¡À”Õ,º€∏Ò: $%d.",FillUp);
	    			SendClientMessage(i,COLOR_WHITE,string);
	    			GameTextForPlayer(i, "~w~Government has paid for a gas.", 5000, 1);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
					TogglePlayerControllable(i, 1);
		        }
		        else
		        {
					if(GetPlayerMoney(i) >= FillUp+4)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * SBizzInfo[3][sbEntranceCost];
				    	format(string,sizeof(string),"* ∆˚≥µº”ÕÍ¡À”Õ,º€∏Ò: $%d.",FillUp);
				    	SendClientMessage(i,COLOR_WHITE,string);
						SafeGivePlayerMoney(i, - FillUp);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refueling[i] = 0;
						TogglePlayerControllable(i, 1);
					}
			   		else
			   		{
			   	    	format(string,sizeof(string),"* ƒ„√ª”–◊„πªµƒ«Æ¿¥º””Õ, –Ë“™ $%d ≤≈ƒ‹º”¬˙ƒ„≥µ",FillUp);
				    	SendClientMessage(i,COLOR_WHITE,string);
				    	TogglePlayerControllable(i, 1);
			   		}
				}
		 	}
		}
	}
	return 1;
}

public StoppedVehicle()
{
	new Float:x,Float:y,Float:z;
	new Float:distance,value;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
				new VID;
				VID = GetPlayerVehicleID(i);
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
				value = floatround(distance * 3600);
				if(UpdateSeconds > 1)
				{
					value = floatround(value / UpdateSeconds);
				}
				if(SpeedMode)
				{
	            }
				if(value == 0)
				{
					Gas[VID]++;
				}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
			if(Spectate[playerid] == 255)
			{
	   			if (PlayerInfo[playerid][pWeapon] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon], PlayerInfo[playerid][pAmmo]);
					PlayerInfo[playerid][pWeapon] = 0; PlayerInfo[playerid][pAmmo] = 0;
				}
				if (PlayerInfo[playerid][pWeapon2] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon2], PlayerInfo[playerid][pAmmo2]);
					PlayerInfo[playerid][pWeapon2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
				if (PlayerInfo[playerid][pWeapon3] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon3], PlayerInfo[playerid][pAmmo3]);
					PlayerInfo[playerid][pWeapon3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
				}
				if (PlayerInfo[playerid][pWeapon4] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon4], PlayerInfo[playerid][pAmmo4]);
					PlayerInfo[playerid][pWeapon4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
				}
				if (PlayerInfo[playerid][pWeapon5] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon5], PlayerInfo[playerid][pAmmo5]);
					PlayerInfo[playerid][pWeapon5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
				}
				if (PlayerInfo[playerid][pWeapon6] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon6], PlayerInfo[playerid][pAmmo6]);
					PlayerInfo[playerid][pWeapon6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
				}
				if (PlayerInfo[playerid][pWeapon7] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon7], PlayerInfo[playerid][pAmmo7]);
					PlayerInfo[playerid][pWeapon7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
				}
				if (PlayerInfo[playerid][pWeapon8] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon8], PlayerInfo[playerid][pAmmo8]);
					PlayerInfo[playerid][pWeapon8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
				}
				if (PlayerInfo[playerid][pWeapon9] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon9], PlayerInfo[playerid][pAmmo9]);
					PlayerInfo[playerid][pWeapon9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
				}
				if (PlayerInfo[playerid][pWeapon10] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon10], PlayerInfo[playerid][pAmmo10]);
					PlayerInfo[playerid][pWeapon10] = 0; PlayerInfo[playerid][pAmmo10] = 0;
				}
				if (PlayerInfo[playerid][pWeapon11] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon11], PlayerInfo[playerid][pAmmo11]);
					PlayerInfo[playerid][pWeapon11] = 0; PlayerInfo[playerid][pAmmo11] = 0;
				}
				if (PlayerInfo[playerid][pWeapon12] > 0)
				{
					SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon12], PlayerInfo[playerid][pAmmo12]);
					PlayerInfo[playerid][pWeapon12] = 0; PlayerInfo[playerid][pAmmo12] = 0;
				}
				if(gTeam[playerid] >= 3)
				{
					SafeGivePlayerWeapon(playerid, 0, 0);
				}
			}
			else
			{
			    if(PlayerInfo[playerid][pAdminDuty] == 1 && PlayerInfo[playerid][pAdmin] >= 6)
				{
				    for (new i=0; i<13; i++)
					{
						SafeGivePlayerWeapon(playerid, OtherWeapons[playerid][i],OtherAmmo[playerid][i]);
					}
				}
				else
				{
				    if (PlayerInfo[playerid][pWeapon] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon], PlayerInfo[playerid][pAmmo]);
						PlayerInfo[playerid][pWeapon] = 0; PlayerInfo[playerid][pAmmo] = 0;
					}
					if (PlayerInfo[playerid][pWeapon2] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon2], PlayerInfo[playerid][pAmmo2]);
						PlayerInfo[playerid][pWeapon2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
					}
					if (PlayerInfo[playerid][pWeapon3] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon3], PlayerInfo[playerid][pAmmo3]);
						PlayerInfo[playerid][pWeapon3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
					}
					if (PlayerInfo[playerid][pWeapon4] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon4], PlayerInfo[playerid][pAmmo4]);
						PlayerInfo[playerid][pWeapon4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
					}
					if (PlayerInfo[playerid][pWeapon5] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon5], PlayerInfo[playerid][pAmmo5]);
						PlayerInfo[playerid][pWeapon5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
					}
					if (PlayerInfo[playerid][pWeapon6] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon6], PlayerInfo[playerid][pAmmo6]);
						PlayerInfo[playerid][pWeapon6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
					}
					if (PlayerInfo[playerid][pWeapon7] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon7], PlayerInfo[playerid][pAmmo7]);
						PlayerInfo[playerid][pWeapon7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
					}
					if (PlayerInfo[playerid][pWeapon8] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon8], PlayerInfo[playerid][pAmmo8]);
						PlayerInfo[playerid][pWeapon8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
					}
					if (PlayerInfo[playerid][pWeapon9] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon9], PlayerInfo[playerid][pAmmo9]);
						PlayerInfo[playerid][pWeapon9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
					}
					if (PlayerInfo[playerid][pWeapon10] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon10], PlayerInfo[playerid][pAmmo10]);
						PlayerInfo[playerid][pWeapon10] = 0; PlayerInfo[playerid][pAmmo10] = 0;
					}
					if (PlayerInfo[playerid][pWeapon11] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon11], PlayerInfo[playerid][pAmmo11]);
						PlayerInfo[playerid][pWeapon11] = 0; PlayerInfo[playerid][pAmmo11] = 0;
					}
					if (PlayerInfo[playerid][pWeapon12] > 0)
					{
						SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon12], PlayerInfo[playerid][pAmmo12]);
						PlayerInfo[playerid][pWeapon12] = 0; PlayerInfo[playerid][pAmmo12] = 0;
					}
				}
			}
		}
	}
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[128];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "√≈À¯: %d ¿’À˜: $%d πÒÃ®œ÷Ω: $%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "≤˙∆∑: %d/%d «√’©¿’À˜: %s", SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbMaxProducts],SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[128];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "√≈À¯: %d ¿’À˜: $%d πÒÃ®œ÷Ω: $%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "≤˙∆∑: %d/%d «√’©¿’À˜: %s", BizzInfo[targetid][bProducts],BizzInfo[targetid][bMaxProducts],BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "ƒ–"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "≈Æ"; }
  		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "√¿÷ﬁ"; }
		else if(PlayerInfo[targetid][pOrigin] == 2) { otext = "≈∑÷ﬁ"; }
		else if(PlayerInfo[targetid][pOrigin] == 3) { otext = "—«÷ﬁ"; }
		else if(PlayerInfo[targetid][pOrigin] == 4) { otext = "∑«÷ﬁ"; }
		new ttext[21];
		if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "Œ¿…˙‘±"; }
		else if(gTeam[targetid] == 3 || gTeam[targetid] == 4) { ttext = "∆Ω√Ò"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "¬Â…ºÌ∂…£Õ–Àπ PD"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "¬Â…ºÌ∂…£Õ–Àπ FBI"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "¬Â…ºÌ∂…£Õ–Àπ NG"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "¬Â…ºÌ∂…£Õ–Àπ MD"; }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "»˝∫œª· Gang"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "¬Ûµ¬¡÷∞Ô ∫⁄∞Ô"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "LS Government"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "¥Ú ÷π´Àæ"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "–¬Œ≈π´Àæ"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "≥ˆ◊‚≥µπ´Àæ"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "LS Licensers"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "¬Â…ºÌ∂…£Õ–Àπ FD"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 13) { ttext = "√¿π˙”ÃÃ´∞Ô"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "…Ωø⁄◊È ∫⁄∞Ô"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "Chornaya ∫⁄∞Ô"; }
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "¿≠∏± ∫⁄∞Ô"; }
		else { ttext = "∆Ω√Ò"; }
		new dtext[20];
		if(STDPlayer[targetid] == 1) { dtext = "“¬‘≠ÃÂ"; }
		else if(STDPlayer[targetid] == 2) { dtext = "¡‹≤°"; }
		else if(STDPlayer[targetid] == 3) { dtext = "√∑∂æ"; }
		else { dtext = "None"; }
		new f2text[20];
	    if(PlayerInfo[targetid][pFMember] < 255) { f2text = FamilyInfo[PlayerInfo[targetid][pFMember]][FamilyName]; }
		else { f2text = "None"; }
	    new rtext[64];
	    if(gTeam[targetid] == 5 || PlayerInfo[targetid][pFMember] < 255)//The 2 Organisations
	    {
        	if(PlayerInfo[targetid][pRank] == 1) { rtext = "Õ‚»À"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Õ¨∞È"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = " ø±¯"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "–°Õ∑ƒø"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "∏±¿œ¥Û"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "ΩÃ∏∏"; }
			else { rtext = "Õ‚»À"; }
		}
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "—ßæØ"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "æ¸πŸ"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "œ¬ ø"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "æ¸ ø"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "÷–Œæ"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "…œŒæ"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "∏±æ÷≥§"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "æ÷≥§"; }
			else { rtext = "—ßæØ"; }
		}
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//FBI Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "—ßæØ"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Ãÿπ§"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Ãÿ±ÃΩ‘±"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Ãÿ±ÃΩ‘±∏∫‘»À"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "ø∆≥§"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "æ÷≥§÷˙¿Ì"; }
			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "∏±æ÷≥§"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "æ÷≥§"; }
			else { rtext = " µœ∞…˙"; }
		}
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "¡–±¯"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = " ø±¯"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "æ¸ ø"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "…Ÿ–£"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "÷–Œæ"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "…œŒæ"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "∏±…œΩ´"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "…œΩ´"; }
			else { rtext = "¡–±¯"; }
		}
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "æ»‘Æ“Ω¡∆ª§¿Ì"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "æ»‘Æ“Ω¡∆ µœ∞…˙"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "ª˘±æ«¿æ»“Ω¡∆“Ω…˙"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "«¿æ»“Ω¡∆∑˛ŒÒ“Ω…˙"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "æ»‘Æ“Ω¡∆…œŒæ"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "æ»‘Æ“Ω¡∆÷–Œæ"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "æ»‘Æ“Ω¡∆∏±‘∫≥§"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "æ»‘Æ“Ω¡∆‘∫≥§"; }
			else { rtext = "æ»‘Æ“Ω¡∆ª§¿Ì"; }
		}
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)//Surenos Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Forastero"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Asociado"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Miembro"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Proscrito"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Mano Derecha"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Corona"; }
			else { rtext = "Guero"; }
		}
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)//La Famiglia Sinatra Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Õ‚»À"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Giovane D'honore"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Piciotto"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Sgarrista"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Capo Regime"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Consiglieri"; }
  			else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Capo Bastone"; }
  			else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Capo Crimini"; }
			else { rtext = "Õ‚»À"; }
		}
		else if(PlayerInfo[targetid][pMember] == 7)// –≥§ ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = " –≥§Àæª˙"; }
		    else if(PlayerInfo[targetid][pRank] == 2) { rtext = " –≥§±£Ô⁄"; }
		    else if(PlayerInfo[targetid][pRank] == 3) { rtext = " –≥§÷˜Àæª˙"; }
		    else if(PlayerInfo[targetid][pRank] == 4) { rtext = " –≥§µƒ±£Œ¿ø∆≥§"; }
		    else if(PlayerInfo[targetid][pRank] == 5) { rtext = " –≥§÷˙¿Ì"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = " –≥§"; }
		    else { rtext = "Œﬁ"; }
		}
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "◊‘”……± ÷"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "…Ò«π ÷…± ÷"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Ãÿπ§"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Ãÿ±ÃΩ‘±"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "∏±æ÷≥§"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "æ÷≥§"; }
			else { rtext = "◊‘”……± ÷"; }
		}
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = " µœ∞π§◊˜»À‘±"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "º«’ﬂ"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "º«’ﬂ◊‹π‹"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "π´Àæ√ÿ È"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "√¿π˙π„≤•π´Àææ≠¿Ì"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "√¿π˙π„≤•π´Àæ∂≠ ¬≥§"; }
			else { rtext = " µœ∞π§◊˜»À‘±"; }
		}
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//≥ˆ◊‚≥µπ´Àæ Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = " µœ∞…˙"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "≥ˆ◊‚≥µ–¬ ÷"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "≥ˆ◊‚≥µÀæª˙"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "µ˜∂»‘±"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "÷µ∞‡æ≠¿Ì"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "≥ˆ◊‚≥µπ´Àæ“µ÷˜"; }
			else { rtext = " µœ∞…˙"; }
		}
		else if(IsAnInstructor(targetid))//Driving/Flying School Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = " µœ∞…˙"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "∆Ãµº‘±"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "∏ﬂº∂∏®µº‘±"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "æ≠¿Ì"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "∏±¿œ∞Â"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "¿œ∞Â"; }
			else { rtext = " µœ∞…˙"; }
		}
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "µ˜≤È‘±"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = " µœ∞…˙"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "œ˚∑¿‘±"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Àæª˙"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "FD ÷–Œæ"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "FD …œŒæ"; }
	        else if(PlayerInfo[targetid][pRank] == 7) { rtext = "‘∫≥§÷˙¿Ì"; }
	        else if(PlayerInfo[targetid][pRank] == 8) { rtext = "FD ‘∫≥§"; }
			else { rtext = "æ»‘Æ“Ω¡∆ª§¿Ì"; }
		}
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)//Yamaguchi ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "–°µ‹"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "¥Ú ÷"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "±©ÕΩ"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "∏ﬂº∂≥…‘±"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Son of Anarchy"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Father of Anarchy"; }
			else { rtext = "–°µ‹"; }
		}
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)//…Ωø⁄◊È ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Gaij in"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Wakashu"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Shatei"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "–°Õ∑ƒø"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Don's right hand"; }
  			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Don"; }
			else { rtext = "Gaij in"; }
		}
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)//¥Û»¶∞Ô gang Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Shestiorka"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Patsani"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Byki"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "–°Õ∑ƒø"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "∏±¿œ¥Û"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Pakhan"; }
			else { rtext = "Shestiorka"; }
		}
		else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)//¿≠∏± Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "Member"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "Loyal Member"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "Elite Member"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "Made Man"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "Advisor"; }
			else if(PlayerInfo[targetid][pRank] == 6) { rtext = "Loyal Advisor"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "Elite Advisor"; }
		    else if(PlayerInfo[targetid][pRank] == 8) { rtext = "Lower Boss"; }
		    else if(PlayerInfo[targetid][pRank] == 9) { rtext = "¿œ∞Â"; }
			else { rtext = "Dumb Hoe"; }
		}
		else
		{
		    rtext = "None";
		}
        new jtext[20];
        if(PlayerInfo[targetid][pJob] == 1) { jtext = "’ÏÃΩ"; }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "¬… ¶"; }
        else if(PlayerInfo[targetid][pJob] == 3) { jtext = "ºÀ≈Æ"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "∂æ∑∑"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "Õµ≥µ‘Ù"; }
        else if(PlayerInfo[targetid][pJob] == 6) { jtext = "∑˛ŒÒ‘±"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "∆˚≥µ–ﬁ¿Ìπ§"; }
        else if(PlayerInfo[targetid][pJob] == 8) { jtext = "±£Ô⁄"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "∆˚≥µæ≠œ˙…Ã"; }
        else if(PlayerInfo[targetid][pJob] == 11) { jtext = "Ãÿºº—›‘±"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "»≠ª˜ ÷"; }
		else if(PlayerInfo[targetid][pJob] == 13) { jtext = "≥ˆ◊‚≥µÀæª˙"; }
        else if(PlayerInfo[targetid][pJob] == 14) { jtext = "π´≥µÀæª˙"; }
        else if(PlayerInfo[targetid][pJob] == 15) { jtext = "±®ÕØ"; }
        else if(PlayerInfo[targetid][pJob] == 16) { jtext = "ø®≥µÀæª˙"; }
        else if(PlayerInfo[targetid][pJob] == 17) { jtext = "≈˚»¯µÍÕ‚ÀÕ‘±"; }
        else if(PlayerInfo[targetid][pJob] == 18) { jtext = "≈©√Ò"; }
        else if(PlayerInfo[targetid][pJob] == 19) { jtext = "∂æ∆∑÷÷÷≤…Ã"; }
        else if(PlayerInfo[targetid][pJob] == 20) { jtext = "∂æ∆∑◊ﬂÀΩ∑∑"; }
        else if(PlayerInfo[targetid][pJob] == 21) { jtext = "µ¿¬∑«Â…®π§"; }
        else if(PlayerInfo[targetid][pJob] == 22) { jtext = "≤ƒ¡œ◊ﬂÀΩ∑∑"; }
        else if(PlayerInfo[targetid][pJob] == 23) { jtext = "Œ‰∆˜÷∆‘Ï…Ã"; }
        else { jtext = "None"; }
		new drank[20];
		if(PlayerInfo[targetid][pRegularRank] == 1) { drank = "≥£øÕÕÊº“"; }
		else if(PlayerInfo[targetid][pRegularRank] == 2) { drank = "≥£øÕÕÊº“2º∂"; }
		else if(PlayerInfo[targetid][pRegularRank] == 3) { drank = "≥£øÕÕÊº“3º∂"; }
		else { drank = "None"; }
		new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectSeconds];
		new lotto = PlayerInfo[targetid][pLottoNr];
		new fishes = PlayerInfo[targetid][pFishes];
		new bigfish = PlayerInfo[targetid][pBiggestFish];
		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		//YY
		new pnumber[128];
		if(PlayerInfo[targetid][pPnumber] != 0)
		{
			format(pnumber,sizeof(pnumber), "%d",PlayerInfo[targetid][pPnumber]);
		}
		else
		{
		    pnumber = "Œﬁ";
		}
		//new pnumber = PlayerInfo[targetid][pPnumber];
		//if(pnumber )
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new housekey = PlayerInfo[targetid][pPhousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new carkey = PlayerInfo[targetid][pPcarkey];
		new carkey2 = PlayerInfo[targetid][pPcarkey2];
		new intir = PlayerInfo[targetid][pInt];
		new virworld = GetPlayerVirtualWorld(targetid);
		new local = PlayerInfo[targetid][pLocal];
		new swatr[20];
  		if(PlayerInfo[targetid][pSwat] == 1) { swatr = "–ÃæØ"; }
        else if(PlayerInfo[targetid][pSwat] == 2) { swatr = "∏®µº‘±"; }
        else if(PlayerInfo[targetid][pSwat] == 3) { swatr = "∏±∂”≥§"; }
        else if(PlayerInfo[targetid][pSwat] == 4) { swatr = "∂”≥§"; }
        else { swatr = "None"; }
        new tacticalr[20];
  		if(PlayerInfo[targetid][pTactical] == 1) { tacticalr = " µœ∞…˙µ•Œª"; }
        else if(PlayerInfo[targetid][pTactical] == 2) { tacticalr = "◊®º“√‹ÃΩ"; }
        else if(PlayerInfo[targetid][pTactical] == 3) { tacticalr = "æ´”¢√‹ÃΩ"; }
        else if(PlayerInfo[targetid][pTactical] == 4) { tacticalr = "◊‹π‹√‹ÃΩ"; }
        else { tacticalr = "None"; }
        new specialfr[20];
  		if(PlayerInfo[targetid][pSpecialF] == 1) { specialfr = " ø±¯"; }
        else if(PlayerInfo[targetid][pSpecialF] == 2) { specialfr = "…˙ªØ’Ω ø"; }
        else if(PlayerInfo[targetid][pSpecialF] == 3) { specialfr = "∏±∂”≥§"; }
        else if(PlayerInfo[targetid][pSpecialF] == 4) { specialfr = "∂”≥§"; }
        else { specialfr = "None"; }
        new fight[56];
		if(PlayerInfo[targetid][pFS] == 1) { fight = "»≠ª˜"; }
		else if(PlayerInfo[targetid][pFS] == 2) { fight = "ø’ ÷µ¿"; }
		else if(PlayerInfo[targetid][pFS] == 3) { fight = "÷–π˙π¶∑Ú"; }
		else if(PlayerInfo[targetid][pFS] == 0) { fight = "ƒ¨»œ"; }
		else if(PlayerInfo[targetid][pFS] == 4) { fight = "»·µ¿"; }
		else if(PlayerInfo[targetid][pFS] == 5) { fight = "≤´ª˜ ı"; }
		new warned = PlayerInfo[targetid][pWarned];
		new dban = PlayerInfo[targetid][pDBanned];
		new drights = PlayerInfo[targetid][pDM];
		new Colt = PlayerInfo[targetid][pPistSkill];
		new Silenced = PlayerInfo[targetid][pSilenSkill];
		new Deagle = PlayerInfo[targetid][pDesertSkill];
		new Shotgun = PlayerInfo[targetid][pShotgSkill];
		new Sawn = PlayerInfo[targetid][pSawnSkill];
		new Combat = PlayerInfo[targetid][pCombSkill];
		new Uzi = PlayerInfo[targetid][pUziSkill];
		new Smg = PlayerInfo[targetid][pSmgSkill];
		new M4 = PlayerInfo[targetid][pM4Skill];
		new Ak47 = PlayerInfo[targetid][pAkSkill];
		new Deaths = PlayerInfo[playerid][pDeaths];
		new Kills = PlayerInfo[targetid][pKills];
		new tester = PlayerInfo[targetid][pTester];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new Float:armour;
		GetPlayerArmour(playerid, armour);
		new Playersip[64];
		GetPlayerIp(playerid, Playersip, sizeof(Playersip));
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"|_________________________________________________| %s (%d) |_________________________________________________|",name, targetid);
		SendClientMessage(playerid, COLOR_GREEN,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| µ»º∂: %d | –‘±: %s | ƒÍ¡‰: %d | œ÷Ω: $%d | “¯––¥ÊøÓ: $%d | µÁª∞: %s | ≥£øÕ≈≈√˚: %s |", level,atext,age,cash,account,pnumber,drank);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| ◊‹”Œœ∑–° ±: %d | ◊‹”Œœ∑∑÷÷”: %d | ◊‹”Œœ∑√Î÷”: %d | ◊Ó¥Ûµƒ”„: %d | ±ª≤∂ ±º‰: %d |",(ptime / 3600), (ptime / 60), ptime,bigfish,arrests);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Respect: %d/%d | À¿Õˆ: %d | ∂æ∆∑: %d | ≤ƒ¡œ: %d | Õ≈∂”: %s | µ»º∂: %s | …±À¿: %d | æØ∏Ê: %d |",exp,expamount,Deaths,drugs,mats,ttext,rtext, Kills,warned);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Swatµ»º∂: %s | Tacticalµ»º∂: %s | Forcesµ»º∂: %s | DD æ≠¿Ì: %d | LottoNr: %d | ◊Ô––: %d |",swatr,tacticalr,specialfr,drights,lotto,crimes);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| ’Ω∂∑∑Á∏Ò: %s | Testerµ»º∂: %d | Coltººƒ‹: %d | Silenced ººƒ‹: %d | Deagle ººƒ‹: %d | Shotgun ººƒ‹: %d |",fight, tester, Colt,Silenced,Deagle, Shotgun);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Sawnººƒ‹: %d | Combatººƒ‹: %d | Uzi ººƒ‹: %d | SMG ººƒ‹: %d | M4 ººƒ‹: %d | AK-47 ººƒ‹: %d |", Sawn,Combat,Uzi, Smg, M4, Ak47);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| Ω°øµ: %.1f | ª§º◊: %.1f | IP: %s | ”„¿‡: %d | ◊Ó∫Û¿Îø™: %s | ÷∞ŒÒ±ªΩ˚÷π: %d |", health, armour, Playersip, fishes, PlayerInfo[targetid][pWhyLeft], dban);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "| ∑øŒ›‘ø≥◊: %d | ≤˙“µ‘ø≥◊: %d | ◊‚∑ø‘ø≥◊: %d |  “ƒ⁄ø’º‰: %d |  ¿ΩÁø’º‰: %d | ±æµÿ: %d | π§◊˜: %s |", housekey,bizkey,HireCar[targetid],intir,virworld,local,jtext);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		if (PlayerInfo[targetid][pPcarkey] != 9999)
		{
		    new vehiclename[24];
			GetVehicleName(carkey, vehiclename, sizeof(vehiclename));
		    format(coordsstring, sizeof(coordsstring), "| ≥µ≈∆∫≈: %d | –Õ∫≈: %s (%d) | ∆˚≥µº€∏Ò: %d | ∆˚≥µ—’…´1: %d | ∆˚≥µ—’…´2: %d | ≥µÀ¯: %d | √‹¬Î: %d |",carkey,vehiclename, CarInfo[carkey][cModel], GetVehiclePrice(carkey), CarInfo[carkey][cColorOne], CarInfo[carkey][cColorTwo], CarInfo[carkey][cLock], CarInfo[carkey][cCode]);
		    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		}
		if (PlayerInfo[targetid][pPcarkey2] != 9999)
		{
		    new vehiclename[24];
			GetVehicleName(carkey2, vehiclename, sizeof(vehiclename));
		    format(coordsstring, sizeof(coordsstring), "| ≥µ≈∆∫≈: %d | –Õ∫≈: %s (%d) | ∆˚≥µº€∏Ò: %d | ∆˚≥µ—’…´1: %d | ∆˚≥µ—’…´2: %d | ≥µÀ¯: %d | √‹¬Î: %d |",carkey2,vehiclename, CarInfo[carkey2][cModel], GetVehiclePrice(carkey2), CarInfo[carkey2][cColorOne], CarInfo[carkey2][cColorTwo], CarInfo[carkey2][cLock], CarInfo[carkey2][cCode]);
		    SendClientMessage(playerid, COLOR_GRAD5,coordsstring);
		}
	}
}
//---------------------------------------------------------

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pWanted] == 0)
	    {
	    	SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
		}
		else
		{
		    SetPlayerColor(playerid, 0xFF990000);
		}
		if(PlayerInfo[playerid][pDuty] == 1)
		{
		    if(IsAFreecop(playerid)) { SetPlayerColor(playerid, 0xa9c4e400); }
	        if(PlayerInfo[playerid][pRank] == 1) { SetPlayerColor(playerid,0x33CCFF00); }
			else if(PlayerInfo[playerid][pRank] == 2) { SetPlayerColor(playerid,0x2641FE00); }
			else if(PlayerInfo[playerid][pRank] == 3) { SetPlayerColor(playerid,0x2641FE00); }
			else if(PlayerInfo[playerid][pRank] == 4) { SetPlayerColor(playerid,0x2641FE00); }
			else if(PlayerInfo[playerid][pRank] == 5) { SetPlayerColor(playerid,0x3333CC00); }
			else if(PlayerInfo[playerid][pRank] == 6) { SetPlayerColor(playerid,0x3333CC00); }
			else if(PlayerInfo[playerid][pRank] == 7) { SetPlayerColor(playerid,0x3333CC00); }
			else if(PlayerInfo[playerid][pRank] == 8) { SetPlayerColor(playerid,0x3333CC00); }
		}
		if(JobDuty[playerid] == 1)
		{
		    if(IsAFiremen(playerid)) { SetPlayerColor(playerid, 0xAA333300); }
		    if(IsAMedic(playerid)) { SetPlayerColor(playerid, 0xFF828200); }
		}
		if(PlayerInfo[playerid][pAdminDuty] == 1)
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1) { SetPlayerColor(playerid,0xFF66FF00); }
		    if(PlayerInfo[playerid][pAdmin] >= 3) { SetPlayerColor(playerid,0xFF550000); }
		    if(PlayerInfo[playerid][pAdmin] >= 6) { SetPlayerColor(playerid,0xFF000000); }
		}
		if(PlayerInfo[playerid][pTesterDuty] == 1)
		{
		    if(PlayerInfo[playerid][pTester] == 1) { SetPlayerColor(playerid,0x00660000); }
		    if(PlayerInfo[playerid][pTester] == 2) { SetPlayerColor(playerid,0x00880000); }
		    if(PlayerInfo[playerid][pTester] == 3) { SetPlayerColor(playerid,0x00AA0000); }
		}
		if (TransportDuty[playerid] >= 1)
		{
		    SetPlayerColor(playerid, 0x00FF0000);
		}
		if (PlayerInfo[playerid][pJob] == 3)
		{
		    SetPlayerColor(playerid, 0xFF33FF00);
		}
	}
}

//---------------------------------------------------------

/*public GameModeInitExitFunc()
{
	new string[128];
	format(string, sizeof(string), "Traveling...");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			OnPlayerUpdateEx(i);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}*/

public GameModeExitFunc(playerid)
{
	KillTimer(synctimer);
	KillTimer(hackchecktimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(accountstimer);
	KillTimer(checkgastimer);
	KillTimer(idletimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(checkcarhealthtimer);
	KillTimer(burgertimer);
	KillTimer(chickentimer);
	KillTimer(tracetimer);
	KillTimer(ammutraintimer);
	KillTimer(regularcounttimer);
	KillTimer(Canrobagaintimer);
	DestroyMenu(Licenses);
	DestroyMenu(LegalJobs);
	DestroyMenu(LegalJobs2);
	DestroyMenu(Guide);
	DestroyMenu(JobLocations);
	DestroyMenu(JobLocations2);
	DestroyMenu(JobLocations3);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			OnPlayerUpdateEx(i);
		}
	}
	SaveStuff();
	SaveSecurity();
	SaveAnticheat();
	ServerRestarted = 1;
	GameModeExit();
}

//------------------------------------------------------------------------------------------------------

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("LARP/boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		First = strval(arrCoords[3]);
		fclose(file);
	}
	else
	{
		fopen("LARP/stuff.ini", io_write);
		print("[ERROR]: stuff.ini wasn't found in scriptfiles/LARP, Creating it NOW");
		SaveStuff();
	}
	return 1;
}


public LoadAnticheat()
{
	new arrCoords[12][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/anticheat.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		AntiBunnyJump = strval(arrCoords[0]);
		AntiWeaponHack = strval(arrCoords[1]);
		AntiMoneyHack = strval(arrCoords[2]);
		AntiInteriorHack = strval(arrCoords[3]);
		AntiJetpackHack = strval(arrCoords[4]);
		AntiAfk = strval(arrCoords[5]);
		AntiName = strval(arrCoords[6]);
		AntiDriveBy = strval(arrCoords[7]);
		AntiFakeKill = strval(arrCoords[8]);
		AntiHighPing = strval(arrCoords[9]);
		MaxPing = strval(arrCoords[10]);
		AntiSpam = strval(arrCoords[11]);
		fclose(file);
	}
	else
	{
		fopen("LARP/anticheat.ini", io_write);
		print("[ERROR]: anticheat.ini wasn't found in scriptfiles/LARP, Creating it NOW");
		SaveAnticheat();
		fclose(file);
	}
	return 1;
}

public LoadMotd()
{
	new arrCoords[1][64];
	new strFromFile2[64];
	new File: file = fopen("LARP/motd.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		strmid(Motd, arrCoords[0], 0, strlen(arrCoords[0]), 255);
		fclose(file);
	}
	else
	{
		fopen("LARP/motd.ini", io_write);
		print("[ERROR]: motd.ini wasn't found in scriptfiles/LARP, Creating it NOW");
		SaveMotd();
		fclose(file);
	}
	return 1;
}

public SaveSecurity()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d", SurenosSecurity,SignatraSecurity,YamaguchiSecurity,BratvaSecurity,ViceSecurity,AnarchySecurity,HitmanSecurity);
	new File: file2 = fopen("LARP/gangsecurity.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadSecurity()
{
	new arrCoords[7][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/gangsecurity.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		SurenosSecurity = strval(arrCoords[0]);
		SignatraSecurity = strval(arrCoords[1]);
		YamaguchiSecurity = strval(arrCoords[2]);
		BratvaSecurity = strval(arrCoords[3]);
		ViceSecurity = strval(arrCoords[4]);
		AnarchySecurity = strval(arrCoords[5]);
		HitmanSecurity = strval(arrCoords[6]);
		fclose(file);
	}
	else
	{
		fopen("LARP/gangsecurity.ini", io_write);
		print("[ERROR]: gangsecurity.ini wasn't found in scriptfiles/LARP, Creating it NOW");
		SaveSecurity();
		fclose(file);
	}
	return 1;
}

public LoadEvents()
{
	new arrCoords[4][128];
	new strFromFile2[128];
	new File: file = fopen("LARP/events.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, '|');
		strmid(event1, arrCoords[0], 0, strlen(arrCoords[0]), 255);
		strmid(event2, arrCoords[1], 0, strlen(arrCoords[1]), 255);
		strmid(event3, arrCoords[2], 0, strlen(arrCoords[2]), 255);
		strmid(event4, arrCoords[3], 0, strlen(arrCoords[3]), 255);
		fclose(file);
	}
	else
	{
		fopen("LARP/events.ini", io_write);
		print("[ERROR]: events.ini wasn't found in scriptfiles/LARP, Creating it NOW");
		SaveEvents();
		fclose(file);
	}
	return 1;
}

public SaveAnticheat()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d", AntiBunnyJump,AntiWeaponHack,AntiMoneyHack,AntiInteriorHack,AntiJetpackHack,AntiAfk,AntiName,AntiDriveBy,AntiFakeKill,AntiHighPing,MaxPing,AntiSpam);
	new File: file2 = fopen("LARP/anticheat.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}


public SaveMotd()
{
 	new coordsstring[32];
	format(coordsstring, sizeof(coordsstring), "%s",Motd);
	new File: file2 = fopen("LARP/motd.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
}

public SaveEvents()
{
 	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%s",event1,event2,event3,event4);
	new File: file2 = fopen("LARP/events.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
}

public SaveStuff()
{
 	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d",Jackpot,Tax,TaxValue,First);
	new File: file2 = fopen("LARP/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
}

public LoadIRC()
{
	new arrCoords[5][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/Channels/channels.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(IRCInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(IRCInfo[idx][iAdmin], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(IRCInfo[idx][iMOTD], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(IRCInfo[idx][iPassword], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			IRCInfo[idx][iNeedPass] = strval(arrCoords[3]);
			IRCInfo[idx][iLock] = strval(arrCoords[4]);
			//printf("IRC:%d Admin:%s MOTD: %s Password: %s NeedPass: %d Lock: %d",idx,IRCInfo[idx][iAdmin],IRCInfo[idx][iMOTD],IRCInfo[idx][iPassword],IRCInfo[idx][iNeedPass],IRCInfo[idx][iLock]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveIRC()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%d|%d\n",
		IRCInfo[idx][iAdmin],
		IRCInfo[idx][iMOTD],
		IRCInfo[idx][iPassword],
		IRCInfo[idx][iNeedPass],
		IRCInfo[idx][iLock]);
		if(idx == 0)
		{
			file2 = fopen("LARP/Channels/channels.cfg", io_write);
		}
		else
		{
			file2 = fopen("LARP/Channels/channels.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/Ck/ck.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			//printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
			//idx,CKInfo[idx][cUsed],CKInfo[idx][cSendername],CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveCK()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CKInfo))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%d\n",
		CKInfo[idx][cSendername],
		CKInfo[idx][cGiveplayer],
		CKInfo[idx][cUsed]);
		if(idx == 0)
		{
			file2 = fopen("LARP/Ck/ck.cfg", io_write);
		}
		else
		{
			file2 = fopen("LARP/Ck/ck.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadFamilies()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("LARP/Families/families.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(FamilyInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			FamilyInfo[idx][FamilyTaken] = strval(arrCoords[0]);
			strmid(FamilyInfo[idx][FamilyName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(FamilyInfo[idx][FamilyMOTD], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(FamilyInfo[idx][FamilyColor], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(FamilyInfo[idx][FamilyLeader], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			FamilyInfo[idx][FamilyMembers] = strval(arrCoords[5]);
			FamilyInfo[idx][FamilySpawn][0] = floatstr(arrCoords[6]);
			FamilyInfo[idx][FamilySpawn][1] = floatstr(arrCoords[7]);
			FamilyInfo[idx][FamilySpawn][2] = floatstr(arrCoords[8]);
			FamilyInfo[idx][FamilySpawn][3] = floatstr(arrCoords[9]);
			FamilyInfo[idx][FamilyInterior] = strval(arrCoords[10]);
			//printf("Family:%d Taken: %d Name:%s MOTD:%s Leader:%s Members:%d SpawnX:%f SpawnY:%f SpawnZ:%f Int:%d",
			//idx,FamilyInfo[idx][FamilyTaken],FamilyInfo[idx][FamilyName],FamilyInfo[idx][FamilyMOTD],FamilyInfo[idx][FamilyLeader],FamilyInfo[idx][FamilyMembers],FamilyInfo[idx][FamilySpawn][0],FamilyInfo[idx][FamilySpawn][1],FamilyInfo[idx][FamilySpawn][2],FamilyInfo[idx][FamilyInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveFamilies()
{
	new idx;
	new File: file2;
	while (idx < sizeof(FamilyInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%d|%f|%f|%f|%f|%d\n",
		FamilyInfo[idx][FamilyTaken],
		FamilyInfo[idx][FamilyName],
		FamilyInfo[idx][FamilyMOTD],
		FamilyInfo[idx][FamilyColor],
		FamilyInfo[idx][FamilyLeader],
		FamilyInfo[idx][FamilyMembers],
		FamilyInfo[idx][FamilySpawn][0],
		FamilyInfo[idx][FamilySpawn][1],
		FamilyInfo[idx][FamilySpawn][2],
		FamilyInfo[idx][FamilySpawn][3],
		FamilyInfo[idx][FamilyInterior]);
		if(idx == 0)
		{
			file2 = fopen("LARP/Families/families.cfg", io_write);
		}
		else
		{
			file2 = fopen("LARP/Families/families.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadPapers()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("LARP/Papers/papers.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(PaperInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			PaperInfo[idx][PaperUsed] = strval(arrCoords[0]);
			strmid(PaperInfo[idx][PaperMaker], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(PaperInfo[idx][PaperTitle], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(PaperInfo[idx][PaperText1], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(PaperInfo[idx][PaperText2], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			strmid(PaperInfo[idx][PaperText3], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(PaperInfo[idx][PaperText4], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(PaperInfo[idx][PaperText5], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(PaperInfo[idx][PaperText6], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			strmid(PaperInfo[idx][PaperText7], arrCoords[9], 0, strlen(arrCoords[9]), 255);
			PaperInfo[idx][SafeSaving] = strval(arrCoords[10]);
			//printf("Paper:%d Used: %d Maker:%s Title: %s Text1: %s Text2: %s Text3: %s Text4: %s Text5: %s Text6: %s Text7: %s",
			//idx,PaperInfo[idx][PaperUsed],PaperInfo[idx][PaperMaker],PaperInfo[idx][PaperTitle],PaperInfo[idx][PaperText1],PaperInfo[idx][PaperText2],PaperInfo[idx][PaperText3],PaperInfo[idx][PaperText4],PaperInfo[idx][PaperText5],PaperInfo[idx][PaperText6],PaperInfo[idx][PaperText7]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SavePapers()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%s|%s|%s|%s|%s|%d\n",
		PaperInfo[idx][PaperUsed],
		PaperInfo[idx][PaperMaker],
		PaperInfo[idx][PaperTitle],
		PaperInfo[idx][PaperText1],
		PaperInfo[idx][PaperText2],
		PaperInfo[idx][PaperText3],
		PaperInfo[idx][PaperText4],
		PaperInfo[idx][PaperText5],
		PaperInfo[idx][PaperText6],
		PaperInfo[idx][PaperText7],
		PaperInfo[idx][SafeSaving]);
		if(idx == 0)
		{
			file2 = fopen("LARP/Papers/papers.cfg", io_write);
		}
		else
		{
			file2 = fopen("LARP/Papers/papers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadCar()
{
	new file[26];
	for(new idx = 1; idx < sizeof(CarInfo) ; idx++)
	{
	    format(file, sizeof(file),"LARP/Vehicles/%d.ini", idx)
		if(dini_Exists(file))
		{
		 	CarInfo[idx][cModel] = dini_Int(file,"Model");
			CarInfo[idx][cLocationx] = dini_Float(file,"Location_X");
			CarInfo[idx][cLocationy] = dini_Float(file,"Location_Y");
			CarInfo[idx][cLocationz] = dini_Float(file,"Location_Z");
			CarInfo[idx][cAngle] = dini_Float(file,"Angle");
			CarInfo[idx][cColorOne] = dini_Int(file,"Color_1");
			CarInfo[idx][cColorTwo] = dini_Int(file,"Color_2");
			strmid(CarInfo[idx][cOwner], dini_Get(file,"Owner"), 0, strlen(dini_Get(file,"Owner")), 255);
			CarInfo[idx][cOwned] = dini_Int(file,"Owned");
			CarInfo[idx][cLock] = dini_Int(file,"Locked");
			CarInfo[idx][cPaintjob] = dini_Int(file,"Paintjob");
			CarInfo[idx][cVirWorld] = dini_Int(file,"VirtualWorld");
		   	CarInfo[idx][cComponent0] = dini_Int(file,"Component0");
		   	CarInfo[idx][cComponent1] = dini_Int(file,"Component1");
			CarInfo[idx][cComponent2] = dini_Int(file,"Component2");
			CarInfo[idx][cComponent3] = dini_Int(file,"Component3");
			CarInfo[idx][cComponent4] = dini_Int(file,"Component4");
			CarInfo[idx][cComponent5] = dini_Int(file,"Component5");
			CarInfo[idx][cComponent6] = dini_Int(file,"Component6");
			CarInfo[idx][cComponent7] = dini_Int(file,"Component7");
			CarInfo[idx][cComponent8] = dini_Int(file,"Component8");
			CarInfo[idx][cComponent9] = dini_Int(file,"Component9");
			CarInfo[idx][cComponent10] = dini_Int(file,"Component10");
			CarInfo[idx][cComponent11] = dini_Int(file,"Component11");
			CarInfo[idx][cComponent12] = dini_Int(file,"Component12");
			CarInfo[idx][cComponent13] = dini_Int(file,"Component13");
			CarInfo[idx][cCode] = dini_Int(file,"SecurityCode");
		}
	}
	print("[Ω≈±æ]: ‘ÿ»Î ∆˚≥µ");
	return 1;
}

public LoadProperty()
{
	new file[64];
	for(new idx = 0; idx < sizeof(HouseInfo) ; idx++)
	{
	    format(file, sizeof(file),"LARP/Properties/%d.ini", idx)
	    if(dini_Exists(file))
		{
			HouseInfo[idx][hEntrancex] = dini_Float(file,"Entrance_X");
			HouseInfo[idx][hEntrancey] = dini_Float(file,"Entrance_Y");
			HouseInfo[idx][hEntrancez] = dini_Float(file,"Entrance_Z");
			HouseInfo[idx][hExitx] = dini_Float(file,"Exit_X");
			HouseInfo[idx][hExity] = dini_Float(file,"Exit_Y");
			HouseInfo[idx][hExitz] = dini_Float(file,"Exit_Z");
			HouseInfo[idx][hHealthx] = dini_Int(file,"Health_X");
			HouseInfo[idx][hHealthy] = dini_Int(file,"Health_Y");
			HouseInfo[idx][hHealthz] = dini_Int(file,"Health_Z");
			HouseInfo[idx][hArmourx] = dini_Int(file,"Armour_X");
			HouseInfo[idx][hArmoury] = dini_Int(file,"Armour_Y");
			HouseInfo[idx][hArmourz] = dini_Int(file,"Armour_Z");
			strmid(HouseInfo[idx][hOwner], dini_Get(file,"Owner"), 0, strlen(dini_Get(file,"Owner")), 255);
			strmid(HouseInfo[idx][hDiscription], dini_Get(file,"Description"), 0, strlen(dini_Get(file,"Description")), 255);
			HouseInfo[idx][hValue] = dini_Int(file,"Price");
			HouseInfo[idx][hHel] = dini_Int(file,"Health");
			HouseInfo[idx][hArm] = dini_Int(file,"Armour");
			HouseInfo[idx][hInt] = dini_Int(file,"Interior");
			HouseInfo[idx][hLock] = dini_Int(file,"Locked");
			HouseInfo[idx][hOwned] = dini_Int(file,"Owned");
			HouseInfo[idx][hRooms] = dini_Int(file,"Rooms");
			HouseInfo[idx][hRent] = dini_Int(file,"Rentable");
			HouseInfo[idx][hRentabil] = dini_Int(file,"RentPrice");
			HouseInfo[idx][hTakings] = dini_Int(file,"Takings");
			HouseInfo[idx][hSetted] = dini_Int(file,"Setted");
			HouseInfo[idx][hLevel] = dini_Int(file,"LevelNeeded");
			HouseInfo[idx][hWorld] = dini_Int(file,"World");
	        HouseInfo[idx][hDrugs] = dini_Int(file,"Drugs");
	        HouseInfo[idx][hMaterials] = dini_Int(file,"Materials");
	        HouseInfo[idx][hWeapon1] = dini_Int(file,"Weapon1");
			HouseInfo[idx][hAmmo1] = dini_Int(file,"Ammo1");
			HouseInfo[idx][hWeapon2] = dini_Int(file,"Weapon2");
			HouseInfo[idx][hAmmo2] = dini_Int(file,"Ammo2");
			HouseInfo[idx][hWeapon3] = dini_Int(file,"Weapon3");
			HouseInfo[idx][hAmmo3] = dini_Int(file,"Ammo3");
	        HouseInfo[idx][hWeapon4] = dini_Int(file,"Weapon4");
	        HouseInfo[idx][hAmmo4] = dini_Int(file,"Ammo4");
	        HouseInfo[idx][hWeapon5] = dini_Int(file,"Weapon5");
			HouseInfo[idx][hAmmo5] = dini_Int(file,"Ammo5");
	        HouseInfo[idx][hWeapon6] = dini_Int(file,"Weapon6");
	        HouseInfo[idx][hAmmo6] = dini_Int(file,"Ammo6");
	        HouseInfo[idx][hDate] = dini_Int(file,"Date");
	        strmid(HouseInfo[idx][hMessage], dini_Get(file,"Message"), 0, strlen(dini_Get(file,"Message")), 255);
		}
	}
	print("[Ω≈±æ]: ‘ÿ»Î ∑øŒ›");
	return 1;
}



public LoadBizz()
{
	new file[64];
	for(new idx = 0; idx < sizeof(HouseInfo) ; idx++)
	{
	    format(file, sizeof(file),"LARP/Bizzes/%d.ini", idx)
	    if(dini_Exists(file))
		{
			BizzInfo[idx][bOwned] = dini_Int(file,"Owned");
			strmid(BizzInfo[idx][bOwner], dini_Get(file,"Owner"), 0, strlen(dini_Get(file,"Owner")), 255);
			strmid(BizzInfo[idx][bMessage], dini_Get(file,"Message"), 0, strlen(dini_Get(file,"Message")), 255);
			strmid(BizzInfo[idx][bExtortion], dini_Get(file,"ExtortionBy"), 0, strlen(dini_Get(file,"ExtortionBy")), 255);
			BizzInfo[idx][bEntranceX] = dini_Float(file,"Entrance_X");
			BizzInfo[idx][bEntranceY] = dini_Float(file,"Entrance_Y");
			BizzInfo[idx][bEntranceZ] = dini_Float(file,"Entrance_Z");
			BizzInfo[idx][bExitX] = dini_Float(file,"Exit_X");
			BizzInfo[idx][bExitY] = dini_Float(file,"Exit_Y");
			BizzInfo[idx][bExitZ] = dini_Float(file,"Exit_Z");
			BizzInfo[idx][bLevelNeeded] = dini_Int(file,"LevelNeeded");
			BizzInfo[idx][bBuyPrice] = dini_Int(file,"Price");
			BizzInfo[idx][bEntranceCost] = dini_Int(file,"EntranceCost");
			BizzInfo[idx][bTill] = dini_Int(file,"Till");
			BizzInfo[idx][bLocked] = dini_Int(file,"Locked");
			BizzInfo[idx][bInterior] = dini_Int(file,"Interior");
			BizzInfo[idx][bProducts] = dini_Int(file,"Products");
			BizzInfo[idx][bMaxProducts] = dini_Int(file,"MaxProducts");
			BizzInfo[idx][bPriceProd] = dini_Int(file,"ProductPrice");
			BizzInfo[idx][bVirWorld] = dini_Int(file,"VirtualWorld");
			BizzInfo[idx][bInteriorNr] = dini_Int(file,"InteriorNr");
			BizzInfo[idx][bSetted] = dini_Int(file,"Setted");
		}
	}
	print("[Ω≈±æ]: ‘ÿ»Î ≤˙“µ");
	return 1;
}


public LoadSBizz()
{
	new file[64];
	for(new idx = 0; idx < sizeof(SBizzInfo) ; idx++)
	{
	    format(file, sizeof(file),"LARP/SBizzes/%d.ini", idx);

		SBizzInfo[idx][sbOwned] = dini_Int(file,"Owned");
		strmid(SBizzInfo[idx][sbOwner], dini_Get(file,"Owner"), 0, strlen(dini_Get(file,"Owner")), 255);
		strmid(SBizzInfo[idx][sbMessage], dini_Get(file,"Message"), 0, strlen(dini_Get(file,"Message")), 255);
		strmid(SBizzInfo[idx][sbExtortion], dini_Get(file,"ExtortionBy"), 0, strlen(dini_Get(file,"ExtortionBy")), 255);
		SBizzInfo[idx][sbEntranceX] = dini_Float(file,"Entrance_X");
		SBizzInfo[idx][sbEntranceY] = dini_Float(file,"Entrance_Y");
		SBizzInfo[idx][sbEntranceZ] = dini_Float(file,"Entrance_Z");
		SBizzInfo[idx][sbLevelNeeded] = dini_Int(file,"LevelNeeded");
		SBizzInfo[idx][sbBuyPrice] = dini_Int(file,"Price");
		SBizzInfo[idx][sbEntranceCost] = dini_Int(file,"EntranceCost");
		SBizzInfo[idx][sbTill] = dini_Int(file,"Till");
		SBizzInfo[idx][sbLocked] = dini_Int(file,"Locked");
		SBizzInfo[idx][sbInterior] = dini_Int(file,"Interior");
		SBizzInfo[idx][sbProducts] = dini_Int(file,"Products");
		SBizzInfo[idx][sbMaxProducts] = dini_Int(file,"MaxProducts");
		SBizzInfo[idx][sbPriceProd] = dini_Int(file,"ProductPrice");
	}
	print("[Ω≈±æ]: ‘ÿ»Î S-≤˙“µ");
	return 1;
}
//------------------------------------------------------------------------------------------------------
public OnGameModeInit() // Do not add vehicles Above the next lines. - CuervO
{
	LoadCar();
	new string2[64];
	for(new h = 1; h < sizeof(CarInfo); h++)
	{
		format(string2, sizeof(string2), "LARP/Vehicles/%d.ini",h);
		if(dini_Exists(string2))
		{
			ownedcar[h] = AddStaticVehicleEx(CarInfo[h][cModel],CarInfo[h][cLocationx],CarInfo[h][cLocationy],CarInfo[h][cLocationz]+1.0,CarInfo[h][cAngle],CarInfo[h][cColorOne],CarInfo[h][cColorTwo],60000);
			if(CarInfo[h][cPaintjob] != 999)
			{
				ChangeVehiclePaintjob(h, CarInfo[h][cPaintjob]);
			}
			SetVehicleVirtualWorld(h, CarInfo[h][cVirWorld]);
			SetVehicleModifications(h);
		}
	}
  	
  	if(!dini_Exists("LARP/Users/Aliases/alias.txt")) dini_Create("LARP/Users/Aliases/alias.txt");
    if(!dini_Exists("LARP/Users/Aliases/ips.txt")) dini_Create("LARP/Users/Aliases/ips.txt");

	SendIP = 0;
	cDebug = 0;
	nextapartment = 24;
	nexthouse = 2;
	nextmedium = 17;
	nextbig = 1;
	
	nextshop = 1;
	
	Predators = 0;
	Rhinos = 0;
	Hunters = 0;
	Hydras = 0;
	admins = 0;
	MinutesTD = 0;
	SecondsTD = 0;
	HoursTD = 0;
	voteyes = 0;
	voteno = 0;
	votation = 0;
	votetype = 0;
	votationrecently = 0;
	beingvoted = 255;
	ServerRestarted = 0;
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
    new PropertyString[256];
    for(new i = 1; i < MAX_REPORTS; i++) Reports[i] = "<none>";
	for(new c=0;c<MAX_VEHICLES;c++)
	{
		Gas[c] = GasMax;
	}
	
	SetTimer("PeterAC", 1000, true);
	SetTimer("SendMSG", 450000, true);
	SetTimer("ChangeWeather",1200000, true);
	SetTimer("PaySprayTrans",1000,true);
	SetTimer("GpsCheck",1250,true);
	
	new hour,minute,second;
	gettime(hour,minute,second);
	HoursTD = hour;
	MinutesTD = minute;
	SecondsTD = second;
	
	SetTimer("ClockSeconds",1000,true);
	
	LoadMotd();
	LoadEvents();
	ChangeWeather();
	Textdraw2 = TextDrawCreate(0.000000,437.000000,"SERVER MOTD:");
	new versions[64];
	format(versions, sizeof(versions),"%s.     Build %s",Motd, Version);
	Textdraw3 = TextDrawCreate(303.000000,437.000000,versions);
	TextDrawUseBox(Textdraw2,1);
	TextDrawBoxColor(Textdraw2,0x00000066);
	TextDrawTextSize(Textdraw2,700.000000,1500.000000);
	TextDrawAlignment(Textdraw2,1);
	TextDrawAlignment(Textdraw3,2);
	TextDrawBackgroundColor(Textdraw2,0x00000066);
	TextDrawBackgroundColor(Textdraw3,0x000000ff);
	TextDrawFont(Textdraw2,1);
	TextDrawLetterSize(Textdraw2,0.299999,1.000000);
	TextDrawFont(Textdraw3,2);
	TextDrawLetterSize(Textdraw3,0.399999,1.000000);
	TextDrawColor(Textdraw2,0x00ff00cc);
	TextDrawColor(Textdraw3,0xffffffff);
	TextDrawSetOutline(Textdraw2,1);
	TextDrawSetOutline(Textdraw3,1);
	TextDrawSetProportional(Textdraw2,1);
	TextDrawSetProportional(Textdraw3,1);
	TextDrawSetShadow(Textdraw2,1);
	TextDrawSetShadow(Textdraw3,1);

    Textdraw0 = TextDrawCreate(600.000000,354.000000,"Admin Warning:");
	TextDrawAlignment(Textdraw0,3);
	TextDrawBackgroundColor(Textdraw0,0x000000ff);
	TextDrawFont(Textdraw0,3);
	TextDrawLetterSize(Textdraw0,0.599998,2.200000);
	TextDrawColor(Textdraw0,0xff0000ff);
	TextDrawSetOutline(Textdraw0,1);
	TextDrawSetProportional(Textdraw0,1);
	TextDrawSetShadow(Textdraw0,10);

	Textdraw5 = TextDrawCreate(302.000000,1.000000,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawUseBox(Textdraw5,1);
	TextDrawBoxColor(Textdraw5,0x000000ff);
	TextDrawTextSize(Textdraw5,-52.000000,-738.000000);
	TextDrawAlignment(Textdraw5,2);
	TextDrawBackgroundColor(Textdraw5,0x000000ff);
	TextDrawFont(Textdraw5,1);
	TextDrawLetterSize(Textdraw5,1.000000,1.000000);
	TextDrawColor(Textdraw5,0x000000ff);
	TextDrawSetOutline(Textdraw5,1);
	TextDrawSetProportional(Textdraw5,1);
	TextDrawSetShadow(Textdraw5,1);

	txtAnimHelper = TextDrawCreate(610.0, 400.0,"~b~~k~~PED_LOCK_TARGET~ ~w~to stop the animation");
	TextDrawUseBox(txtAnimHelper, 0);
	TextDrawFont(txtAnimHelper, 2);
	TextDrawSetShadow(txtAnimHelper,0); // no shadow
    TextDrawSetOutline(txtAnimHelper,1); // thickness 1
    TextDrawBackgroundColor(txtAnimHelper,0x000000FF);
    TextDrawColor(txtAnimHelper,0xFFFFFFFF);
    TextDrawAlignment(txtAnimHelper,3); // align right

	TD0 = TextDrawCreate(320.0, 400.0, " ");
	TextDrawUseBox(TD0, 0);
	TextDrawFont(TD0, 1);
	TextDrawSetShadow(TD0,0); // no shadow
 	TextDrawSetOutline(TD0,1); // thickness 1
 	TextDrawBackgroundColor(TD0,0x000000FF);
 	TextDrawColor(TD0,0xFFFFFFFF);
 	TextDrawAlignment(TD0,2); // align Center

	TD1 = TextDrawCreate(320.0, 430.0, " ");
	TextDrawUseBox(TD1, 0);
	TextDrawFont(TD1, 1);
	TextDrawLetterSize(TD1, 0.3, 0.9);
	TextDrawSetShadow(TD1,0); // no shadow
	TextDrawSetOutline(TD1,1); // thickness 1
	TextDrawBackgroundColor(TD1,0x000000FF);
	TextDrawColor(TD1,0xFFFFFFFF);
 	TextDrawAlignment(TD1,2); // align Center

	TD2 = TextDrawCreate(610.0, 325.0, " ");
	TextDrawUseBox(TD2, 0);
	TextDrawFont(TD2, 2);
	TextDrawSetShadow(TD2,0); // no shadow
 	TextDrawSetOutline(TD2,1); // thickness 1
 	TextDrawBackgroundColor(TD2,0x000000FF);
 	TextDrawColor(TD2,0xFFFFFFFF);
 	TextDrawAlignment(TD2,3); // align Right

    TD3 = TextDrawCreate(323.0,141.0, " ");
	TextDrawUseBox(TD3, 0);
	TextDrawFont(TD3, 3);
	TextDrawLetterSize(TD3, 0.899999,2.899999);
	TextDrawSetShadow(TD3,0); // no shadow
	TextDrawSetOutline(TD3,1); // thickness 1
	TextDrawBackgroundColor(TD3,0x000000FF);
	TextDrawColor(TD3,0xFFFFFFFF);
	TextDrawAlignment(TD3,2); // align Center

	TD4 = TextDrawCreate(607.000000, 200.000000, " ");
	TextDrawAlignment(TD4, 3);
	TextDrawBackgroundColor(TD4, 255);
	TextDrawFont(TD4, 0);
	TextDrawLetterSize(TD4, 0.649999, 1.899999);
	TextDrawColor(TD4, -1);
	TextDrawSetOutline(TD4, 1);
	TextDrawSetProportional(TD4, 1);

	Textdraw6 = TextDrawCreate(319.000000, 59.000000, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw6, 2);
	TextDrawBackgroundColor(Textdraw6, 255);
	TextDrawFont(Textdraw6, 1);
	TextDrawLetterSize(Textdraw6, 0.990000, 1.400000);
	TextDrawColor(Textdraw6, -1);
	TextDrawSetOutline(Textdraw6, 0);
	TextDrawSetProportional(Textdraw6, 1);
	TextDrawSetShadow(Textdraw6, 1);
	TextDrawUseBox(Textdraw6, 1);
	TextDrawBoxColor(Textdraw6, 50);
	TextDrawTextSize(Textdraw6, 9.000000, -452.000000);

	Textdraw7 = TextDrawCreate(319.000000, 60.000000, "nill Server");
	TextDrawAlignment(Textdraw7, 2);
	TextDrawBackgroundColor(Textdraw7, 255);
	TextDrawFont(Textdraw7, 0);
	TextDrawLetterSize(Textdraw7, 0.649999, 2.000000);
	TextDrawColor(Textdraw7, -1);
	TextDrawSetOutline(Textdraw7, 1);
	TextDrawSetProportional(Textdraw7, 1);

	Textdraw8 = TextDrawCreate(315.000000, 82.000000, "~p~Welcome!");
	TextDrawAlignment(Textdraw8, 2);
	TextDrawBackgroundColor(Textdraw8, 255);
	TextDrawFont(Textdraw8, 2);
	TextDrawLetterSize(Textdraw8, 0.559999, 1.800000);
	TextDrawColor(Textdraw8, -1);
	TextDrawSetOutline(Textdraw8, 1);
	TextDrawSetProportional(Textdraw8, 1);

	Textdraw9 = TextDrawCreate(322.000000, 104.000000, "~y~We Hope That You Like our Server.");
	TextDrawAlignment(Textdraw9, 2);
	TextDrawBackgroundColor(Textdraw9, 255);
	TextDrawFont(Textdraw9, 3);
	TextDrawLetterSize(Textdraw9, 0.589999, 2.100000);
	TextDrawColor(Textdraw9, -1);
	TextDrawSetOutline(Textdraw9, 1);
	TextDrawSetProportional(Textdraw9, 1);

	Textdraw10 = TextDrawCreate(100.000000, 178.000000, "~y~1) ~w~Always Roleplay ~n~~n~~n~~n~~y~3) ~w~Do Not Deathmatch ~n~~n~~n~~n~~y~5) ~w~Do not Revenge Kill");
	TextDrawBackgroundColor(Textdraw10, 255);
	TextDrawFont(Textdraw10, 1);
	TextDrawLetterSize(Textdraw10, 0.400000, 1.500000);
	TextDrawColor(Textdraw10, -1);
	TextDrawSetOutline(Textdraw10, 1);
	TextDrawSetProportional(Textdraw10, 1);

	Textdraw11 = TextDrawCreate(116.000000, 197.000000, "Doesn't Matters What, Always Roleplay ~n~Unless an Admin Says Otherwise");
	TextDrawBackgroundColor(Textdraw11, -65281);
	TextDrawFont(Textdraw11, 1);
	TextDrawLetterSize(Textdraw11, 0.220000, 0.899999);
	TextDrawColor(Textdraw11, -1);
	TextDrawSetOutline(Textdraw11, 0);
	TextDrawSetProportional(Textdraw11, 1);
	TextDrawSetShadow(Textdraw11, 0);

	Textdraw12 = TextDrawCreate(137.000000, 141.000000, "Remember To Read and Follow Our Rules:");
	TextDrawBackgroundColor(Textdraw12, 255);
	TextDrawFont(Textdraw12, 1);
	TextDrawLetterSize(Textdraw12, 0.500000, 1.400000);
	TextDrawColor(Textdraw12, -1778384641);
	TextDrawSetOutline(Textdraw12, 1);
	TextDrawSetProportional(Textdraw12, 1);

	Textdraw13 = TextDrawCreate(116.000000, 251.000000, "This is not a Deathmatch Server, ~n~Do not Kill for no Reason. ~n~You must use Only RP ~n~Reasons to kill someone.");
	TextDrawBackgroundColor(Textdraw13, -65281);
	TextDrawFont(Textdraw13, 1);
	TextDrawLetterSize(Textdraw13, 0.220000, 0.899999);
	TextDrawColor(Textdraw13, -1);
	TextDrawSetOutline(Textdraw13, 0);
	TextDrawSetProportional(Textdraw13, 1);
	TextDrawSetShadow(Textdraw13, 0);

	Textdraw14 = TextDrawCreate(116.000000, 305.000000, "If you Got Killed Already ~n~Do not ~w~Come Back To Get ~n~a Revenge. When you Die You ~n~~r~Loose ~w~Your Memory");
	TextDrawBackgroundColor(Textdraw14, -65281);
	TextDrawFont(Textdraw14, 1);
	TextDrawLetterSize(Textdraw14, 0.220000, 0.899999);
	TextDrawColor(Textdraw14, -1);
	TextDrawSetOutline(Textdraw14, 0);
	TextDrawSetProportional(Textdraw14, 1);
	TextDrawSetShadow(Textdraw14, 0);

	Textdraw15 = TextDrawCreate(534.000000, 178.000000, "~y~2) ~w~Do ~r~Not ~w~Use Hacks/Cheats ~n~~n~~n~~n~~y~4) ~w~Do ~r~Not ~w~Exploit any Bug ~n~~n~~n~~n~~y~6) ~w~Do ~r~not ~w~pretend to...");
	TextDrawAlignment(Textdraw15, 3);
	TextDrawBackgroundColor(Textdraw15, 255);
	TextDrawFont(Textdraw15, 1);
	TextDrawLetterSize(Textdraw15, 0.400000, 1.500000);
	TextDrawColor(Textdraw15, -1);
	TextDrawSetOutline(Textdraw15, 1);
	TextDrawSetProportional(Textdraw15, 1);

	Textdraw16 = TextDrawCreate(511.000000, 253.000000, "You must Report any Bug that you ~n~find to the administration via ~y~/askq. ~n~~w~ Do not Use The bugs at Your advantage.");
	TextDrawAlignment(Textdraw16, 3);
	TextDrawBackgroundColor(Textdraw16, -65281);
	TextDrawFont(Textdraw16, 1);
	TextDrawLetterSize(Textdraw16, 0.220000, 0.899999);
	TextDrawColor(Textdraw16, -1);
	TextDrawSetOutline(Textdraw16, 0);
	TextDrawSetProportional(Textdraw16, 1);
	TextDrawSetShadow(Textdraw16, 0);

	Textdraw17 = TextDrawCreate(511.000000, 195.000000, "Any use of ~y~3rd Party Program ~n~~w~That provides you an Unfair ~n~Advantage over other players ~n~is considered cheat.");
	TextDrawAlignment(Textdraw17, 3);
	TextDrawBackgroundColor(Textdraw17, -65281);
	TextDrawFont(Textdraw17, 1);
	TextDrawLetterSize(Textdraw17, 0.220000, 0.899999);
	TextDrawColor(Textdraw17, -1);
	TextDrawSetOutline(Textdraw17, 0);
	TextDrawSetProportional(Textdraw17, 1);
	TextDrawSetShadow(Textdraw17, 0);

	Textdraw18 = TextDrawCreate(511.000000, 307.000000, "Be a ~p~Regular Player ~n~~w~or an ~p~Administrator. ~w~Doing so may ~n~Confuse People, We don't want that");
	TextDrawAlignment(Textdraw18, 3);
	TextDrawBackgroundColor(Textdraw18, -65281);
	TextDrawFont(Textdraw18, 1);
	TextDrawLetterSize(Textdraw18, 0.220000, 0.899999);
	TextDrawColor(Textdraw18, -1);
	TextDrawSetOutline(Textdraw18, 0);
	TextDrawSetProportional(Textdraw18, 1);
	TextDrawSetShadow(Textdraw18, 0);

	Textdraw19 = TextDrawCreate(171.000000, 373.000000, "Server Created by ~b~CuervO_NegrO");
	TextDrawBackgroundColor(Textdraw19, 255);
	TextDrawFont(Textdraw19, 1);
	TextDrawLetterSize(Textdraw19, 0.500000, 1.000000);
	TextDrawColor(Textdraw19, -1);
	TextDrawSetOutline(Textdraw19, 1);
	TextDrawSetProportional(Textdraw19, 1);

	Textdraw20 = TextDrawCreate(315.000000, 90.000000, "Server Rules ~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw20, 2);
	TextDrawBackgroundColor(Textdraw20, 255);
	TextDrawFont(Textdraw20, 0);
	TextDrawLetterSize(Textdraw20, 0.789999, 2.399999);
	TextDrawColor(Textdraw20, -1);
	TextDrawSetOutline(Textdraw20, 1);
	TextDrawSetProportional(Textdraw20, 1);
	TextDrawUseBox(Textdraw20, 1);
	TextDrawBoxColor(Textdraw20, 125);
	TextDrawTextSize(Textdraw20, 60.000000, 460.000000);

	Textdraw21 = TextDrawCreate(256.000000, 110.000000, "---------------");
	TextDrawBackgroundColor(Textdraw21, -16776961);
	TextDrawFont(Textdraw21, 1);
	TextDrawLetterSize(Textdraw21, 0.500000, 1.000000);
	TextDrawColor(Textdraw21, -16776961);
	TextDrawSetOutline(Textdraw21, 1);
	TextDrawSetProportional(Textdraw21, 1);

	Textdraw22 = TextDrawCreate(90.000000, 143.000000, "~y~1) ~w~Do not Deathmatch ~n~~n~~n~~n~~n~~y~2) ~w~Always Roleplay ~n~~n~~n~~n~~n~~y~3) ~w~Do not Revenge Kill");
	TextDrawBackgroundColor(Textdraw22, 255);
	TextDrawFont(Textdraw22, 1);
	TextDrawLetterSize(Textdraw22, 0.500000, 1.000000);
	TextDrawColor(Textdraw22, -1);
	TextDrawSetOutline(Textdraw22, 0);
	TextDrawSetProportional(Textdraw22, 1);
	TextDrawSetShadow(Textdraw22, 1);

	Textdraw23 = TextDrawCreate(90.000000, 283.000000, "~y~4) ~w~Do not Hack/Cheat ~n~~n~~n~~n~~n~~y~5) ~w~Do not Abuse Bugs~n~~n~~n~~n~~n~~y~6) ~w~Do not Bunny Jump");
	TextDrawBackgroundColor(Textdraw23, 255);
	TextDrawFont(Textdraw23, 1);
	TextDrawLetterSize(Textdraw23, 0.500000, 1.000000);
	TextDrawColor(Textdraw23, -1);
	TextDrawSetOutline(Textdraw23, 0);
	TextDrawSetProportional(Textdraw23, 1);
	TextDrawSetShadow(Textdraw23, 1);

	Textdraw24 = TextDrawCreate(112.000000, 155.000000, "This is ~r~NOT ~w~a Deathmatch Server. ~n~Do Not Kill Anyone for No Reason");
	TextDrawBackgroundColor(Textdraw24, 255);
	TextDrawFont(Textdraw24, 1);
	TextDrawLetterSize(Textdraw24, 0.190000, 0.899999);
	TextDrawColor(Textdraw24, -1);
	TextDrawSetOutline(Textdraw24, 0);
	TextDrawSetProportional(Textdraw24, 1);
	TextDrawSetShadow(Textdraw24, 0);

	Textdraw25 = TextDrawCreate(114.000000, 200.000000, "This is a Roleplay Server. ~y~Always ~n~~w~Roleplay Unless an Admin Says so.");
	TextDrawBackgroundColor(Textdraw25, 255);
	TextDrawFont(Textdraw25, 1);
	TextDrawLetterSize(Textdraw25, 0.190000, 0.899999);
	TextDrawColor(Textdraw25, -1);
	TextDrawSetOutline(Textdraw25, 0);
	TextDrawSetProportional(Textdraw25, 1);
	TextDrawSetShadow(Textdraw25, 0);

	Textdraw26 = TextDrawCreate(114.000000, 245.000000, "Once You get Killed, The Roleplay ~n~is ~r~Over. ~w~You loose your Memory.");
	TextDrawBackgroundColor(Textdraw26, 255);
	TextDrawFont(Textdraw26, 1);
	TextDrawLetterSize(Textdraw26, 0.190000, 0.899999);
	TextDrawColor(Textdraw26, -1);
	TextDrawSetOutline(Textdraw26, 0);
	TextDrawSetProportional(Textdraw26, 1);
	TextDrawSetShadow(Textdraw26, 0);

	Textdraw27 = TextDrawCreate(114.000000, 296.000000, "The use of Third Party Programs That ~n~Give you an Advantage, is ~r~Forbidden.");
	TextDrawBackgroundColor(Textdraw27, 255);
	TextDrawFont(Textdraw27, 1);
	TextDrawLetterSize(Textdraw27, 0.190000, 0.899999);
	TextDrawColor(Textdraw27, -1);
	TextDrawSetOutline(Textdraw27, 0);
	TextDrawSetProportional(Textdraw27, 1);
	TextDrawSetShadow(Textdraw27, 0);

	Textdraw28 = TextDrawCreate(114.000000, 342.000000, "If you Find a Bug, You must Report it ~n~To The Administration via ~p~/askq.");
	TextDrawBackgroundColor(Textdraw28, 255);
	TextDrawFont(Textdraw28, 1);
	TextDrawLetterSize(Textdraw28, 0.190000, 0.899999);
	TextDrawColor(Textdraw28, -1);
	TextDrawSetOutline(Textdraw28, 0);
	TextDrawSetProportional(Textdraw28, 1);
	TextDrawSetShadow(Textdraw28, 0);

	Textdraw29 = TextDrawCreate(115.000000, 388.000000, "Even if you Cannot Bunnyjump, Do ~n~~r~NOT ~w~Ever Try to. You will Fall down.");
	TextDrawBackgroundColor(Textdraw29, 255);
	TextDrawFont(Textdraw29, 1);
	TextDrawLetterSize(Textdraw29, 0.190000, 0.899999);
	TextDrawColor(Textdraw29, -1);
	TextDrawSetOutline(Textdraw29, 0);
	TextDrawSetProportional(Textdraw29, 1);
	TextDrawSetShadow(Textdraw29, 0);

	Textdraw30 = TextDrawCreate(536.000000, 143.000000, "~w~Do not Insult/Flame ~y~(7 ~n~~n~~n~~n~~n~ ~w~Do not Blowup... ~y~(8 ~n~~n~~n~~n~~n~~w~Do not Pretend to... ~y~(9");
	TextDrawAlignment(Textdraw30, 3);
	TextDrawBackgroundColor(Textdraw30, 255);
	TextDrawFont(Textdraw30, 1);
	TextDrawLetterSize(Textdraw30, 0.500000, 1.000000);
	TextDrawColor(Textdraw30, -1);
	TextDrawSetOutline(Textdraw30, 0);
	TextDrawSetProportional(Textdraw30, 1);
	TextDrawSetShadow(Textdraw30, 1);

	Textdraw31 = TextDrawCreate(370.000000, 283.000000, "~w~Do Not Provoke ~y~(10 ~n~~n~~n~~n~~n~~w~Threat Others... ~y~(11 ~n~~n~~n~~n~~n~~w~Play By The Rules ~y~(12");
	TextDrawBackgroundColor(Textdraw31, 255);
	TextDrawFont(Textdraw31, 1);
	TextDrawLetterSize(Textdraw31, 0.500000, 1.000000);
	TextDrawColor(Textdraw31, -1);
	TextDrawSetOutline(Textdraw31, 0);
	TextDrawSetProportional(Textdraw31, 1);
	TextDrawSetShadow(Textdraw31, 1);

	Textdraw32 = TextDrawCreate(512.000000, 155.000000, "No one likes to get Insults. Do ~r~NOT ~w~Do it. ~n~~w~Slang is ~y~only ~w~Allowed in ~p~RP Porpuses.");
	TextDrawAlignment(Textdraw32, 3);
	TextDrawBackgroundColor(Textdraw32, 255);
	TextDrawFont(Textdraw32, 1);
	TextDrawLetterSize(Textdraw32, 0.190000, 0.899999);
	TextDrawColor(Textdraw32, -1);
	TextDrawSetOutline(Textdraw32, 0);
	TextDrawSetProportional(Textdraw32, 1);
	TextDrawSetShadow(Textdraw32, 0);

	Textdraw33 = TextDrawCreate(512.000000, 200.000000, "Do ~r~NOT ~w~Blowup the Gas Stations. ~n~People can see this as ~y~Mass DM.");
	TextDrawAlignment(Textdraw33, 3);
	TextDrawBackgroundColor(Textdraw33, 255);
	TextDrawFont(Textdraw33, 1);
	TextDrawLetterSize(Textdraw33, 0.190000, 0.899999);
	TextDrawColor(Textdraw33, -1);
	TextDrawSetOutline(Textdraw33, 0);
	TextDrawSetProportional(Textdraw33, 1);
	TextDrawSetShadow(Textdraw33, 0);

	Textdraw34 = TextDrawCreate(512.000000, 245.000000, "Be a ~p~Regular Player ~w~or an ~p~Administrator. ~n~~w~People can get Confused, we do not want that.");
	TextDrawAlignment(Textdraw34, 3);
	TextDrawBackgroundColor(Textdraw34, 255);
	TextDrawFont(Textdraw34, 1);
	TextDrawLetterSize(Textdraw34, 0.190000, 0.899999);
	TextDrawColor(Textdraw34, -1);
	TextDrawSetOutline(Textdraw34, 0);
	TextDrawSetProportional(Textdraw34, 1);
	TextDrawSetShadow(Textdraw34, 0);

	Textdraw35 = TextDrawCreate(513.000000, 388.000000, "~p~ALWAYS ~w~Follow These Rules, No Matter What. ~n~Not Following Them can get you Banned.");
	TextDrawAlignment(Textdraw35, 3);
	TextDrawBackgroundColor(Textdraw35, 255);
	TextDrawFont(Textdraw35, 1);
	TextDrawLetterSize(Textdraw35, 0.190000, 0.899999);
	TextDrawColor(Textdraw35, -1);
	TextDrawSetOutline(Textdraw35, 0);
	TextDrawSetProportional(Textdraw35, 1);
	TextDrawSetShadow(Textdraw35, 0);

	Textdraw36 = TextDrawCreate(505.000000, 295.000000, "Do ~r~NOT ~w~Provoke other Players. ~n~Provoking Can start a ~y~Flame War.");
	TextDrawAlignment(Textdraw36, 3);
	TextDrawBackgroundColor(Textdraw36, 255);
	TextDrawFont(Textdraw36, 1);
	TextDrawLetterSize(Textdraw36, 0.190000, 0.899999);
	TextDrawColor(Textdraw36, -1);
	TextDrawSetOutline(Textdraw36, 0);
	TextDrawSetProportional(Textdraw36, 1);
	TextDrawSetShadow(Textdraw36, 0);

	Textdraw37 = TextDrawCreate(503.000000, 342.000000, "Like you would ~g~want ~w~to Get Threated. ~n~Respect EVERYONE, even ~y~Hackers.");
	TextDrawAlignment(Textdraw37, 3);
	TextDrawBackgroundColor(Textdraw37, 255);
	TextDrawFont(Textdraw37, 1);
	TextDrawLetterSize(Textdraw37, 0.190000, 0.899999);
	TextDrawColor(Textdraw37, -1);
	TextDrawSetOutline(Textdraw37, 0);
	TextDrawSetProportional(Textdraw37, 1);
	TextDrawSetShadow(Textdraw37, 0);

	Textdraw38 = TextDrawCreate(310.000000, 427.000000, "Rules by ~y~CuervO_NegrO.");
	TextDrawAlignment(Textdraw38, 2);
	TextDrawBackgroundColor(Textdraw38, 255);
	TextDrawFont(Textdraw38, 1);
	TextDrawLetterSize(Textdraw38, 0.500000, 1.000000);
	TextDrawColor(Textdraw38, -1);
	TextDrawSetOutline(Textdraw38, 0);
	TextDrawSetProportional(Textdraw38, 1);
	TextDrawSetShadow(Textdraw38, 1);
	
	Textdraw43 = TextDrawCreate(262.000000, 135.000000, "-Speed Gun-");
	TextDrawBackgroundColor(Textdraw43, 16777215);
	TextDrawFont(Textdraw43, 0);
	TextDrawLetterSize(Textdraw43, 0.800000, 3.000000);
	TextDrawColor(Textdraw43, 255);
	TextDrawSetOutline(Textdraw43, 1);
	TextDrawSetProportional(Textdraw43, 1);

    Textdraw44 = TextDrawCreate(594.000000, 328.000000, "."); // Circle of the Logo
	TextDrawBackgroundColor(Textdraw44, 255);
	TextDrawFont(Textdraw44, 1);
	TextDrawLetterSize(Textdraw44, 3.499998, 13.000000);
	TextDrawColor(Textdraw44, 629657275);
	TextDrawSetOutline(Textdraw44, 1);
	TextDrawSetProportional(Textdraw44, 1);

	format(string, sizeof(string),"v%s",Version);
	Textdraw45 = TextDrawCreate(604.000000, 433.000000, string); // version
	TextDrawBackgroundColor(Textdraw45, 255);
	TextDrawFont(Textdraw45, 2);
	TextDrawLetterSize(Textdraw45, 0.190000, 0.999999);
	TextDrawColor(Textdraw45, 629657343);
	TextDrawSetOutline(Textdraw45, 1);
	TextDrawSetProportional(Textdraw45, 1);
	
	Textdraw46 = TextDrawCreate(95.000000, 321.000000, " "); //countdown
	TextDrawAlignment(Textdraw46, 2);
	TextDrawBackgroundColor(Textdraw46, 255);
	TextDrawFont(Textdraw46, 1);
	TextDrawLetterSize(Textdraw46, 0.480000, 1.799999);
	TextDrawColor(Textdraw46, -1);
	TextDrawSetOutline(Textdraw46, 1);
	TextDrawSetProportional(Textdraw46, 1);
	
	Textdraw50 = TextDrawCreate(311.000000, 111.000000, "You are AFK. ~n~To Get Back Type Any Command ~n~or Press 'ENTER_VEHICLE' Key");
	TextDrawAlignment(Textdraw50, 2);
	TextDrawBackgroundColor(Textdraw50, -65281);
	TextDrawFont(Textdraw50, 1);
	TextDrawLetterSize(Textdraw50, 0.800000, 4.700000);
	TextDrawColor(Textdraw50, 255);
	TextDrawSetOutline(Textdraw50, 1);
	TextDrawSetProportional(Textdraw50, 1);
	
	Textdraw55 = TextDrawCreate(618.000000, 404.000000, "+");
	TextDrawBackgroundColor(Textdraw55, 255);
	TextDrawFont(Textdraw55, 1);
	TextDrawLetterSize(Textdraw55, -0.589999, 2.300000);
	TextDrawSetOutline(Textdraw55, 1);
	TextDrawColor(Textdraw55, 629657343);
	TextDrawSetProportional(Textdraw55, 1);

	Textdraw56 = TextDrawCreate(569.000000, 16.000000, " "); // minutes
	TextDrawBackgroundColor(Textdraw56, 255);
	TextDrawFont(Textdraw56, 3);
	TextDrawLetterSize(Textdraw56, 0.529999, 2.000000);
	TextDrawColor(Textdraw56, -1);
	TextDrawSetOutline(Textdraw56, 1);
	TextDrawSetProportional(Textdraw56, 1);

	Textdraw57 = TextDrawCreate(600.000000, 22.000000, " "); // seconds
	TextDrawBackgroundColor(Textdraw57, 255);
	TextDrawFont(Textdraw57, 3);
	TextDrawLetterSize(Textdraw57, 0.360000, 1.200000);
	TextDrawColor(Textdraw57, -1);
	TextDrawSetOutline(Textdraw57, 1);
	TextDrawSetProportional(Textdraw57, 1);
	
	Textdraw58 = TextDrawCreate(548.000000, 16.000000, " "); // hours
	TextDrawBackgroundColor(Textdraw58, 255);
	TextDrawFont(Textdraw58, 3);
	TextDrawLetterSize(Textdraw58, 0.529999, 2.000000);
	TextDrawColor(Textdraw58, -1);
	TextDrawSetOutline(Textdraw58, 1);
	TextDrawSetProportional(Textdraw58, 1);
	
	Textdraw59 = TextDrawCreate(320.000000, 112.000000, "~p~New Achievement! ~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw59, 2);
	TextDrawBackgroundColor(Textdraw59, 255);
	TextDrawFont(Textdraw59, 1);
	TextDrawLetterSize(Textdraw59, 0.920000, 1.699998);
	TextDrawColor(Textdraw59, -1);
	TextDrawSetOutline(Textdraw59, 1);
	TextDrawSetProportional(Textdraw59, 1);
	TextDrawUseBox(Textdraw59, 1);
	TextDrawBoxColor(Textdraw59, 136);
	TextDrawTextSize(Textdraw59, 376.000000, 420.000000);

	Textdraw60 = TextDrawCreate(290.000000, 5.000000, "~r~-");
	TextDrawBackgroundColor(Textdraw60, 255);
	TextDrawFont(Textdraw60, 1);
	TextDrawLetterSize(Textdraw60, 1.399999, 30.000000);
	TextDrawColor(Textdraw60, -1);
	TextDrawSetOutline(Textdraw60, 1);
	TextDrawSetProportional(Textdraw60, 1);
	
	Textdraw61 = TextDrawCreate(306.000000, 5.000000, "~w~-");
	TextDrawBackgroundColor(Textdraw61, 255);
	TextDrawFont(Textdraw61, 1);
	TextDrawLetterSize(Textdraw61, 1.399999, 30.000000);
	TextDrawColor(Textdraw61, -1);
	TextDrawSetOutline(Textdraw61, 1);
	TextDrawSetProportional(Textdraw61, 1);

	Textdraw62 = TextDrawCreate(322.000000, 5.000000, "~r~-");
	TextDrawBackgroundColor(Textdraw62, 255);
	TextDrawFont(Textdraw62, 1);
	TextDrawLetterSize(Textdraw62, 1.399999, 30.000000);
	TextDrawColor(Textdraw62, -1);
	TextDrawSetOutline(Textdraw62, 1);
	TextDrawSetProportional(Textdraw62, 1);

	Textdraw63 = TextDrawCreate(294.000000, 205.000000, "]");
	TextDrawBackgroundColor(Textdraw63, 255);
	TextDrawFont(Textdraw63, 2);
	TextDrawLetterSize(Textdraw63, 1.299999, 5.000000);
	TextDrawColor(Textdraw63, -65349);
	TextDrawSetOutline(Textdraw63, 1);
	TextDrawSetProportional(Textdraw63, 1);
	
	Textdraw65 = TextDrawCreate(320.000000, 172.000000, "~n~~n~~n~~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw65, 2);
	TextDrawBackgroundColor(Textdraw65, 255);
	TextDrawFont(Textdraw65, 1);
	TextDrawLetterSize(Textdraw65, 0.500000, 1.000000);
	TextDrawColor(Textdraw65, -1);
	TextDrawSetOutline(Textdraw65, 0);
	TextDrawSetProportional(Textdraw65, 1);
	TextDrawSetShadow(Textdraw65, 1);
	TextDrawUseBox(Textdraw65, 1);
	TextDrawBoxColor(Textdraw65, 85);
	TextDrawTextSize(Textdraw65, 230.000000, -270.000000);

	Textdraw66 = TextDrawCreate(320.000000, 185.000000, "~n~~n~~n~~n~~n~");
	TextDrawAlignment(Textdraw66, 2);
	TextDrawBackgroundColor(Textdraw66, 255);
	TextDrawFont(Textdraw66, 1);
	TextDrawLetterSize(Textdraw66, 0.500000, 1.000000);
	TextDrawColor(Textdraw66, -1);
	TextDrawSetOutline(Textdraw66, 0);
	TextDrawSetProportional(Textdraw66, 1);
	TextDrawSetShadow(Textdraw66, 1);
	TextDrawUseBox(Textdraw66, 1);
	TextDrawBoxColor(Textdraw66, 187);
	TextDrawTextSize(Textdraw66, 230.000000, -240.000000);

	Textdraw67 = TextDrawCreate(253.000000, 169.000000, "D E C O D E R");
	TextDrawBackgroundColor(Textdraw67, 255);
	TextDrawFont(Textdraw67, 1);
	TextDrawLetterSize(Textdraw67, 0.539999, 1.400000);
	TextDrawColor(Textdraw67, -1442840321);
	TextDrawSetOutline(Textdraw67, 0);
	TextDrawSetProportional(Textdraw67, 1);
	TextDrawSetShadow(Textdraw67, 0);

	Textdraw68 = TextDrawCreate(321.000000, 191.000000, "000000000001");
	TextDrawAlignment(Textdraw68, 2);
	TextDrawBackgroundColor(Textdraw68, 255);
	TextDrawFont(Textdraw68, 2);
	TextDrawLetterSize(Textdraw68, 0.700000, 3.000000);
	TextDrawColor(Textdraw68, -16776961);
	TextDrawSetOutline(Textdraw68, 0);
	TextDrawSetProportional(Textdraw68, 1);
	TextDrawSetShadow(Textdraw68, 0);

//------------------------------------------ CALENDAR ------------------------------------------
	CTextdraw0 = TextDrawCreate(650.000000, 0.000000, "_");
	TextDrawBackgroundColor(CTextdraw0, 255);
	TextDrawFont(CTextdraw0, 1);
	TextDrawLetterSize(CTextdraw0, 1.500000, 50.000000);
	TextDrawColor(CTextdraw0, -1);
	TextDrawSetOutline(CTextdraw0, 0);
	TextDrawSetProportional(CTextdraw0, 1);
	TextDrawSetShadow(CTextdraw0, 1);
	TextDrawUseBox(CTextdraw0, 1);
	TextDrawBoxColor(CTextdraw0, 255);
	TextDrawTextSize(CTextdraw0, -10.000000, 30.000000);

	CTextdraw1 = TextDrawCreate(94.000000, 114.000000, "By TheToni & CuervO");
	TextDrawBackgroundColor(CTextdraw1, -1);
	TextDrawFont(CTextdraw1, 1);
	TextDrawLetterSize(CTextdraw1, 0.519999, 1.699998);
	TextDrawColor(CTextdraw1, 16777215);
	TextDrawSetOutline(CTextdraw1, 1);
	TextDrawSetProportional(CTextdraw1, 1);

	CTextdraw2 = TextDrawCreate(10.000000, 129.000000, "January");
	TextDrawBackgroundColor(CTextdraw2, 255);
	TextDrawFont(CTextdraw2, 1);
	TextDrawLetterSize(CTextdraw2, 0.699999, 3.000000);
	TextDrawColor(CTextdraw2, -16776961);
	TextDrawSetOutline(CTextdraw2, 0);
	TextDrawSetProportional(CTextdraw2, 1);
	TextDrawSetShadow(CTextdraw2, 1);

	CTextdraw3 = TextDrawCreate(390.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw3, 255);
	TextDrawFont(CTextdraw3, 1);
	TextDrawLetterSize(CTextdraw3, 0.500000, 26.899999);
	TextDrawColor(CTextdraw3, -1);
	TextDrawSetOutline(CTextdraw3, 0);
	TextDrawSetProportional(CTextdraw3, 1);
	TextDrawSetShadow(CTextdraw3, 1);
	TextDrawUseBox(CTextdraw3, 1);
	TextDrawBoxColor(CTextdraw3, -1);
	TextDrawTextSize(CTextdraw3, 0.000000, 10.000000);

	CTextdraw4 = TextDrawCreate(7.000000, 158.000000, "1");
	TextDrawBackgroundColor(CTextdraw4, 255);
	TextDrawFont(CTextdraw4, 1);
	TextDrawLetterSize(CTextdraw4, 0.500000, 2.000000);
	TextDrawColor(CTextdraw4, 255);
	TextDrawSetOutline(CTextdraw4, 0);
	TextDrawSetProportional(CTextdraw4, 1);
	TextDrawSetShadow(CTextdraw4, 0);

	CTextdraw5 = TextDrawCreate(57.000000, 158.000000, "2");
	TextDrawBackgroundColor(CTextdraw5, 255);
	TextDrawFont(CTextdraw5, 1);
	TextDrawLetterSize(CTextdraw5, 0.500000, 2.000000);
	TextDrawColor(CTextdraw5, 255);
	TextDrawSetOutline(CTextdraw5, 0);
	TextDrawSetProportional(CTextdraw5, 1);
	TextDrawSetShadow(CTextdraw5, 0);

	CTextdraw6 = TextDrawCreate(106.000000, 156.000000, "3");
	TextDrawBackgroundColor(CTextdraw6, 255);
	TextDrawFont(CTextdraw6, 1);
	TextDrawLetterSize(CTextdraw6, 0.500000, 2.000000);
	TextDrawColor(CTextdraw6, 255);
	TextDrawSetOutline(CTextdraw6, 0);
	TextDrawSetProportional(CTextdraw6, 1);
	TextDrawSetShadow(CTextdraw6, 0);

	CTextdraw7 = TextDrawCreate(165.000000, 155.000000, "4");
	TextDrawBackgroundColor(CTextdraw7, 255);
	TextDrawFont(CTextdraw7, 1);
	TextDrawLetterSize(CTextdraw7, 0.500000, 2.000000);
	TextDrawColor(CTextdraw7, 255);
	TextDrawSetOutline(CTextdraw7, 0);
	TextDrawSetProportional(CTextdraw7, 1);
	TextDrawSetShadow(CTextdraw7, 0);

	CTextdraw8 = TextDrawCreate(222.000000, 154.000000, "5");
	TextDrawBackgroundColor(CTextdraw8, 255);
	TextDrawFont(CTextdraw8, 1);
	TextDrawLetterSize(CTextdraw8, 0.500000, 2.000000);
	TextDrawColor(CTextdraw8, 255);
	TextDrawSetOutline(CTextdraw8, 0);
	TextDrawSetProportional(CTextdraw8, 1);
	TextDrawSetShadow(CTextdraw8, 0);

	CTextdraw9 = TextDrawCreate(281.000000, 154.000000, "6");
	TextDrawBackgroundColor(CTextdraw9, 255);
	TextDrawFont(CTextdraw9, 1);
	TextDrawLetterSize(CTextdraw9, 0.500000, 2.000000);
	TextDrawColor(CTextdraw9, 255);
	TextDrawSetOutline(CTextdraw9, 0);
	TextDrawSetProportional(CTextdraw9, 1);
	TextDrawSetShadow(CTextdraw9, 0);

	CTextdraw10 = TextDrawCreate(349.000000, 155.000000, "7");
	TextDrawBackgroundColor(CTextdraw10, 255);
	TextDrawFont(CTextdraw10, 1);
	TextDrawLetterSize(CTextdraw10, 0.500000, 2.000000);
	TextDrawColor(CTextdraw10, 255);
	TextDrawSetOutline(CTextdraw10, 0);
	TextDrawSetProportional(CTextdraw10, 1);
	TextDrawSetShadow(CTextdraw10, 0);

	CTextdraw11 = TextDrawCreate(6.000000, 208.000000, "8");
	TextDrawBackgroundColor(CTextdraw11, 255);
	TextDrawFont(CTextdraw11, 1);
	TextDrawLetterSize(CTextdraw11, 0.500000, 2.000000);
	TextDrawColor(CTextdraw11, 255);
	TextDrawSetOutline(CTextdraw11, 0);
	TextDrawSetProportional(CTextdraw11, 1);
	TextDrawSetShadow(CTextdraw11, 0);

	CTextdraw12 = TextDrawCreate(56.000000, 209.000000, "9");
	TextDrawBackgroundColor(CTextdraw12, 255);
	TextDrawFont(CTextdraw12, 1);
	TextDrawLetterSize(CTextdraw12, 0.500000, 2.000000);
	TextDrawColor(CTextdraw12, 255);
	TextDrawSetOutline(CTextdraw12, 0);
	TextDrawSetProportional(CTextdraw12, 1);
	TextDrawSetShadow(CTextdraw12, 0);

	CTextdraw13 = TextDrawCreate(104.000000, 209.000000, "10");
	TextDrawBackgroundColor(CTextdraw13, 255);
	TextDrawFont(CTextdraw13, 1);
	TextDrawLetterSize(CTextdraw13, 0.500000, 2.000000);
	TextDrawColor(CTextdraw13, 255);
	TextDrawSetOutline(CTextdraw13, 0);
	TextDrawSetProportional(CTextdraw13, 1);
	TextDrawSetShadow(CTextdraw13, 0);

	CTextdraw14 = TextDrawCreate(163.000000, 208.000000, "11");
	TextDrawBackgroundColor(CTextdraw14, 255);
	TextDrawFont(CTextdraw14, 1);
	TextDrawLetterSize(CTextdraw14, 0.500000, 2.000000);
	TextDrawColor(CTextdraw14, 255);
	TextDrawSetOutline(CTextdraw14, 0);
	TextDrawSetProportional(CTextdraw14, 1);
	TextDrawSetShadow(CTextdraw14, 0);

	CTextdraw15 = TextDrawCreate(221.000000, 208.000000, "12");
	TextDrawBackgroundColor(CTextdraw15, 255);
	TextDrawFont(CTextdraw15, 1);
	TextDrawLetterSize(CTextdraw15, 0.500000, 2.000000);
	TextDrawColor(CTextdraw15, 255);
	TextDrawSetOutline(CTextdraw15, 0);
	TextDrawSetProportional(CTextdraw15, 1);
	TextDrawSetShadow(CTextdraw15, 0);

	CTextdraw16 = TextDrawCreate(280.000000, 208.000000, "13");
	TextDrawBackgroundColor(CTextdraw16, 255);
	TextDrawFont(CTextdraw16, 1);
	TextDrawLetterSize(CTextdraw16, 0.500000, 2.000000);
	TextDrawColor(CTextdraw16, 255);
	TextDrawSetOutline(CTextdraw16, 0);
	TextDrawSetProportional(CTextdraw16, 1);
	TextDrawSetShadow(CTextdraw16, 0);

	CTextdraw17 = TextDrawCreate(346.000000, 209.000000, "14");
	TextDrawBackgroundColor(CTextdraw17, 255);
	TextDrawFont(CTextdraw17, 1);
	TextDrawLetterSize(CTextdraw17, 0.500000, 2.000000);
	TextDrawColor(CTextdraw17, 255);
	TextDrawSetOutline(CTextdraw17, 0);
	TextDrawSetProportional(CTextdraw17, 1);
	TextDrawSetShadow(CTextdraw17, 0);

	CTextdraw18 = TextDrawCreate(5.000000, 263.000000, "15");
	TextDrawBackgroundColor(CTextdraw18, 255);
	TextDrawFont(CTextdraw18, 1);
	TextDrawLetterSize(CTextdraw18, 0.500000, 2.000000);
	TextDrawColor(CTextdraw18, 255);
	TextDrawSetOutline(CTextdraw18, 0);
	TextDrawSetProportional(CTextdraw18, 1);
	TextDrawSetShadow(CTextdraw18, 0);

	CTextdraw19 = TextDrawCreate(54.000000, 261.000000, "16");
	TextDrawBackgroundColor(CTextdraw19, 255);
	TextDrawFont(CTextdraw19, 1);
	TextDrawLetterSize(CTextdraw19, 0.500000, 2.000000);
	TextDrawColor(CTextdraw19, 255);
	TextDrawSetOutline(CTextdraw19, 0);
	TextDrawSetProportional(CTextdraw19, 1);
	TextDrawSetShadow(CTextdraw19, 0);

	CTextdraw20 = TextDrawCreate(105.000000, 261.000000, "17");
	TextDrawBackgroundColor(CTextdraw20, 255);
	TextDrawFont(CTextdraw20, 1);
	TextDrawLetterSize(CTextdraw20, 0.500000, 2.000000);
	TextDrawColor(CTextdraw20, 255);
	TextDrawSetOutline(CTextdraw20, 0);
	TextDrawSetProportional(CTextdraw20, 1);
	TextDrawSetShadow(CTextdraw20, 0);

	CTextdraw21 = TextDrawCreate(161.000000, 261.000000, "18");
	TextDrawBackgroundColor(CTextdraw21, 255);
	TextDrawFont(CTextdraw21, 1);
	TextDrawLetterSize(CTextdraw21, 0.500000, 2.000000);
	TextDrawColor(CTextdraw21, 255);
	TextDrawSetOutline(CTextdraw21, 0);
	TextDrawSetProportional(CTextdraw21, 1);
	TextDrawSetShadow(CTextdraw21, 0);

	CTextdraw22 = TextDrawCreate(221.000000, 261.000000, "19");
	TextDrawBackgroundColor(CTextdraw22, 255);
	TextDrawFont(CTextdraw22, 1);
	TextDrawLetterSize(CTextdraw22, 0.500000, 2.000000);
	TextDrawColor(CTextdraw22, 255);
	TextDrawSetOutline(CTextdraw22, 0);
	TextDrawSetProportional(CTextdraw22, 1);
	TextDrawSetShadow(CTextdraw22, 0);

	CTextdraw23 = TextDrawCreate(281.000000, 260.000000, "20");
	TextDrawBackgroundColor(CTextdraw23, 255);
	TextDrawFont(CTextdraw23, 1);
	TextDrawLetterSize(CTextdraw23, 0.500000, 2.000000);
	TextDrawColor(CTextdraw23, 255);
	TextDrawSetOutline(CTextdraw23, 0);
	TextDrawSetProportional(CTextdraw23, 1);
	TextDrawSetShadow(CTextdraw23, 0);

	CTextdraw24 = TextDrawCreate(347.000000, 261.000000, "21");
	TextDrawBackgroundColor(CTextdraw24, 255);
	TextDrawFont(CTextdraw24, 1);
	TextDrawLetterSize(CTextdraw24, 0.500000, 2.000000);
	TextDrawColor(CTextdraw24, 255);
	TextDrawSetOutline(CTextdraw24, 0);
	TextDrawSetProportional(CTextdraw24, 1);
	TextDrawSetShadow(CTextdraw24, 0);

	CTextdraw25 = TextDrawCreate(5.000000, 313.000000, "22");
	TextDrawBackgroundColor(CTextdraw25, 255);
	TextDrawFont(CTextdraw25, 1);
	TextDrawLetterSize(CTextdraw25, 0.500000, 2.000000);
	TextDrawColor(CTextdraw25, 255);
	TextDrawSetOutline(CTextdraw25, 0);
	TextDrawSetProportional(CTextdraw25, 1);
	TextDrawSetShadow(CTextdraw25, 0);

	CTextdraw26 = TextDrawCreate(54.000000, 311.000000, "23");
	TextDrawBackgroundColor(CTextdraw26, 255);
	TextDrawFont(CTextdraw26, 1);
	TextDrawLetterSize(CTextdraw26, 0.500000, 2.000000);
	TextDrawColor(CTextdraw26, 255);
	TextDrawSetOutline(CTextdraw26, 0);
	TextDrawSetProportional(CTextdraw26, 1);
	TextDrawSetShadow(CTextdraw26, 0);

	CTextdraw27 = TextDrawCreate(105.000000, 311.000000, "24");
	TextDrawBackgroundColor(CTextdraw27, 255);
	TextDrawFont(CTextdraw27, 1);
	TextDrawLetterSize(CTextdraw27, 0.500000, 2.000000);
	TextDrawColor(CTextdraw27, 255);
	TextDrawSetOutline(CTextdraw27, 0);
	TextDrawSetProportional(CTextdraw27, 1);
	TextDrawSetShadow(CTextdraw27, 0);

	CTextdraw28 = TextDrawCreate(160.000000, 310.000000, "25");
	TextDrawBackgroundColor(CTextdraw28, 255);
	TextDrawFont(CTextdraw28, 1);
	TextDrawLetterSize(CTextdraw28, 0.500000, 2.000000);
	TextDrawColor(CTextdraw28, 255);
	TextDrawSetOutline(CTextdraw28, 0);
	TextDrawSetProportional(CTextdraw28, 1);
	TextDrawSetShadow(CTextdraw28, 0);

	CTextdraw29 = TextDrawCreate(220.000000, 310.000000, "26");
	TextDrawBackgroundColor(CTextdraw29, 255);
	TextDrawFont(CTextdraw29, 1);
	TextDrawLetterSize(CTextdraw29, 0.500000, 2.000000);
	TextDrawColor(CTextdraw29, 255);
	TextDrawSetOutline(CTextdraw29, 0);
	TextDrawSetProportional(CTextdraw29, 1);
	TextDrawSetShadow(CTextdraw29, 0);

	CTextdraw30 = TextDrawCreate(281.000000, 310.000000, "27");
	TextDrawBackgroundColor(CTextdraw30, 255);
	TextDrawFont(CTextdraw30, 1);
	TextDrawLetterSize(CTextdraw30, 0.500000, 2.000000);
	TextDrawColor(CTextdraw30, 255);
	TextDrawSetOutline(CTextdraw30, 0);
	TextDrawSetProportional(CTextdraw30, 1);
	TextDrawSetShadow(CTextdraw30, 0);

	CTextdraw31 = TextDrawCreate(347.000000, 310.000000, "28");
	TextDrawBackgroundColor(CTextdraw31, 255);
	TextDrawFont(CTextdraw31, 1);
	TextDrawLetterSize(CTextdraw31, 0.500000, 2.000000);
	TextDrawColor(CTextdraw31, 255);
	TextDrawSetOutline(CTextdraw31, 0);
	TextDrawSetProportional(CTextdraw31, 1);
	TextDrawSetShadow(CTextdraw31, 0);

	CTextdraw32 = TextDrawCreate(5.000000, 358.000000, "29");
	TextDrawBackgroundColor(CTextdraw32, 255);
	TextDrawFont(CTextdraw32, 1);
	TextDrawLetterSize(CTextdraw32, 0.500000, 2.000000);
	TextDrawColor(CTextdraw32, 255);
	TextDrawSetOutline(CTextdraw32, 0);
	TextDrawSetProportional(CTextdraw32, 1);
	TextDrawSetShadow(CTextdraw32, 0);

	CTextdraw33 = TextDrawCreate(55.000000, 358.000000, "30");
	TextDrawBackgroundColor(CTextdraw33, 255);
	TextDrawFont(CTextdraw33, 1);
	TextDrawLetterSize(CTextdraw33, 0.500000, 2.000000);
	TextDrawColor(CTextdraw33, 255);
	TextDrawSetOutline(CTextdraw33, 0);
	TextDrawSetProportional(CTextdraw33, 1);
	TextDrawSetShadow(CTextdraw33, 0);

	CTextdraw34 = TextDrawCreate(104.000000, 357.000000, "31");
	TextDrawBackgroundColor(CTextdraw34, 255);
	TextDrawFont(CTextdraw34, 1);
	TextDrawLetterSize(CTextdraw34, 0.500000, 2.000000);
	TextDrawColor(CTextdraw34, 255);
	TextDrawSetOutline(CTextdraw34, 0);
	TextDrawSetProportional(CTextdraw34, 1);
	TextDrawSetShadow(CTextdraw34, 0);

	CTextdraw35 = TextDrawCreate(250.000000, 10.000000, " ");
	TextDrawBackgroundColor(CTextdraw35, 255);
	TextDrawFont(CTextdraw35, 1);
	TextDrawLetterSize(CTextdraw35, 0.500000, 1.000000);
	TextDrawColor(CTextdraw35, -1);
	TextDrawSetOutline(CTextdraw35, 0);
	TextDrawSetProportional(CTextdraw35, 1);
	TextDrawSetShadow(CTextdraw35, 1);

	CTextdraw36 = TextDrawCreate(270.000000, 135.000000, "01/01/2010");
	TextDrawBackgroundColor(CTextdraw36, 255);
	TextDrawFont(CTextdraw36, 1);
	TextDrawLetterSize(CTextdraw36, 0.600000, 2.000000);
	TextDrawColor(CTextdraw36, 16777215);
	TextDrawSetOutline(CTextdraw36, 0);
	TextDrawSetProportional(CTextdraw36, 1);
	TextDrawSetShadow(CTextdraw36, 1);

	CTextdraw37 = TextDrawCreate(413.000000, 27.000000, "Upcoming Events");
	TextDrawBackgroundColor(CTextdraw37, 255);
	TextDrawFont(CTextdraw37, 1);
	TextDrawLetterSize(CTextdraw37, 0.800000, 3.000000);
	TextDrawColor(CTextdraw37, -16776961);
	TextDrawSetOutline(CTextdraw37, 0);
	TextDrawSetProportional(CTextdraw37, 1);
	TextDrawSetShadow(CTextdraw37, 1);

	CTextdraw38 = TextDrawCreate(640.000000, 60.000000, "_");
	TextDrawBackgroundColor(CTextdraw38, 255);
	TextDrawFont(CTextdraw38, 1);
	TextDrawLetterSize(CTextdraw38, 0.500000, 8.000000);
	TextDrawColor(CTextdraw38, -1);
	TextDrawSetOutline(CTextdraw38, 0);
	TextDrawSetProportional(CTextdraw38, 1);
	TextDrawSetShadow(CTextdraw38, 1);
	TextDrawUseBox(CTextdraw38, 1);
	TextDrawBoxColor(CTextdraw38, -1);
	TextDrawTextSize(CTextdraw38, 398.000000, -20.000000);

	CTextdraw39 = TextDrawCreate(640.000000, 330.000000, "_");
	TextDrawBackgroundColor(CTextdraw39, 255);
	TextDrawFont(CTextdraw39, 1);
	TextDrawLetterSize(CTextdraw39, 0.500000, 8.000000);
	TextDrawColor(CTextdraw39, -1);
	TextDrawSetOutline(CTextdraw39, 0);
	TextDrawSetProportional(CTextdraw39, 1);
	TextDrawSetShadow(CTextdraw39, 1);
	TextDrawUseBox(CTextdraw39, 1);
	TextDrawBoxColor(CTextdraw39, -1);
	TextDrawTextSize(CTextdraw39, 400.000000, -20.000000);

	CTextdraw40 = TextDrawCreate(640.000000, 240.000000, "_");
	TextDrawBackgroundColor(CTextdraw40, 255);
	TextDrawFont(CTextdraw40, 1);
	TextDrawLetterSize(CTextdraw40, 0.500000, 8.000000);
	TextDrawColor(CTextdraw40, -1);
	TextDrawSetOutline(CTextdraw40, 0);
	TextDrawSetProportional(CTextdraw40, 1);
	TextDrawSetShadow(CTextdraw40, 1);
	TextDrawUseBox(CTextdraw40, 1);
	TextDrawBoxColor(CTextdraw40, -1);
	TextDrawTextSize(CTextdraw40, 400.000000, -20.000000);

	CTextdraw41 = TextDrawCreate(640.000000, 150.000000, "_");
	TextDrawBackgroundColor(CTextdraw41, 255);
	TextDrawFont(CTextdraw41, 1);
	TextDrawLetterSize(CTextdraw41, 0.500000, 7.900000);
	TextDrawColor(CTextdraw41, -1);
	TextDrawSetOutline(CTextdraw41, 0);
	TextDrawSetProportional(CTextdraw41, 1);
	TextDrawSetShadow(CTextdraw41, 1);
	TextDrawUseBox(CTextdraw41, 1);
	TextDrawBoxColor(CTextdraw41, -1);
	TextDrawTextSize(CTextdraw41, 399.000000, -20.000000);

	CTextdraw42 = TextDrawCreate(57.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw42, 255);
	TextDrawFont(CTextdraw42, 1);
	TextDrawLetterSize(CTextdraw42, 0.500000, 26.900003);
	TextDrawColor(CTextdraw42, 16711935);
	TextDrawSetOutline(CTextdraw42, 0);
	TextDrawSetProportional(CTextdraw42, 1);
	TextDrawSetShadow(CTextdraw42, 1);
	TextDrawUseBox(CTextdraw42, 1);
	TextDrawBoxColor(CTextdraw42, -16776961);
	TextDrawTextSize(CTextdraw42, 48.000000, -80.000000);

	CTextdraw43 = TextDrawCreate(107.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw43, 255);
	TextDrawFont(CTextdraw43, 1);
	TextDrawLetterSize(CTextdraw43, 0.500000, 26.900003);
	TextDrawColor(CTextdraw43, 16711935);
	TextDrawSetOutline(CTextdraw43, 0);
	TextDrawSetProportional(CTextdraw43, 1);
	TextDrawSetShadow(CTextdraw43, 1);
	TextDrawUseBox(CTextdraw43, 1);
	TextDrawBoxColor(CTextdraw43, -16776961);
	TextDrawTextSize(CTextdraw43, 98.000000, 0.000000);

	CTextdraw44 = TextDrawCreate(164.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw44, 255);
	TextDrawFont(CTextdraw44, 1);
	TextDrawLetterSize(CTextdraw44, 0.500000, 26.900003);
	TextDrawColor(CTextdraw44, 16711935);
	TextDrawSetOutline(CTextdraw44, 0);
	TextDrawSetProportional(CTextdraw44, 1);
	TextDrawSetShadow(CTextdraw44, 1);
	TextDrawUseBox(CTextdraw44, 1);
	TextDrawBoxColor(CTextdraw44, -16776961);
	TextDrawTextSize(CTextdraw44, 154.000000, 0.000000);

	CTextdraw45 = TextDrawCreate(224.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw45, 255);
	TextDrawFont(CTextdraw45, 1);
	TextDrawLetterSize(CTextdraw45, 0.500000, 26.900003);
	TextDrawColor(CTextdraw45, 16711935);
	TextDrawSetOutline(CTextdraw45, 0);
	TextDrawSetProportional(CTextdraw45, 1);
	TextDrawSetShadow(CTextdraw45, 1);
	TextDrawUseBox(CTextdraw45, 1);
	TextDrawBoxColor(CTextdraw45, -16776961);
	TextDrawTextSize(CTextdraw45, 213.000000, 0.000000);

	CTextdraw46 = TextDrawCreate(284.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw46, 255);
	TextDrawFont(CTextdraw46, 1);
	TextDrawLetterSize(CTextdraw46, 0.500000, 26.900003);
	TextDrawColor(CTextdraw46, 16711935);
	TextDrawSetOutline(CTextdraw46, 0);
	TextDrawSetProportional(CTextdraw46, 1);
	TextDrawSetShadow(CTextdraw46, 1);
	TextDrawUseBox(CTextdraw46, 1);
	TextDrawBoxColor(CTextdraw46, -16776961);
	TextDrawTextSize(CTextdraw46, 273.000000, 0.000000);

	CTextdraw47 = TextDrawCreate(350.000000, 160.000000, "_");
	TextDrawBackgroundColor(CTextdraw47, 255);
	TextDrawFont(CTextdraw47, 1);
	TextDrawLetterSize(CTextdraw47, 0.500000, 26.900003);
	TextDrawColor(CTextdraw47, 16711935);
	TextDrawSetOutline(CTextdraw47, 0);
	TextDrawSetProportional(CTextdraw47, 1);
	TextDrawSetShadow(CTextdraw47, 1);
	TextDrawUseBox(CTextdraw47, 1);
	TextDrawBoxColor(CTextdraw47, -16776961);
	TextDrawTextSize(CTextdraw47, 338.000000, 0.000000);

	CTextdraw48 = TextDrawCreate(390.000000, 210.000000, "_");
	TextDrawBackgroundColor(CTextdraw48, 255);
	TextDrawFont(CTextdraw48, 1);
	TextDrawLetterSize(CTextdraw48, 0.500000, 0.000000);
	TextDrawColor(CTextdraw48, -1);
	TextDrawSetOutline(CTextdraw48, 0);
	TextDrawSetProportional(CTextdraw48, 1);
	TextDrawSetShadow(CTextdraw48, 1);
	TextDrawUseBox(CTextdraw48, 1);
	TextDrawBoxColor(CTextdraw48, -16776961);
	TextDrawTextSize(CTextdraw48, 0.000000, 0.000000);

	CTextdraw49 = TextDrawCreate(390.000000, 262.000000, "_");
	TextDrawBackgroundColor(CTextdraw49, 255);
	TextDrawFont(CTextdraw49, 1);
	TextDrawLetterSize(CTextdraw49, 0.500000, 0.000000);
	TextDrawColor(CTextdraw49, -1);
	TextDrawSetOutline(CTextdraw49, 0);
	TextDrawSetProportional(CTextdraw49, 1);
	TextDrawSetShadow(CTextdraw49, 1);
	TextDrawUseBox(CTextdraw49, 1);
	TextDrawBoxColor(CTextdraw49, -16776961);
	TextDrawTextSize(CTextdraw49, 0.000000, 0.000000);

	CTextdraw50 = TextDrawCreate(390.000000, 312.000000, "_");
	TextDrawBackgroundColor(CTextdraw50, 255);
	TextDrawFont(CTextdraw50, 1);
	TextDrawLetterSize(CTextdraw50, 0.500000, 0.000000);
	TextDrawColor(CTextdraw50, -1);
	TextDrawSetOutline(CTextdraw50, 0);
	TextDrawSetProportional(CTextdraw50, 1);
	TextDrawSetShadow(CTextdraw50, 1);
	TextDrawUseBox(CTextdraw50, 1);
	TextDrawBoxColor(CTextdraw50, -16776961);
	TextDrawTextSize(CTextdraw50, 0.000000, 0.000000);

	CTextdraw51 = TextDrawCreate(390.000000, 358.000000, "_");
	TextDrawBackgroundColor(CTextdraw51, 255);
	TextDrawFont(CTextdraw51, 1);
	TextDrawLetterSize(CTextdraw51, 0.500000, 0.000000);
	TextDrawColor(CTextdraw51, -1);
	TextDrawSetOutline(CTextdraw51, 0);
	TextDrawSetProportional(CTextdraw51, 1);
	TextDrawSetShadow(CTextdraw51, 1);
	TextDrawUseBox(CTextdraw51, 1);
	TextDrawBoxColor(CTextdraw51, -16776961);
	TextDrawTextSize(CTextdraw51, 0.000000, 0.000000);

	CTextdraw52 = TextDrawCreate(403.000000, 61.000000, " "); //event1
	TextDrawBackgroundColor(CTextdraw52, 255);
	TextDrawFont(CTextdraw52, 1);
	TextDrawLetterSize(CTextdraw52, 0.430000, 1.699998);
	TextDrawColor(CTextdraw52, 255);
	TextDrawSetOutline(CTextdraw52, 0);
	TextDrawSetProportional(CTextdraw52, 1);
	TextDrawSetShadow(CTextdraw52, 0);

	CTextdraw53 = TextDrawCreate(403.000000, 151.000000, " "); //event2
	TextDrawBackgroundColor(CTextdraw53, 255);
	TextDrawFont(CTextdraw53, 1);
	TextDrawLetterSize(CTextdraw53, 0.430000, 1.699998);
	TextDrawColor(CTextdraw53, 255);
	TextDrawSetOutline(CTextdraw53, 0);
	TextDrawSetProportional(CTextdraw53, 1);
	TextDrawSetShadow(CTextdraw53, 0);

	CTextdraw54 = TextDrawCreate(403.000000, 242.000000, " "); //event3
	TextDrawBackgroundColor(CTextdraw54, 255);
	TextDrawFont(CTextdraw54, 1);
	TextDrawLetterSize(CTextdraw54, 0.430000, 1.699998);
	TextDrawColor(CTextdraw54, 255);
	TextDrawSetOutline(CTextdraw54, 0);
	TextDrawSetProportional(CTextdraw54, 1);
	TextDrawSetShadow(CTextdraw54, 0);

	CTextdraw55 = TextDrawCreate(403.000000, 331.000000, " "); //event4
	TextDrawBackgroundColor(CTextdraw55, 255);
	TextDrawFont(CTextdraw55, 1);
	TextDrawLetterSize(CTextdraw55, 0.430000, 1.699998);
	TextDrawColor(CTextdraw55, 255);
	TextDrawSetOutline(CTextdraw55, 0);
	TextDrawSetProportional(CTextdraw55, 1);
	TextDrawSetShadow(CTextdraw55, 0);
// -------------------------------------- END OF CALENDAR ---------------------------------------

	TD1D = 0;
	TD2D = 0;
	TD3D = 0;
	TD4D = 0;
	TD0D = 0;
	lspd1 = 0;
	lspd2 = 0;
	lspd3 = 0;
	fbi1 = 0;
	fbi2 = 0;
	fbi3 = 0;
	army1 = 0;
	army2 = 0;
	army3 = 0;
	lspdw = 0;
	armyw1 = 0;
	armyw2 = 0;
	lspdg = 0;
	lspdg2 = 0;
	armyg = 0;
	armyg2 = 0;
	fbig = 0;
	CreateFoodMenus();
	CreateGuideMenus();
	CreateLegalJobsMenus();
	CreateLicensesMenus();
	LoadProperty();
	LoadBizz();
	LoadSBizz();
	LoadBoxer();
	LoadStuff();
	LoadAnticheat();
	LoadIRC();
	LoadSecurity();
	LoadFamilies();
	LoadCK();
	LoadPapers();
	LoadDrugSystem();
	LoadMatsSystem();
	LoadHQLocks();
	LoadTrunk();
	
	
	IRCInfo[0][iPlayers] = 0; IRCInfo[1][iPlayers] = 0; IRCInfo[2][iPlayers] = 0;
	IRCInfo[3][iPlayers] = 0; IRCInfo[4][iPlayers] = 0; IRCInfo[5][iPlayers] = 0;
	IRCInfo[6][iPlayers] = 0; IRCInfo[7][iPlayers] = 0; IRCInfo[8][iPlayers] = 0;
	IRCInfo[9][iPlayers] = 0;
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nothing");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "√ª»À");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	PlayerHaul[108][pCapasity] = 100;
	PlayerHaul[109][pCapasity] = 100;
	PlayerHaul[110][pCapasity] = 50;
	PlayerHaul[111][pCapasity] = 50;
	SetGameModeText("RPGΩ«…´∞Á—›∑˛ŒÒ∆˜");
	SendRconCommand("mapname los V3.2");
	SendRconCommand("weburl YY");
	format(objstore, sizeof(objstore), "MOLE: Œ“…∂“≤√ªø¥µΩ, “‘∫ÛŒ“ºÏ≤È.");
	format(cbjstore, sizeof(cbjstore), "◊‹≤ø: √ª”– ≤√¥‘⁄ƒ„µƒ÷‹Œß.");
	//format(textmotd, sizeof(textmotd), "%s, ∞Ê±æ %s", Motd, Version);
	gettime(ghour, gminute, gsecond);
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	SetPDistance(10);
	AllowInteriorWeapons(1);
	AllowAdminTeleport(0);
	//ShowPlayerMarkers(false);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);

	for(new i=0; i < MAX_VEHICLES; i++)
	{
		if(IsAnEnterableModel(i))
		{
		    Seats[i] = 0;
		}
	}
	//-----------Objects---------
	
	//Admins Area - By Plugy
	CreateDynamicObject(18450, 370.6845703125, -1694.720703125, 15.628363609314, 0, 0, 89.434204101563);
	CreateDynamicObject(1828, 368.90957641602, -1686.4500732422, 20.413045883179, 0, 0, 51.427001953125);
	CreateDynamicObject(2802, 363.67636108398, -1707.1282958984, 16.504373550415, 0, 0, 188.45727539063);
	CreateDynamicObject(2800, 363.57183837891, -1720.3959960938, 16.659749984741, 0, 0, 0);
	CreateDynamicObject(2723, 367.99935913086, -1693.0335693359, 16.339281082153, 0, 0, 0);
	CreateDynamicObject(2311, 368.17422485352, -1683.9879150391, 20.419435501099, 0, 0, 0);
	CreateDynamicObject(1825, 374.01473999023, -1706.3576660156, 16.023983001709, 0, 0, 60);
	CreateDynamicObject(1724, 366.81600952148, -1684.4720458984, 20.433284759521, 0, 0, 89.436676025391);
	CreateDynamicObject(1723, 367.9208984375, -1682.5478515625, 20.425819396973, 0, 0, 0);
	CreateDynamicObject(1670, 377.55972290039, -1697.3002929688, 16.840309143066, 0, 0, 265.71435546875);
	CreateDynamicObject(1668, 368.47250366211, -1683.7114257813, 21.091630935669, 0, 0, 0);
	CreateDynamicObject(1667, 377.38076782227, -1717.3189697266, 16.928888320923, 0, 0, 0);
	CreateDynamicObject(1664, 367.98641967773, -1684.0230712891, 21.091630935669, 0, 0, 0);
	CreateDynamicObject(3533, 364.845703125, -1691.810546875, 20.217674255371, 0, 0, 0);
	CreateDynamicObject(3028, 370.87200927734, -1692.6077880859, 18.521390914917, 0, 62.040832519531, 356.27752685547);
	CreateDynamicObject(2967, 368.62567138672, -1683.7313232422, 20.924926757813, 0, 0, 154.28601074219);
	CreateDynamicObject(2726, 367.56640625, -1706.1396484375, 17.239715576172, 0, 0, 0);
	CreateDynamicObject(18075, 370.2978515625, -1699.494140625, 15.002371788025, 0, 0, 0);
	CreateDynamicObject(18075, 370.1328125, -1717.9833984375, 14.99757194519, 0, 0, 0);
	CreateDynamicObject(3494, 379.4638671875, -1732.560546875, 8.0860252380371, 0, 0, 0);
	CreateDynamicObject(1569, 379.49700927734, -1734.25390625, 6.643949508667, 0, 0, 269.43688964844);
	CreateDynamicObject(1536, 369.67578125, -1721.5791015625, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(14535, 370.474609375, -1688.2890625, 17.995121002197, 0, 0, 0);
	CreateDynamicObject(2435, 368.07870483398, -1692.1520996094, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2435, 367.15631103516, -1692.1507568359, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2435, 373.63250732422, -1692.1573486328, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2435, 369.00405883789, -1692.154296875, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2435, 369.93521118164, -1692.1575927734, 15.83091545105, 0, 0, 0);
	CreateDynamicObject(2435, 370.85833740234, -1692.1595458984, 15.832989692688, 0, 0, 0);
	CreateDynamicObject(2435, 371.78961181641, -1692.1607666016, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2435, 372.71517944336, -1692.1595458984, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2435, 373.82833862305, -1692.1561279297, 15.832918167114, 0, 0, 0);
	CreateDynamicObject(2434, 367.15753173828, -1692.1531982422, 16.85968208313, 0, 0, 0);
	CreateDynamicObject(2434, 373.63998413086, -1691.9720458984, 16.871917724609, 0, 0, 268.47802734375);
	CreateDynamicObject(2439, 368.0966796875, -1692.0087890625, 17.797737121582, 0, 0, 0);
	CreateDynamicObject(2439, 367.15997314453, -1692.1671142578, 17.800031661987, 0, 0, 0);
	CreateDynamicObject(2439, 373.76580810547, -1692.1647949219, 17.802665710449, 0, 0, 0);
	CreateDynamicObject(2439, 369.09204101563, -1692.0074462891, 17.799196243286, 0, 0, 0);
	CreateDynamicObject(2439, 370.09078979492, -1692.0067138672, 17.79801940918, 0, 0, 0);
	CreateDynamicObject(2439, 371.08905029297, -1692.0057373047, 17.800500869751, 0, 0, 0);
	CreateDynamicObject(2439, 372.08535766602, -1691.9993896484, 17.802299499512, 0, 0, 0);
	CreateDynamicObject(2439, 373.0859375, -1691.994140625, 17.801824569702, 0, 0, 0);
	CreateDynamicObject(1649, 375.453125, -1712.525390625, 17.637855529785, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.404296875, -1716.9677734375, 16.869728088379, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.45703125, -1712.51953125, 20.918842315674, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.4130859375, -1716.9619140625, 20.12686920166, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.501953125, -1706.84765625, 20.893465042114, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.5068359375, -1706.845703125, 17.637855529785, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.453125, -1694.751953125, 20.960371017456, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.44921875, -1694.7490234375, 17.637855529785, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.40234375, -1699.1923828125, 17.637855529785, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.455078125, -1694.7548828125, 24.285394668579, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.3974609375, -1699.1904296875, 20.956192016602, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.3896484375, -1699.19140625, 24.260183334351, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 375.42687988281, -1703.0406494141, 21.439382553101, 359.99859619141, 89.147277832031, 92.011108398438);
	CreateDynamicObject(1649, 365.451171875, -1712.5400390625, 17.637855529785, 0, 0, 269.37377929688);
	CreateDynamicObject(1649, 365.44573974609, -1712.5411376953, 20.951810836792, 0, 0, 269.37377929688);
	CreateDynamicObject(1649, 365.4033203125, -1716.9658203125, 16.81623840332, 0, 0, 269.36828613281);
	CreateDynamicObject(1649, 365.400390625, -1716.9677734375, 20.095165252686, 0, 0, 269.36828613281);
	CreateDynamicObject(3533, 376.13537597656, -1691.8588867188, 20.222841262817, 0, 0, 0);
	CreateDynamicObject(3494, 379.501953125, -1737.5126953125, 8.114465713501, 0, 0, 0);
	CreateDynamicObject(1649, 365.51486206055, -1706.8013916016, 17.637855529785, 0, 0, 269.37377929688);
	CreateDynamicObject(1649, 365.51373291016, -1706.8004150391, 20.965644836426, 0, 0, 269.37377929688);
	CreateDynamicObject(1649, 365.5627746582, -1702.9796142578, 21.491504669189, 0, 89.335296630859, 269.45300292969);
	CreateDynamicObject(1649, 365.56945800781, -1699.1765136719, 20.950214385986, 0, 0, 269.56176757813);
	CreateDynamicObject(1649, 365.56875610352, -1699.1982421875, 17.637855529785, 0, 0, 269.56176757813);
	CreateDynamicObject(1649, 365.56649780273, -1699.1680908203, 24.239179611206, 0, 0, 269.56176757813);
	CreateDynamicObject(1649, 365.6005859375, -1694.7578125, 17.637855529785, 0, 0, 269.560546875);
	CreateDynamicObject(1649, 365.58984375, -1694.74609375, 20.960000991821, 0, 0, 269.65393066406);
	CreateDynamicObject(1649, 365.5998840332, -1694.7385253906, 24.234149932861, 0, 0, 269.56176757813);
	CreateDynamicObject(1649, 365.35327148438, -1721.4012451172, 17.637855529785, 0, 0, 269.36828613281);
	CreateDynamicObject(1649, 375.36120605469, -1721.3796386719, 17.637855529785, 0, 0, 89.379272460938);
	
	CreateDynamicObject(1649, 375.453125, -1712.525390625, 17.637855529785, 0, 0, 270);
	CreateDynamicObject(1649, 375.404296875, -1716.9677734375, 16.869728088379, 0, 0, 270);
	CreateDynamicObject(1649, 375.45703125, -1712.51953125, 20.918842315674, 0, 0, 270);
	CreateDynamicObject(1649, 375.4130859375, -1716.9619140625, 20.12686920166, 0, 0, 270);
	CreateDynamicObject(1649, 375.501953125, -1706.84765625, 20.893465042114, 0, 0, 270);
	CreateDynamicObject(1649, 375.5068359375, -1706.845703125, 17.637855529785, 0, 0, 270);
	CreateDynamicObject(1649, 375.453125, -1694.751953125, 20.960371017456, 0, 0, 270);
	CreateDynamicObject(1649, 375.44921875, -1694.7490234375, 17.637855529785, 0, 0, 270);
	CreateDynamicObject(1649, 375.40234375, -1699.1923828125, 17.637855529785, 0, 0, 270);
	CreateDynamicObject(1649, 375.455078125, -1694.7548828125, 24.285394668579, 0, 0, 270);
	CreateDynamicObject(1649, 375.3974609375, -1699.1904296875, 20.956192016602, 0, 0, 270);
	CreateDynamicObject(1649, 375.3896484375, -1699.19140625, 24.260183334351, 0, 0, 270);
	CreateDynamicObject(1649, 375.42687988281, -1703.0406494141, 21.439382553101, 359.99859619141, 89.147277832031, 272.011108398438);
	CreateDynamicObject(1649, 365.451171875, -1712.5400390625, 17.637855529785, 0, 0, 90);
	CreateDynamicObject(1649, 365.44573974609, -1712.5411376953, 20.951810836792, 0, 0, 90);
	CreateDynamicObject(1649, 365.4033203125, -1716.9658203125, 16.81623840332, 0, 0, 90);
	CreateDynamicObject(1649, 365.400390625, -1716.9677734375, 20.095165252686, 0, 0, 90);
	CreateDynamicObject(1649, 365.51486206055, -1706.8013916016, 17.637855529785, 0, 0, 90);
	CreateDynamicObject(1649, 365.51373291016, -1706.8004150391, 20.965644836426, 0, 0, 90);
	CreateDynamicObject(1649, 365.5627746582, -1702.9796142578, 21.491504669189, 0, 89.335296630859, 90);
	CreateDynamicObject(1649, 365.56945800781, -1699.1765136719, 20.950214385986, 0, 0, 90);
	CreateDynamicObject(1649, 365.56875610352, -1699.1982421875, 17.637855529785, 0, 0, 90);
	CreateDynamicObject(1649, 365.56649780273, -1699.1680908203, 24.239179611206, 0, 0, 90);
	CreateDynamicObject(1649, 365.6005859375, -1694.7578125, 17.637855529785, 0, 0, 90);
	CreateDynamicObject(1649, 365.58984375, -1694.74609375, 20.960000991821, 0, 0, 90);
	CreateDynamicObject(1649, 365.5998840332, -1694.7385253906, 24.234149932861, 0, 0, 90);
	CreateDynamicObject(1649, 365.35327148438, -1721.4012451172, 17.637855529785, 0, 0, 90);
	CreateDynamicObject(1649, 375.36120605469, -1721.3796386719, 17.637855529785, 0, 0, 90);
	
	
	CreateDynamicObject(3028, 369.896484375, -1692.6708984375, 18.523372650146, 0, 62.034301757813, 174.35302734375);
	CreateDynamicObject(2978, 371.81518554688, -1721.6566162109, 16.736808776855, 0, 270.19180297852, 270.66134643555);
	CreateDynamicObject(2978, 373.09545898438, -1721.6561279297, 16.736808776855, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 374.373046875, -1721.64453125, 16.737495422363, 0, 270.18127441406, 270.65368652344);
	CreateDynamicObject(2978, 369.04870605469, -1721.6616210938, 16.73406791687, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 367.76788330078, -1721.6745605469, 16.730634689331, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 366.48648071289, -1721.6903076172, 16.725833892822, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 369.04699707031, -1721.6697998047, 18.291753768921, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 367.76745605469, -1721.6910400391, 18.291528701782, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 366.4860534668, -1721.7071533203, 18.290969848633, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 371.81362915039, -1721.6667480469, 18.288789749146, 0, 270.18664550781, 270.6591796875);
	CreateDynamicObject(2978, 373.09664916992, -1721.6710205078, 18.283847808838, 0, 270.18661499023, 270.6591796875);
	CreateDynamicObject(2978, 374.37631225586, -1721.6617431641, 18.282766342163, 0, 270.18676757813, 270.6591796875);
	CreateDynamicObject(2978, 365.87426757813, -1722.228515625, 16.726205825806, 0, 270.18661499023, 359.34240722656);
	CreateDynamicObject(2978, 365.86535644531, -1723.509765625, 16.715284347534, 0, 270.18130493164, 359.3408203125);
	CreateDynamicObject(2978, 365.87887573242, -1722.2321777344, 18.270757675171, 0, 270.18130493164, 359.3408203125);
	CreateDynamicObject(2978, 365.85101318359, -1724.7941894531, 16.714859008789, 0, 270.18130493164, 359.3408203125);
	CreateDynamicObject(2978, 365.84869384766, -1723.5302734375, 18.263582229614, 0, 270.18130493164, 359.3408203125);
	CreateDynamicObject(2978, 365.83224487305, -1724.7983398438, 18.263702392578, 0, 270.18130493164, 359.3408203125);
	CreateDynamicObject(2978, 374.99438476563, -1722.154296875, 16.725833892822, 0, 270.18130493164, 179.28503417969);
	CreateDynamicObject(2978, 374.98129272461, -1722.1560058594, 18.278507232666, 0, 270.18130493164, 179.28039550781);
	CreateDynamicObject(2978, 374.97399902344, -1723.4180908203, 16.723096847534, 0, 270.18130493164, 179.28039550781);
	CreateDynamicObject(2978, 374.95718383789, -1724.6770019531, 16.72204208374, 0, 270.18130493164, 179.28039550781);
	CreateDynamicObject(2978, 374.91912841797, -1724.6754150391, 18.279720306396, 0, 270.18130493164, 179.28039550781);
	CreateDynamicObject(2978, 374.95190429688, -1723.3933105469, 18.279626846313, 0, 270.18127441406, 179.28039550781);
	CreateDynamicObject(2951, 373.47982788086, -1688.6846923828, 15.866517066956, 0, 0, 89.884979248047);
	CreateDynamicObject(2951, 373.40475463867, -1683.0848388672, 15.866517066956, 0, 0, 91.670532226563);
	CreateDynamicObject(2951, 367.52841186523, -1688.6960449219, 15.876116752625, 0, 0, 89.884643554688);
	CreateDynamicObject(2951, 367.60083007813, -1683.1011962891, 15.876116752625, 0, 0, 88.662719726563);
	CreateDynamicObject(2951, 370.4889831543, -1683.8165283203, 15.870000839233, 0, 0, 358.94396972656);
	CreateDynamicObject(16779, 370.4033203125, -1717.228515625, 19.943103790283, 0, 0, 0);
	CreateDynamicObject(16779, 370.4299621582, -1706.9899902344, 21.168674468994, 0, 0, 0);
	CreateDynamicObject(16779, 370.40286254883, -1697.85546875, 24.728788375854, 0, 0, 0);
	CreateDynamicObject(3534, 374.75646972656, -1693.1947021484, 17.315464019775, 0, 0, 0);
	CreateDynamicObject(3525, 379.67761230469, -1731.7554931641, 7.3190011978149, 0, 0, 88.195861816406);
	CreateDynamicObject(3525, 379.66110229492, -1738.4401855469, 7.3543252944946, 0, 0, 88.192749023438);
	CreateDynamicObject(2898, 373.3046875, -1718.8515625, 15.994055747986, 0, 0, 0);
	CreateDynamicObject(2898, 367.4599609375, -1718.828125, 15.994055747986, 0, 0, 0);
	CreateDynamicObject(2898, 373.3037109375, -1713.4404296875, 15.994055747986, 0, 0, 0);
	CreateDynamicObject(2898, 367.49728393555, -1713.4145507813, 15.994055747986, 0, 0, 359.22912597656);
	CreateDynamicObject(2898, 373.3017578125, -1708.025390625, 15.994055747986, 0, 0, 0);
	CreateDynamicObject(2898, 373.29989624023, -1702.6125488281, 15.994055747986, 0, 0, 0);
	CreateDynamicObject(2898, 373.30038452148, -1697.2047119141, 15.994055747986, 0, 0, 0);
	CreateDynamicObject(2842, 380.10699462891, -1735.5621337891, 6.7765207290649, 359.81845092773, 344.95993041992, 359.95120239258);
	CreateDynamicObject(2631, 370.353515625, -1719.6328125, 15.984840393066, 0, 0, 269.43420410156);
	CreateDynamicObject(2898, 367.576171875, -1707.998046875, 15.994055747986, 0, 0, 359.14855957031);
	CreateDynamicObject(2898, 367.65777587891, -1702.5969238281, 15.994055747986, 0, 0, 359.15405273438);
	CreateDynamicObject(2898, 367.76321411133, -1697.2098388672, 15.994055747986, 0, 0, 358.59008789063);
	CreateDynamicObject(2631, 370.3942565918, -1715.7365722656, 15.984840393066, 0, 0, 269.43420410156);
	CreateDynamicObject(2631, 370.4296875, -1711.830078125, 15.984840393066, 0, 0, 269.43420410156);
	CreateDynamicObject(2631, 370.47006225586, -1707.9322509766, 15.984840393066, 0, 0, 269.43420410156);
	CreateDynamicObject(2631, 370.50784301758, -1704.033203125, 15.984840393066, 0, 0, 269.43420410156);
	CreateDynamicObject(2631, 370.54763793945, -1700.1459960938, 15.984840393066, 0, 0, 269.43420410156);
	CreateDynamicObject(2631, 370.58654785156, -1696.4398193359, 15.980040550232, 0, 0, 269.43420410156);
	CreateDynamicObject(14611, 370.4931640625, -1697.865234375, 23.436477661133, 0, 0, 0);
	CreateDynamicObject(2833, 368.84231567383, -1691.6624755859, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.81784057617, -1691.6607666016, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.76416015625, -1691.6623535156, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 368.84216308594, -1690.5732421875, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 368.84228515625, -1689.4680175781, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.81439208984, -1690.5554199219, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.76727294922, -1690.5584716797, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.77291870117, -1689.4777832031, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.77160644531, -1688.3795166016, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.77624511719, -1687.2817382813, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 366.880859375, -1689.4676513672, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.82052612305, -1689.4750976563, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.82354736328, -1688.3796386719, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.83154296875, -1687.2822265625, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 368.85287475586, -1688.3811035156, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 366.8860168457, -1688.3806152344, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 368.8623046875, -1687.2821044922, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 366.89245605469, -1687.2841796875, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 366.89270019531, -1686.1892089844, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 366.89364624023, -1685.1013183594, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 366.89318847656, -1684.0096435547, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 368.86224365234, -1686.1956787109, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.82717895508, -1686.1870117188, 15.967313766479, 0, 0, 0);
	CreateDynamicObject(2833, 372.77420043945, -1686.1958007813, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.78076171875, -1685.11328125, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 372.78305053711, -1684.0095214844, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 368.86572265625, -1685.1049804688, 15.972113609314, 0, 0, 0);
	CreateDynamicObject(2833, 370.83819580078, -1685.0872802734, 15.967313766479, 0, 0, 0);
	CreateDynamicObject(2833, 368.85888671875, -1684.0063476563, 15.967313766479, 0, 0, 0);
	CreateDynamicObject(2833, 370.83383178711, -1683.9981689453, 15.967313766479, 0, 0, 0);
	CreateDynamicObject(2898, 373.30142211914, -1694.0679931641, 15.984456062317, 0, 0, 358.58825683594);
	CreateDynamicObject(2898, 367.84326171875, -1694.0700683594, 15.979656219482, 0, 0, 358.58825683594);
	CreateDynamicObject(2898, 370.51028442383, -1692.8905029297, 15.979656219482, 0, 0, 358.58825683594);
	CreateDynamicObject(14611, 370.41680908203, -1717.4534912109, 19.128183364868, 0, 0, 0);
	CreateDynamicObject(3534, 366.21948242188, -1693.1148681641, 17.310665130615, 0, 0, 0);
	CreateDynamicObject(3042, 362.65255737305, -1680.7307128906, 22.153335571289, 0, 0, 175.1513671875);
	CreateDynamicObject(2941, 370.92361450195, -1692.1143798828, 16.989255905151, 0, 0, 0);
	CreateDynamicObject(14651, 372.95642089844, -1682.9619140625, 22.583013534546, 0, 0, 178.19396972656);
	CreateDynamicObject(14874, 373.5517578125, -1694.9375, 18.472826004028, 0, 0, 270.56030273438);
	CreateDynamicObject(3533, 365.98046875, -1725.5627441406, 10.130653381348, 0, 0, 0);
	CreateDynamicObject(3533, 365.6640625, -1709.6689453125, 10.138929367065, 0, 0, 0);
	CreateDynamicObject(3533, 365.59426879883, -1691.7628173828, 10.22752571106, 0, 0, 0);
	CreateDynamicObject(3533, 375.28875732422, -1709.6595458984, 10.718904495239, 0, 0, 0);
	CreateDynamicObject(3533, 375.45349121094, -1691.7606201172, 10.698329925537, 0, 0, 0);
	CreateDynamicObject(3533, 374.98999023438, -1725.46484375, 10.498796463013, 0, 0, 0);
	CreateDynamicObject(3533, 376.22506713867, -1690.587890625, 20.2132396698, 0, 0, 243.25122070313);
	CreateDynamicObject(3533, 376.23648071289, -1689.1303710938, 20.217674255371, 0, 0, 115.15133666992);
	CreateDynamicObject(3533, 376.28125, -1687.7110595703, 20.217674255371, 0, 0, 349.50854492188);
	CreateDynamicObject(3533, 376.24963378906, -1686.259765625, 20.217674255371, 0, 0, 200.40283203125);
	CreateDynamicObject(3533, 376.20956420898, -1684.7971191406, 20.218040466309, 0, 0, 73.070190429688);
	CreateDynamicObject(3533, 376.33358764648, -1683.3956298828, 20.216440200806, 0, 0, 298.63726806641);
	CreateDynamicObject(3533, 376.48327636719, -1682.0959472656, 20.213233947754, 0, 0, 183.94245910645);
	CreateDynamicObject(3533, 376.41864013672, -1681.1107177734, 20.211463928223, 0, 0, 108.93475341797);
	CreateDynamicObject(1649, 376.30087280273, -1689.0275878906, 26.884120941162, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 376.35327148438, -1684.5863037109, 26.891595840454, 0, 0, 89.379272460938);
	CreateDynamicObject(1649, 376.3984375, -1680.1450195313, 26.889995574951, 0, 0, 89.379272460938);
	CreateDynamicObject(3533, 365.07888793945, -1690.3237304688, 20.217674255371, 0, 0, 156.65295410156);
	CreateDynamicObject(3533, 364.96716308594, -1688.8861083984, 20.217674255371, 0, 0, 286.23239135742);
	CreateDynamicObject(3533, 364.9866027832, -1687.3253173828, 20.217674255371, 0, 0, 69.236022949219);
	CreateDynamicObject(3533, 365.00839233398, -1685.970703125, 20.217674255371, 0, 0, 198.26400756836);
	CreateDynamicObject(3533, 365.15994262695, -1684.5056152344, 20.217674255371, 0, 0, 322.99340820313);
	CreateDynamicObject(3533, 365.13110351563, -1683.2368164063, 20.217674255371, 0, 0, 69.914978027344);
	CreateDynamicObject(3533, 365.0634765625, -1681.7628173828, 20.217674255371, 0, 0, 222.95690917969);
	CreateDynamicObject(3533, 365.14312744141, -1680.7559814453, 20.203271865845, 0, 0, 299.19885253906);
	CreateDynamicObject(1649, 365.35162353516, -1688.99609375, 26.891229629517, 0, 0, 269.36828613281);
	CreateDynamicObject(1649, 365.40112304688, -1684.5753173828, 26.891229629517, 0, 0, 269.36828613281);
	CreateDynamicObject(1649, 365.44885253906, -1680.1363525391, 26.891229629517, 0, 0, 269.36828613281);
	CreateDynamicObject(3042, 361.56912231445, -1680.7235107422, 22.126331329346, 0, 0, 175.14953613281);
	CreateDynamicObject(3533, 375.36315917969, -1709.6633300781, 19.164245605469, 0, 0, 0);
	CreateDynamicObject(3533, 365.6448059082, -1709.662109375, 19.131326675415, 0, 0, 0);
	CreateDynamicObject(10841, 373.76171875, -1680.9384765625, 19.436349868774, 89.417724609375, 179.99450683594, 271.69189453125);
	CreateDynamicObject(2898, 373.80233764648, -1689.6971435547, 20.329132080078, 0, 0, 0.751953125);
	CreateDynamicObject(2898, 370.48022460938, -1691.4963378906, 20.312063217163, 0, 0, 0.465087890625);
	CreateDynamicObject(2898, 367.6533203125, -1691.5146484375, 20.300203323364, 0, 0, 0.46142578125);
	CreateDynamicObject(2898, 367.5634765625, -1686.1416015625, 20.305093765259, 0, 0, 0.450439453125);
	CreateDynamicObject(2898, 367.38177490234, -1680.9390869141, 20.303699493408, 0, 0, 0.46142578125);
	CreateDynamicObject(2898, 373.82241821289, -1684.6423339844, 20.322128295898, 0, 0, 0.46142578125);
	CreateDynamicObject(2898, 370.1416015625, -1687.28515625, 20.30322265625, 0, 0, 0.4559326171875);
	CreateDynamicObject(2898, 370.86911010742, -1682.7561035156, 20.303428649902, 0, 0, 0.46142578125);
	CreateDynamicObject(2898, 374.35565185547, -1680.7950439453, 20.325185775757, 0, 0, 0.46142578125);
	CreateDynamicObject(1825, 367.60488891602, -1697.9621582031, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(1825, 367.7265625, -1706.1357421875, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(2802, 363.61254882813, -1720.3696289063, 16.504373550415, 0, 0, 188.45397949219);
	CreateDynamicObject(2802, 363.86172485352, -1696.2822265625, 16.504373550415, 0, 0, 188.45397949219);
	CreateDynamicObject(2802, 377.45864868164, -1697.3325195313, 16.504371643066, 0, 0, 8.568115234375);
	CreateDynamicObject(2802, 377.30697631836, -1707.1157226563, 16.504371643066, 0, 0, 8.5638427734375);
	CreateDynamicObject(2802, 377.28335571289, -1717.0216064453, 16.504371643066, 0, 0, 8.5638427734375);
	CreateDynamicObject(1724, 371.03884887695, -1683.4727783203, 20.39133644104, 0, 0, 269.06115722656);
	CreateDynamicObject(2723, 369.00045776367, -1693.0155029297, 16.344081878662, 0, 0, 0);
	CreateDynamicObject(2800, 363.70178222656, -1707.1166992188, 16.667482376099, 0, 0, 214.28588867188);
	CreateDynamicObject(2800, 373.82369995117, -1706.3864746094, 16.732440948486, 0, 0, 257.13500976563);
	CreateDynamicObject(1670, 368.4541015625, -1692.1549072266, 16.896913528442, 0, 0, 351.42443847656);
	CreateDynamicObject(1667, 367.31094360352, -1698.2481689453, 16.986988067627, 0, 0, 0);
	CreateDynamicObject(2726, 367.46401977539, -1697.955078125, 17.236974716187, 0, 0, 0);
	CreateDynamicObject(1670, 369.62399291992, -1683.8660888672, 20.924926757813, 0, 0, 351.41967773438);
	CreateDynamicObject(2802, 370.9453125, -1693.1259765625, 20.662649154663, 0, 0, 282.72766113281);
	CreateDynamicObject(1345, 373.12954711914, -1691.6591796875, 19.513729095459, 87.656921386719, 351.22616577148, 9.8196716308594);
	CreateDynamicObject(1345, 370.9758605957, -1691.7008056641, 19.50001335144, 87.654388427734, 351.22171020508, 9.8164978027344);
	CreateDynamicObject(1345, 368.83734130859, -1691.7819824219, 19.485610961914, 87.654388427734, 351.22174072266, 9.8164978027344);
	CreateDynamicObject(1345, 367.53558349609, -1691.7990722656, 19.480663299561, 87.654388427734, 351.2216796875, 9.8165283203125);
	CreateDynamicObject(1345, 371.48837280273, -1692.6638183594, 19.58695602417, 87.654388427734, 351.22155761719, 9.8166809082031);
	CreateDynamicObject(1345, 369.34963989258, -1692.7014160156, 19.575258255005, 87.654388427734, 351.22174072266, 9.8165283203125);
	CreateDynamicObject(1345, 367.23123168945, -1692.7409667969, 19.561960220337, 87.654418945313, 351.22192382813, 9.8162841796875);
	CreateDynamicObject(1345, 371.41012573242, -1693.5966796875, 19.602071762085, 87.654388427734, 351.22174072266, 9.8164672851563);
	CreateDynamicObject(1345, 366.70895385742, -1693.6307373047, 19.599746704102, 87.654388427734, 351.2216796875, 9.8165283203125);
	CreateDynamicObject(1345, 368.12884521484, -1693.6094970703, 19.599573135376, 87.654388427734, 351.22174072266, 9.8164978027344);
	CreateDynamicObject(1345, 369.87539672852, -1693.5828857422, 19.612531661987, 87.654418945313, 351.22192382813, 9.8162841796875);
	CreateDynamicObject(14806, 368.78244018555, -1688.8677978516, 21.495855331421, 0, 0, 182.48193359375);
	CreateDynamicObject(2863, 369.56204223633, -1685.3509521484, 16.779823303223, 0, 0, 0);
	CreateDynamicObject(2826, 372.86520385742, -1692.0548095703, 16.896913528442, 0, 0, 0);
	CreateDynamicObject(2700, 374.2841796875, -1708.931640625, 18.393283843994, 0, 11.162109375, 130.14953613281);
	CreateDynamicObject(1419, 367.8073425293, -1694.1903076172, 20.813077926636, 0, 0, 0);
	CreateDynamicObject(1825, 367.19833374023, -1715.7336425781, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(1825, 367.04483032227, -1719.4110107422, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(1825, 366.94180297852, -1712.25390625, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(2700, 366.67404174805, -1710.3493652344, 18.309343338013, 0, 11.162109375, 310.1494140625);
	CreateDynamicObject(2802, 368.00231933594, -1693.216796875, 20.658639907837, 0, 0, 282.72766113281);
	CreateDynamicObject(16779, 370.43069458008, -1685.1975097656, 26.681949615479, 0, 0, 0);
	CreateDynamicObject(2229, 372.6481628418, -1693.9366455078, 18.911931991577, 0, 0, 0);
	CreateDynamicObject(2229, 366.16201782227, -1693.9686279297, 18.900402069092, 0, 0, 0);
	CreateDynamicObject(2229, 366.64901733398, -1681.1883544922, 20.43511390686, 0, 0, 34.285736083984);
	CreateDynamicObject(2229, 371.81106567383, -1681.4895019531, 20.382095336914, 0, 0, 331.52059936523);
	CreateDynamicObject(2233, 366.79574584961, -1710.0317382813, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(630, 371.7197265625, -1720.923828125, 17.049140930176, 0, 0, 0);
	CreateDynamicObject(630, 369.13977050781, -1721.0903320313, 17.049140930176, 0, 0, 0);
	CreateDynamicObject(630, 366.1989440918, -1693.4602050781, 21.355289459229, 0, 0, 0);
	CreateDynamicObject(632, 365.25268554688, -1694.0251464844, 16.567407608032, 0, 0, 0);
	CreateDynamicObject(632, 377.9069519043, -1693.6677246094, 16.591781616211, 0, 0, 0);
	CreateDynamicObject(646, 374.55136108398, -1690.3995361328, 21.703573226929, 0, 0, 42.857177734375);
	CreateDynamicObject(859, 374.85913085938, -1714.4117431641, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(948, 379.86401367188, -1736.251953125, 6.7346482276917, 0, 0, 0);
	CreateDynamicObject(948, 379.94104003906, -1733.7449951172, 6.7381496429443, 0, 0, 0);
	CreateDynamicObject(957, 374.96426391602, -1711.2510986328, 18.695966720581, 0, 0, 0);
	CreateDynamicObject(3433, 380.619140625, -1734.9013671875, 11.512637138367, 0, 0, 178.87377929688);
	CreateDynamicObject(1577, 374.65817260742, -1711.0328369141, 15.907423019409, 0, 0, 0);
	CreateDynamicObject(1636, 374.79000854492, -1718.5169677734, 16.316938400269, 330.22039794922, 0, 0);
	CreateDynamicObject(953, 374.92120361328, -1712.5286865234, 16.526014328003, 348.72003173828, 0, 299.99996948242);
	CreateDynamicObject(1599, 374.60931396484, -1718.7884521484, 18.642328262329, 0, 0, 171.42846679688);
	CreateDynamicObject(1600, 374.80532836914, -1713.2716064453, 16.647436141968, 0, 0, 179.99987792969);
	CreateDynamicObject(1601, 374.91201782227, -1717.1774902344, 17.557479858398, 0, 0, 0);
	CreateDynamicObject(1602, 374.76858520508, -1711.8586425781, 17.962957382202, 0, 0, 0);
	CreateDynamicObject(1610, 375.11538696289, -1714.9366455078, 15.975980758667, 0, 0, 0);
	CreateDynamicObject(1611, 374.64459228516, -1713.2846679688, 16.242328643799, 0, 0, 0);
	CreateDynamicObject(2782, 374.60208129883, -1715.2875976563, 16.211612701416, 0, 0, 300);
	CreateDynamicObject(1649, 374.25848388672, -1712.5423583984, 17.689725875854, 0, 0, 269.36828613281);
	CreateDynamicObject(1649, 374.21151733398, -1716.9624023438, 17.689725875854, 0, 0, 269.36828613281);
	CreateDynamicObject(1649, 374.15939331055, -1721.3526611328, 17.689725875854, 0, 0, 269.36828613281);
	CreateDynamicObject(2897, 374.57666015625, -1712.6898193359, 16.131841659546, 0, 0, 90.019470214844);
	CreateDynamicObject(2897, 374.51165771484, -1718.3309326172, 16.113962173462, 0, 0, 90.016479492188);
	CreateDynamicObject(1215, 374.8757019043, -1714.7198486328, 15.903185844421, 0, 0, 0);
	CreateDynamicObject(1215, 374.91320800781, -1711.2399902344, 15.90386390686, 0, 0, 0);
	CreateDynamicObject(1215, 374.84213256836, -1716.9708251953, 15.899737358093, 0, 0, 0);
	CreateDynamicObject(1215, 374.85205078125, -1719.9489746094, 15.899072647095, 0, 0, 0);
	CreateDynamicObject(1215, 374.87396240234, -1715.8582763672, 15.899737358093, 0, 0, 0);
	CreateDynamicObject(957, 374.87295532227, -1714.96484375, 18.635707855225, 0, 0, 0);
	CreateDynamicObject(957, 374.79568481445, -1718.4702148438, 18.630344390869, 0, 0, 0);
	CreateDynamicObject(957, 374.79425048828, -1720.7395019531, 18.592451095581, 0, 0, 0);
	CreateDynamicObject(1576, 374.67691040039, -1710.5915527344, 15.94797039032, 0, 0, 0);
	CreateDynamicObject(1576, 374.99331665039, -1715.2625732422, 15.923971176147, 0, 0, 0);
	CreateDynamicObject(1576, 374.78973388672, -1716.5328369141, 15.933570861816, 0, 0, 0);
	CreateDynamicObject(1576, 374.78869628906, -1720.8918457031, 15.938370704651, 0, 0, 0);
	CreateDynamicObject(1578, 375.08926391602, -1710.9721679688, 15.887303352356, 0, 0, 0);
	CreateDynamicObject(1578, 374.87478637695, -1714.1158447266, 15.923971176147, 0, 0, 0);
	CreateDynamicObject(1578, 374.50543212891, -1720.5521240234, 15.902468681335, 0, 0, 0);
	CreateDynamicObject(1580, 374.6813659668, -1711.4509277344, 15.922718048096, 0, 0, 0);
	CreateDynamicObject(1577, 374.60440063477, -1716.1501464844, 15.905452728271, 0, 0, 0);
	CreateDynamicObject(1577, 375.02780151367, -1720.4549560547, 15.925319671631, 0, 0, 0);
	CreateDynamicObject(859, 374.86108398438, -1717.5849609375, 16.194515228271, 0, 0, 0);
	CreateDynamicObject(859, 374.88595581055, -1721.3596191406, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(859, 374.81701660156, -1719.6671142578, 16.023983001709, 0, 0, 0);
	CreateDynamicObject(859, 374.69470214844, -1720.5903320313, 16.213584899902, 0, 0, 0);
	CreateDynamicObject(859, 374.76998901367, -1716.4097900391, 16.287328720093, 0, 0, 0);
	CreateDynamicObject(859, 374.83514404297, -1715.642578125, 15.985122680664, 0, 0, 0);
	CreateDynamicObject(859, 374.91903686523, -1710.7980957031, 15.994077682495, 0, 0, 0);
	CreateDynamicObject(859, 374.96954345703, -1711.6588134766, 16.078481674194, 0, 0, 0);
	CreateDynamicObject(859, 374.84426879883, -1713.6512451172, 16.154539108276, 0, 0, 0);
	CreateDynamicObject(1610, 374.53582763672, -1720.2702636719, 15.988101005554, 0, 0, 0);
	CreateDynamicObject(1610, 374.96661376953, -1717.7700195313, 16.214529037476, 0, 0, 0);
	CreateDynamicObject(1610, 374.70083618164, -1713.8035888672, 15.939135551453, 0, 0, 0);
	CreateDynamicObject(1611, 374.7287902832, -1717.2314453125, 16.039691925049, 0, 0, 0);
	CreateDynamicObject(1602, 374.68048095703, -1720.1530761719, 17.879219055176, 0, 0, 0);
	CreateDynamicObject(3461, 375.15612792969, -1701.3796386719, 17.59899520874, 0, 0, 0);
	CreateDynamicObject(3461, 375.17288208008, -1704.6364746094, 17.59899520874, 0, 0, 0);
	CreateDynamicObject(3461, 365.94848632813, -1701.4161376953, 17.59899520874, 0, 0, 0);
	CreateDynamicObject(3461, 365.88677978516, -1704.6225585938, 17.59899520874, 0, 0, 0);
	CreateDynamicObject(1215, 372.2666015625, -1704.7266845703, 4.7864923477173, 0, 0, 0);
	CreateDynamicObject(1215, 372.25442504883, -1702.4838867188, 4.9498262405396, 0, 0, 0);
	CreateDynamicObject(1215, 372.33575439453, -1700.3305664063, 4.8907556533813, 0, 0, 0);
	CreateDynamicObject(1215, 372.21752929688, -1698.4788818359, 5.0217437744141, 0, 0, 0);
	
	//π˙∑¿≤ø HQ - By CrucixTM
	CreateDynamicObject(9241,-575.83496094,2593.75390625,66.49565125,0.00000000,0.00000000,0.00000000); //object(copbits_sfn) (1)
	CreateDynamicObject(16095,-596.12500000,2596.23925781,64.83677673,0.00000000,0.00000000,90.00000000); //object(des_a51guardbox02) (1)
	CreateDynamicObject(3277,-556.25994873,2580.15307617,64.83677673,0.00000000,0.00000000,75.74499512); //object(mil_sambase) (1)
	CreateDynamicObject(927,-594.81860352,2593.18212891,66.35733795,0.00000000,0.00000000,0.00000000); //object(piping_detail) (1)
	CreateDynamicObject(3884,-556.15527344,2580.08398438,64.82905579,0.00000000,0.00000000,270.26916504); //object(samsite_sfxrf) (1)
	CreateDynamicObject(14594,-644.33593750,2603.25488281,58.17024231,0.00000000,0.00000000,0.00000000); //object(paperchase03) (1)
	CreateDynamicObject(14596,-672.10375977,2618.67211914,63.06771469,0.00000000,0.00000000,180.00000000); //object(paperchase_stairs) (1)
	CreateDynamicObject(5422,-669.96679688,2617.52026367,54.35638809,0.00000000,0.00000000,270.00000000); //object(laespraydoor1) (1)
	CreateDynamicObject(5422,-667.43072510,2615.06909180,65.98632812,0.00000000,0.00000000,0.00000000); //object(laespraydoor1) (2)
	CreateDynamicObject(1966,-666.97570801,2614.82714844,72.54058838,0.00000000,0.00000000,270.27026367); //object(imcompmovedr1_las) (1)
	CreateDynamicObject(1892,-671.01116943,2615.45068359,69.77865601,0.00000000,0.00000000,270.00000000); //object(security_gatsh) (1)
	CreateDynamicObject(970,-672.59753418,2613.91406250,70.33013916,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(1998,-671.95874023,2613.35180664,69.77865601,0.00000000,0.00000000,270.27026367); //object(officedesk1l) (1)
	CreateDynamicObject(1892,-674.50201416,2615.44726562,69.77865601,0.00000000,0.00000000,270.00000000); //object(security_gatsh) (3)
	CreateDynamicObject(2356,-672.16339111,2612.31298828,69.77865601,0.00000000,0.00000000,271.55029297); //object(police_off_chair) (1)
	CreateDynamicObject(1886,-676.59954834,2612.45874023,73.95770264,21.00000000,0.00000000,109.59494019); //object(shop_sec_cam) (1)
	CreateDynamicObject(1998,-625.76727295,2611.59130859,58.18586731,0.00000000,0.00000000,0.00000000); //object(officedesk1l) (2)
	CreateDynamicObject(1998,-624.78857422,2613.64062500,58.17805481,0.00000000,0.00000000,89.73001099); //object(officedesk1l) (3)
	CreateDynamicObject(1998,-621.56732178,2614.66601562,58.17805862,0.00000000,0.00000000,180.00000000); //object(officedesk1l) (4)
	CreateDynamicObject(1998,-622.56835938,2612.62719727,58.17805862,0.00000000,0.00000000,269.72448730); //object(officedesk1l) (5)
	CreateDynamicObject(2162,-615.84765625,2614.33105469,58.17805481,0.00000000,0.00000000,270.00000000); //object(med_office_unit_1) (1)
	CreateDynamicObject(2162,-615.84960938,2612.52343750,58.17805481,0.00000000,0.00000000,270.00000000); //object(med_office_unit_1) (2)
	CreateDynamicObject(2164,-615.86022949,2616.28588867,58.17805481,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (1)
	CreateDynamicObject(2164,-615.89355469,2610.58105469,58.18586731,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (2)
	CreateDynamicObject(2167,-615.86901855,2617.47485352,58.17805481,0.00000000,0.00000000,270.00000000); //object(med_office_unit_7) (1)
	CreateDynamicObject(1806,-624.95001221,2611.36669922,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_office_chair) (1)
	CreateDynamicObject(1806,-622.79052734,2611.75415039,58.18586731,0.00000000,0.00000000,270.27029419); //object(med_office_chair) (2)
	CreateDynamicObject(1806,-622.45318604,2614.90185547,58.17805862,0.00000000,0.00000000,180.53919983); //object(med_office_chair) (3)
	CreateDynamicObject(1806,-624.56378174,2614.45654297,58.17805481,0.00000000,0.00000000,90.80838013); //object(med_office_chair) (4)
	CreateDynamicObject(1998,-651.44128418,2585.40649414,58.17805862,0.00000000,0.00000000,359.72973633); //object(officedesk1l) (11)
	CreateDynamicObject(1998,-653.44042969,2586.39208984,58.17805862,0.00000000,0.00000000,270.00000000); //object(officedesk1l) (11)
	CreateDynamicObject(1998,-650.41546631,2581.38525391,58.17805481,0.00000000,0.00000000,89.45965576); //object(officedesk1l) (11)
	CreateDynamicObject(1998,-652.43218994,2582.40551758,58.17805481,0.00000000,0.00000000,179.18621826); //object(officedesk1l) (11)
	CreateDynamicObject(1998,-645.83160400,2581.41308594,58.18586731,0.00000000,0.00000000,89.45617676); //object(officedesk1l) (11)
	CreateDynamicObject(2008,-652.46679688,2584.40551758,58.17805862,0.00000000,0.00000000,270.27026367); //object(officedesk1) (1)
	CreateDynamicObject(2008,-651.40368652,2583.38354492,58.17805481,0.00000000,0.00000000,90.00000000); //object(officedesk1) (2)
	CreateDynamicObject(2008,-646.80328369,2583.40576172,58.17805481,0.00000000,0.00000000,90.00000000); //object(officedesk1) (3)
	CreateDynamicObject(1998,-646.82647705,2585.42773438,58.17805481,0.00000000,0.00000000,359.72534180); //object(officedesk1l) (11)
	CreateDynamicObject(2008,-644.83605957,2586.40551758,58.18586731,0.00000000,0.00000000,0.26998901); //object(officedesk1) (4)
	CreateDynamicObject(2008,-643.81756592,2581.40917969,58.18586731,0.00000000,0.00000000,180.00000000); //object(officedesk1) (5)
	CreateDynamicObject(1998,-639.24578857,2585.45288086,58.18586731,0.00000000,0.00000000,89.45617676); //object(officedesk1l) (11)
	CreateDynamicObject(1998,-637.27050781,2586.45849609,58.17805481,0.00000000,0.00000000,180.00000000); //object(officedesk1l) (11)
	CreateDynamicObject(2008,-638.22894287,2583.43896484,58.18586731,0.00000000,0.00000000,90.26458740); //object(officedesk1) (6)
	CreateDynamicObject(2008,-638.21319580,2581.42407227,58.18586731,0.00000000,0.00000000,90.26367188); //object(officedesk1) (7)
	CreateDynamicObject(2008,-639.28088379,2582.43872070,58.18586731,0.00000000,0.00000000,270.00000000); //object(officedesk1) (8)
	CreateDynamicObject(2008,-639.27581787,2584.45190430,58.18586731,0.00000000,0.00000000,270.00000000); //object(officedesk1) (9)
	CreateDynamicObject(1806,-644.77661133,2582.57983398,58.18586731,0.00000000,0.00000000,179.44519043); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-638.07470703,2586.67456055,58.18586731,0.00000000,0.00000000,179.44519043); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-653.23828125,2582.56616211,58.18586731,0.00000000,0.00000000,179.44519043); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-653.67755127,2585.59008789,58.17805862,0.00000000,0.00000000,269.17492676); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-653.71966553,2583.71777344,58.17805481,0.00000000,0.00000000,269.17053223); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-650.19360352,2582.28369141,58.18586731,0.00000000,0.00000000,89.71087646); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-650.24078369,2583.97900391,58.17805481,0.00000000,0.00000000,89.70886230); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-650.64392090,2585.27636719,58.17805862,0.00000000,0.00000000,359.97888184); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-644.00976562,2585.23974609,58.18586731,0.00000000,0.00000000,359.97802734); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-645.99810791,2585.24731445,58.18586731,0.00000000,0.00000000,359.97802734); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-645.68029785,2584.09106445,58.18586731,0.00000000,0.00000000,89.70886230); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-645.64129639,2582.33422852,58.18586731,0.00000000,0.00000000,89.70886230); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-637.04571533,2584.11401367,58.17805862,0.00000000,0.00000000,89.70886230); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-637.10021973,2582.16259766,58.18586731,0.00000000,0.00000000,89.70886230); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-639.06976318,2586.22875977,58.18586731,0.00000000,0.00000000,89.70886230); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-640.50158691,2583.79467773,58.18586731,0.00000000,0.00000000,269.17053223); //object(med_office_chair) (11)
	CreateDynamicObject(1806,-640.51043701,2581.77709961,58.18586731,0.00000000,0.00000000,269.17053223); //object(med_office_chair) (11)
	CreateDynamicObject(2186,-645.90148926,2580.37890625,58.18586731,0.00000000,0.00000000,0.00000000); //object(photocopier_1) (1)
	CreateDynamicObject(2202,-639.51934814,2580.43603516,58.18586731,0.00000000,0.00000000,0.00000000); //object(photocopier_2) (1)
	CreateDynamicObject(2186,-656.03448486,2589.28442383,58.18586731,0.00000000,0.00000000,0.00000000); //object(photocopier_1) (2)
	CreateDynamicObject(1808,-648.04296875,2589.55371094,58.17805481,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(1778,-658.90026855,2598.75903320,58.18586731,0.00000000,0.00000000,0.00000000); //object(cj_mop_pail) (1)
	CreateDynamicObject(1789,-657.95861816,2598.82373047,58.74205399,0.00000000,0.00000000,170.57049561); //object(cj_chambermaid) (1)
	CreateDynamicObject(14455,-631.28125000,2584.48046875,59.85762787,0.00000000,0.00000000,89.72534180); //object(gs_bookcase) (1)
	CreateDynamicObject(14455,-631.30749512,2578.75390625,59.85762787,0.00000000,0.00000000,89.72534180); //object(gs_bookcase) (2)
	CreateDynamicObject(2161,-653.10607910,2589.73730469,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_office_unit_4) (1)
	CreateDynamicObject(2161,-651.71740723,2589.74340820,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_office_unit_4) (2)
	CreateDynamicObject(2162,-650.33325195,2589.75927734,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_office_unit_1) (3)
	CreateDynamicObject(2162,-646.69677734,2589.76660156,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_office_unit_1) (4)
	CreateDynamicObject(2164,-644.82525635,2589.75756836,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_office_unit_5) (3)
	CreateDynamicObject(2163,-642.97552490,2589.76367188,58.18535233,0.00000000,0.00000000,0.00000000); //object(med_office_unit_2) (1)
	CreateDynamicObject(2200,-638.96417236,2589.63623047,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_office5_unit_1) (1)
	CreateDynamicObject(2000,-640.81982422,2589.25439453,58.18586731,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (1)
	CreateDynamicObject(2000,-640.28826904,2589.25952148,58.18586731,0.00000000,0.00000000,0.00000000); //object(filing_cab_nu) (2)
	CreateDynamicObject(1742,-635.60479736,2589.85180664,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (1)
	CreateDynamicObject(1742,-634.14099121,2589.84985352,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (2)
	CreateDynamicObject(1713,-659.11914062,2585.91894531,58.18586731,0.00000000,0.00000000,0.00000000); //object(kb_couch04) (1)
	CreateDynamicObject(1713,-656.50195312,2584.48730469,58.18586731,0.00000000,0.00000000,270.00000000); //object(kb_couch04) (2)
	CreateDynamicObject(1713,-657.45703125,2581.48339844,58.18586731,0.00000000,0.00000000,179.99450684); //object(kb_couch04) (3)
	CreateDynamicObject(1737,-659.22418213,2589.21215820,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_dinning_5) (1)
	CreateDynamicObject(1964,-659.08496094,2589.02514648,59.13759232,0.00000000,0.00000000,179.45996094); //object(est_dsk_stuf) (1)
	CreateDynamicObject(15038,-656.49316406,2585.56933594,58.80305481,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
	CreateDynamicObject(15038,-656.52154541,2581.74829102,58.80305481,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (2)
	CreateDynamicObject(3850,-655.94287109,2582.39062500,58.73177719,0.00000000,0.00000000,0.00000000); //object(carshowbann_sfsx) (1)
	CreateDynamicObject(3850,-655.95617676,2584.93334961,58.73177719,0.00000000,0.00000000,0.00000000); //object(carshowbann_sfsx) (2)
	CreateDynamicObject(3850,-657.68066406,2586.66894531,58.73177719,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx) (3)
	CreateDynamicObject(3850,-657.65795898,2580.66772461,58.73177719,0.00000000,0.00000000,90.00000000); //object(carshowbann_sfsx) (4)
	CreateDynamicObject(2080,-658.29809570,2584.19628906,58.18586731,0.00000000,0.00000000,270.00000000); //object(swank_dinning_2) (1)
	CreateDynamicObject(2063,-629.09625244,2628.41162109,59.09481812,0.00000000,0.00000000,0.00000000); //object(cj_greenshelves) (1)
	CreateDynamicObject(2063,-626.54785156,2628.44531250,59.09481812,0.00000000,0.00000000,0.00000000); //object(cj_greenshelves) (2)
	CreateDynamicObject(2063,-624.01605225,2628.41113281,59.09481812,0.00000000,0.00000000,0.00000000); //object(cj_greenshelves) (3)
	CreateDynamicObject(14782,-627.35577393,2619.43872070,59.19410324,0.00000000,0.00000000,180.00000000); //object(int3int_boxing30) (1)
	CreateDynamicObject(14782,-621.24969482,2619.42919922,59.19410324,0.00000000,0.00000000,179.99450684); //object(int3int_boxing30) (2)
	CreateDynamicObject(964,-623.37390137,2625.36499023,58.18586731,0.00000000,0.00000000,270.27026367); //object(cj_metal_crate) (1)
	CreateDynamicObject(964,-623.36425781,2624.02343750,58.18586731,0.00000000,0.00000000,270.26916504); //object(cj_metal_crate) (2)
	CreateDynamicObject(964,-623.41607666,2624.74560547,59.15160751,0.00000000,0.00000000,270.26916504); //object(cj_metal_crate) (3)
	CreateDynamicObject(1271,-623.37280273,2624.85766602,60.46734619,0.00000000,0.00000000,5.95495605); //object(gunbox) (1)
	CreateDynamicObject(931,-629.37036133,2625.06250000,59.24777222,0.00000000,0.00000000,89.73004150); //object(rack3) (1)
	CreateDynamicObject(2044,-625.87365723,2628.45190430,59.48134995,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (1)
	CreateDynamicObject(2037,-628.26068115,2628.48071289,59.53266525,0.00000000,0.00000000,59.82000732); //object(cj_pistol_ammo) (1)
	CreateDynamicObject(2036,-626.95965576,2628.39453125,59.48773956,0.00000000,0.00000000,0.00000000); //object(cj_psg1) (1)
	CreateDynamicObject(2035,-628.37701416,2628.37109375,59.05322647,0.00000000,0.00000000,0.00000000); //object(cj_m16) (1)
	CreateDynamicObject(1672,-623.34033203,2628.41455078,59.11674118,0.00000000,0.00000000,300.18017578); //object(gasgrenade) (1)
	CreateDynamicObject(1654,-628.89440918,2625.05126953,59.58410263,0.00000000,0.00000000,59.82000732); //object(dynamite) (1)
	CreateDynamicObject(1636,-629.56640625,2625.12451172,59.46903992,0.00000000,0.00000000,0.00000000); //object(rcbomb) (1)
	CreateDynamicObject(1575,-628.90356445,2625.69287109,59.36854553,0.00000000,0.00000000,75.69995117); //object(drug_white) (1)
	CreateDynamicObject(2058,-626.25769043,2619.45776367,60.25955200,0.00000000,0.00000000,220.42041016); //object(cj_gun_docs) (1)
	CreateDynamicObject(2060,-624.29876709,2622.72924805,58.34252548,0.00000000,0.00000000,89.73004150); //object(cj_sandbag) (1)
	CreateDynamicObject(2061,-629.26379395,2625.90234375,58.59557343,0.00000000,0.00000000,280.24023438); //object(cj_shells1) (1)
	CreateDynamicObject(2064,-623.53167725,2621.97070312,58.80727386,0.00000000,0.00000000,0.00000000); //object(cj_feildgun) (1)
	CreateDynamicObject(2060,-624.24975586,2622.71435547,58.55797195,0.00000000,0.00000000,270.26550293); //object(cj_sandbag) (2)
	CreateDynamicObject(2060,-624.40112305,2621.70629883,58.34252548,0.00000000,0.00000000,270.26367188); //object(cj_sandbag) (3)
	CreateDynamicObject(2060,-624.36840820,2621.66381836,58.55797195,0.00000000,0.00000000,89.72534180); //object(cj_sandbag) (4)
	CreateDynamicObject(2036,-626.12036133,2628.40185547,59.03771210,0.00000000,0.00000000,0.00000000); //object(cj_psg1) (2)
	CreateDynamicObject(2044,-629.94122314,2628.40039062,59.48151779,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (2)
	CreateDynamicObject(2036,-624.39782715,2628.43774414,59.88776398,0.00000000,0.00000000,0.00000000); //object(cj_psg1) (3)
	CreateDynamicObject(2035,-626.97418213,2628.37329102,59.90327835,0.00000000,0.00000000,0.00000000); //object(cj_m16) (2)
	CreateDynamicObject(2035,-626.46197510,2628.41333008,58.55319595,0.00000000,0.00000000,0.00000000); //object(cj_m16) (3)
	CreateDynamicObject(1575,-627.31762695,2628.44165039,58.98119736,0.00000000,0.00000000,0.00000000); //object(drug_white) (2)
	CreateDynamicObject(1654,-629.54913330,2625.17480469,58.52797699,0.00000000,0.00000000,66.77496338); //object(dynamite) (2)
	CreateDynamicObject(1654,-628.85473633,2624.78955078,59.56005478,0.00000000,0.00000000,59.81506348); //object(dynamite) (3)
	CreateDynamicObject(1575,-629.51336670,2625.74389648,59.35865402,0.00000000,0.00000000,59.82000732); //object(drug_white) (3)
	CreateDynamicObject(1636,-629.20489502,2624.42993164,59.46775436,0.00000000,0.00000000,290.21020508); //object(rcbomb) (2)
	CreateDynamicObject(2061,-629.68237305,2625.76318359,58.60350037,0.00000000,0.00000000,59.82000732); //object(cj_shells1) (2)
	CreateDynamicObject(1271,-629.43005371,2624.59863281,58.63587189,0.00000000,0.00000000,5.95458984); //object(gunbox) (2)
	CreateDynamicObject(2036,-629.31402588,2628.30712891,59.91276550,0.00000000,0.00000000,0.00000000); //object(cj_psg1) (4)
	CreateDynamicObject(2037,-628.72491455,2628.32812500,59.53517151,0.00000000,0.00000000,39.88000488); //object(cj_pistol_ammo) (2)
	CreateDynamicObject(2035,-623.35443115,2628.33935547,59.90327835,0.00000000,0.00000000,0.00000000); //object(cj_m16) (4)
	CreateDynamicObject(2035,-624.35601807,2628.36962891,59.47825241,0.00000000,0.00000000,0.00000000); //object(cj_m16) (5)
	CreateDynamicObject(2044,-623.23657227,2628.37915039,59.48134995,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (3)
	CreateDynamicObject(2044,-627.36865234,2628.39257812,58.55629349,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (4)
	CreateDynamicObject(1575,-623.08050537,2628.38891602,58.50616837,0.00000000,0.00000000,0.00000000); //object(drug_white) (4)
	CreateDynamicObject(2061,-625.87762451,2628.47607422,60.14577103,0.00000000,0.00000000,354.04504395); //object(cj_shells1) (3)
	CreateDynamicObject(1636,-624.49798584,2628.35156250,59.12076569,0.00000000,0.00000000,260.30029297); //object(rcbomb) (3)
	CreateDynamicObject(1672,-623.82513428,2628.44775391,59.11246490,0.00000000,0.00000000,0.00000000); //object(gasgrenade) (2)
	CreateDynamicObject(1672,-623.67071533,2628.44409180,59.11616898,0.00000000,0.00000000,189.42993164); //object(gasgrenade) (3)
	CreateDynamicObject(2058,-624.48779297,2628.38476562,58.55273819,0.00000000,0.00000000,20.16000366); //object(cj_gun_docs) (2)
	CreateDynamicObject(3082,-623.51879883,2623.67797852,59.26241302,270.00000000,180.00000000,239.82006836); //object(ammo_capsule) (1)
	CreateDynamicObject(2060,-624.38452148,2622.17480469,58.79841995,0.00000000,0.00000000,89.72534180); //object(cj_sandbag) (5)
	CreateDynamicObject(2044,-628.31671143,2628.34692383,59.90637589,0.00000000,0.00000000,0.00000000); //object(cj_mp5k) (5)
	CreateDynamicObject(1672,-623.60296631,2628.29028320,59.11632919,0.00000000,0.00000000,270.27026367); //object(gasgrenade) (4)
	CreateDynamicObject(1672,-623.48223877,2628.48046875,59.11849594,0.00000000,0.00000000,0.00000000); //object(gasgrenade) (5)
	CreateDynamicObject(3052,-623.45227051,2625.70361328,59.27790833,0.00000000,0.00000000,0.00000000); //object(db_ammo) (1)
	CreateDynamicObject(3015,-629.60870361,2626.44360352,58.28587341,0.00000000,0.00000000,0.00000000); //object(cr_cratestack) (1)
	CreateDynamicObject(3014,-623.40161133,2626.32714844,58.42204666,0.00000000,0.00000000,0.00000000); //object(cr_guncrate) (1)
	CreateDynamicObject(3013,-629.07720947,2628.37548828,59.59721375,0.00000000,0.00000000,0.00000000); //object(cr_ammobox) (1)
	CreateDynamicObject(3013,-623.68872070,2628.38769531,58.68316650,0.00000000,0.00000000,0.00000000); //object(cr_ammobox) (2)
	CreateDynamicObject(3013,-627.79449463,2628.37768555,59.15382385,0.00000000,0.00000000,0.00000000); //object(cr_ammobox) (3)
	CreateDynamicObject(2038,-628.48699951,2628.28759766,59.52910614,0.00000000,0.00000000,0.00000000); //object(ammo_box_s2) (1)
	CreateDynamicObject(2039,-628.50610352,2628.48852539,59.50878143,0.00000000,0.00000000,354.04504395); //object(ammo_box_s1) (1)
	CreateDynamicObject(2040,-627.86352539,2628.39062500,59.56519318,0.00000000,0.00000000,69.79000854); //object(ammo_box_m1) (1)
	CreateDynamicObject(2041,-628.13781738,2628.36547852,58.74921036,0.00000000,0.00000000,0.00000000); //object(ammo_box_m2) (1)
	CreateDynamicObject(2042,-629.66857910,2628.41040039,58.62765884,0.00000000,0.00000000,0.00000000); //object(ammo_box_m3) (1)
	CreateDynamicObject(2043,-625.31072998,2628.40112305,59.98439789,0.00000000,0.00000000,240.36035156); //object(ammo_box_m4) (1)
	CreateDynamicObject(2358,-627.62835693,2628.43798828,58.30240250,0.00000000,0.00000000,0.00000000); //object(ammo_box_c2) (1)
	CreateDynamicObject(2358,-624.49957275,2628.42309570,58.30240250,0.00000000,0.00000000,0.00000000); //object(ammo_box_c2) (2)
	CreateDynamicObject(2358,-629.85449219,2628.38525391,59.13830185,0.00000000,0.00000000,0.00000000); //object(ammo_box_c2) (3)
	CreateDynamicObject(2358,-625.77050781,2628.40795898,58.30240250,0.00000000,0.00000000,0.00000000); //object(ammo_box_c2) (4)
	CreateDynamicObject(2040,-628.41882324,2628.34887695,58.65032196,0.00000000,0.00000000,0.00000000); //object(ammo_box_m1) (2)
	CreateDynamicObject(2043,-628.85784912,2628.36840820,58.64622116,0.00000000,0.00000000,290.21020508); //object(ammo_box_m4) (2)
	CreateDynamicObject(1499,-630.73168945,2623.20043945,58.17805862,0.00000000,0.00000000,270.00000000); //object(gen_doorint05) (1)
	CreateDynamicObject(2886,-630.94641113,2621.12939453,59.81206512,0.00000000,0.00000000,270.00000000); //object(sec_keypad) (1)
	CreateDynamicObject(3077,-670.62890625,2583.45410156,58.18586731,0.00000000,0.00000000,5.95495605); //object(nf_blackboard) (1)
	CreateDynamicObject(3077,-675.24243164,2583.34448242,58.18586731,0.00000000,0.00000000,353.95446777); //object(nf_blackboard) (2)
	CreateDynamicObject(2607,-672.90075684,2586.45483398,58.58155060,0.00000000,0.00000000,180.00000000); //object(polce_desk2) (1)
	CreateDynamicObject(2356,-672.98065186,2584.97045898,58.18586731,0.00000000,0.00000000,1.00000000); //object(police_off_chair) (2)
	CreateDynamicObject(2180,-671.53485107,2588.95410156,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_office5_desk_3) (1)
	CreateDynamicObject(2180,-675.28210449,2589.00317383,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_office5_desk_3) (2)
	CreateDynamicObject(2180,-675.32391357,2591.45092773,58.18586731,0.00000000,0.00000000,0.00000000); //object(med_office5_desk_3) (3)
	CreateDynamicObject(2180,-671.52899170,2591.43823242,58.17805481,0.00000000,0.00000000,0.00000000); //object(med_office5_desk_3) (4)
	CreateDynamicObject(1663,-670.44659424,2592.64794922,58.63826752,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (1)
	CreateDynamicObject(1663,-671.53363037,2592.63793945,58.63826752,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (2)
	CreateDynamicObject(2604,-623.18701172,2591.47192383,58.98274231,0.00000000,0.00000000,90.00000000); //object(cj_police_counter) (1)
	CreateDynamicObject(2604,-623.18841553,2585.78002930,58.98274231,0.00000000,0.00000000,90.00000000); //object(cj_police_counter) (2)
	CreateDynamicObject(2198,-623.14971924,2588.12158203,58.18586731,0.00000000,0.00000000,90.00000000); //object(med_office2_desk_3) (1)
	CreateDynamicObject(2606,-630.32043457,2585.61743164,60.78583908,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (1)
	CreateDynamicObject(2606,-630.32501221,2585.62011719,60.34670258,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (2)
	CreateDynamicObject(2606,-630.32501221,2585.62011719,59.91275406,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (3)
	CreateDynamicObject(2606,-630.32501221,2587.58276367,60.34974670,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (4)
	CreateDynamicObject(2606,-630.32501221,2587.58276367,59.90965271,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (5)
	CreateDynamicObject(2606,-630.32501221,2587.58691406,60.78161240,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (6)
	CreateDynamicObject(2606,-630.32501221,2589.55859375,60.34508514,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (7)
	CreateDynamicObject(2606,-630.32501221,2589.55859375,60.78284073,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (8)
	CreateDynamicObject(2606,-630.32501221,2589.55859375,59.90931702,0.00000000,0.00000000,90.00000000); //object(cj_police_counter2) (9)
	CreateDynamicObject(1714,-621.59985352,2588.85595703,58.18586731,0.00000000,0.00000000,270.27026367); //object(kb_swivelchair1) (1)
	CreateDynamicObject(1998,-625.85144043,2585.14794922,58.18586731,0.00000000,0.00000000,90.00000000); //object(officedesk1l) (22)
	CreateDynamicObject(1998,-625.82061768,2588.87377930,58.18586731,0.00000000,0.00000000,90.00000000); //object(officedesk1l) (23)
	CreateDynamicObject(1714,-625.60760498,2586.00927734,58.18586731,0.00000000,0.00000000,270.26916504); //object(kb_swivelchair1) (2)
	CreateDynamicObject(1714,-625.57818604,2589.77905273,58.18586731,0.00000000,0.00000000,270.26916504); //object(kb_swivelchair1) (3)
	CreateDynamicObject(2164,-616.46331787,2595.71728516,58.18586731,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (2)
	CreateDynamicObject(2164,-616.46520996,2593.85009766,58.18586731,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (2)
	CreateDynamicObject(2315,-619.85906982,2583.29003906,58.18586731,0.00000000,0.00000000,0.00000000); //object(cj_tv_table4) (1)
	CreateDynamicObject(1783,-618.38494873,2583.36791992,58.75216675,0.00000000,0.00000000,180.00000000); //object(swank_video_2) (1)
	CreateDynamicObject(1783,-619.12933350,2583.36279297,58.75216675,0.00000000,0.00000000,179.99450684); //object(swank_video_2) (2)
	CreateDynamicObject(1783,-619.89898682,2583.36865234,58.75216675,0.00000000,0.00000000,179.99450684); //object(swank_video_2) (3)
	CreateDynamicObject(2608,-616.63623047,2589.84228516,58.89733887,0.00000000,0.00000000,270.00000000); //object(polce_shelf) (1)
	CreateDynamicObject(2162,-616.43487549,2585.83837891,58.18586731,0.00000000,0.00000000,270.00000000); //object(med_office_unit_1) (2)
	CreateDynamicObject(1663,-674.29376221,2592.59594727,58.64608002,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (3)
	CreateDynamicObject(1663,-675.26745605,2592.63427734,58.64608002,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (4)
	CreateDynamicObject(1663,-675.42663574,2590.31640625,58.64608002,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (5)
	CreateDynamicObject(1663,-674.34100342,2590.29541016,58.64608002,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (6)
	CreateDynamicObject(1663,-671.61126709,2590.20605469,58.63826752,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (7)
	CreateDynamicObject(1663,-670.53997803,2590.17163086,58.63826752,0.00000000,0.00000000,0.00000000); //object(swivelchair_b) (8)
	CreateDynamicObject(2164,-664.31683350,2580.01904297,58.17805862,0.00000000,0.00000000,270.00000000); //object(med_office_unit_5) (2)
	CreateDynamicObject(2166,-670.72906494,2578.10571289,58.17805481,0.00000000,0.00000000,90.00000000); //object(med_office_desk_2) (1)
	CreateDynamicObject(2165,-667.58306885,2578.16430664,58.18586731,0.00000000,0.00000000,180.00000000); //object(med_office_desk_1) (1)
	CreateDynamicObject(1671,-668.23950195,2579.43237305,58.64608002,0.00000000,0.00000000,0.00000000); //object(swivelchair_a) (1)
	CreateDynamicObject(3017,-671.54888916,2579.07788086,58.97066498,0.00000000,0.00000000,89.73001099); //object(arch_plans) (1)
	CreateDynamicObject(3111,-669.76531982,2577.63964844,60.40837860,90.00000000,0.00000000,180.00000000); //object(st_arch_plan) (1)
	CreateDynamicObject(2184,-644.17089844,2613.89257812,58.18586731,0.00000000,0.00000000,179.99450684); //object(med_office6_desk_2) (1)
	CreateDynamicObject(1714,-645.23559570,2611.68408203,58.18586731,0.00000000,0.00000000,180.00000000); //object(kb_swivelchair1) (4)
	CreateDynamicObject(2254,-646.42065430,2619.70190430,60.81436539,0.00000000,0.00000000,0.00000000); //object(frame_clip_1) (1)
	CreateDynamicObject(2271,-647.86212158,2616.16748047,60.23412704,0.00000000,0.00000000,90.00000000); //object(frame_wood_1) (1)
	CreateDynamicObject(2267,-648.30395508,2614.37353516,60.61159897,0.00000000,0.00000000,90.00000000); //object(frame_wood_3) (1)
	CreateDynamicObject(14455,-647.36352539,2610.30200195,59.85762787,0.00000000,0.00000000,0.00000000); //object(gs_bookcase) (3)
	CreateDynamicObject(2813,-644.62573242,2613.27490234,58.96160507,0.00000000,0.00000000,330.09008789); //object(gb_novels01) (1)
	CreateDynamicObject(2207,-647.95794678,2615.98852539,58.18586731,0.00000000,0.00000000,89.73004150); //object(med_office7_desk_1) (1)
	CreateDynamicObject(1512,-648.11950684,2617.58544922,59.16069412,0.00000000,0.00000000,0.00000000); //object(dyn_wine_03) (1)
	CreateDynamicObject(1520,-648.17120361,2617.35937500,59.01556778,0.00000000,0.00000000,21.83483887); //object(dyn_wine_bounce) (1)
	CreateDynamicObject(1664,-648.20843506,2617.09228516,59.12994385,0.00000000,0.00000000,0.00000000); //object(propwinebotl2) (1)
	CreateDynamicObject(1668,-648.20928955,2616.79638672,59.12994385,0.00000000,0.00000000,33.87997437); //object(propvodkabotl1) (1)
	CreateDynamicObject(1669,-648.20861816,2616.47460938,59.12994385,0.00000000,0.00000000,39.88000488); //object(propwinebotl1) (1)
	CreateDynamicObject(1665,-644.90759277,2613.85375977,58.99705887,0.00000000,0.00000000,0.00000000); //object(propashtray1) (1)
	CreateDynamicObject(2828,-644.29809570,2613.77978516,58.96160507,0.00000000,0.00000000,139.58004761); //object(gb_ornament02) (1)
	CreateDynamicObject(2836,-646.60705566,2616.44067383,58.18586731,0.00000000,0.00000000,0.00000000); //object(gb_livingrug05) (1)
	CreateDynamicObject(1744,-646.90930176,2619.91503906,59.37971115,0.00000000,0.00000000,0.00000000); //object(med_shelf) (1)
	CreateDynamicObject(2870,-645.75494385,2619.58129883,59.72021103,0.00000000,0.00000000,340.05981445); //object(gb_ornament05) (1)
	CreateDynamicObject(2868,-647.26495361,2619.57177734,59.72021103,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
	CreateDynamicObject(2614,-642.15057373,2615.22900391,60.64414597,0.00000000,0.00000000,270.00000000); //object(cj_us_flag) (1)
	CreateDynamicObject(2190,-646.00830078,2613.95092773,58.96160507,0.00000000,0.00000000,19.94000244); //object(pc_1) (1)
	CreateDynamicObject(1671,-644.46801758,2615.40332031,58.64608002,0.00000000,0.00000000,354.04504395); //object(swivelchair_a) (2)
	CreateDynamicObject(1671,-646.04223633,2615.36230469,58.64608002,0.00000000,0.00000000,5.94982910); //object(swivelchair_a) (3)
	CreateDynamicObject(16780,-645.18560791,2615.50512695,62.29430008,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (1)
	CreateDynamicObject(1713,-653.74749756,2607.74584961,58.18586731,0.00000000,0.00000000,0.00000000); //object(kb_couch04) (1)
	CreateDynamicObject(1713,-648.84161377,2607.76367188,58.18586731,0.00000000,0.00000000,0.00000000); //object(kb_couch04) (1)
	CreateDynamicObject(15038,-654.59558105,2607.81298828,58.80305481,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
	CreateDynamicObject(15038,-646.35192871,2607.76416016,58.80305481,0.00000000,0.00000000,0.00000000); //object(plant_pot_3_sv) (1)
	CreateDynamicObject(2126,-650.95318604,2607.16845703,58.18586731,0.00000000,0.00000000,0.00000000); //object(coffee_swank_5) (1)
	CreateDynamicObject(2826,-650.86108398,2607.64697266,58.69334793,0.00000000,0.00000000,0.00000000); //object(gb_novels04) (1)
	CreateDynamicObject(2824,-650.61035156,2607.67187500,58.47324753,0.00000000,0.00000000,0.00000000); //object(gb_novels02) (1)
	CreateDynamicObject(2824,-650.06652832,2607.59008789,58.69334793,0.00000000,0.00000000,49.85000610); //object(gb_novels02) (2)
	CreateDynamicObject(949,-650.44177246,2607.89794922,59.32963181,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
	CreateDynamicObject(1808,-657.42144775,2608.06127930,58.18586731,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(2922,-594.08563232,2593.21972656,66.08983612,0.00000000,0.00000000,180.00000000); //object(kmb_keypad) (1)
	
	
	//Yamaguchi Club - By CrucixTM
	CreateDynamicObject(12958,720.78442383,-1254.71728516,13.77116966,0.00000000,0.00000000,180.00000000); //object(cos_sbanksteps01) (1)
	CreateDynamicObject(617,773.21343994,-1195.92907715,14.75019264,0.00000000,0.00000000,0.00000000); //object(veg_treeb1) (1)
	CreateDynamicObject(620,783.15820312,-1262.16796875,12.57381821,0.00000000,0.00000000,0.00000000); //object(veg_palm04) (1)
	CreateDynamicObject(669,718.53527832,-1225.30212402,14.69524956,0.00000000,0.00000000,39.88000488); //object(sm_veg_tree4) (1)
	CreateDynamicObject(672,745.32843018,-1206.64758301,14.45439816,13.89498901,0.00000000,0.00000000); //object(sm_veg_tree5) (1)
	CreateDynamicObject(672,756.67486572,-1188.98266602,16.91252708,13.89221191,0.00000000,79.76000977); //object(sm_veg_tree5) (2)
	CreateDynamicObject(672,781.87872314,-1183.90222168,18.87049866,13.89221191,0.00000000,79.75524902); //object(sm_veg_tree5) (3)
	CreateDynamicObject(672,769.91857910,-1175.21228027,19.44050217,13.89221191,0.00000000,329.00500488); //object(sm_veg_tree5) (4)
	CreateDynamicObject(672,734.59472656,-1160.93469238,20.30709648,13.89221191,0.00000000,329.00207520); //object(sm_veg_tree5) (5)
	CreateDynamicObject(672,651.54467773,-1259.62109375,13.97848511,13.89221191,0.00000000,18.85195923); //object(sm_veg_tree5) (6)
	CreateDynamicObject(672,765.86633301,-1197.37011719,14.10734653,13.89221191,0.00000000,18.84704590); //object(sm_veg_tree5) (7)
	CreateDynamicObject(669,752.63397217,-1197.81726074,15.26788235,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (2)
	CreateDynamicObject(669,735.57409668,-1212.99670410,14.78428078,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (3)
	CreateDynamicObject(669,778.26226807,-1191.48242188,16.97974205,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (4)
	CreateDynamicObject(669,770.83251953,-1181.59204102,17.87866020,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (5)
	CreateDynamicObject(669,765.94311523,-1187.97375488,16.44402313,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (6)
	CreateDynamicObject(669,782.54840088,-1173.60278320,20.11083031,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (7)
	CreateDynamicObject(669,753.97113037,-1146.54223633,21.54848862,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (8)
	CreateDynamicObject(669,684.53363037,-1214.79736328,15.47352409,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (9)
	CreateDynamicObject(669,663.70312500,-1212.30859375,16.83686829,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (10)
	CreateDynamicObject(669,649.84143066,-1245.81677246,15.17446232,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (11)
	CreateDynamicObject(669,651.58111572,-1271.48974609,14.17470741,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (12)
	CreateDynamicObject(669,700.89764404,-1235.51904297,14.20927048,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (13)
	CreateDynamicObject(669,782.95721436,-1218.74035645,13.93609619,0.00000000,0.00000000,0.00000000); //object(sm_veg_tree4) (14)
	CreateDynamicObject(669,782.90985107,-1232.61071777,13.04331970,0.00000000,0.00000000,69.78997803); //object(sm_veg_tree4) (15)
	CreateDynamicObject(617,747.11645508,-1190.05432129,17.93270302,0.00000000,0.00000000,29.91000366); //object(veg_treeb1) (2)
	CreateDynamicObject(617,726.72668457,-1172.11828613,18.65797997,0.00000000,0.00000000,39.87478638); //object(veg_treeb1) (3)
	CreateDynamicObject(617,714.51165771,-1190.74780273,17.57680893,0.00000000,0.00000000,89.71948242); //object(veg_treeb1) (4)
	CreateDynamicObject(617,720.09802246,-1180.85327148,16.80978012,0.00000000,0.00000000,159.50439453); //object(veg_treeb1) (5)
	CreateDynamicObject(617,762.93591309,-1145.28100586,21.74715805,0.00000000,0.00000000,219.31938171); //object(veg_treeb1) (6)
	CreateDynamicObject(617,737.55206299,-1198.82031250,16.78985596,0.00000000,0.00000000,139.55474854); //object(veg_treeb1) (7)
	CreateDynamicObject(620,782.99450684,-1294.48059082,12.56409073,0.00000000,0.00000000,39.88000488); //object(veg_palm04) (2)
	CreateDynamicObject(620,773.88720703,-1304.67285156,12.55924034,0.00000000,0.00000000,330.08493042); //object(veg_palm04) (3)
	CreateDynamicObject(620,733.27050781,-1304.64550781,12.57419395,0.00000000,0.00000000,330.07873535); //object(veg_palm04) (4)
	CreateDynamicObject(638,732.91699219,-1270.70800781,13.25043583,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (1)
	CreateDynamicObject(639,695.02832031,-1269.47692871,18.70262718,0.00000000,0.00000000,0.00000000); //object(veg_ivy_balcny_kb3) (1)
	CreateDynamicObject(647,724.53436279,-1222.52978516,16.68413162,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (1)
	CreateDynamicObject(805,652.53601074,-1277.75280762,14.97641468,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (1)
	CreateDynamicObject(808,676.18652344,-1220.15039062,18.00419044,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (1)
	CreateDynamicObject(813,651.58728027,-1254.84399414,16.13249969,0.00000000,0.00000000,0.00000000); //object(genveg_bush17) (1)
	CreateDynamicObject(822,748.29748535,-1195.25585938,17.46641922,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (1)
	CreateDynamicObject(823,759.16918945,-1182.84411621,20.06577873,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass07) (1)
	CreateDynamicObject(949,724.35864258,-1259.87536621,17.28472137,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
	CreateDynamicObject(1364,672.62078857,-1263.03369141,13.40912151,0.00000000,0.00000000,270.00000000); //object(cj_bush_prop) (1)
	CreateDynamicObject(1361,668.59643555,-1254.44604492,13.20428085,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (1)
	CreateDynamicObject(1360,672.80523682,-1254.44921875,13.39702129,0.00000000,0.00000000,90.00000000); //object(cj_bush_prop3) (1)
	CreateDynamicObject(1597,665.02423096,-1275.64514160,15.11831951,0.00000000,0.00000000,0.00000000); //object(cntrlrsac1) (1)
	CreateDynamicObject(2195,728.10333252,-1273.43750000,17.26562500,0.00000000,0.00000000,0.00000000); //object(plant_pot_3) (1)
	CreateDynamicObject(3520,755.80169678,-1256.44433594,12.56337738,0.00000000,0.00000000,31.89498901); //object(vgsn_flwrbdsm) (1)
	CreateDynamicObject(3532,757.30371094,-1262.50781250,13.24179554,0.00000000,0.00000000,328.10119629); //object(triadbush) (1)
	CreateDynamicObject(3520,755.52246094,-1262.08300781,12.55774879,0.00000000,0.00000000,150.62805176); //object(vgsn_flwrbdsm) (2)
	CreateDynamicObject(3532,757.27929688,-1256.66015625,13.24513149,0.00000000,0.00000000,209.94873047); //object(triadbush) (2)
	CreateDynamicObject(822,759.34869385,-1196.49316406,16.12962151,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (2)
	CreateDynamicObject(822,780.15045166,-1213.03930664,15.38839722,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (3)
	CreateDynamicObject(822,781.53216553,-1226.95178223,14.39873981,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (4)
	CreateDynamicObject(822,775.43255615,-1173.91638184,20.51295853,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (5)
	CreateDynamicObject(822,761.40478516,-1180.23266602,19.97728920,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (6)
	CreateDynamicObject(822,740.59466553,-1155.40710449,22.22492790,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (7)
	CreateDynamicObject(822,750.05316162,-1149.58654785,22.77660561,0.00000000,0.00000000,300.18017578); //object(genveg_tallgrass06) (8)
	CreateDynamicObject(822,652.58471680,-1242.48742676,14.73136806,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass06) (9)
	CreateDynamicObject(822,652.70831299,-1266.33850098,15.81329918,0.00000000,0.00000000,310.15014648); //object(genveg_tallgrass06) (10)
	CreateDynamicObject(813,650.58190918,-1239.18518066,18.15439796,0.00000000,0.00000000,0.00000000); //object(genveg_bush17) (2)
	CreateDynamicObject(813,688.43939209,-1211.40539551,17.09834099,0.00000000,0.00000000,0.00000000); //object(genveg_bush17) (3)
	CreateDynamicObject(813,731.14959717,-1166.67285156,21.86887360,0.00000000,0.00000000,300.18017578); //object(genveg_bush17) (4)
	CreateDynamicObject(813,758.50457764,-1146.94628906,23.81749916,0.00000000,0.00000000,270.26950073); //object(genveg_bush17) (5)
	CreateDynamicObject(813,782.82586670,-1169.02819824,23.10325241,0.00000000,0.00000000,270.26916504); //object(genveg_bush17) (6)
	CreateDynamicObject(813,755.05798340,-1183.51818848,20.60453796,0.00000000,0.00000000,270.26916504); //object(genveg_bush17) (7)
	CreateDynamicObject(813,740.98846436,-1196.55834961,19.66553879,0.00000000,0.00000000,270.26916504); //object(genveg_bush17) (8)
	CreateDynamicObject(617,781.92718506,-1198.74975586,16.22884369,0.00000000,0.00000000,29.90478516); //object(veg_treeb1) (8)
	CreateDynamicObject(823,775.55364990,-1184.49353027,18.54335403,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass07) (2)
	CreateDynamicObject(823,775.90234375,-1202.21704102,15.38622475,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass07) (3)
	CreateDynamicObject(823,738.94055176,-1209.42236328,16.29353905,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass07) (4)
	CreateDynamicObject(823,731.66870117,-1217.12585449,15.93050671,0.00000000,0.00000000,320.12011719); //object(genveg_tallgrass07) (5)
	CreateDynamicObject(647,705.72491455,-1233.04406738,16.85193443,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (2)
	CreateDynamicObject(647,729.61535645,-1169.19567871,21.62181282,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (3)
	CreateDynamicObject(647,744.91351318,-1154.69970703,22.68955803,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (4)
	CreateDynamicObject(647,746.44226074,-1151.10595703,22.91809273,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (5)
	CreateDynamicObject(647,747.45269775,-1153.74047852,22.80321121,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (6)
	CreateDynamicObject(647,765.83996582,-1144.97583008,24.02216530,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (7)
	CreateDynamicObject(647,751.53576660,-1146.28271484,23.32971382,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (8)
	CreateDynamicObject(647,782.40679932,-1178.07055664,21.50662994,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (9)
	CreateDynamicObject(647,781.36279297,-1175.45385742,21.40649033,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (10)
	CreateDynamicObject(647,766.77325439,-1178.71655273,20.54482460,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (11)
	CreateDynamicObject(647,764.54107666,-1179.65820312,20.41792679,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (12)
	CreateDynamicObject(647,754.00341797,-1191.93896484,18.34416199,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (13)
	CreateDynamicObject(647,750.26971436,-1189.88464355,19.34212303,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (14)
	CreateDynamicObject(647,751.70233154,-1187.93750000,19.62904930,0.00000000,0.00000000,310.15011597); //object(new_bushsm) (15)
	CreateDynamicObject(647,724.70031738,-1219.61621094,16.16611862,0.00000000,0.00000000,9.96939087); //object(new_bushsm) (16)
	CreateDynamicObject(647,783.57965088,-1237.41748047,14.74116993,0.00000000,0.00000000,9.96459961); //object(new_bushsm) (17)
	CreateDynamicObject(647,783.17907715,-1240.11132812,14.58036900,0.00000000,0.00000000,300.17465210); //object(new_bushsm) (18)
	CreateDynamicObject(647,784.05267334,-1202.68652344,18.20286369,0.00000000,0.00000000,300.17395020); //object(new_bushsm) (19)
	CreateDynamicObject(647,783.51684570,-1205.22607422,17.61344719,0.00000000,0.00000000,250.32409668); //object(new_bushsm) (20)
	CreateDynamicObject(647,690.85223389,-1209.43542480,16.60532570,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (21)
	CreateDynamicObject(647,693.50341797,-1207.04956055,16.60811996,0.00000000,0.00000000,310.15011597); //object(new_bushsm) (22)
	CreateDynamicObject(647,692.62762451,-1209.36364746,16.91663551,0.00000000,0.00000000,310.14953613); //object(new_bushsm) (23)
	CreateDynamicObject(647,666.61242676,-1215.16003418,18.76650620,0.00000000,0.00000000,310.14953613); //object(new_bushsm) (24)
	CreateDynamicObject(647,664.32550049,-1216.10583496,17.63408089,0.00000000,0.00000000,260.29968262); //object(new_bushsm) (25)
	CreateDynamicObject(805,653.19500732,-1300.43640137,14.55370331,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (2)
	CreateDynamicObject(805,652.90356445,-1297.87939453,14.77210140,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (3)
	CreateDynamicObject(805,668.26177979,-1217.52001953,18.06759644,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (4)
	CreateDynamicObject(805,679.84631348,-1218.92382812,17.18006134,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (5)
	CreateDynamicObject(805,738.53472900,-1203.48400879,17.54982376,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (6)
	CreateDynamicObject(805,738.59216309,-1206.41455078,16.85023308,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (7)
	CreateDynamicObject(805,749.33758545,-1187.46350098,19.37483788,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (8)
	CreateDynamicObject(805,772.98950195,-1176.03833008,20.38316727,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (9)
	CreateDynamicObject(805,780.58123779,-1169.43652344,21.98642731,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (10)
	CreateDynamicObject(805,783.07916260,-1224.08886719,14.42495918,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (11)
	CreateDynamicObject(805,779.45684814,-1224.85986328,13.97816849,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (12)
	CreateDynamicObject(805,781.33636475,-1239.75524902,13.77523708,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (13)
	CreateDynamicObject(805,745.28503418,-1201.44189453,16.66839981,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (14)
	CreateDynamicObject(805,747.29473877,-1202.88049316,15.99162674,0.00000000,0.00000000,29.91000366); //object(genveg_bush11) (15)
	CreateDynamicObject(805,747.16693115,-1200.55126953,16.56685638,0.00000000,0.00000000,0.00000000); //object(genveg_bush11) (16)
	CreateDynamicObject(805,749.93359375,-1201.62353516,15.90442467,0.00000000,0.00000000,300.18017578); //object(genveg_bush11) (17)
	CreateDynamicObject(808,682.10797119,-1216.34350586,17.64594460,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (2)
	CreateDynamicObject(808,652.65661621,-1256.41149902,15.35946941,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (3)
	CreateDynamicObject(808,652.66040039,-1253.38928223,15.35803699,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (4)
	CreateDynamicObject(808,651.88336182,-1287.54980469,15.91689587,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (5)
	CreateDynamicObject(808,708.57531738,-1236.04357910,15.36039639,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (6)
	CreateDynamicObject(808,709.24908447,-1233.23303223,16.23350716,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (7)
	CreateDynamicObject(808,710.04058838,-1234.95117188,15.43404102,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (8)
	CreateDynamicObject(808,711.55877686,-1233.06140137,15.78591251,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (9)
	CreateDynamicObject(808,723.64715576,-1225.21325684,15.90993404,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (10)
	CreateDynamicObject(808,757.41876221,-1201.81640625,15.45469570,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (11)
	CreateDynamicObject(808,758.00000000,-1200.00671387,15.85055637,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (12)
	CreateDynamicObject(808,759.62695312,-1200.74877930,15.54201126,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (13)
	CreateDynamicObject(808,782.85290527,-1208.92382812,16.75791931,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (14)
	CreateDynamicObject(808,781.69140625,-1207.96362305,16.59739876,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (15)
	CreateDynamicObject(808,784.07141113,-1248.49218750,14.46852303,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (16)
	CreateDynamicObject(808,784.08288574,-1250.32678223,14.46124458,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (17)
	CreateDynamicObject(808,782.48120117,-1249.30224609,14.42185307,0.00000000,0.00000000,149.55004883); //object(genveg_bush12) (18)
	CreateDynamicObject(808,781.34411621,-1235.72363281,14.53769207,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (19)
	CreateDynamicObject(808,778.90655518,-1180.89709473,20.12461472,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (20)
	CreateDynamicObject(808,766.03521729,-1175.80786133,21.27607727,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (21)
	CreateDynamicObject(808,744.67633057,-1192.18945312,19.64692497,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (22)
	CreateDynamicObject(808,756.59869385,-1146.91613770,23.39974022,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (23)
	CreateDynamicObject(808,761.21307373,-1146.17492676,23.61832047,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (24)
	CreateDynamicObject(808,736.17382812,-1158.05419922,22.29050446,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (25)
	CreateDynamicObject(808,738.73883057,-1159.22326660,22.28349876,0.00000000,0.00000000,259.21572876); //object(genveg_bush12) (26)
	CreateDynamicObject(808,732.88061523,-1163.97619629,21.59353638,0.00000000,0.00000000,259.21142578); //object(genveg_bush12) (27)
	CreateDynamicObject(808,723.51062012,-1176.07421875,20.75370407,0.00000000,0.00000000,259.21142578); //object(genveg_bush12) (28)
	CreateDynamicObject(647,722.11206055,-1178.12792969,21.02426338,0.00000000,0.00000000,0.00000000); //object(new_bushsm) (26)
	CreateDynamicObject(813,710.29949951,-1199.30871582,19.30970764,0.00000000,0.00000000,290.21020508); //object(genveg_bush17) (9)
	CreateDynamicObject(813,717.86682129,-1186.87304688,20.26678658,0.00000000,0.00000000,290.20935059); //object(genveg_bush17) (10)
	CreateDynamicObject(808,716.00994873,-1187.80334473,19.47637177,0.00000000,0.00000000,259.21142578); //object(genveg_bush12) (29)
	CreateDynamicObject(808,710.92065430,-1196.40515137,19.03836632,0.00000000,0.00000000,0.00000000); //object(genveg_bush12) (30)
	CreateDynamicObject(808,712.62786865,-1194.09301758,19.11853218,0.00000000,0.00000000,260.30029297); //object(genveg_bush12) (31)
	CreateDynamicObject(808,769.46710205,-1144.40563965,23.76688385,0.00000000,0.00000000,149.54589844); //object(genveg_bush12) (32)
	CreateDynamicObject(813,774.72528076,-1168.96301270,23.13193703,0.00000000,0.00000000,359.99905396); //object(genveg_bush17) (11)
	CreateDynamicObject(813,753.38159180,-1180.70349121,21.51601028,0.00000000,0.00000000,359.99450684); //object(genveg_bush17) (12)
	CreateDynamicObject(2773,732.26562500,-1278.45605469,13.08423901,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (1)
	CreateDynamicObject(1360,657.27429199,-1254.53295898,13.39702129,0.00000000,0.00000000,90.00000000); //object(cj_bush_prop3) (2)
	CreateDynamicObject(1361,661.48712158,-1254.44140625,13.21078682,0.00000000,0.00000000,350.03002930); //object(cj_bush_prop2) (2)
	CreateDynamicObject(639,694.89764404,-1273.84692383,18.74923134,0.00000000,0.00000000,0.00000000); //object(veg_ivy_balcny_kb3) (2)
	CreateDynamicObject(639,694.92462158,-1282.88244629,18.72837257,0.00000000,0.00000000,0.00000000); //object(veg_ivy_balcny_kb3) (3)
	CreateDynamicObject(639,694.98046875,-1278.92700195,18.72893143,0.00000000,0.00000000,0.00000000); //object(veg_ivy_balcny_kb3) (4)
	CreateDynamicObject(1215,670.44335938,-1254.08215332,13.18932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,659.75506592,-1254.16516113,13.18932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1280,746.44836426,-1157.08117676,21.18382263,357.50000000,0.00000000,127.62506104); //object(parkbench1) (1)
	CreateDynamicObject(1280,751.64276123,-1153.44152832,21.50357437,357.49511719,0.00000000,123.65264893); //object(parkbench1) (2)
	CreateDynamicObject(1280,745.56622314,-1182.70715332,20.21545792,2.50000000,0.00000000,317.88510132); //object(parkbench1) (3)
	CreateDynamicObject(1280,740.47650146,-1188.83483887,19.65607452,3.74938965,0.00000000,321.85388184); //object(parkbench1) (4)
	CreateDynamicObject(1300,742.68212891,-1185.93261719,19.71299934,0.00000000,0.00000000,47.82000732); //object(bin1) (1)
	CreateDynamicObject(1300,749.07611084,-1155.24633789,21.06385994,0.00000000,0.00000000,35.86297607); //object(bin1) (2)
	CreateDynamicObject(1364,672.57965088,-1288.96972656,13.42043972,0.00000000,0.00000000,270.00000000); //object(cj_bush_prop) (2)
	CreateDynamicObject(3939,677.52362061,-1303.93066406,14.38602734,0.00000000,0.00000000,179.45996094); //object(hanger01) (1)
	CreateDynamicObject(3939,677.57348633,-1298.01062012,14.38342953,0.00000000,0.00000000,179.45617676); //object(hanger01) (2)
	CreateDynamicObject(1360,672.82702637,-1292.91613770,13.40483379,0.00000000,0.00000000,90.00000000); //object(cj_bush_prop3) (3)
	CreateDynamicObject(1360,657.32025146,-1292.90429688,13.40483379,0.00000000,0.00000000,90.00000000); //object(cj_bush_prop3) (4)
	CreateDynamicObject(1361,668.78710938,-1292.91906738,13.20428085,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (3)
	CreateDynamicObject(1361,661.35534668,-1292.94165039,13.20428085,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2) (4)
	CreateDynamicObject(1215,659.79040527,-1292.97265625,13.19713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,670.42443848,-1292.95312500,13.19713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(2773,732.26947021,-1274.06201172,13.08321667,0.00000000,0.00000000,0.00000000); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,730.24908447,-1280.00195312,13.08506107,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,730.42492676,-1272.47058105,13.08312321,0.00000000,0.00000000,90.00000000); //object(cj_airprt_bar) (4)
	CreateDynamicObject(638,732.88964844,-1281.74511719,13.26467228,0.00000000,0.00000000,0.00000000); //object(kb_planter_bush) (2)
	CreateDynamicObject(11489,757.44055176,-1259.53247070,12.56474686,0.00000000,0.00000000,270.00000000); //object(dam_statues) (1)
	CreateDynamicObject(3935,730.68469238,-1270.61047363,14.57786274,0.00000000,0.00000000,270.00000000); //object(statue) (2)
	CreateDynamicObject(3935,730.68469238,-1281.70568848,14.57786274,0.00000000,0.00000000,270.00000000); //object(statue) (3)
	CreateDynamicObject(3440,725.45538330,-1255.09460449,15.20606995,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(3440,725.45538330,-1255.09460449,10.51087189,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (2)
	CreateDynamicObject(3440,725.11132812,-1251.50683594,12.57955933,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (3)
	CreateDynamicObject(1215,674.58850098,-1300.96545410,13.19713593,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,673.31726074,-1225.45690918,15.10814190,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,659.12854004,-1239.26354980,14.02223206,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,697.32421875,-1233.80371094,16.19473076,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,702.06555176,-1208.18933105,17.30132866,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,731.05932617,-1203.43566895,18.73022079,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,721.72839355,-1181.84545898,19.55305862,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1215,753.66326904,-1175.46862793,21.05385971,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
	CreateDynamicObject(1215,742.71337891,-1159.40270996,21.12585258,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
	CreateDynamicObject(1215,763.74822998,-1147.11950684,22.35512161,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
	CreateDynamicObject(1215,778.83764648,-1162.90075684,22.93435097,0.00000000,0.00000000,0.00000000); //object(bollardlight) (15)
	CreateDynamicObject(1597,681.67376709,-1288.19616699,15.24400997,0.00000000,0.00000000,90.00000000); //object(cntrlrsac1) (2)
	CreateDynamicObject(1597,681.67376709,-1264.18371582,15.23491764,0.00000000,0.00000000,90.00000000); //object(cntrlrsac1) (3)
	CreateDynamicObject(1432,725.37219238,-1262.51513672,16.64843750,0.00000000,0.00000000,19.94000244); //object(dyn_table_2) (1)
	CreateDynamicObject(1432,725.29400635,-1269.53527832,16.64843750,0.00000000,0.00000000,340.06005859); //object(dyn_table_2) (2)
	CreateDynamicObject(1432,725.53784180,-1282.54650879,16.64843750,0.00000000,0.00000000,29.91000366); //object(dyn_table_2) (3)
	CreateDynamicObject(1432,725.65093994,-1289.70288086,16.64843750,0.00000000,0.00000000,19.94000244); //object(dyn_table_2) (4)
	CreateDynamicObject(2764,730.19366455,-1276.25305176,17.05317879,0.00000000,0.00000000,0.00000000); //object(cj_pizza_table03) (1)
	CreateDynamicObject(1670,730.23895264,-1276.25036621,17.48288345,0.00000000,0.00000000,89.73004150); //object(propcollecttable) (1)
	CreateDynamicObject(1720,729.05468750,-1277.20068359,16.64843750,0.00000000,0.00000000,125.64001465); //object(rest_chair) (1)
	CreateDynamicObject(1720,728.93933105,-1275.83422852,16.64843750,0.00000000,0.00000000,83.77093506); //object(rest_chair) (2)
	CreateDynamicObject(1720,729.94714355,-1274.80126953,16.64843750,0.00000000,0.00000000,4.01074219); //object(rest_chair) (3)
	CreateDynamicObject(1720,730.60345459,-1277.66992188,16.64843750,0.00000000,0.00000000,193.44012451); //object(rest_chair) (4)
	CreateDynamicObject(1720,732.68041992,-1276.89990234,16.64843750,0.00000000,0.00000000,83.77075195); //object(rest_chair) (5)
	CreateDynamicObject(1720,732.67498779,-1275.67089844,16.64843750,0.00000000,0.00000000,93.74075317); //object(rest_chair) (6)
	CreateDynamicObject(949,724.36151123,-1292.72546387,17.28472137,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
	CreateDynamicObject(2195,728.17919922,-1279.16870117,17.26562500,0.00000000,0.00000000,0.00000000); //object(plant_pot_3) (2)
	CreateDynamicObject(3934,765.10894775,-1212.98779297,12.54687500,0.00000000,0.00000000,0.00000000); //object(helipad01) (1)
	CreateDynamicObject(620,687.26983643,-1242.90588379,14.08292389,0.00000000,0.00000000,179.45996094); //object(veg_palm04) (1)
	CreateDynamicObject(620,671.00250244,-1220.26391602,14.67801666,0.00000000,0.00000000,259.21618652); //object(veg_palm04) (1)
	CreateDynamicObject(970,662.31243896,-1208.28808594,17.95773125,0.00000000,0.00000000,36.89495850); //object(fencesmallb) (1)
	CreateDynamicObject(970,658.99121094,-1210.78063965,17.95773125,0.00000000,0.00000000,36.89208984); //object(fencesmallb) (2)
	CreateDynamicObject(970,655.69067383,-1213.24926758,17.95773125,0.00000000,0.00000000,36.89208984); //object(fencesmallb) (3)
	CreateDynamicObject(1215,721.68707275,-1250.68249512,13.11697483,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,754.35687256,-1254.69067383,13.12674713,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,754.34936523,-1264.40380859,13.12055016,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,733.28118896,-1273.18823242,13.11772537,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,733.28118896,-1279.38598633,13.13128567,0.00000000,0.00000000,0.00000000); //object(bollardlight) (8)
	
	//GS 9 Barriers - M3NK5
	CreateDynamicObject(978,1940.86059570,-1770.44250488,13.23081875,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (1)
	CreateDynamicObject(978,1940.82080078,-1775.25048828,13.23081875,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (2)
	CreateDynamicObject(978,1942.67858887,-1775.57214355,13.23081875,0.00000000,0.00000000,268.00000000); //object(sub_roadright) (3)
	CreateDynamicObject(978,1942.72729492,-1770.49829102,13.23081875,0.00000000,0.00000000,267.99499512); //object(sub_roadright) (4)
	CreateDynamicObject(1215,1941.78527832,-1781.10058594,13.20494843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1941.56323242,-1765.17248535,13.20494843,0.00000000,0.00000000,358.00000000); //object(bollardlight
	
	//FBI HQ - By M3NK5
	CreateDynamicObject(987,1544.40344238,-1507.15344238,12.56313515,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (1)
	CreateDynamicObject(987,1544.45446777,-1495.26135254,12.56313515,0.00000000,0.00000000,89.99902344); //object(elecfence_bar) (2)
	CreateDynamicObject(10183,1517.97778320,-1487.56005859,12.57428837,0.00000000,0.00000000,44.00000000); //object(ferspaces) (1)
	CreateDynamicObject(987,1472.87634277,-1501.04296875,12.56313515,0.00000000,0.00000000,265.99902344); //object(elecfence_bar) (3)
	CreateDynamicObject(987,1474.31311035,-1481.55236816,12.56313515,0.00000000,0.00000000,265.99548340); //object(elecfence_bar) (4)
	CreateDynamicObject(3264,1472.15283203,-1502.22583008,12.60156250,0.00000000,0.00000000,272.00000000); //object(privatesign3) (1)
	fbigate2 = CreateDynamicObject(980,1473.099243,-1496.96777344,15.32322121,0.00000000,0.00000000,86.00000000); //object(airportgate) (1)
	CreateDynamicObject(3881,1460.46899414,-1504.84826660,14.39843750,0.00000000,0.00000000,264.00000000); //object(airsecbooth_sfse)
	
	//Other
	pdgate1 = CreateDynamicObject(971,1589.053344,-1638.123168,14.122960,0.000000,0.000000,180);
	pdgate2 = CreateDynamicObject(968,1544.700317,-1630.735717,13.096980,-1.000000,-91.000000,269.972869);
	armygate1 = CreateDynamicObject(969, 2720.3772,-2409.7523,12.6,0, 0.0000, 90);
	armygate2 = CreateDynamicObject(969, 2720.3772,-2508.3069,12.6,0, 0.0000, 90);
	armygate3 = CreateDynamicObject(980, 2774.4670,-2494.5842,14.2665,0, 0.0000, 90);
	devs_gate = CreateDynamicObject(16501, 2515.6912,2472.2561,11.8288,0, 0.0000, 0); // devs
	CreateDynamicObject(980, 2675.324,-2345.707, 14.632812, 0, 0, 90); // Army wall
    CreateDynamicObject(980, 2675.324,-2334.707, 14.632812, 0, 0, 90); // army wall
	CreateDynamicObject(16501, 2515.6912,2465.2561,11.8288,0, 0.0000, 0); // area
	CreateDynamicObject(16501, 2515.6912,2479.2561,11.8288,0, 0.0000, 0); // wall
	CreateDynamicObject(16501, 2515.6912,2472.2561,16.2288,0, 0.0000, 0); // devs
	CreateDynamicObject(16501, 2515.6912,2465.2561,16.2288,0, 0.0000, 0); // area
	CreateDynamicObject(16501, 2515.6912,2479.2561,16.2288,0, 0.0000, 0); // wall
	CreateDynamicObject(3928, 2417.9736,2554.2488,20.9,0, 0.0000, 0); // helipad
	CreateDynamicObject(3928, 2417.9736,2540.4473,20.9,0, 0.0000, 0); // helipad
	CreateDynamicObject(3928, 2418.3215,2530.1772,20.9,0, 0.0000, 0); // helipad
	CreateDynamicObject(3928, 2417.9736,2564.2488,20.9,0, 0.0000, 0); // helipad
	CreateDynamicObject(3928,2789.7092,-2531.5193,12.6450,0, 0.0000, 90); // helipad Army
	CreateDynamicObject(3928,1555.3328,-1610.7543,12.4250,0, 0.0000, 0); // helipad æØ≤Ïæ÷
	CreateDynamicObject(3928,1527.3612,-1496.9624,12.6220,0, 0.0000, 0); // helipad FBI
	CreateDynamicObject(354,957.0421,-2060.8413,-0.9999,0, 0.0000, 0); // flare
	CreateDynamicObject(971, 2796.7512,-2481.5188,12.5143,0, 0.0000, 0);
	CreateDynamicObject(971, 2796.7512,-2506.3359,12.5143,0, 0.0000, 0);
	CreateDynamicObject(980, 315.4050, 1027.3300, 1949.5100, 13, 0.0000, 180); // Andromeda Fence
	fbigate = CreateDynamicObject(980, 1534.9020,-1451.5979,14.4882,0, 0.0000, 0);
	CreateDynamicObject(1215,1544.439819,-1623.946655,12.815100,0.000000,0.000000,264.435058);
	CreateDynamicObject(1215,1544.219482,-1630.794067,12.832411,0.000000,0.000000,241.320739);
	CreateDynamicObject(1215,1584.373291,-1637.751464,12.904351,0.000000,0.000000,164.794158);
	CreateDynamicObject(1215,1592.681762,-1637.685302,12.979562,0.000000,0.000000,184.221054);
	CreateDynamicObject(1215,1546.053833,-1672.452758,12.984669,0.000000,0.000000,308.639587);
	CreateDynamicObject(1215,1546.100097,-1678.703247,13.097762,0.000000,0.000000,211.866531);
	CreateDynamicObject(2008,256.912719,86.266647,1001.380432,0.000000,0.000000,89.637771);
	CreateDynamicObject(2008,256.895721,84.360313,1001.387145,0.000000,0.000000,90.264396);
	CreateDynamicObject(1708,258.067474,87.681488,1001.343872,0.000000,0.000000,270.072540);
	CreateDynamicObject(1708,258.011108,85.874336,1001.301879,0.000000,0.000000,268.482452);
	pdgate4 = CreateDynamicObject(1500,1582.6205,-1638.0587,12.3776,0.000000,-1.000000,0);
	//--------------------------[Army Objects]---------------------------------------
	CreateDynamicObject(2634,253.1996,125.2256,1003.5666,0,0,90);//vault
	armydoor1 = CreateDynamicObject(5422, 239.591,118.098,1003.01, 0.00, 0.00, 0.0000); // door 3
	armydoor2 = CreateDynamicObject(5422, 239.635,125.544,1003.01, 0.00, 0.00, 0.0000); // door 2
	armydoor3 = CreateDynamicObject(5422, 253.146,108.902,1003.01, 0.00, 0.00, 0.0000); // army door 1
	armywindows1 = CreateDynamicObject(974, 239.774,111.511,1002.31, 0.00, 0.00, 90.0000); //LAAB Windows
	armywindows2 = CreateDynamicObject(974, 253.050,116.195,1002.31, 0.00, 0.00, 90.0000); //LAAB Windows
	//--------------------------[SAPD Objects]----------------------------------------
	lspddoor1 = CreateDynamicObject(5422, 250.611,63.2995,1003.18,0.00,0.00,00.00); // LSPD Main Door
	lspddoor2 = CreateDynamicObject(5422, 246.228,72.4962,1003.04,0.00,0.00,90.00); // LSPDπ‹¿ÌRoom Door
	lspdwindows = CreateDynamicObject(974,250.524,67.650,1002.58,0.00,0.00,90.00); // LSPD Windows
	//--------------------------[FBI Objects]---------------------------------------- // Making them
	fbidoor1 = CreateDynamicObject(5422, 228.250,151.334,1002.67,0.00,0.00,00.00); // FBI ◊‹≤ø
	fbidoor2 = CreateDynamicObject(5422, 271.140,191.185,1008.97,0.00,0.00,00.00); // FBI Control
	fbidoor3 = CreateDynamicObject(5422, 238.784,193.768,1008.97,0.00,0.00,90.00); // FBI Control
	CreateDynamicObject(5043,228.3,160.267,1003.07,0,0,0); // FBI Block
	CreateDynamicObject(5043,230.509,169.887,1003.17,0,0,90); // FBI Block
	//--------------------------------------------------------------------------------
	CreateDynamicObject(975,2521.9355,-1301.7913,1048.2891,0,0,90); //gate behind a door
	CreateDynamicObject(975,2577.7200,-1305.5848,1037.7734,0,0,90); //gate behind a door
	CreateDynamicObject(975,2577.3125,-1284.8556,1054.6406,0,0,90); //gate behind a door
	CreateDynamicObject(975,2561.1111,-1290.5244,1054.6406,0,0,0); //gate behind a door
	CreateDynamicObject(975,2543.9431,-1304.9346,1054.6406,0,0,90); //gate behind a door
	CreateDynamicObject(975,2521.9053,-1285.9021,1054.6406,0,0,90); //gate behind a door
	CreateDynamicObject(1500,2278.8599,-1140.4896,1049.7884,0,0,90); //Toilet Door
	CreateDynamicObject(14819,2278.5599,-1138.8896,1050.9984,0,0,90); //Toilet Door
	CreateDynamicObject(3968,-1827.924560,5.411730,1061.143554,0.000000,0.000000,179.354736); //INSIDE SFPD 5
	CreateDynamicObject(7927,354.0655,168.7928,1019.9844,0.000000,0.000000,90);//Hospital gate
	CreateDynamicObject(7927,1240.6016,-833.6031,1084.2678,0.000000,0.000000,0);//Surrenos ◊‹≤ø
	CreateDynamicObject(7927,1280.4507,-789.1681,1084.2578,0.000000,0.000000,0);//Madd dog crib
	CreateDynamicObject(7927,1251.8077,-789.1934,1084.2578,0.000000,0.000000,180);//Madd dog crib
	CreateDynamicObject(982,2195.1638,-1675.1587,14.1281,-2.40000,0.000000,167.2);
	CreateDynamicObject(982,2191.3289,-1700.5039,13.3520,-0.80000,0.000000,175.2);
	CreateDynamicObject(982,2218.1638,-1675.1587,14.3281,-2.60000,0.000000,167.2);
	CreateDynamicObject(982,2213.5789,-1700.0039,13.5520,-0.80000,0.000000,172.3);
	CreateDynamicObject(7927,366.4987,189.7234,1008.6103,-0.00000,0.000000,90); // π„≤•π´Àæ
	CreateDynamicObject(7927,371.6472,179.1361,1014.4075,-0.00000,0.000000,270); // LA ≥ˆ◊‚≥µπ´Àæ
	CreateDynamicObject(994,1544.4385,-1617.5925,12.5046,-0.00000,0.000000,270);
	CreateDynamicObject(994,1544.4385,-1632.7525,12.5046,-0.00000,0.000000,270);
	CreateDynamicObject(982,2390.9143,-1742.1371,13.0469,0.000000,0.000000,90);
	CreateDynamicObject(982,2365.4143,-1742.1371,13.0469,0.000000,0.000000,90);
	CreateDynamicObject(982,2339.9143,-1742.1371,13.0469,0.000000,0.000000,90);
	CreateDynamicObject(1798,346.7344,165.5153,1013.1875,0.000000,0.000000,270); // Bed
	CreateDynamicObject(1798,346.7344,163.0153,1013.1875,0.000000,0.000000,270); // Bed
	CreateDynamicObject(1798,346.7344,160.5153,1013.1875,0.000000,0.000000,270); // Bed
	CreateDynamicObject(7927,345.7073,157.3066,1014.4075,-0.00000,0.000000,90); // Wound hospital
	CreateDynamicObject(971,-1935.9930,239.1291,34.3210,-0.00000,0.000000,0);
	CreateDynamicObject(971,2386.6780,1043.5566,10.8203,-0.00000,0.000000,0);
	CreateDynamicObject(971,1843.2667,-1854.5895,12.0828,-0.00000,0.000000,270);
	CreateDynamicObject(971,1025.2795,-1029.2299,32.1016,-0.00000,0.000000,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
	CreateDynamicObject(971,488.2341,-1735.4591,11.1416,-0.00000,0.000000,174); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
	CreateDynamicObject(971,2071.5410,-1831.4143,13.5469,-0.00000,0.000000,90); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
	CreateDynamicObject(971,719.8199,-462.4768,16.3359,-0.00000,0.000000,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
	CreateDynamicObject(971,-1904.4561,277.8578,41.0469,-0.00000,0.000000,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
	//------------------------------------------ Deathmatch Stadium By CuervO_NegrO ------------------------------------------
	CreateDynamicObject(3578,-1398.48,999.839,1023.94,0,0,0);
	CreateDynamicObject(3578,-1405.03,993.469,1023.94,0,0,90);
	CreateDynamicObject(3578,-1398.48,986.768,1023.94,0,0,0);
	CreateDynamicObject(3578,-1390.89,993.469,1023.94,0,0,90);
	//---------------------------------------------------- Barriers ----------------------------------------------------
	CreateDynamicObject(3578,-1373.35,937.855,1036.34,0,0,0);
	CreateDynamicObject(3578,-1383.69,937.833,1036.34,0,0,0);
	CreateDynamicObject(3578,-1393.94,937.86,1036.34,0,0,0);
	CreateDynamicObject(3578,-1404.17,937.895,1036.34,0,0,0);
	//---------------------------------------------------- Containers----------------------------------------------------
	CreateDynamicObject(3043,-1369.89,930.685,1041.94,0,0,0);
	CreateDynamicObject(3043,-1369.89,930.685,1044.84,0,0,0);
	CreateDynamicObject(3043,-1369.89,930.685,1047.74,0,0,0);
	CreateDynamicObject(3043,-1408.41,930.544,1041.94,0,0,0);
	CreateDynamicObject(3043,-1408.41,930.544,1044.84,0,0,0);
	CreateDynamicObject(3043,-1408.41,930.544,1047.74,0,0,0);
	CreateDynamicObject(3043,-1423.53,932.48,1036.54,0,0,90);
	CreateDynamicObject(3043,-1443.36,934.424,1036.54,180,180,80);
	CreateDynamicObject(3043,-1462.19,938.858,1036.44,180,180,73);
	//---------------------------------------------------- Other ----------------------------------------------------
	CreateDynamicObject(3819,-1380.24,930.489,1041.53,0,0,-90);
	CreateDynamicObject(3819,-1400.64,930.489,1041.53,0,0,-90);
	//---------------------------------------------------- DD Outside ----------------------------------------------------
	CreateDynamicObject(3578,1096.69,1718.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1096.69,1728.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1096.69,1738.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1105.6,1738.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1105.6,1728.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1098.08,1423.01,11.8938,0,0,0);
	CreateDynamicObject(3578,1105.6,1718.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1086.89,1718.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1086.89,1728.8,10.5938,0,0,90);
	CreateDynamicObject(3578,1086.89,1738.8,10.5938,0,0,90);
	//----------------------------------------------------  Door ----------------------------------------------------
	CreateDynamicObject(3749,1098.12,1699.81,15.6438,0,0,0);
	CreateDynamicObject(967, 1102.47,1703.88,9.7938,0,0,90); //¥Û√≈Box
	DD_GATE = CreateDynamicObject(987,1104.1,1701.04,9.1437,180,180,0);
	//---------------------------------------------------- Hospital ----------------------------------------------------
	CreateDynamicObject(14594, 1240.653320, -1261.743896, 1286.808716, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(16501, 1219.169800, -1250.231812, 1288.774536, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1533, 1219.263794, -1249.315063, 1286.815918, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1533, 1171.742554, -1324.140503, 14.398752, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(2631, 1221.185181, -1250.129150, 1286.770630, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2631, 1225.086914, -1250.122559, 1286.770630, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2603, 1266.402344, -1280.900024, 1287.277588, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2603, 1263.467041, -1280.895020, 1287.277588, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2603, 1260.541138, -1280.991455, 1287.277588, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2603, 1257.316650, -1280.797485, 1287.277588, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2596, 1266.216431, -1268.943970, 1290.061279, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2596, 1263.637939, -1268.943970, 1290.056396, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2596, 1260.930176, -1268.943970, 1290.045044, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2596, 1257.778564, -1268.943970, 1290.101440, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2146, 1237.115967, -1247.647095, 1287.309937, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1738, 1242.155151, -1254.615601, 1287.479004, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1661, 1240.109497, -1250.106201, 1290.525635, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2009, 1241.291504, -1252.783691, 1286.824341, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2008, 1221.042114, -1248.357788, 1286.824341, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(2008, 1224.249756, -1248.378784, 1286.824341, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1998, 1256.035278, -1238.088135, 1286.824341, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1714, 1255.113037, -1237.817261, 1286.822876, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1714, 1242.497314, -1253.002197, 1286.822876, 0.0000, 0.0000, 213.7500);
	CreateDynamicObject(1714, 1220.226563, -1247.337036, 1286.822876, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1714, 1223.613770, -1247.338379, 1286.822876, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2718, 1238.384399, -1254.568604, 1289.939209, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(2202, 1238.037354, -1254.103638, 1286.817261, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(2202, 1259.216431, -1236.808472, 1286.817261, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2146, 1261.791870, -1243.222778, 1287.309937, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2737, 1254.615723, -1244.547607, 1288.377441, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(14455, 1210.947266, -1267.268188, 1288.477783, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(2007, 1224.843140, -1245.223267, 1286.819946, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(630, 1219.810669, -1245.136597, 1287.849487, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(630, 1224.698730, -1245.050659, 1289.224487, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2007, 1239.617920, -1254.118042, 1286.819946, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(2007, 1257.988159, -1236.723755, 1286.819946, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14527, 1212.054077, -1277.319336, 1288.557495, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2700, 1218.737671, -1274.469360, 1289.255737, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1808, 1213.563843, -1267.434814, 1286.828003, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1738, 1255.140869, -1236.327515, 1287.479004, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1723, 1211.902832, -1275.280884, 1286.822388, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(1723, 1208.571167, -1283.561890, 1286.822388, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1723, 1212.759033, -1278.329346, 1286.822388, 0.0000, 0.0000, 112.5000);
	CreateDynamicObject(1724, 1211.948975, -1272.242676, 1286.822388, 0.0000, 0.0000, 67.5000);
	CreateDynamicObject(1827, 1213.849365, -1274.430542, 1286.815063, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1827, 1207.476685, -1280.307251, 1286.822876, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2827, 1207.494751, -1280.126953, 1287.263672, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(2826, 1213.890259, -1274.487427, 1287.242065, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1502, 1254.564209, -1271.236694, 1286.835205, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1502, 1240.592407, -1245.054077, 1286.815308, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1502, 1254.248779, -1241.786621, 1286.815308, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2007, 1268.671509, -1255.435669, 1286.819946, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2007, 1268.658447, -1254.448364, 1286.819946, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2162, 1269.156616, -1252.640137, 1286.807617, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2161, 1269.156616, -1251.323853, 1286.780273, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1738, 1256.920776, -1247.735962, 1287.415283, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2146, 1262.562134, -1247.219116, 1287.302124, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2186, 1266.031494, -1255.502563, 1286.817261, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(2718, 1263.660522, -1246.721680, 1289.743774, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1998, 1267.406860, -1248.219238, 1286.816528, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(1714, 1267.422241, -1247.023071, 1286.827271, 0.0000, 0.0000, 303.7500);
	CreateDynamicObject(3392, 1260.457886, -1245.415649, 1286.814331, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3392, 1259.464233, -1247.061523, 1286.766235, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(3392, 1236.933716, -1250.572021, 1286.800415, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(14632, 1262.204834, -1283.784546, 1288.299194, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14632, 1253.924805, -1283.703735, 1288.275391, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14632, 1245.308716, -1283.785156, 1288.298706, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14455, 1253.715332, -1286.331665, 1288.496094, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(2737, 1244.880493, -1287.184570, 1288.641724, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1723, 1225.754028, -1286.657349, 1286.822388, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1724, 1222.799805, -1286.530884, 1286.822388, 0.0000, 0.0000, 157.5000);
	CreateDynamicObject(1724, 1227.550171, -1285.880981, 1286.822388, 0.0000, 0.0000, 213.7501);
	CreateDynamicObject(1827, 1224.579102, -1284.165771, 1286.822876, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1518, 1224.530884, -1283.984619, 1287.529907, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1502, 1254.238770, -1253.276978, 1286.815308, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1502, 1221.781982, -1275.166260, 1286.807495, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(631, 1218.282471, -1268.099365, 1287.724487, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(1369, 1214.596558, -1257.714111, 1287.446167, 0.0000, 0.0000, 56.2500);
	CreateDynamicObject(1369, 1214.127808, -1262.901489, 1287.446167, 0.0000, 0.0000, 112.5000);
	CreateDynamicObject(1369, 1214.359009, -1260.141235, 1287.446167, 0.0000, 0.0000, 78.7500);
	CreateDynamicObject(1369, 1214.089966, -1265.797729, 1287.438354, 0.0000, 0.0000, 146.2500);
	CreateDynamicObject(1502, 1214.694214, -1267.037476, 1286.815308, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(14597, 1237.023193, -1280.605591, 1292.820801, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(16501, 1237.262695, -1284.757202, 1293.179199, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(16501, 1236.314453, -1267.183960, 1292.875366, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1523, 1240.214111, -1280.786987, 1290.974854, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1523, 1233.544922, -1280.762329, 1290.966431, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1523, 1233.571289, -1271.395142, 1290.973633, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(1523, 1240.170410, -1271.401489, 1290.963013, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(3391, 1249.951782, -1271.163086, 1290.801392, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3391, 1250.057861, -1279.016113, 1290.976563, 0.0000, 0.0000, 0.0000);
	CreateDynamicObject(3391, 1223.891724, -1278.856689, 1290.769897, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3391, 1224.068237, -1271.036621, 1290.823364, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3393, 1249.019653, -1283.193481, 1290.826416, 0.0000, 0.0000, 315.0000);
	CreateDynamicObject(3393, 1248.929443, -1275.158081, 1290.826416, 0.0000, 0.0000, 315.0000);
	CreateDynamicObject(3393, 1224.859253, -1282.657959, 1290.800781, 0.0000, 0.0000, 213.7500);
	CreateDynamicObject(3383, 1227.392090, -1278.167969, 1290.678467, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3383, 1227.546509, -1270.488403, 1290.678467, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3383, 1246.421875, -1270.463867, 1290.828613, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(3383, 1245.126953, -1278.842285, 1290.828613, 0.0000, 0.0000, 180.0001);
	CreateDynamicObject(3393, 1224.034912, -1274.732666, 1290.826416, 0.0000, 0.0000, 180.0000);
	CreateDynamicObject(1506, 1236.094727, -1267.295044, 1290.722656, 0.0000, 0.0000, 0.0000);
	//------------------------------------------------ Hospital objects ends here ----------------------------------------------------
	CreateDynamicObject(1676,1007.3336,-936.4127,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	CreateDynamicObject(1676,1000.6406,-937.1027,42.7581,-0.00000,0.000000,5); // Gas tank in Vinewood
	// -------------------------------------------------------------------------------------------------------------------------------
	CreateDynamicObject(868,2129.989746,-1874.795410,13.030902,0.000000,0.000000,441.567535);
	CreateDynamicObject(2913,2137.463378,-1871.320678,12.667078,0.000000,-90.000000,178.302536);
	CreateDynamicObject(2628,2135.050537,-1871.424682,12.609012,0.000000,0.000000,179.394439);
	CreateDynamicObject(2629,2137.531250,-1868.603637,12.555583,0.000000,0.000000,268.795959);
	CreateDynamicObject(2915,2133.901123,-1868.338378,12.625775,0.000000,0.000000,267.210601);
	CreateDynamicObject(2916,2137.316650,-1867.199707,12.626094,0.000000,0.000000,235.606948);
	CreateDynamicObject(1462,2108.080566,-1869.768676,12.519778,0.000000,0.000000,89.775222);
	CreateDynamicObject(1433,2145.340087,-1871.202148,12.731196,0.000000,0.000000,178.470077);
	CreateDynamicObject(2804,2145.519775,-1871.188964,13.296928,0.000000,0.000000,157.182952);
	CreateDynamicObject(1484,2145.078857,-1871.115478,13.405392,-12.000000,29.000000,177.657424);
	CreateDynamicObject(1486,2145.220458,-1871.405395,13.381085,0.000000,0.000000,195.867065);
	CreateDynamicObject(1546,2145.007568,-1871.349243,13.313018,0.000000,0.000000,200.086166);
	CreateDynamicObject(1334,2125.281982,-1874.196289,13.367449,0.000000,0.000000,361.174499);
	CreateDynamicObject(955,2142.303710,-1863.819458,13.058805,0.000000,-90.000000,0.950527);
	CreateDynamicObject(1302,2143.300292,-1863.505859,12.486577,-15.000000,0.000000,357.529937);
	CreateDynamicObject(923,2107.990966,-1872.676635,13.425848,0.000000,0.000000,89.753120);
	CreateDynamicObject(933,2115.851562,-1869.437255,12.523773,0.000000,0.000000,77.710197);
	CreateDynamicObject(933,2122.397460,-1869.411132,12.532304,0.000000,0.000000,186.313583);
	CreateDynamicObject(944,2159.270996,-1864.647583,13.419299,0.000000,0.000000,269.439758);
	CreateDynamicObject(944,2159.235595,-1867.675781,13.419299,0.000000,0.000000,269.439758);
	CreateDynamicObject(944,2159.192626,-1870.772338,13.419299,0.000000,0.000000,269.439758);
	CreateDynamicObject(1372,2100.133544,-1867.964233,12.661389,0.000000,0.000000,180.357421);
	CreateDynamicObject(1315,2119.266601,-1874.093994,15.627696,0.000000,0.000000,271.771362);
	CreateDynamicObject(1315,2103.990478,-1868.730468,16.095603,0.000000,0.000000,6.734466);
	CreateDynamicObject(1303,2151.112548,-1865.054931,13.553890,0.000000,0.000000,95.638008);
	CreateDynamicObject(1451,2129.070800,-1863.248413,13.375560,0.000000,0.000000,0.254714);
	CreateDynamicObject(2114,2141.250732,-1863.694946,13.787945,0.000000,0.000000,52.141628);
	CreateDynamicObject(1460,2129.525390,-1876.668457,16.324026,-55.000000,-91.000000,269.034912);
	CreateDynamicObject(5269,2112.052246,-1866.301879,13.546875,0.000000,0.000000,2.508964);
	CreateDynamicObject(5269,2112.485351,-1876.406616,13.546875,0.000000,0.000000,2.508964);
	CreateDynamicObject(3265,2091.543212,-1868.913330,12.466016,0.000000,0.000000,265.756835);
	CreateDynamicObject(1473,2095.457763,-1863.866088,13.425724,36.000000,0.000000,0.879031);
	CreateDynamicObject(1497,2110.984130,-1864.980834,13.914264,-22.000000,90.000000,269.521881);
	CreateDynamicObject(1295,2141.174804,-1872.536743,13.553890,0.000000,0.000000,48.962463);
	CreateDynamicObject(1492,2091.812011,-1863.636474,12.488705,0.000000,0.000000,267.749847);
	CreateDynamicObject(969,2091.745605,-1873.954101,11.835894,0.000000,0.000000,89.181465);
	//------------------------[ATM Objects]--------------------------------------
	CreateDynamicObject(2942,-32.276363,-57.995586,1003.139953,0.000000,0.000000,179.915054);//247atm
	CreateDynamicObject(2942,374.718902,167.128982,1007.987304,0.000000,0.000000,179.674255);//cityhallatm
	CreateDynamicObject(2942,1185.996660,-906.697110,43.257770,0.000000,0.000000,179.674255); //burgeratm
	CreateDynamicObject(2942,389.845210,-1908.613909,7.835990,0.000000,0.000000,179.674255); //fishatm
	CreateDynamicObject(2942,1154.730880,-1427.874440,15.796990,0.000000,0.000000,179.674255); //shopsatm
	CreateDynamicObject(2942,1118.957220,-1537.050550,22.759440,0.000000,0.000000,179.674255); //shopsatm2
	CreateDynamicObject(2781,1346.3905,-1759.6039,13.5156,90.000000,0.000000,180);
	CreateDynamicObject(2781,1592.4655,-2335.9408,13.5401,90.000000,0.000000,180);
	CreateDynamicObject(2781,2308.8717,-1634.4462,14.8270,90.000000,0.000000,270);
	CreateDynamicObject(2781,2865.3170,-1415.3429,11.0010,90.000000,0.000000,90);
	CreateDynamicObject(2781,2403.9879,-1229.8441,23.8288,90.000000,0.000000,90);
	CreateDynamicObject(2781,1172.4888,-1328.9683,15.4048,90.000000,0.000000,180);
	//---------------------------------OTHER OBJECTS FOR DECORATION  –÷––ƒ“Ω‘∫-------------------------------------
	CreateDynamicObject(982, 1210.894775, -1338.718994, 13.082170, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(982, 1210.984863, -1364.312988, 13.028475, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(982, 1210.930664, -1313.612915, 13.081992, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(983, 1210.932739, -1297.599854, 13.068029, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(619, 1178.638916, -1330.531006, 13.260592, 0.000000, 0.000000, -168.74999354); //
	CreateDynamicObject(619, 1178.827148, -1316.929199, 13.265467, 0.000000, 0.000000, 101.250007583); //
	CreateDynamicObject(644, 1178.623779, -1327.942627, 13.638283, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(644, 1178.636963, -1318.795898, 13.638929, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(644, 1172.641846, -1328.479736, 14.911701, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(644, 1172.492920, -1318.854614, 14.902160, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(647, 1178.748535, -1315.699097, 14.943118, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(647, 1179.247559, -1331.188843, 14.969831, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(771, 1223.978638, -1325.212524, 12.489132, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(772, 1220.109619, -1319.217896, 12.203957, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(882, 1220.043823, -1326.306885, 12.554258, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(882, 1222.257446, -1331.261963, 12.555468, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(882, 1228.234863, -1320.527222, 13.048203, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(882, 1228.273926, -1346.912720, 13.026073, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(640, 1175.614990, -1312.107910, 13.686165, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(640, 1177.850342, -1312.044067, 13.825870, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(640, 1180.250854, -1314.389526, 13.880528, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(640, 1180.259277, -1315.900757, 13.891117, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(640, 1176.953125, -1318.250854, 13.733421, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(640, 1177.773926, -1329.274658, 13.775535, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(640, 1180.171997, -1332.323120, 13.878108, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(640, 1177.829468, -1335.350708, 13.765734, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(640, 1173.649292, -1335.292480, 13.682326, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(1775, 1179.732178, -1304.352661, 14.375546, 0.000000, 0.000000, -270.000001124); //
	CreateDynamicObject(1215, 1180.389648, -1318.776978, 13.344529, 0.000000, 0.000000, -22.499995319); //
	CreateDynamicObject(1215, 1180.568726, -1328.591553, 13.351719, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1232, 1185.426758, -1305.461548, 15.212900, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1232, 1185.739624, -1341.376587, 15.209774, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1257, 1189.603271, -1344.380981, 13.844852, 0.000000, 0.000000, -179.999962552); //
	CreateDynamicObject(1291, 1185.977173, -1304.749390, 13.067911, 0.000000, 0.000000, -270.000001124); //
	CreateDynamicObject(1363, 1189.565430, -1341.652466, 13.406675, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(700, 1186.736084, -1345.224731, 13.086472, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(700, 1186.773071, -1343.028931, 13.085400, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1213.081787, -1376.451294, 12.451761, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1188.813721, -1376.848145, 12.527533, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1212.440796, -1357.686157, 12.553961, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1189.206543, -1362.998535, 12.546593, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1211.739136, -1350.144409, 12.567156, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1189.117065, -1354.092651, 12.564240, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1188.857178, -1331.244263, 12.554728, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1211.823608, -1331.465454, 12.554779, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1187.454346, -1317.233521, 12.559080, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1213.588013, -1316.511475, 12.551130, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1188.069702, -1303.025879, 12.545664, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(617, 1214.070190, -1302.170532, 12.545763, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(997, 1185.681763, -1314.510986, 12.657124, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(997, 1185.693726, -1311.399414, 12.662818, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(997, 1185.707397, -1332.489258, 12.661514, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(997, 1185.676880, -1329.301514, 12.673162, 0.000000, 0.000000, -89.999981276); //
	CreateDynamicObject(997, 1182.408936, -1329.395630, 12.684505, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(997, 1180.872559, -1329.406982, 12.687710, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(997, 1182.511719, -1317.613892, 12.678037, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(997, 1180.969238, -1317.640747, 12.677829, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(997, 1185.829590, -1357.515503, 13.218512, 0.000000, 0.000000, 0.000000); //
	//----------------------------------------------------- π„≤•π´Àæ ---------------------------------------
	CreateDynamicObject(16775, 1831.6578369141, -1292.5003662109, 108.20129394531, 270.27001953125, 0.000000, 270.27026367188); //
	CreateDynamicObject(16775, 1824.9814453125, -1280.3916015625, 108.21611785889, 270.01647949219, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1814.9877929688, -1294.5434570313, 108.15462493896, 270.26916503906, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1831.6174316406, -1277.8989257813, 108.19361877441, 270.26916503906, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1831.0057373047, -1289.7058105469, 108.19387817383, 270.26916503906, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1815.3114013672, -1285.9696044922, 108.15163421631, 270.26916503906, 0.000000, 222.91931152344); //
	CreateDynamicObject(16775, 1822.1859130859, -1277.8100585938, 108.16410064697, 270.26916503906, 0.000000, 222.91809082031); //
	CreateDynamicObject(16775, 1827.9045410156, -1282.9499511719, 108.20997619629, 270.26916503906, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1831.7154541016, -1306.9925537109, 108.22587585449, 270.26916503906, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1828.0802001953, -1314.814453125, 108.20877075195, 270.26916503906, 0.000000, 180.53918457031); //
	CreateDynamicObject(16775, 1827.0626220703, -1303.55078125, 108.19248962402, 270.26916503906, 0.000000, 90.808380126953); //
	CreateDynamicObject(16775, 1826.7896728516, -1291.5206298828, 108.17569732666, 270.26916503906, 0.000000, 90.807495117188); //
	CreateDynamicObject(16775, 1822.9694824219, -1273.8961181641, 108.16901397705, 270.01647949219, 0.000000, 180.53918457031); //
	CreateDynamicObject(16775, 1815.7901611328, -1281.5319824219, 108.15892028809, 270.26916503906, 0.000000, 268.79797363281); //
	CreateDynamicObject(16775, 1804.5906982422, -1295.7861328125, 108.11841583252, 270.01647949219, 0.000000, 222.41931152344); //
	CreateDynamicObject(16775, 1803.7978515625, -1298.1171875, 108.22132110596, 270.01098632813, 0.000000, 181.5380859375); //
	CreateDynamicObject(16775, 1789.2568359375, -1298.9248046875, 108.24791717529, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(16775, 1800.9345703125, -1304.873046875, 108.22339630127, 270.01098632813, 0.000000, 181.5380859375); //
	CreateDynamicObject(16775, 1778.021484375, -1298.9581298828, 108.14926147461, 270.01098632813, 0.000000, 0.578125); //
	CreateDynamicObject(16775, 1780.1573486328, -1306.7995605469, 108.15173339844, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(16775, 1789.4561767578, -1308.7423095703, 108.2444229126, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(16775, 1804.1586914063, -1308.7709960938, 108.17132568359, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(16775, 1813.7550048828, -1309.5108642578, 108.19836425781, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(16775, 1821.7009277344, -1314.8900146484, 108.21033477783, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(16775, 1797.2592773438, -1304.1932373047, 108.12449645996, 270.01098632813, 0.000000, 0.5767822265625); //
	CreateDynamicObject(10154, 1779.9953613281, -1310.8717041016, 111.04299163818, 0.000000, 0.000000, 62.994934082031); //
	CreateDynamicObject(10154, 1774.9803466797, -1308.3679199219, 111.0424041748, 0.000000, 0.000000, 62.740112304688); //
	CreateDynamicObject(10154, 1773.2219238281, -1307.5588378906, 111.04257202148, 0.000000, 0.000000, 64.240112304688); //
	CreateDynamicObject(16775, 1782.0643310547, -1308.1556396484, 108.24640655518, 270.01098632813, 0.000000, 180.03295898438); //
	CreateDynamicObject(10154, 1776.6599121094, -1296.2379150391, 111.04026794434, 0.000000, 0.000000, 293.37707519531); //
	CreateDynamicObject(10154, 1773.1453857422, -1297.646484375, 111.04002380371, 0.000000, 0.000000, 290.37341308594); //
	CreateDynamicObject(10154, 1797.5391845703, -1295.0061035156, 111.03646087646, 0.000000, 0.000000, 273.6787109375); //
	CreateDynamicObject(10154, 1814.5915527344, -1273.9152832031, 111.05966949463, 0.000000, 0.000000, 300.66369628906); //
	CreateDynamicObject(10154, 1818.4012451172, -1271.6268310547, 111.05913543701, 0.000000, 0.000000, 300.66284179688); //
	CreateDynamicObject(10154, 1833.4536132813, -1272.2698974609, 111.09228515625, 0.000000, 0.000000, 219.43298339844); //
	CreateDynamicObject(10154, 1833.7133789063, -1315.6802978516, 111.10301208496, 0.000000, 0.000000, 150.35980224609); //
	CreateDynamicObject(10154, 1814.3367919922, -1316.0509033203, 111.10092163086, 0.000000, 0.000000, 0.05889892578125); //
	CreateDynamicObject(10154, 1811.50390625, -1312.2596435547, 111.08930969238, 0.000000, 0.000000, 90.034942626953); //
	CreateDynamicObject(10154, 1808.0966796875, -1312.2475585938, 111.08937072754, 0.000000, 0.000000, 90.282958984375); //
	CreateDynamicObject(10154, 1818.6706542969, -1309.0098876953, 111.08882904053, 0.000000, 0.000000, 0.55014038085938); //
	CreateDynamicObject(10154, 1815.7103271484, -1305.736328125, 111.08836364746, 0.000000, 0.000000, 90.309326171875); //
	CreateDynamicObject(10154, 1810.1129150391, -1305.7386474609, 111.08821868896, 0.000000, 0.000000, 90.3076171875); //
	CreateDynamicObject(10154, 1809.2243652344, -1301.7410888672, 111.03759002686, 0.000000, 0.000000, 270.31774902344); //
	CreateDynamicObject(10154, 1814.9331054688, -1301.7834472656, 111.04218292236, 0.000000, 0.000000, 270.31311035156); //
	CreateDynamicObject(10154, 1818.681640625, -1298.7230224609, 111.06188964844, 0.000000, 0.000000, 0.04296875); //
	CreateDynamicObject(10154, 1818.6497802734, -1292.8389892578, 111.0609588623, 0.000000, 0.000000, 0.0384521484375); //
	CreateDynamicObject(10154, 1818.6354980469, -1289.8353271484, 111.06289672852, 0.000000, 0.000000, 0.0384521484375); //
	CreateDynamicObject(10154, 1821.3082275391, -1311.7657470703, 111.10031890869, 0.000000, 0.000000, 270.05859375); //
	CreateDynamicObject(10154, 1824.1643066406, -1308.9323730469, 111.09693908691, 0.000000, 0.000000, 359.78479003906); //
	CreateDynamicObject(10154, 1824.1625976563, -1303.3807373047, 111.09638214111, 0.000000, 0.000000, 359.7802734375); //
	CreateDynamicObject(10154, 1824.1849365234, -1297.7077636719, 111.09672546387, 0.000000, 0.000000, 359.7802734375); //
	CreateDynamicObject(10154, 1824.1945800781, -1292.0317382813, 111.07804870605, 0.000000, 0.000000, 359.78479003906); //
	CreateDynamicObject(10154, 1824.1672363281, -1289.8194580078, 111.08254241943, 0.000000, 0.000000, 359.7802734375); //
	CreateDynamicObject(10154, 1821.3676757813, -1287.1330566406, 111.10546875, 0.000000, 0.000000, 270.05041503906); //
	CreateDynamicObject(10154, 1787.2139892578, -1301.7145996094, 111.03882598877, 0.000000, 0.000000, 270.04943847656); //
	CreateDynamicObject(10154, 1787.1547851563, -1305.8884277344, 111.13442993164, 0.000000, 0.000000, 270.04943847656); //
	CreateDynamicObject(10154, 1786.4586181641, -1305.8822021484, 111.13445281982, 0.000000, 0.000000, 270.04943847656); //
	CreateDynamicObject(10154, 1786.4631347656, -1301.7628173828, 111.03897094727, 0.000000, 0.000000, 270.04943847656); //
	CreateDynamicObject(10182, 1789.7125244141, -1303.7277832031, 110.88352966309, 270.98999023438, 0.000000, 0.000000); //
	CreateDynamicObject(10182, 1783.6179199219, -1303.7958984375, 109.96111297607, 270.98876953125, 0.000000, 0.000000); //
	CreateDynamicObject(10182, 1806.3743896484, -1303.8236083984, 111.00821685791, 277.23876953125, 0.000000, 0.000000); //
	CreateDynamicObject(3089, 1818.4946289063, -1300.1333007813, 109.60272216797, 0.000000, 0.000000, 89.775085449219); //
	CreateDynamicObject(3089, 1818.4885253906, -1286.9932861328, 109.6033706665, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(2949, 1814.3482666016, -1301.5629882813, 108.30044555664, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(2987, 1818.4869384766, -1290.9274902344, 109.6217956543, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(3089, 1810.4201660156, -1305.8956298828, 109.62920379639, 0.000000, 0.000000, 0.044921875); //
	CreateDynamicObject(2970, 1790.0639648438, -1301.6702880859, 108.40110778809, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1998, 1808.8969726563, -1310.6959228516, 108.30096435547, 0.000000, 0.000000, 270.05017089844); //
	CreateDynamicObject(1998, 1811.8663330078, -1311.7288818359, 108.30130767822, 0.000000, 0.000000, 89.509155273438); //
	CreateDynamicObject(2008, 1820.9644775391, -1271.0930175781, 108.27089691162, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(2008, 1823.7908935547, -1271.0316162109, 108.27088165283, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(2008, 1826.9135742188, -1271.0096435547, 108.27089691162, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(2008, 1830.0001220703, -1270.9573974609, 108.28954315186, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(2165, 1833.3369140625, -1273.1953125, 108.30432891846, 0.000000, 0.000000, 312.08862304688); //
	CreateDynamicObject(2174, 1805.6030273438, -1311.5769042969, 108.34939575195, 0.000000, 0.000000, 180.54052734375); //
	CreateDynamicObject(2198, 1795.0006103516, -1305.125, 108.34625244141, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(2198, 1796.0065917969, -1304.1455078125, 108.32572937012, 0.000000, 0.000000, 180.54052734375); //
	CreateDynamicObject(2198, 1796.9155273438, -1305.18359375, 108.32593536377, 0.000000, 0.000000, 90.058380126953); //
	CreateDynamicObject(2198, 1794.0780029297, -1304.0986328125, 108.35198974609, 0.000000, 0.000000, 270.59509277344); //
	CreateDynamicObject(2198, 1800.4304199219, -1305.0477294922, 108.32593536377, 0.000000, 0.000000, 90.398376464844); //
	CreateDynamicObject(2198, 1800.3807373047, -1303.0960693359, 108.32554626465, 0.000000, 0.000000, 180.12561035156); //
	CreateDynamicObject(2198, 1799.4979248047, -1305.9434814453, 108.32614898682, 0.000000, 0.000000, 0.660888671875); //
	CreateDynamicObject(2198, 1805.8410644531, -1302.0386962891, 108.32543182373, 0.000000, 0.000000, 270.92932128906); //
	CreateDynamicObject(2198, 1805.8900146484, -1303.9753417969, 108.32578277588, 0.000000, 0.000000, 271.42834472656); //
	CreateDynamicObject(2165, 1818.3979492188, -1272.5583496094, 108.27114105225, 0.000000, 0.000000, 29.910003662109); //
	CreateDynamicObject(2165, 1816.671875, -1273.8494873047, 108.27150726318, 0.000000, 0.000000, 29.90478515625); //
	CreateDynamicObject(2165, 1814.1993408203, -1275.0385742188, 108.25333404541, 0.000000, 0.000000, 29.90478515625); //
	CreateDynamicObject(2191, 1790.5236816406, -1305.4456787109, 108.34630584717, 0.000000, 0.000000, 89.730041503906); //
	CreateDynamicObject(2191, 1790.5346679688, -1304.0040283203, 108.35208129883, 1.0799560546875, 0.000000, 89.725341796875); //
	CreateDynamicObject(2198, 1794.8446044922, -1311.7332763672, 108.34696960449, 0.000000, 0.000000, 179.78497314453); //
	CreateDynamicObject(2198, 1796.7072753906, -1311.79296875, 108.3473815918, 0.000000, 0.000000, 178.87841796875); //
	CreateDynamicObject(2191, 1803.6226806641, -1311.6968994141, 108.27435302734, 1.07666015625, 0.000000, 180.53576660156); //
	CreateDynamicObject(2191, 1802.2559814453, -1311.7165527344, 108.27439880371, 1.0711669921875, 0.000000, 180.53283691406); //
	CreateDynamicObject(2200, 1832.35546875, -1270.9711914063, 108.30983734131, 0.000000, 0.000000, 310.15014648438); //
	CreateDynamicObject(2200, 1812.1378173828, -1277.1823730469, 108.30014801025, 0.000000, 0.000000, 84.854553222656); //
	CreateDynamicObject(2200, 1812.0322265625, -1279.4443359375, 108.29438781738, 0.000000, 0.000000, 88.818969726563); //
	CreateDynamicObject(2164, 1835.2027587891, -1274.8254394531, 108.31269073486, 0.000000, 0.000000, 270.26916503906); //
	CreateDynamicObject(1998, 1824.4793701172, -1275.0151367188, 108.31845855713, 0.000000, 0.000000, 270.04943847656); //
	CreateDynamicObject(1998, 1826.5704345703, -1277.9439697266, 108.31917572021, 0.000000, 0.000000, 89.464111328125); //
	CreateDynamicObject(1998, 1828.4278564453, -1276.9351806641, 108.31967163086, 0.000000, 0.000000, 180.27197265625); //
	CreateDynamicObject(1998, 1828.568359375, -1276.0329589844, 108.31985473633, 0.000000, 0.000000, 359.72888183594); //
	CreateDynamicObject(2193, 1799.6458740234, -1310.7517089844, 108.27410125732, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(2184, 1832.7427978516, -1280.6129150391, 108.34776306152, 0.000000, 0.000000, 244.89038085938); //
	CreateDynamicObject(2184, 1835.2927246094, -1279.2529296875, 108.34767913818, 0.000000, 0.000000, 202.50915527344); //
	CreateDynamicObject(2184, 1831.7547607422, -1283.3630371094, 108.34799957275, 0.000000, 0.000000, 288.73498535156); //
	CreateDynamicObject(2184, 1832.8703613281, -1286.0196533203, 108.34700012207, 0.000000, 0.000000, 328.61157226563); //
	CreateDynamicObject(2190, 1832.1877441406, -1282.6232910156, 109.1237411499, 0.000000, 0.000000, 59.820007324219); //
	CreateDynamicObject(2190, 1833.2058105469, -1280.6794433594, 109.12350463867, 0.000000, 0.000000, 36.230102539063); //
	CreateDynamicObject(2190, 1835.0881347656, -1279.7355957031, 109.12342071533, 0.000000, 0.000000, 355.66027832031); //
	CreateDynamicObject(2190, 1832.6303710938, -1284.6540527344, 109.1237411499, 0.000000, 0.000000, 99.695098876953); //
	CreateDynamicObject(2190, 1834.2203369141, -1286.5395507813, 109.12274169922, 0.000000, 0.000000, 139.56994628906); //
	CreateDynamicObject(1806, 1799.8819580078, -1301.7592773438, 108.32531738281, 0.000000, 0.000000, 180.54052734375); //
	CreateDynamicObject(1806, 1804.1184082031, -1302.3890380859, 108.32546234131, 0.000000, 0.000000, 270.26818847656); //
	CreateDynamicObject(1806, 1804.2974853516, -1304.4787597656, 108.32585906982, 0.000000, 0.000000, 270.263671875); //
	CreateDynamicObject(1806, 1796.1048583984, -1310.0854492188, 108.34720611572, 0.000000, 0.000000, 178.63879394531); //
	CreateDynamicObject(1806, 1794.1785888672, -1310.2091064453, 108.34722900391, 0.000000, 0.000000, 178.6376953125); //
	CreateDynamicObject(1806, 1795.4580078125, -1302.7543945313, 108.32548522949, 0.000000, 0.000000, 178.6376953125); //
	CreateDynamicObject(1806, 1798.0610351563, -1304.7706298828, 108.3258895874, 0.000000, 0.000000, 94.90771484375); //
	CreateDynamicObject(2191, 1799.3576660156, -1304.3172607422, 108.32576751709, 0.000000, 0.000000, 269.18518066406); //
	CreateDynamicObject(1806, 1795.7451171875, -1306.4871826172, 108.34651184082, 0.000000, 0.000000, 357.19030761719); //
	CreateDynamicObject(1806, 1792.6655273438, -1304.6439208984, 108.22694396973, 0.000000, 0.000000, 267.45751953125); //
	CreateDynamicObject(1714, 1799.5676269531, -1311.2572021484, 108.34941101074, 0.000000, 0.000000, 43.89501953125); //
	CreateDynamicObject(1714, 1833.7690429688, -1283.0885009766, 108.30894470215, 0.000000, 0.000000, 264.35595703125); //
	CreateDynamicObject(1715, 1834.9525146484, -1285.1052246094, 108.31504821777, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1715, 1834.2346191406, -1284.4270019531, 108.31169128418, 0.000000, 0.000000, 290.21020507813); //
	CreateDynamicObject(1715, 1834.8051757813, -1280.8291015625, 108.31139373779, 0.000000, 0.000000, 130.68957519531); //
	CreateDynamicObject(1715, 1833.9914550781, -1281.9312744141, 108.3072052002, 0.000000, 0.000000, 220.41821289063); //
	CreateDynamicObject(1998, 1818.8892822266, -1286.4990234375, 108.2759552002, 0.000000, 0.000000, 359.77917480469); //
	CreateDynamicObject(1998, 1822.7469482422, -1285.4670410156, 108.31790161133, 0.000000, 0.000000, 268.96447753906); //
	CreateDynamicObject(1806, 1814.9371337891, -1275.8375244141, 108.25687408447, 0.000000, 0.000000, 300.18017578125); //
	CreateDynamicObject(1806, 1817.5872802734, -1274.2839355469, 108.27163696289, 0.000000, 0.000000, 29.909423828125); //
	CreateDynamicObject(1806, 1819.4664306641, -1273.4084472656, 108.27138519287, 0.000000, 0.000000, 29.90478515625); //
	CreateDynamicObject(1806, 1821.3833007813, -1272.2105712891, 108.27104949951, 0.000000, 0.000000, 340.05480957031); //
	CreateDynamicObject(1806, 1824.76171875, -1272.1311035156, 108.27103424072, 0.000000, 0.000000, 39.874298095703); //
	CreateDynamicObject(1806, 1827.7153320313, -1271.3917236328, 108.27795410156, 0.000000, 0.000000, 359.98937988281); //
	CreateDynamicObject(1806, 1830.9072265625, -1271.9895019531, 108.29293823242, 0.000000, 0.000000, 359.98901367188); //
	CreateDynamicObject(1715, 1833.0139160156, -1274.4158935547, 108.30278015137, 0.000000, 0.000000, 130.68786621094); //
	CreateDynamicObject(2639, 1771.0845947266, -1304.8057861328, 108.88157653809, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(2639, 1771.0732421875, -1302.6971435547, 108.87874603271, 0.000000, 0.000000, 270.26916503906); //
	CreateDynamicObject(2639, 1771.0875244141, -1300.5611572266, 108.87915039063, 0.000000, 0.000000, 270.26916503906); //
	CreateDynamicObject(2639, 1771.8883056641, -1299.1260986328, 108.87944793701, 0.000000, 0.000000, 216.404296875); //
	CreateDynamicObject(2639, 1772.0008544922, -1306.2894287109, 108.90103149414, 0.000000, 0.000000, 322.10302734375); //
	CreateDynamicObject(2286, 1833.7266845703, -1272.6798095703, 111.13148498535, 0.000000, 0.000000, 309.35009765625); //
	CreateDynamicObject(3675, 1815.8020019531, -1279.0661621094, 111.06871032715, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1829.3171386719, -1279.0791015625, 111.02450561523, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1829.2473144531, -1294.1848144531, 111.09857177734, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1829.2573242188, -1313.8342285156, 111.09783935547, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1815.0546875, -1313.861328125, 111.04383087158, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1778.5787353516, -1306.0842285156, 111.1795501709, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1778.5321044922, -1298.8592529297, 111.15787506104, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3675, 1811.0856933594, -1292.51953125, 110.99499511719, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3813, 1823.2321777344, -1286.9951171875, 112.38264465332, 0.000000, 0.000000, 89.730041503906); //
	CreateDynamicObject(3638, 1827.8851318359, -1303.8666992188, 134.06484985352, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3638, 1826.9493408203, -1282.0211181641, 134.06367492676, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(14867, 1835.134765625, -1291.63671875, 109.8483581543, 0.000000, 0.000000, 89.725341796875); //
	CreateDynamicObject(14867, 1835.10546875, -1299.484375, 109.84948730469, 0.000000, 0.000000, 89.725341796875); //
	CreateDynamicObject(14867, 1835.0615234375, -1307.3793945313, 109.87240600586, 0.000000, 0.000000, 89.725341796875); //
	CreateDynamicObject(2762, 1773.3078613281, -1300.6221923828, 108.75663757324, 0.000000, 0.000000, 69.789978027344); //
	CreateDynamicObject(2762, 1772.8577880859, -1302.8597412109, 108.78372955322, 0.000000, 0.000000, 89.725158691406); //
	CreateDynamicObject(2762, 1773.7790527344, -1305.2377929688, 108.75914001465, 0.000000, 0.000000, 129.59985351563); //
	CreateDynamicObject(1209, 1824.4956054688, -1291.3590087891, 108.28946685791, 0.000000, 0.000000, 89.730041503906); //
	CreateDynamicObject(1775, 1824.2510986328, -1287.6140136719, 109.41539764404, 0.000000, 0.000000, 90.810546875); //
	CreateDynamicObject(1776, 1818.4943847656, -1289.1909179688, 109.37313842773, 0.000000, 0.000000, 269.19006347656); //
	CreateDynamicObject(1776, 1818.5712890625, -1292.4484863281, 109.37307739258, 0.000000, 0.000000, 269.18701171875); //
	CreateDynamicObject(1808, 1805.2062988281, -1300.5187988281, 108.2493057251, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(1808, 1828.6296386719, -1279.947265625, 108.31986236572, 0.000000, 0.000000, 270.26916503906); //
	CreateDynamicObject(626, 1818.4066162109, -1300.8504638672, 110.32167053223, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1820.1304931641, -1271.3511962891, 110.31939697266, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1835.1385498047, -1277.8443603516, 110.35552978516, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1806.2231445313, -1301.0946044922, 110.37381744385, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1818.5047607422, -1306.3765869141, 110.34888458252, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1815.1099853516, -1318.4714355469, 110.36214447021, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1834.6520996094, -1312.5336914063, 110.39067840576, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(2290, 1801.134765625, -1294.7153320313, 108.24817657471, 0.000000, 0.000000, 43.850006103516); //
	CreateDynamicObject(2290, 1803.2822265625, -1292.6455078125, 108.22001647949, 0.000000, 0.000000, 43.840942382813); //
	CreateDynamicObject(2290, 1805.4270019531, -1290.5465087891, 108.21999359131, 0.000000, 0.000000, 43.846435546875); //
	CreateDynamicObject(2290, 1807.6057128906, -1288.4560546875, 108.21997070313, 0.000000, 0.000000, 43.846435546875); //
	CreateDynamicObject(2290, 1809.7619628906, -1286.3507080078, 108.2377166748, 0.000000, 0.000000, 43.846435546875); //
	CreateDynamicObject(2714, 1787.2199707031, -1301.5341796875, 111.25981140137, 0.000000, 0.000000, 179.76037597656); //
	CreateDynamicObject(2714, 1818.4418945313, -1294.3104248047, 111.56116485596, 0.000000, 0.000000, 270.23815917969); //
	CreateDynamicObject(1715, 1812.2749023438, -1310.7935791016, 108.30113220215, 0.000000, 0.000000, 270.26306152344); //
	CreateDynamicObject(1715, 1809.1390380859, -1311.8416748047, 108.3013381958, 0.000000, 0.000000, 140.64837646484); //
	CreateDynamicObject(1806, 1800.0397949219, -1306.9061279297, 108.3263092041, 0.000000, 0.000000, 3.1903991699219); //
	CreateDynamicObject(3856, 1819.9454345703, -1298.4807128906, 108.72267913818, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3856, 1814.2473144531, -1302.8548583984, 108.69466400146, 0.000000, 0.000000, 270.27026367188); //
	CreateDynamicObject(3856, 1814.6778564453, -1304.6708984375, 108.56468963623, 0.000000, 0.000000, 90.809234619141); //
	CreateDynamicObject(1295, 1823.5913085938, -1308.9985351563, 108.09999084473, 0.000000, 0.000000, 280.240234375); //
	CreateDynamicObject(1295, 1823.951171875, -1304.92578125, 108.07448577881, 0.000000, 0.000000, 280.2392578125); //
	CreateDynamicObject(1295, 1823.51953125, -1299.5153808594, 108.19914245605, 0.000000, 0.000000, 280.2392578125); //
	CreateDynamicObject(1295, 1823.8540039063, -1292.6912841797, 108.20667266846, 0.000000, 0.000000, 280.2392578125); //
	CreateDynamicObject(1295, 1823.2795410156, -1287.3070068359, 108.28594207764, 0.000000, 0.000000, 280.2392578125); //
	CreateDynamicObject(14867, 1790.8707275391, -1295.4964599609, 109.7794342041, 0.000000, 0.000000, 180.73254394531); //
	CreateDynamicObject(2290, 1831.6298828125, -1317.4188232422, 108.32710266113, 0.000000, 0.000000, 191.36645507813); //
	CreateDynamicObject(2290, 1828.333984375, -1317.8251953125, 108.32674407959, 0.000000, 0.000000, 179.45617675781); //
	CreateDynamicObject(2290, 1825.0100097656, -1317.8106689453, 108.32640075684, 0.000000, 0.000000, 179.45617675781); //
	CreateDynamicObject(2290, 1821.4481201172, -1317.8188476563, 108.32643890381, 0.000000, 0.000000, 179.45617675781); //
	CreateDynamicObject(2290, 1817.8234863281, -1317.869140625, 108.31346893311, 0.000000, 0.000000, 157.62133789063); //
	CreateDynamicObject(1998, 1818.5113525391, -1276.8107910156, 108.27376556396, 0.000000, 0.000000, 270.04943847656); //
	CreateDynamicObject(1998, 1820.5944824219, -1279.7720947266, 108.26828765869, 0.000000, 0.000000, 89.509155273438); //
	CreateDynamicObject(1998, 1822.5023193359, -1278.7590332031, 108.26784515381, 0.000000, 0.000000, 180.31591796875); //
	CreateDynamicObject(1998, 1822.6232910156, -1278.9754638672, 108.2552947998, 0.000000, 0.000000, 0.85333251953125); //
	CreateDynamicObject(1806, 1821.705078125, -1278.4384765625, 108.31755065918, 0.000000, 0.000000, 180.53448486328); //
	CreateDynamicObject(1806, 1820.7373046875, -1278.5690917969, 108.26460266113, 0.000000, 0.000000, 80.832885742188); //
	CreateDynamicObject(1806, 1818.294921875, -1277.6647949219, 108.27282714844, 0.000000, 0.000000, 270.26220703125); //
	CreateDynamicObject(1806, 1823.412109375, -1279.4196777344, 108.31811523438, 0.000000, 0.000000, 340.04797363281); //
	CreateDynamicObject(1253, 1834.5859375, -1273.6467285156, 109.68168640137, 0.000000, 0.000000, 310.15014648438); //
	CreateDynamicObject(14867, 1788.673828125, -1312.2421875, 109.87732696533, 0.000000, 0.000000, 358.20373535156); //
	CreateDynamicObject(626, 1784.0765380859, -1312.2421875, 110.39812469482, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1771.1489257813, -1298.8978271484, 110.30042266846, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(626, 1771.0830078125, -1306.1574707031, 110.39697265625, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(16775, 1775.3745117188, -1303.2487792969, 108.15030670166, 270.01098632813, 0.000000, 269.80786132813); //
	CreateDynamicObject(2484, 1832.5264892578, -1271.4943847656, 111.04307556152, 0.000000, 0.000000, 132.11004638672); //
	CreateDynamicObject(1210, 1830.2049560547, -1270.5642089844, 109.25048065186, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(333, 1770.712890625, -1295.11328125, 109.95291137695, 0.000000, 0.000000, 230.38879394531); //
	CreateDynamicObject(16779, 1833.1007080078, -1274.8698730469, 113.37551879883, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(16779, 1800.8830566406, -1305.060546875, 113.32749176025, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(3077, 1783.47265625, -1303.7685546875, 108.00370788574, 0.000000, 0.000000, 269.5166015625); //
	CreateDynamicObject(2611, 1783.455078125, -1302.9765625, 110.45310974121, 0.000000, 0.000000, 269.76928710938); //
	CreateDynamicObject(2612, 1783.4267578125, -1304.8160400391, 110.46527099609, 0.000000, 0.000000, 269.77026367188); //
	CreateDynamicObject(1622, 1777.3486328125, -1296.6689453125, 112.93789672852, 350.0299987793, 310.14999389648, 79.760009765625); //
	CreateDynamicObject(14559, 1790.5986328125, -1303.91796875, 134.3274230957, 0.999755859375, 359.24743652344, 0.000000); //
	CreateDynamicObject(1806, 1823.9636230469, -1276.021484375, 108.31830596924, 0.000000, 0.000000, 271.34191894531); //
	CreateDynamicObject(1806, 1827.8179931641, -1276.8458251953, 108.31959533691, 0.000000, 0.000000, 141.73040771484); //
	CreateDynamicObject(1806, 1826.6505126953, -1277.2274169922, 108.31920623779, 0.000000, 0.000000, 71.939147949219); //
	CreateDynamicObject(1806, 1829.5126953125, -1276.6032714844, 108.32019805908, 0.000000, 0.000000, 352.17846679688); //
	CreateDynamicObject(14559, 1824.1937255859, -1302.7399902344, 134.24127197266, 359.49975585938, 359.24743652344, 0.000000); //
	CreateDynamicObject(10250, 1787.2492675781, -1312.0874023438, 164.51635742188, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(10250, 1788.5510253906, -1297.5087890625, 164.51635742188, 0.000000, 0.000000, 179.4599609375); //
	CreateDynamicObject(1329, 1812.3358154297, -1280.4057617188, 108.69774627686, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1329, 1783.2725830078, -1301.6724853516, 108.80360412598, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(14867, 1829.3190917969, -1299.6320800781, 109.84586334229, 0.000000, 0.000000, 89.725341796875); //
	CreateDynamicObject(14867, 1830.1872558594, -1299.6096191406, 109.85025787354, 0.000000, 0.000000, 270.26550292969); //
	CreateDynamicObject(14867, 1829.2862548828, -1307.4948730469, 109.84643554688, 0.000000, 0.000000, 89.725341796875); //
	CreateDynamicObject(14867, 1830.1478271484, -1307.4798583984, 109.85250091553, 0.000000, 0.000000, 269.18518066406); //
	CreateDynamicObject(14867, 1824.3802490234, -1295.9045410156, 109.8204498291, 0.000000, 0.000000, 270.26550292969); //
	CreateDynamicObject(14867, 1824.4598388672, -1302.2188720703, 109.83835601807, 0.000000, 0.000000, 270.263671875); //
	CreateDynamicObject(14867, 1824.4245605469, -1307.8193359375, 109.8581161499, 0.000000, 0.000000, 270.263671875); //
	CreateDynamicObject(14867, 1835.1293945313, -1291.8541259766, 109.85739898682, 0.000000, 0.000000, 269.75048828125); //
	CreateDynamicObject(14867, 1835.0782470703, -1299.6475830078, 109.82306671143, 0.000000, 0.000000, 269.74731445313); //
	CreateDynamicObject(14867, 1835.0970458984, -1307.3715820313, 109.85849761963, 0.000000, 0.000000, 269.74731445313); //
	CreateDynamicObject(14867, 1788.5983886719, -1312.2233886719, 109.8791809082, 0.000000, 0.000000, 176.75921630859); //
	CreateDynamicObject(14867, 1790.8560791016, -1295.4543457031, 109.82639312744, 0.000000, 0.000000, 0.1925048828125); //
	CreateDynamicObject(2290, 1780.3692626953, -1295.8747558594, 108.2523727417, 0.000000, 0.000000, 3.9609375); //
	CreateDynamicObject(2290, 1783.3980712891, -1295.6907958984, 108.24983215332, 0.000000, 0.000000, 3.9605712890625); //
	CreateDynamicObject(16775, 1831.6353759766, -1293.4937744141, 113.44908905029, 270.01647949219, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1827.6337890625, -1291.4034423828, 113.49663543701, 270.01647949219, 0.000000, 270.26916503906); //
	CreateDynamicObject(16775, 1831.7036132813, -1303.9020996094, 113.41106414795, 270.01647949219, 0.000000, 270.26916503906); //
	CreateDynamicObject(2200, 1812.4462890625, -1279.4565429688, 110.15272521973, 180.53997802734, 0.000000, 88.818969726563); //
	CreateDynamicObject(2200, 1812.4764404297, -1277.2501220703, 110.16450500488, 180.53833007813, 0.000000, 88.8134765625); //
	CreateDynamicObject(2200, 1835.1849365234, -1275.5916748047, 108.26461029053, 1.0783081054688, 0.000000, 88.8134765625); //
	CreateDynamicObject(16779, 1825.6729736328, -1315.7103271484, 113.37209320068, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(16779, 1774.2003173828, -1303.0173339844, 113.36086273193, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1893, 1823.5124511719, -1275.0375976563, 112.83686828613, 0.000000, 180.53997802734, 89.72998046875); //
	CreateDynamicObject(1893, 1832.7545166016, -1306.025390625, 112.8265914917, 0.000000, 180.53833007813, 89.725341796875); //
	CreateDynamicObject(1893, 1821.1450195313, -1314.8754882813, 112.93193054199, 180.53997802734, 0.000000, 0.000000); //
	CreateDynamicObject(1893, 1798.3685302734, -1304.3140869141, 112.87136077881, 180.53833007813, 0.000000, 89.730041503906); //
	CreateDynamicObject(1893, 1776.3518066406, -1304.3277587891, 112.82328033447, 180.53283691406, 0.000000, 89.725341796875); //
	CreateDynamicObject(1893, 1809.451171875, -1296.5412597656, 112.84867858887, 180.53283691406, 0.000000, 89.725341796875); //
	//------------------------------------------------------ Car Graveyard ------------------------------------------------------------------------
	CreateDynamicObject(18247,2607.873,-1496.441,19.004,1.719,-3.438,82.033);
	CreateDynamicObject(18248,2609.083,-1527.341,21.207,-6.875,-0.859,123.750);
	CreateDynamicObject(18249,2617.712,-1485.339,20.728,0.0,0.0,0.0);
	CreateDynamicObject(13591,2601.759,-1501.277,15.141,0.0,0.0,-11.250);
	CreateDynamicObject(13591,2598.903,-1505.709,14.792,0.0,0.0,-191.250);
	CreateDynamicObject(12957,2611.346,-1503.833,15.406,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2615.382,-1505.993,15.256,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2618.386,-1502.603,15.765,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2611.389,-1503.532,16.681,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2615.421,-1502.367,17.061,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2613.356,-1504.457,16.560,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2612.446,-1502.669,18.232,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2615.493,-1502.603,18.992,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2620.090,-1504.698,15.608,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2618.968,-1502.872,17.280,0.0,0.0,-90.000);
	CreateDynamicObject(13591,2612.505,-1514.509,14.402,0.0,0.0,-56.250);
	CreateDynamicObject(13591,2612.123,-1513.211,16.422,0.0,0.0,-56.250);
	CreateDynamicObject(13591,2612.608,-1513.883,15.595,0.0,0.0,-236.250);
	CreateDynamicObject(3593,2603.020,-1499.691,19.043,0.0,-6.016,21.486);
	CreateDynamicObject(5291,2577.146,-1551.764,14.840,0.0,2.578,-22.500);
	CreateDynamicObject(18248,2585.289,-1563.789,14.976,-6.875,-0.859,202.500);
	CreateDynamicObject(18248,2591.737,-1540.191,19.005,-0.859,7.735,258.750);
	CreateDynamicObject(18253,2587.787,-1504.863,17.159,5.157,-0.859,-6.875);
	CreateDynamicObject(3594,2618.993,-1544.156,11.817,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.462,-1543.877,12.670,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.426,-1543.834,13.341,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.538,-1544.144,14.007,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.232,-1544.333,14.663,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.226,-1544.434,15.329,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.242,-1544.713,15.987,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2619.311,-1544.781,16.662,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.846,-1550.795,11.126,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.679,-1549.765,12.365,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.661,-1550.034,13.020,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.678,-1550.338,13.677,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.570,-1550.654,14.320,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.463,-1550.918,14.968,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.408,-1551.014,15.629,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.307,-1551.267,16.277,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.471,-1547.605,17.431,6.875,-2.578,0.0);
	CreateDynamicObject(3594,2618.304,-1551.295,17.463,13.751,-2.578,0.0);
	CreateDynamicObject(3594,2619.226,-1539.604,14.432,-64.458,-2.578,0.0);
	CreateDynamicObject(3594,2617.208,-1543.309,12.415,2.578,-49.847,0.0);
	CreateDynamicObject(3594,2616.798,-1549.876,11.790,2.578,-49.847,0.0);
	CreateDynamicObject(3594,2621.198,-1549.946,12.582,2.578,1.719,-2.578);
	CreateDynamicObject(1327,2583.377,-1564.936,17.869,0.0,0.0,0.0);
	CreateDynamicObject(1327,2580.954,-1564.109,17.583,-116.024,-110.867,184.779);
	CreateDynamicObject(1327,2582.119,-1564.729,18.140,-116.024,-110.867,184.779);
	CreateDynamicObject(1327,2580.855,-1566.070,17.797,0.0,0.0,0.0);
	CreateDynamicObject(1327,2582.581,-1565.760,17.710,0.0,0.0,58.442);
	CreateDynamicObject(1327,2581.500,-1564.991,18.882,0.0,0.0,58.442);
	CreateDynamicObject(1327,2590.375,-1545.049,21.884,0.0,0.0,58.442);
	CreateDynamicObject(1327,2590.871,-1543.359,22.009,0.0,0.0,-42.972);
	CreateDynamicObject(1327,2589.537,-1544.767,21.917,0.0,0.0,-110.008);
	CreateDynamicObject(1327,2591.206,-1543.841,21.806,0.0,0.0,-149.542);
	CreateDynamicObject(1327,2591.026,-1544.999,21.479,0.0,0.0,143.526);
	CreateDynamicObject(1327,2590.600,-1544.841,21.038,-186.498,-275.879,143.526);
	CreateDynamicObject(12957,2613.386,-1518.294,14.538,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2613.705,-1518.958,14.488,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2613.032,-1520.296,14.362,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2612.743,-1521.885,14.222,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2613.757,-1520.214,15.149,0.0,0.0,-90.000);
	CreateDynamicObject(12957,2614.336,-1521.413,16.466,0.0,0.0,-90.000);
	CreateDynamicObject(3398,2586.323,-1471.592,29.934,0.0,0.0,33.750);
	CreateDynamicObject(3398,2601.557,-1510.867,28.183,0.0,0.0,112.500);
	CreateDynamicObject(3398,2619.310,-1531.139,26.861,0.0,0.0,112.500);
	CreateDynamicObject(3398,2573.220,-1583.810,18.027,0.0,0.0,112.500);
	CreateDynamicObject(3398,2614.199,-1575.947,20.381,0.0,0.0,112.500);
	CreateDynamicObject(1437,2612.269,-1496.790,19.456,-6.016,0.859,-90.000);
	CreateDynamicObject(1437,2610.749,-1496.708,14.156,-6.016,0.859,-90.000);
	CreateDynamicObject(13591,2587.492,-1518.368,14.219,0.0,0.0,-450.000);
	CreateDynamicObject(13591,2583.187,-1518.932,13.879,0.0,0.0,-450.000);
	CreateDynamicObject(13591,2586.502,-1515.724,14.901,0.0,0.0,-360.000);
	CreateDynamicObject(13591,2587.911,-1519.354,15.582,0.0,0.0,-360.000);
	CreateDynamicObject(3268,2566.667,-1603.452,2.425,-0.859,0.0,180.000);
	CreateDynamicObject(944,2561.727,-1617.532,3.300,0.0,0.0,0.0);
	CreateDynamicObject(944,2561.545,-1617.603,4.746,0.0,0.0,0.0);
	CreateDynamicObject(1348,2564.044,-1617.871,3.012,0.0,0.0,0.0);
	CreateDynamicObject(1431,2565.954,-1617.792,2.825,0.0,0.0,0.0);
	CreateDynamicObject(1685,2567.895,-1617.369,3.046,0.0,0.0,0.0);
	CreateDynamicObject(1685,2570.160,-1617.261,3.053,0.0,0.0,0.0);
	CreateDynamicObject(1685,2572.175,-1617.201,3.058,0.0,0.0,0.0);
	CreateDynamicObject(1685,2571.317,-1617.287,4.558,0.0,0.0,0.0);
	CreateDynamicObject(1685,2569.089,-1617.358,4.458,0.0,0.0,0.0);
	CreateDynamicObject(931,2557.790,-1613.406,3.614,0.0,0.0,-90.000);
	CreateDynamicObject(931,2557.972,-1605.282,3.890,0.0,0.0,-90.000);
	CreateDynamicObject(944,2557.473,-1609.305,3.316,0.0,0.0,90.000);
	CreateDynamicObject(944,2557.383,-1609.370,4.767,0.0,0.0,90.000);
	CreateDynamicObject(18260,2558.691,-1593.028,4.782,0.0,2.578,-90.000);
	CreateDynamicObject(18260,2569.967,-1590.333,4.939,0.0,2.578,-180.077);
	CreateDynamicObject(925,2575.720,-1615.397,3.457,0.0,0.0,-90.000);
	CreateDynamicObject(11406,2574.088,-1605.880,7.077,0.0,0.0,-77.349);
	CreateDynamicObject(11406,2562.267,-1597.165,6.047,0.0,0.0,-90.241);
	CreateDynamicObject(3398,2624.072,-1469.825,30.557,0.0,0.0,33.750);
	CreateDynamicObject(1684,2603.531,-1470.500,17.351,0.0,0.0,0.0);
	CreateDynamicObject(1684,2593.522,-1470.541,17.317,0.0,0.0,0.0);
	CreateDynamicObject(3566,2571.805,-1609.644,4.906,0.0,0.0,-90.000);
	CreateDynamicObject(8229,2564.510,-1631.125,4.482,0.0,0.0,0.0);
	CreateDynamicObject(8229,2576.164,-1631.129,4.584,0.0,0.0,0.0);
	CreateDynamicObject(955,2601.791,-1473.056,16.122,0.0,0.0,0.0);
	CreateDynamicObject(956,2600.435,-1473.048,16.125,0.0,0.0,0.0);

	printf("[Ω≈±æ]: ‘ÿ»Î %d OBJ", CountDynamicObjects());
//------------------------------------------------------ ... ------------------------------------------------------------------------

	// Zones
    GangZoneCreate(39.558700, -1906.561401, 303.558715, -1610.561401); // Vice
    GangZoneCreate(1010.753906, -2156.936279, 1322.753906, -1948.936279); // ¥Û»¶∞Ô
	GangZoneCreate(608.147583, -1403.756958, 880.147583, -1147.756958); // …Ωø⁄◊È
    GangZoneCreate(1141.550537, -929.768249, 1389.550537, -681.768249); // ¬Ûµ¬¡÷
    GangZoneCreate(1738.650756, -2110.871093, 1930.650756, -1870.871093); // »˝∫œª·
	GangZoneCreate(561.693237, -692.676574, 833.693237, -412.676574); // Anarchy
  	GangZoneCreate(1374.948486, -1069.761718, 1550.948486, -965.761718); // bank
 	GangZoneCreate(423.498901, -1584.830688, 527.498901, -1440.830688); // RPL
 	GangZoneCreate(1533.380615, -2408.402587, 1685.380615, -2264.402587); // Spawn
	// Player Class's
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	//-------------------------------------------------------------------------------------------
	armycar[0] = AddStaticVehicleEx(598,2779.3843,-2434.2644,13.3568,88.5203,99,1,30000); // Army police 1
	armycar[1] = AddStaticVehicleEx(598,2779.4299,-2439.7708,13.3572,88.1692,99,1,30000); // Army police 2
	armycar[2] = AddStaticVehicleEx(598,2779.1882,-2471.9214,13.3576,86.6550,99,1,30000); // Army police 3
	armycar[3] = AddStaticVehicleEx(598,2779.1497,-2477.8547,13.3590,86.9500,99,1,30000); // Army police 4
	armycar[4] = AddStaticVehicleEx(432,2791.3584,-2494.2971,13.6588,89.3376,43,0,30000); // Army tank 5
	armycar[5] = AddStaticVehicleEx(470,2792.0173,-2455.8245,14.0688,90,43,0,30000); // Army patriot 6
	armycar[6] = AddStaticVehicleEx(470,2793.1680,-2418.1855,13.6259,88.3914,-1, -1, 30000); // Patriot 7
	armycar[7] = AddStaticVehicleEx(470,2785.0979,-2417.6987,13.6273,87.4559, -1, -1, 30000); //Patriot 8
	armycar[8] = AddStaticVehicleEx(433,2781.4146,-2455.5208,14.0714,90,43,0,30000); // Army truck 9
	armycar[9] = AddStaticVehicleEx(430,2698.8132,-2311.0671,-0.2161,87.3657,-1, -1, 30000); // Army boat 10
	armycar[10] = AddStaticVehicleEx(430,2722.9766,-2311.2756,-0.3360,89.2799,-1, -1, 30000); // Army boat 11
	//-------------------------------------------------------------------------------------------
 	governcar[0] = AddStaticVehicleEx(405,1406.93,-1790.2,13.3,90, 0, 0, 30000); // Mayor security 12
	governcar[1] = AddStaticVehicleEx(405,1406.9,-1793.8,13.3,90, 0, 0, 30000); // Mayor security 13
	governcar[2] = AddStaticVehicleEx(405,1406.7,-1782.16,13.3,90, 0, 0, 30000); // Mayor security 14
	governcar[3] = AddStaticVehicleEx(409,1405.87,-1785.96,13.3,90,1,1,30000); // Mayor stretch 15
	//-------------------------------------------------------------------------------------------
	copcar[0] = AddStaticVehicleEx(599,616.1244,-601.7048,17.4214,271.5325, -1, -1, 30000); // Cop cruiser (Dillimore) 16
	vicecar[0] = AddStaticVehicleEx(426,158.4755,-1751.1315,4.6460,1.3559,0,0, 30000); // La Vice Premier 17
	vicecar[1] = AddStaticVehicleEx(426,158.3176,-1758.2914,4.4283,356.8665,0,0, 30000); // La Vice Premier 18
	copcar[1] = AddStaticVehicleEx(596,1574.4703,-1710.9795,5.6115,0.4220, -1, -1, 30000); // Cop cruiser 19
	copcar[2] = AddStaticVehicleEx(596,1587.4816,-1710.3594,5.6104,358.9421,-1, -1, 30000); // Cop cruiser 20
	copcar[3] = AddStaticVehicleEx(596,1595.6578,-1710.9442,5.6119,359.6335,0,1,30000); // Cop cruiser 21
    copcar[4] = AddStaticVehicleEx(596,1545.7845,-1684.4004,5.6342,271.1593,0,1,30000); // Cop cruiser 22
    copcar[5] = AddStaticVehicleEx(596,1558.7819,-1710.9503,5.6119,1.1862,0,1,30000); // Cop cruiser 23
    copcar[6] = AddStaticVehicleEx(596,1601.8564,-1704.1805,5.6110,88.9959,-1,-1,30000); // Cop cruiser 24
	copcar[7] = AddStaticVehicleEx(596,1600.9231,-1691.9321,5.6113,91.6221,-1,-1,30000); // Cop cruiser 25
	copcar[8] = AddStaticVehicleEx(596,1600.4153,-1687.9385,5.6118,90.7431,-1,-1,30000); // Cop cruiser 26
	copcar[9] = AddStaticVehicleEx(596,1529.6339,-1683.7720,5.6124,270.5692, -1, -1, 30000); // Cop cruiser 27
	copcar[10] = AddStaticVehicleEx(596,1529.5374,-1688.0181,5.6114,270.0886, -1, -1, 30000); // Cop cruiser 28
	copcar[11] = AddStaticVehicleEx(523,1557.9637,-1694.5964,5.4673,226.4766,-1,-1,30000); // Police moto 29
    copcar[12] = AddStaticVehicleEx(523,1557.9060,-1697.4153,5.4689,220.9842,-1,-1,30000); // Police moto 30
    copcar[13] = AddStaticVehicleEx(523,1558.1632,-1691.8335,5.4596,224.7542,-1,-1,30000); // Police moto 31
	copcar[14] = AddStaticVehicleEx(599,1584.6510,-1671.4448,6.0541,271.5708,0,1,30000); // Police ranger 32
    copcar[15] = AddStaticVehicleEx(599,1584.7875,-1667.6138,6.0592,272.0818,0,1,30000); // Police ranger 33
	copcar[16] = AddStaticVehicleEx(599,1545.3936,-1667.7957,6.0809,87.7152,-1,-1,30000); // Police ranger 34
	copcar[17] = AddStaticVehicleEx(599,1545.0044,-1671.9329,6.0791,91.5492,-1,-1,30000); // Police ranger 35
	swatcar[0] = AddStaticVehicleEx(427,1544.2870,-1659.3522,5.6119,88.5025,0,125,30000);// Police SWAT enforcer 36
	swatcar[1] = AddStaticVehicleEx(601,1544.6962,-1663.2948,6.0225,88.9357,-1,-1,30000); // Police SWAT APC 37
	copcar[18] = AddStaticVehicleEx(497,1566.6628,-1653.8688,28.5752,91.9445,0,1,30000);// Police maverick 38
	//-------------------------------------------------------------------------------------------
	tacticalcar[0] = AddStaticVehicleEx(490,1514.1959,-1478.1108,9.6270,270.0, 125, 0, 30000); // FBI rancher 39
	tacticalcar[1] = AddStaticVehicleEx(490,1514.1621,-1474.2642,9.6278,270,125,0,30000); // FBI rancher 40
	tacticalcar[2] = AddStaticVehicleEx(426,1525.4424,-1461.3640,9.2431,0,125,0,30000); // FBI elegant 41
	fbicar[0] = AddStaticVehicleEx(426,1520.8752,-1461.1650,9.2430,0,0,0,30000); // FBI elegant 42
	fbicar[1] = AddStaticVehicleEx(426,1516.1973,-1461.1393,9.2430,0,0,0,30000); // FBI elegant 43
	//-------------------------------------------------------------------------------------------
	vicecar[2] = AddStaticVehicleEx(426,153.8499,-1758.2358,4.5786,358.2814,0,0, 30000); // La Vice Premier 44
	AddStaticVehicleEx(572,2558.3201,2653.9070,10.5473,193.3834,0,0, 30000); // None 45
	AddStaticVehicleEx(572,2564.2375,2649.3052,10.5265,207.0189,0,0, 30000); // None 46
	AddStaticVehicleEx(572,2574.2048,2649.4514,10.5474,219.5219,0,0, 30000); // None 47
	AddStaticVehicleEx(572,2578.7847,2655.4546,10.5912,233.9002,0,0, 30000); // None 48
	AddStaticVehicleEx(572,2584.6228,2660.0879,10.5919,76.5837,0,0, 30000); // None 49
	AddStaticVehicleEx(572,2584.1938,2665.9053,10.5510,109.2745,0,0, 30000); // None 50
	AddStaticVehicleEx(572,2562.7419,2664.0110,10.6135,139.6290,0,0, 30000); // None 51
	//-------------------------------------------------------------------------------------------
	ambulance[0] = AddStaticVehicleEx(416,1177.35,-1339.24,13.66,269.58, -1, -1, 30000); // Ambulance 52
	ambulance[1] = AddStaticVehicleEx(416,1176.98,-1308.65,13.62,269.33, -1, -1, 30000); // Ambulance 53
	ambulance[2] = AddStaticVehicleEx(416,1189.87,-1357.14,13.21,180.78, -1, -1, 30000); // Ambulance 54
	AddStaticVehicleEx(555,2558.3201,2648.9070,10.5473,0.42, -1, -1, 30000); // Windsor
	//-------------------------------------------------------------------------------------------
	hitmencar[0] = AddStaticVehicleEx(467,1067.1295,-295.5681,73.7826,179.6040, 90, -1, 30000); // Hitman oceanic 56
	hitmencar[1] = AddStaticVehicleEx(467,1077.3829,-295.1148,73.7812,180.2754, 90, -1, 30000); // Hitman oceanic 57
	hitmencar[2] = AddStaticVehicleEx(467,1071.9189,-294.9166,73.7250,178.9444,90, -1, 30000); // Hitman oceanic 58
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(431,1172.5,-1795.5,13.1,0.0, -1, -1, 30000); // Bus 59
	AddStaticVehicleEx(431,1182.1,-1795.9,13.1,0.0, -1, -1, 30000); // Bus 60
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(409,1789.4137,-1932.6389,13.1079,357.7568,0,0,30000); // YCAT Co. Limo 61
	AddStaticVehicleEx(421,1803.6373,-1916.4673,13.1141,89.0899,0,0,30000); // YCAT Co. Washington 62
	AddStaticVehicleEx(421,1803.6617,-1925.0874,13.1319,266.7457,0,0,30000); // YCAT Co. Washington 63
	AddStaticVehicleEx(420,1800.6991,-1886.0063,13.1462,268.8892,-1,-1,30000); // YCAT Co.Taxi 64
	AddStaticVehicleEx(420,1777.9976,-1886.0128,13.1922,267.6736,-1,-1,30000); // YCAT Co. Taxi 65
	AddStaticVehicleEx(420,1803.7118,-1906.2510,13.2024,85.1059,-1,-1,30000); // YCAT Co. Taxi 66
	AddStaticVehicleEx(420,1777.3717,-1896.7965,13.1916,270.3214,-1,-1,30000); // YCAT Co. Taxi 67
	AddStaticVehicleEx(420,1796.4906,-1932.9441,13.1914,357.7162,-1,-1,30000); // YCAT Co. Taxi 68
	AddStaticVehicleEx(420,1780.8253,-1931.8109,13.1295,358.2670,-1,-1,30000); // YCAT Co. Taxi 69
	AddStaticVehicleEx(420,1777.6808,-1913.4772,13.1285,267.0958,-1,-1,30000); // YCAT Co. Taxi 70
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(582,1795.24,-1284.89,13.44,125.29,125,125,30000); // News van 71
	AddStaticVehicleEx(582,1797.18,-1291.08,13.27,108.95,125,125,30000); // News van 72
	AddStaticVehicleEx(488,1545.4849,-1353.9330,329.6510,185.4584,125,125,30000); // News Chopper 73
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(525,2078.74,-2006.38,13.25,271.64,0,0,30000); // Towcar 74
	AddStaticVehicleEx(525,2079.06,-2019.84,13.25,269.24,0,0,30000); // Towcar 75
	AddStaticVehicleEx(525,2097.83,-2006.09,13.25,44.15,0,0,30000); // Towcar 76
	AddStaticVehicleEx(525,2106.72,-2015.25,13.25,44.15,0,0,30000); // Towcar 77
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,-1,-1,30000); // kart 78
	AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,-1,-1,30000); // kart 79
	AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,-1,-1,30000); // kart 80
	AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,-1,-1,30000); // kart 81
	AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,-1,-1,30000); // kart 82
	AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,-1,-1,30000); // kart 83
	AddStaticVehicleEx(494,-1401.0436,-210.0052,1042.9913,1.6623,1,0,30000); //hotring 84
	AddStaticVehicleEx(494,-1400.4019,-219.9365,1043.0348,5.3554,1,3,30000); //hotring 85
	AddStaticVehicleEx(494,-1394.4932,-207.7917,1042.9963,3.6872,0,6,30000); //hotring 86
	AddStaticVehicleEx(494,-1393.7854,-217.9354,1043.0325,2.9556,1,2,30000); //hotring 87
	AddStaticVehicleEx(468,-1445.6392,-592.3033,1055.7831,90.2133,-1,-1,30000); //bike 88
	AddStaticVehicleEx(468,-1433.1708,-592.4930,1055.6533,92.4067,-1,-1,30000); //bike 89
	AddStaticVehicleEx(468,-1448.5325,-584.4943,1055.4949,95.5400,-1,-1,30000); //bike 90
	AddStaticVehicleEx(468,-1434.8973,-585.1266,1055.2488,91.1533,-1,-1,30000); //bike 91
	AddStaticVehicleEx(468,-1449.2814,1610.7823,1052.5313,272.9406,-1,-1,30000); // bike 92
	AddStaticVehicleEx(468,-1453.8767,1611.2418,1052.5313,89.0355,-1,-1,30000); // bike 93
	AddStaticVehicleEx(468,-1454.4746,1614.3342,1052.5313,86.8422,-1,-1,30000); // bike 94
	AddStaticVehicleEx(468,-1449.5795,1614.0684,1052.5313,269.2039,-1,-1,30000); // bike 95
	//-------------------------------------------------------------------------------------------
	surenoscar[0] = AddStaticVehicleEx(571,1452.7358,-844.5006,83.8422,179.7695,93,93,30000); // Surenos Quad 2 96
	signatracar[0] = AddStaticVehicleEx(491,1252.7358,-804.5006,83.8622,179.7695,6,6,30000); // la Famiglia Sinatra Car 97
	signatracar[1] = AddStaticVehicleEx(482,1241.3325,-814.7080,83.8642,183.2531,6,6,30000); // la Famiglia Sinatra Van 98
	signatracar[2] = AddStaticVehicleEx(429,1281.1151,-830.0188,82.8608,90.0674,6,0,30000); // la Famiglia Sinatra Sport Car 99
	surenoscar[1] = AddStaticVehicleEx(482,1819.1561,-2020.5332,13.0625,179.1689,93,93,3000); // Van Of Surenos 100
	surenoscar[2] = AddStaticVehicleEx(567,1826.7920,-2021.0032,13.0625,180.4209,93,93,3000); // Surenos Car 101
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(448,2122,-1784.1558,12.9844,0.9122,3,6,30000); // PizzaBoy 102
	AddStaticVehicleEx(448,2120,-1784.1558,12.9844,0.9122,3,6,30000); // PizzaBoy 103
	AddStaticVehicleEx(448,2118,-1784.1558,12.9844,0.9122,3,6,30000); // PizzaBoy 104
	AddStaticVehicleEx(448,2116,-1784.1558,12.9844,0.9122,3,6,30000); // PizzaBoy 105
	AddStaticVehicleEx(448,2114,-1784.1558,12.9844,0.9122,3,6,30000); // PizzaBoy 106
	AddStaticVehicleEx(448,2112,-1784.1558,12.9844,0.9122,3,6,30000); // PizzaBoy 107
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(456,2508.9116,-2111.7759,13.7206,0,-1,-1, 30000); // Component Truck Yankee 108
	AddStaticVehicleEx(456,2484.5356,-2111.7759,13.7196,0,-1,-1,30000); // Component Truck Yankee 109
	AddStaticVehicleEx(440,2529.0413,-2085.3999,13.6651,90,-1,-1,30000); // Component Truck Rumpo 110
	AddStaticVehicleEx(440,2528.9482,-2092.6104,13.6631,90,-1,-1,30000); // Component Truck Rumpo 111
	//-------------------------------------------------------------------------------------------
	rentbike[0] = AddStaticVehicleEx(461,1556.2643,-2361.6479,13.1627,6.6305,39,39,30000); // Mountain bike 112
	rentbike[1] = AddStaticVehicleEx(461,1552.8982,-2361.8359,13.1623,10.5426,16,16,30000); // Mountain bike 113
	rentbike[2] = AddStaticVehicleEx(463,1549.1460,-2362.0383,13.1626,5.5903,6,6,30000); // Mountain bike 114
	rentbike[3] = AddStaticVehicleEx(463,1546.0422,-2362.0017,13.1630,6.6997,5,5,30000); // Mountain bike 115
	rentbike[4] = AddStaticVehicleEx(581,1542.7434,-2361.9631,13.1626,15.3254,2,2,30000); // Mountain bike 116
	rentbike[5] = AddStaticVehicleEx(581,1539.4385,-2362.1431,13.1625,11.8010,43,43,30000); // Mountain bike 117
	rentbike[6] = AddStaticVehicleEx(586,1536.1389,-2362.0837,13.1626,12.2595,46,46,30000); // Mountain bike 118
	rentbike[7] = AddStaticVehicleEx(586,1532.6709,-2362.2327,13.1631,8.4654,39,39,30000); // Mountain bike 119
	rentbike[8] = AddStaticVehicleEx(468,1529.8967,-2362.2913,13.1633,3.8305,28,28,30000); // Mountain bike 120
	rentbike[9] = AddStaticVehicleEx(468,1526.7921,-2362.0647,13.1630,8.0961,16,16,30000); // Mountain bike 121
	rentbike[10] = AddStaticVehicleEx(462,1561.2104,-2338.5303,13.1464,107.7252,13,13,30000); // Faggio 122
	rentbike[11] = AddStaticVehicleEx(462,1561.0819,-2335.0010,13.1470,94.8441,14,14,30000); // Faggio 123
	rentbike[12] = AddStaticVehicleEx(462,1560.7794,-2331.9216,13.1464,96.7927,1,2,30000); // Faggio 124
	rentbike[13] = AddStaticVehicleEx(462,1560.7391,-2328.2046,13.1470,92.0937,2,1,30000); // Faggio 125
	rentbike[14] = AddStaticVehicleEx(462,1560.9022,-2325.0593,13.1462,91.0980,1,3,30000); // Faggio 126
	rentbike[15] = AddStaticVehicleEx(462,1561.0276,-2321.8657,13.1475,95.4715,3,1,30000); // Faggio 127
	rentbike[16] = AddStaticVehicleEx(462,1561.0735,-2318.5796,13.1443,97.1012,10,10,30000); // Faggio 128
	rentbike[17] =	AddStaticVehicleEx(462,1560.9514,-2315.0532,13.1465,94.5565,12,12,30000); // Faggio 129
	rentbike[18] = AddStaticVehicleEx(462,1560.8143,-2311.6104,13.1455,95.1219,13,13,30000); // Faggio 130
	//-------------------------------------------------------------------------------------------
	fdcar[0] = AddStaticVehicleEx(407,1005.7731,-1459.2805,13.6780,359.2671,-1,-1,30000); // Fire Truck Type [1] 131
	fdcar[1] = AddStaticVehicleEx(407,1013.3235,-1459.5682,13.6819,1.0221,-1,-1,30000); // Fire Truck Type [1] 132
	fdcar[2] = AddStaticVehicleEx(544,988.6091,-1453.2679,13.7752,267.6749,-1,-1,30000); // Fire Truck Type [2] 133
	vicecar[3] = AddStaticVehicleEx(426,153.8474,-1750.8491,4.7797,359.7277,0,0,30000); // La Vice Premier 134
	//-------------------------------------------------------------------------------------------
	rentcar[0] = AddStaticVehicleEx(602,1681.5526,-1035.9557,23.6389,180,123,92,30000); // Rent car 135
	rentcar[1] = AddStaticVehicleEx(602,1685.3273,-1035.4058,23.6409,180,101,101,30000); // Rent car 136
	rentcar[2] = AddStaticVehicleEx(424,1689.9888,-1035.6348,23.6384,180,83,110,30000); // Rent car 137
	rentcar[3] = AddStaticVehicleEx(424,1694.3981,-1034.7706,23.6860,180,74,74,30000); // Rent car 138
	rentcar[4] = AddStaticVehicleEx(518,1703.3409,-1044.8248,23.6857,0,91,91,30000); // Rent car 139
	rentcar[5] = AddStaticVehicleEx(518,1712.7332,-1034.9132,23.6933,180,41,41,30000); // Rent car 140
	rentcar[6] = AddStaticVehicleEx(402,1690.2993,-1044.3937,23.5577,0,10,1,30000); // Rent car 141
	rentcar[7] = AddStaticVehicleEx(402,1681.0250,-1044.6152,23.5528,0,36,1,30000); // Rent car 142
	rentcar[8] = AddStaticVehicleEx(589,1703.0122,-1035.1486,23.5598,180,45,1,30000); // Rent car 143
	rentcar[9] = AddStaticVehicleEx(589,1698.9230,-1044.6398,23.9990,0,114,114,30000); // Rent car 144
	rentcar[10] = AddStaticVehicleEx(585,1707.8655,-1035.1423,24.0034,180,95,95,30000); // Rent car 145
	rentcar[11] = AddStaticVehicleEx(585,1698.7041,-1034.9835,23.9997,180,61,61,30000); // Rent car 146
	rentcar[12] = AddStaticVehicleEx(587,1685.3434,-1044.4137,23.9994,0,119,119,30000); // Rent car 147
	rentcar[13] = AddStaticVehicleEx(587,1694.5468,-1044.4786,23.6760,0,92,1,30000); // Rent car 148
	rentcar[14] = AddStaticVehicleEx(565,1707.9614,-1044.8055,23.6739,0,109,1,30000); // Rent car 149
	rentcar[15] = AddStaticVehicleEx(565,1712.5034,-1044.1735,23.6731,0,11,1,30000); // Rent car 150
	rentcar[16] = AddStaticVehicleEx(579,1709.2091,-1061.1398,23.7847,180,109,1,30000); // Rent car 151
	rentcar[17] = AddStaticVehicleEx(579,1700.3168,-1060.6760,23.7848,180,4,1,30000); // Rent car 152
	rentcar[18] = AddStaticVehicleEx(400,1717.9724,-1069.8695,23.7848,0,30,1,30000); // Rent car 153
	rentcar[19] = AddStaticVehicleEx(400,1691.3545,-1069.6636,23.7849,0,91,1,30000); // Rent car 154
	//-------------------------------------------------------------------------------------------
	harvest[0] = AddStaticVehicleEx(532,-387.4058,-1476.6927,26.7035,265.6719,0,0,30000); // Harvest 155
	harvest[1] = AddStaticVehicleEx(532,-382.8609,-1465.2964,26.7162,262.4081,0,0,30000); // Harvest 156
	harvest[2] = AddStaticVehicleEx(532,-392.8095,-1487.2607,26.3314,268.0157,0,0,30000); // Harvest 157
	harvest[3] = AddStaticVehicleEx(532,-399.6307,-1500.4774,25.4502,265.1973,0,0,30000); // Harvest 158
	//-------------------------------------------------------------------------------------------
	drugharvest[0] = AddStaticVehicleEx(532,-54.1143,86.1869,4.0927,246.1964,16,0,30000); // Drug harvest 159
	drugharvest[1] =AddStaticVehicleEx(532,-39.0122,-19.7210,4.0923,66.2487,16,0,30000); // Drug harvest 160
	drugharvest[2] =AddStaticVehicleEx(532,-34.2867,-9.5510,4.0883,62.7305,16,0,30000); // Drug harvest 161
	drugharvest[3] =AddStaticVehicleEx(532,-83.7403,-17.7843,4.0917,340.3535,16,0,30000); // Drug harvest 162
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(442,1097.7876,-1327.8087,13.1820,2.3556,3,13,30000); // Drugs smuggler car 163
	AddStaticVehicleEx(442,1110.4362,-1327.9688,13.1654,1.1852,3,13,30000); // Drugs smuggler car 164
	AddStaticVehicleEx(442,1123.7722,-1327.3230,13.2222,359.7142,3,13,30000); // Drugs smuggler car 165
	//-------------------------------------------------------------------------------------------
	surenoscar[3] = AddStaticVehicleEx(567,1826.8661,-2031.1033,13.0625,180.4212,93,93,30000); // Surenos Car 2 166
	//-------------------------------------------------------------------------------------------
	surenoscar[4] = AddStaticVehicleEx(471,1806.3488,-2009.0200,13.2220,89.1721,93,93,30000); // Surenos Quad 167
	//-------------------------------------------------------------------------------------------
	governcar[4] = AddStaticVehicleEx(487,1902.4270,-2628.4958,13.7092,62.7501,0,0,30000); // Government Helicopter 168
	//-------------------------------------------------------------------------------------------
	AddStaticVehicleEx(574,1668.6692,-1896.1118,13.2720,268.0269,26,26,30000); // Street sweeper 169
	AddStaticVehicleEx(574,1668.7383,-1891.4990,13.2720,270.7320,26,26,30000); // Street sweeper 170
	AddStaticVehicleEx(574,1668.7280,-1886.8180,13.2720,268.9658,26,26,30000); // Street sweeper 171
	//-------------------------------------------------------------------------------------------
	yamaguchicar[0] = AddStaticVehicleEx(409,660.0489,-1283.0696,13.3435,358.8616,3,0,30000); // Yamaguchi Limo
	yamaguchicar[1] = AddStaticVehicleEx(477,677.2945,-1303.7924,13.3813,89.0855,3,0,30000); // Yamaguchi ZR-350
	yamaguchicar[2] = AddStaticVehicleEx(560,677.8538,-1297.9611,13.3237,88.4905,3,0,30000); // Yamaguchi Sultan 1
	yamaguchicar[3] = AddStaticVehicleEx(560,670.5880,-1283.5927,13.2531,0.1076,3,0,30000); // Yamaguchi Sultan 2
	yamaguchicar[4] = AddStaticVehicleEx(541,660.3167,-1266.7985,13.1698,0.9612,3,0,30000); // Yamaguchi Bullet 1
	yamaguchicar[5] = AddStaticVehicleEx(541,660.1972,-1261.0837,13.1716,1.2979,3,0,30000); // Yamaguchi Bullet 2
	yamaguchicar[6] = AddStaticVehicleEx(521,672.7811,-1265.8210,13.2048,88.7814,3,3,30000); // Yamaguchi FCR-300 1
	yamaguchicar[7] = AddStaticVehicleEx(521,672.7515,-1267.3486,13.2139,89.9569,3,0,30000); // Yamaguchi FCR-300 2
	yamaguchicar[8] = AddStaticVehicleEx(521,672.7234,-1269.0427,13.2050,91.2190,3,3,30000); // Yamaguchi FCR-300 3
	yamaguchicar[9] = AddStaticVehicleEx(521,672.6326,-1270.8228,13.2140,91.7205,3,0,30000); // Yamaguchi FCR-300 4
	yamaguchicar[10] = AddStaticVehicleEx(428,674.4381,-1244.4094,14.7676,320.7266,3,0,30000); // Yamaguchi Securicar
	yamaguchicar[11] = AddStaticVehicleEx(572,736.1734,-1246.8975,13.1329,359.9393,3,0,30000); // Yamaguchi Mower
	yamaguchicar[12] = AddStaticVehicleEx(487,766.1458,-1212.9816,13.7234,90.1444,3,0,30000); // Yamaguchi Helicopter
	bratvacar[0] = AddStaticVehicleEx(521,1240.7253,-2033.0615,59.5460,270.7889,0,0,30000); // Bratva Bike 178
	bratvacar[1] = AddStaticVehicleEx(521,1240.3286,-2031.1663,59.5317,268.5302,0,0,30000); // Bratva Bike 2 179
	bratvacar[2] = AddStaticVehicleEx(545,1244.0236,-2022.7377,59.6055,180.3637,1,115,30000); // Bratva Boss Car 180
	bratvacar[3] = AddStaticVehicleEx(411,1276.6550,-2044.6598,58.7636,269.1467,1,1,30000); // Bratva Car 1 181
	bratvacar[4] = AddStaticVehicleEx(560,1276.8871,-2041.3832,58.7481,269.5363,0,0,30000); // Bratva Car 2 182
	bratvacar[5] = AddStaticVehicleEx(560,1276.8864,-2037.7959,58.7351,268.8126,0,0,30000); // Bratva Car 3 183
 //-------------------------------------------------------------------------------------------

	LinkVehicleToInterior(84, 7);
	LinkVehicleToInterior(85, 7);
	LinkVehicleToInterior(86, 7);
	LinkVehicleToInterior(87, 7);
	LinkVehicleToInterior(88, 4);
	LinkVehicleToInterior(89, 4);
	LinkVehicleToInterior(90, 4);
	LinkVehicleToInterior(91, 4);
	LinkVehicleToInterior(92, 14);
	LinkVehicleToInterior(93, 14);
	LinkVehicleToInterior(94, 14);
	LinkVehicleToInterior(95, 14);
	LinkVehicleToInterior(96, 14);

	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    if(HouseInfo[h][hSetted] == 1)
	    {
			if(HouseInfo[h][hOwned] == 0)
			{
			    if(HouseInfo[h][hSetted] == 1)
			    {
	 		    	format(PropertyString,sizeof(PropertyString),"¥À∑øŒ›…–Œﬁ“µ÷˜! \n ∑ø≤˙±‡∫≈: %d \n ≥ˆ €º€∏Ò: $%d \n ∑øŒ›√Ë ˆ: %s \n π∫¬Úµ»º∂–Ë«Û: %d",HouseInfo[h][hWorld], HouseInfo[h][hValue],HouseInfo[h][hDiscription], HouseInfo[h][hLevel]);
					HouseLabel[h] = Create3DTextLabel(PropertyString ,0x00FF00AA,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, 0, 1);
					HousePickup[h] = CreateDynamicPickup(1273, 1, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
				}
			}
			else if(HouseInfo[h][hOwned] == 1)
			{
				format(PropertyString,sizeof(PropertyString),"%s \n “µ÷˜: %s \n ∑ø≤˙±‡∫≈: %d \n ≥ˆ◊‚º€∏Ò: $%d \n ∑øŒ›√Ë ˆ: %s \n »ÙœÎ◊‚”√«Î‘⁄’‚¿Ô ‰»Î/rentroom",HouseInfo[h][hMessage],HouseInfo[h][hOwner],HouseInfo[h][hWorld], HouseInfo[h][hRent], HouseInfo[h][hDiscription]);
				HouseLabel[h] = Create3DTextLabel(PropertyString ,0x00FFFFAA,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],25, 0, 1);
				HousePickup[h] = CreateDynamicPickup(1272, 1, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			}
		}
	}
 	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
	    if(BizzInfo[h][bSetted] == 1)
	    {
			if(BizzInfo[h][bOwned] == 0)
			{
			    format(PropertyString,sizeof(PropertyString),"¥À≤˙“µ…–Œﬁ“µ÷˜! \n %s \n ≤˙“µ±‡∫≈: %d \n ≥ˆ €º€∏Ò: $%d \n π∫¬Úµ»º∂–Ë«Û: %d \n »Áπ˚œÎπ∫¬Ú’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F00FF0}/buybiz",BizzInfo[h][bMessage], BizzInfo[h][bVirWorld], BizzInfo[h][bBuyPrice], BizzInfo[h][bLevelNeeded]);
				BizzLabel[h] = Create3DTextLabel(PropertyString ,0x00FF00AA,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],50, 0, 1);
			}
			else if(BizzInfo[h][bOwned] == 1)
			{
				format(PropertyString,sizeof(PropertyString),"%s \n “µ÷˜: %s \n ≤˙“µ±‡∫≈: %d \n ¿’À˜: %s \n √≈∑—: $%d. \n »Áπ˚œÎΩ¯»Î’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F000F0}/enter",BizzInfo[h][bMessage],BizzInfo[h][bOwner], BizzInfo[h][bVirWorld], BizzInfo[h][bExtortion], BizzInfo[h][bEntranceCost]);
				BizzLabel[h] = Create3DTextLabel(PropertyString ,0x00FFFFAA,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],50, 0, 1);
			}
			BizzPickup[h] = CreateDynamicPickup(1274,1,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0)
		{
			format(PropertyString,sizeof(PropertyString),"S¥À≤˙“µ…–Œﬁ“µ÷˜! \n %s \n ≥ˆ €º€∏Ò: $%d \n π∫¬Úµ»º∂–Ë«Û: %d \n »Áπ˚œÎπ∫¬Ú’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F00FF0}/buybiz",SBizzInfo[h][sbMessage], SBizzInfo[h][sbBuyPrice], SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(PropertyString ,0x00FF00AA,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],30, 0, 1);
		}
		else if(SBizzInfo[h][sbOwned] == 1)
		{
			format(PropertyString,sizeof(PropertyString),"%s \n “µ÷˜: %s \n ¿’À˜: %s \n √≈∑—: $%d. \n  »Áπ˚œÎΩ¯»Î’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F000F0}/enter",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], BizzInfo[h][bEntranceCost]);
			SBizzLabel[h] = Create3DTextLabel(PropertyString ,0x00FFFFAA,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],30, 0, 1);
		}
	}
	for(new i = 0; i < sizeof(BurgerDriveIn); i++)
	{
	    BurgerPickUp[i] = CreateDynamicPickup(1239, 23, BurgerDriveIn[i][0], BurgerDriveIn[i][1], BurgerDriveIn[i][2], 0);
		pickups++;
	}
 	for(new i = 0; i < sizeof(ChickenDriveIn); i++)
	{
	    ChickenPickUp[i] = CreateDynamicPickup(1239, 23, ChickenDriveIn[i][0], ChickenDriveIn[i][1], ChickenDriveIn[i][2], 0);
		pickups++;
	}
	for(new h = 0; h < sizeof(InfoPickups); h++)
	{
		Create3DTextLabel("{F0FFF0}∞¥{FFFFF0}[{F0000F}ø’∏Òº¸ªÚ÷˙≈‹º¸{FFFFF0}]\n{F0FFF0}ªÒ»°Ã· æ–≈œ¢",0x008080AA, InfoPickups[h][0],InfoPickups[h][1],InfoPickups[h][2], 5,0,1);
	}
 //-----------------------------------------------------------------------------------------------------------------------------------
	CreateDynamicPickup(1239, 1, -792.9693,500.5572,1367.3672,0);//∑˛ŒÒ‘± uniform list
	CreateDynamicPickup(1239, 1, -779.3134,497.8989,1371.7490,0);//∑˛ŒÒ‘± uniform list 2
	CreateDynamicPickup(1314, 1, 1173.2563,-1323.3102,15.3943,0); //Hospital 1 near Ammu
	Create3DTextLabel("[ –÷––ƒ“Ω‘∫] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1173.2563,-1323.3102,15.394, 20,0,1);
	CreateDynamicPickup(1314, 1, 2029.5945,-1404.6426,17.2512,0); //Hospital 2 near speedway
	Create3DTextLabel("[∫Õ–≥“Ω‘∫] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 2029.5945,-1404.6426,17.2512, 20,0,1);
	CreateDynamicPickup(1239, 1, 253.9280,69.6094,1003.6406,0); //Clear icon in Police Station
	CreateDynamicPickup(1314, 1, 1481.0206,-1771.1138,18.7958,0); // –’˛Ã¸
	Create3DTextLabel("[ –’˛Ã¸] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1481.0206,-1771.1138,18.7958, 20,0,1);
	CreateDynamicPickup(1239, 1, 1215.1304,-11.8431,1000.9219,0); //Whore Registration
	CreateDynamicPickup(1239, 1, 1793.02,-1296.56,13.44,0); //[/paper] paper boy + news reporter
	CreateDynamicPickup(1239, 1, 1488.6949,-1721.7136,8.2067,0); //Black Market
	CreateDynamicPickup(1239, 1, 1381.0413,-1088.8511,27.3906,0); //Bill Board (old Job Department)
	CreateDynamicPickup(1239, 1, 1073.0619,-344.5148,73.9922,0); //…± ÷ª˙ππ entrance
	Create3DTextLabel("[…± ÷ª˙ππ] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1073.0619,-344.5148,73.9922, 20,0,1);
	CreateDynamicPickup(371, 1, 1544.2,-1353.4,329.4); //LS towertop
	CreateDynamicPickup(371, 1, 1536.0, -1360.0, 1150.0); //LS towertop
	CreateDynamicPickup(1242, 1, 1527.5,-12.1,1002.0,0); // binco armor
	CreateDynamicPickup(1240, 1, 279.3000,1853.5619,8.7649,0); // area51 health
	CreateDynamicPickup(1239, 1, 1174.9100,-1365.7330,13.9876,0); // Elevator 1
	CreateDynamicPickup(1239, 1, 1174.9591,-1369.8761,23.9736,0); // Elevator 2
	CreateDynamicPickup(1239, 1, 2807.6807,-1174.5410,1025.5703,0);
	CreateDynamicPickup(1239, 1, 379.1396,-114.2661,1001.4922,0); // Pizza Pickup
	CreateDynamicPickup(1240, 1, 263.1702,76.4346,1001.0391,0); // Jail health
	CreateDynamicPickup(1239, 1, 359.6820,207.0294,1008.3828,0); // AD
	CreateDynamicPickup(1239, 1, -382.6660,-1426.5121,26.2410,0); // ≈©√Ò job pickup
	CreateDynamicPickup(1239, 1, -38.8664,56.3031,3.1172,0); // Drugs for smugglers
    CreateDynamicPickup(1239, 1, 2022.1492,-1108.7837,26.2031,0); // ∂æ∆∑◊ﬂÀΩ∑∑ pickup
    CreateDynamicPickup(1239, 1, 2072.5486,-1582.8029,13.4741,0); // ∂æ∑∑ reg
    CreateDynamicPickup(1239, 1, 213.8549,-230.5761,1.7786,0); // ≤ƒ¡œ◊ﬂÀΩ∑∑ reg
    CreateDynamicPickup(1239, 1, -86.1251,2.6412,3.1172,0); // ∂æ∆∑÷÷÷≤…Ã reg
    CreateDynamicPickup(1239, 1, 358.2374,161.3243,1008.3828,0); // Passport Test
    CreateDynamicPickup(1239, 1, 2137.6624,-2282.3455,20.6719,0); // Œ‰∆˜÷∆‘Ï…Ã reg
	// Entrances and exits start
	CreateDynamicPickup(1314, 1, 1154.0857,-1770.9600,16.5992,0);//π˙∑¿≤ø
	Create3DTextLabel("[π˙∑¿≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1154.0857,-1770.9600,16.5992, 20,0,1);
	CreateDynamicPickup(1314, 1, 1554.9537,-1675.6584,16.1953,0);//PD Building
	Create3DTextLabel("[æØ≤Ïæ÷] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1554.9537,-1675.6584,16.1953, 20,0,1);
    CreateDynamicPickup(1314, 1, 1462.1191,-1013.2958,26.8438,0);//Bank Enter
	Create3DTextLabel("[“¯––] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1462.1191,-1013.2958,26.8438, 20,0,1);
    CreateDynamicPickup(1239, 1, 2305.3479,-16.1179,26.7496,0);//Bank Exit
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 2305.3479,-16.1179,26.7496, 20,0,1);
	CreateDynamicPickup(1314, 1, 616.7385,-1542.1398,15.3345, 0); // Fireman Entrance
	Create3DTextLabel("[œ˚∑¿¥Û∂”] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 616.7385,-1542.1398,15.3345, 20,0,1);
    CreateDynamicPickup(1314, 1, 2812.3806,-1163.9534,1029.1719, 0); // Firemen Roof inside
	Create3DTextLabel("[Œ›∂•] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 2812.3806,-1163.9534,1029.1719, 20,0,1);
	CreateDynamicPickup(1314, 1, 571.4652,-1522.2427,30.8906, 0); // Firemen Roof Outside
	Create3DTextLabel("[œ˚∑¿¥Û∂”] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 571.4652,-1522.2427,30.8906, 20,0,1);
	CreateDynamicPickup(1314, 1, 1298.7075,-798.5981,84.1406,0);//¬Ûµ¬¡÷∞Ô ◊‹≤ø
	Create3DTextLabel("[¬Ûµ¬¡÷∞Ô ◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1298.7075,-798.5981,84.1406, 20,0,1);
	CreateDynamicPickup(1314, 1, 1518.5179,-1452.9224,14.2031,0);//FBI
	Create3DTextLabel("[¡™∞Óµ˜≤Èæ÷◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1518.5179,-1452.9224,14.2031, 20,0,1);
    CreateDynamicPickup(1314, 1, 1540.3314,-1484.3126,13.5493,0);//FBI
	Create3DTextLabel("[¡™∞Óµ˜≤Èæ÷◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1540.3314,-1484.3126,13.5493, 20,0,1);
	CreateDynamicPickup(1239, 1, 349.5560,161.6693,1019.9912,0); //Heal me
	//CreateDynamicPickup(1239, 1, 1505.2416,-1694.5597,14.0469,0); //Map icon
	CreateDynamicPickup(1314, 1, 1828.1594,-1980.4380,13.5469,0); //»˝∫œª· ◊‹≤ø
	Create3DTextLabel("[»˝∫œª· ◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1828.1594,-1980.4380,13.5469, 20,0,1);
	CreateDynamicPickup(1239, 1, 1817.6517,-1294.2751,109.2697,0); // π„≤•π´Àæ exit
	Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 1817.6517,-1294.2751,109.2697, 20,0,1);
	CreateDynamicPickup(1314, 1, 681.6054,-473.7628,16.5363,0); //√¿π˙”ÃÃ´∞Ô enter
	Create3DTextLabel("[√¿π˙”ÃÃ´∞Ô ◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 681.6054,-473.7628,16.53639, 20,0,1);
	CreateDynamicPickup(1239, 1, 681.5295,-450.8412,-25.6172,0); //√¿π˙”ÃÃ´∞Ô exit
	Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 681.5295,-450.8412,-25.6172, 20,0,1);
	CreateDynamicPickup(1314, 1, 1784.58,-1297.52,13.37,0); //π„≤•π´Àæ
	Create3DTextLabel("[π„≤•π´Àæ] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1784.58,-1297.52,13.37, 20,0,1);
	CreateDynamicPickup(1314, 1, 1752.8452,-1894.1328,13.5573,0); //LA ≥ˆ◊‚≥µπ´Àæ
	Create3DTextLabel("[≥ˆ◊‚≥µπ´Àæ] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1752.8452,-1894.1328,13.5573, 20,0,1);
	CreateDynamicPickup(1239, 1, 168.2048,-1769.3395,4.4728,0); //¿≠∏±◊‹≤ø
	Create3DTextLabel("[¿≠∏±◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 168.2048,-1769.3395,4.4728, 20,0,1);
	CreateDynamicPickup(1314, 1, 2045.3928,-1908.0372,13.4869,0); //DMW
	Create3DTextLabel("[÷¥’’÷––ƒ] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA,  2045.3928,-1908.0372,13.4869, 20,0,1);
	CreateDynamicPickup(1239, 1, 242.7591,66.4315,1003.6406,0); // Inside PD elevator
	CreateDynamicPickup(1239, 1, 1570.3828,-1333.8882,16.4844,0); // Building next ABC
	CreateDynamicPickup(1314, 1, 691.5770,-1276.0026,13.5607,0); // …Ωø⁄◊È◊‹≤ø
	Create3DTextLabel("[…Ωø⁄◊È◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 691.5770,-1276.0026,13.5607, 20,0,1);
	CreateDynamicPickup(1314, 1, 1122.7406,-2037.0421,69.8942,0); // ¥Û»¶∞Ô ◊‹≤ø
	Create3DTextLabel("[¥Û»¶∞Ô ◊‹≤ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 1122.7406,-2037.0421,69.8942, 20,0,1);
	// Entrances and exits ends
    CreateDynamicPickup(1314, 2, 2073.2979,-1831.1228,13.5469,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
    Create3DTextLabel("[–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]]",0xFFFF00AA, 2073.2979,-1831.1228,13.5469, 20,0,1);
    CreateDynamicPickup(1314, 2, 1024.9756,-1030.7930,32.0257,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
    Create3DTextLabel("[–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]]",0xFFFF00AA, 1024.9756,-1030.7930,32.0257, 20,0,1);
   	CreateDynamicPickup(1314, 1,1099.3762,1601.5387,12.5469,0); // DD
   	Create3DTextLabel("[ªŸ√¥Û»¸≥µ]",0xFFFF00AA, 1099.3762,1601.5387,12.5469, 20,0,1);
	CreateDynamicPickup(1314, 1,-1423.8018,934.8103,1036.4380,0); // DD
    CreateDynamicPickup(1239, 1, 488.3819,-1733.0563,11.1752,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
    Create3DTextLabel("[–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]]",0xFFFF00AA, 488.3819,-1733.0563,11.1752, 20,0,1);
    CreateDynamicPickup(1239, 1, 719.8940,-464.8272,16.3359,0); // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
    Create3DTextLabel("[–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]]",0xFFFF00AA, 719.8940,-464.8272,16.3359, 20,0,1);
    CreateDynamicPickup(1239, 1, 242.7591,66.4315,1003.6406,0); // Inside PD elevator
    CreateDynamicPickup(1239, 1, 1524.5724,-1677.8043,6.2188,0); // PD Tunnel
    CreateDynamicPickup(1239, 1, 1557.7257,-1675.2711,28.3955,0); // PD roof
    CreateDynamicPickup(1254, 1, 248.4994,-33.1366,1.5781,0); // Materi«¿æ»“Ω¡∆∑˛ŒÒpickup
    CreateDynamicPickup(1254, 1, 2230.3579,-2286.2107,14.3751,0); // Materials bank
    CreateDynamicPickup(1279, 1, 523.6057,-1812.9794,6.5713,0); // Get Drugs Pickup
    CreateDynamicPickup(1279, 1, 1424.1729,-1317.9955,13.5547,0); // Get Drugs Pickup 2
    CreateDynamicPickup(1239, 1, 362.1231,173.6424,1008.3828,0); // Legal Job Menu
    CreateDynamicPickup(1239, 1, 1490.3195,1305.6976,1093.2964,0); // Licenses Menu
    Create3DTextLabel("[÷¥’’]",0x00FF0088, 1490.3195,1305.6976,1093.2964, 20,0,1);
    CreateDynamicPickup(1239, 1, 249.8574,67.8508,1003.6406,0); // Weapon Licenses Buyable
    CreateDynamicPickup(1247, 1, 223.6328,186.8251,1003.0313,0); // FBI Duty Room
    Create3DTextLabel("[…œ∞‡µ„]\n  π”√/duty…œ∞‡",0x0000FF88, 223.6328,186.8251,1003.0313, 20, 0, 1);
    CreateDynamicPickup(1247, 1, 255.3,77.4,1003.6,0); // æØ≤Ï Duty Area
    Create3DTextLabel("[…œ∞‡µ„]\n  π”√/duty…œ∞‡",0x0000FF88, 255.3,77.4,1003.6, 20, 0, 1);
    CreateDynamicPickup(1314, 1, 2730.4297,-2451.5000,17.5937, 0); // Army Entrance
    Create3DTextLabel("[æ¸∂””™∑ø] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 2730.4297,-2451.5000,17.5937, 20, 0,1);
    CreateDynamicPickup(1239, 1, 246.7823,107.8988,1003.2188, 0); // Army Exit
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 246.7823,107.8988,1003.2188, 20,0,1);
    CreateDynamicPickup(1247, 1, 233.4989,123.6518,1003.2188, 0); // Duty & Equip Area
    Create3DTextLabel("[…œ∞‡µ„]\n  π”√/duty…œ∞‡",0xFFFF00AA, 233.4989,123.6518,1003.2188, 20, 0, 1);
    CreateDynamicPickup(1240, 1, 2811.7837,-1167.3248,1025.5703, 0); // Duty & Equip Area Firemen
    Create3DTextLabel("[œ˚∑¿‘±¥¢ŒÔπÒ]",0xFF000088, 2811.7837,-1167.3248,1025.5703, 20, 0, 1);
	CreateDynamicPickup(1276, 1, 478.0687,-1498.9708,20.4831,0); // RPC entrance
	Create3DTextLabel("[≥£øÕ–›œ¢ “] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 478.0687,-1498.9708,20.4831, 20, 0,1);
    CreateDynamicPickup(1239, 1, -2636.8042,1402.9908,906.4609,20); // RPC Exit
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, -2636.8042,1402.9908,906.4609, 20,0,1);
    rpc_parachute = CreateDynamicPickup(1310, 1, -2675.9597,1430.5798,906.9243,20); // Parachute RPC
    rpc_money = CreateDynamicPickup(1212, 1,-2654.3760,1429.2019,906.4609,20); // Money
    rpc_armor = CreateDynamicPickup(373, 1, -2660.9236,1429.4716,906.4609,20); // Armor RPC
    tall_death = CreateDynamicPickup(1254, 2, 1551.9875,-1337.7058,330.0601,0); // Death!
	CreateDynamicPickup(1318, 1, 1494.3761,-1467.0068,40.5234,0); // FBI Elevator
    CreateDynamicPickup(1318, 1, 231.4331,140.4850,1003.0234,0); // FBI Elevator
    CreateDynamicPickup(1318, 1, 1510.6852,-1458.0654,9.5000,0); // FBI Elevator
    CreateDynamicPickup(1239, 1, 288.7287,167.0377,1007.1719,0); // FBI Exit
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 288.7287,167.0377,1007.1719, 20, 0,1);
    CreateDynamicPickup(1239, 1, 238.3001,138.9406,1003.0234,0); // FBI Exit 2
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 238.3001,138.9406,1003.0234, 20, 0,1);
    CreateDynamicPickup(1239, 1, 246.5325,62.4251,1003.6406,0); // æØ≤Ï Exit
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}¿Îø™’‚¿Ô",0xFFFF00AA, 246.5325,62.4251,1003.6406, 20, 0,1);
    CreateDynamicPickup(1313, 1, 255.4480,85.8236,1002.4453,0); // æØ≤Ï Arrest Place
    Create3DTextLabel("[æØ≤Ïº‡”¸] \n /arrest",0x0000FF66, 255.4480,85.8236,1002.4453, 20, 0, 1);
    CreateDynamicPickup(1313, 1, 201.0256,168.3393,1003.0234,0); // FBI Arrest Place
    Create3DTextLabel("[FBIº‡”¸] \n /farrest",0x0000FF66, 201.0256,168.3393,1003.0234, 20, 0, 1);
    CreateDynamicPickup(1313, 1, 222.2311,121.3434,999.0239,0); // Army Arrest Place
    Create3DTextLabel("[æ¸∂”º‡”¸] \n /sarrest",0x0000FF66, 222.2311,121.3434,999.0239, 20, 0, 1);
    CreateDynamicPickup(1240, 1, 1222.1793,-1246.3489,1287.8243,0); // Medic Lockers
    Create3DTextLabel("[“Ω‘∫¥¢ŒÔπÒ]",0xFF000066, 1222.1793,-1246.3489,1287.8243, 20, 0,1);
    CreateDynamicPickup(1273, 1, 25.1811,1968.5167,17.6406,0); // Andromeda, Prison > LS
    Create3DTextLabel("[º‡”¸∫Ωø’π´Àæ] \n /flyls.",0xFFFF00AA, 25.1811,1968.5167,17.6406, 20, 0,1);
    CreateDynamicPickup(346, 1, 306.2120,-141.8780,1004.0625,0); // Ammu Train Enter
    Create3DTextLabel("[Œ‰∆˜≈‡—µ “] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 306.2120,-141.8780,1004.0625, 20, 17,1);
    CreateDynamicPickup(1239, 1, 304.2120,-141.8780,1004.0547,0); // Ammu Train Exit
    Create3DTextLabel("[≥ˆø⁄] \n {F0FF00}«Î∞¥{F0FFFF} [{F0000F}…œ≥µº¸{F0FFFF} ]{F0FF00}Ω¯»Î’‚¿Ô",0xFFFF00AA, 304.2120,-141.8780,1004.0547, 20, 0,1);
    Para1 = CreateDynamicPickup(1310, 1, 1685.9310,-2239.2971,-2.7028,0); // LS AP
    Create3DTextLabel("[¬Â…ºÌ∂…£Õ–Àπª˙≥°]",0xFFFF00AA, 1685.9310,-2239.2971,-2.7028, 20, 0,1);
    Para2 = CreateDynamicPickup(1310, 1, -1421.7410,-287.9273,14.1484,0); // SF AP
    Create3DTextLabel("[ •∑∆“Æ¬ﬁª˙≥°]",0xFFFF00AA, -1421.7410,-287.9273,14.1484, 20, 0,1);
    Para3 = CreateDynamicPickup(1310, 1, 1675.3717,1447.8632,10.7876,0); // LV AP
    Create3DTextLabel("[¿≠ÀπŒ¨º”Àπª˙≥°]",0xFFFF00AA, 1675.3717,1447.8632,10.7876, 20, 0,1);
    Para4 = CreateDynamicPickup(1310, 1, 422.3126,2508.9063,16.4844,0); // AP AP
    Create3DTextLabel("[∑œ∆˙ª˙≥°]",0xFFFF00AA, 422.3126,2508.9063,16.4844, 20, 0,1);
    Create3DTextLabel("[—µ¡∑µ„]",0xFFFFFFAA, 300.5705,-134.0464,1004.0625, 20, 17, 1);
	Create3DTextLabel("[Ω°…Ì∑ø—µ¡∑µ„] \n /train",0xFFFFFFAA, 767.2731,14.1037,1000.7003, 20, 14, 1);
	CreateDynamicPickup(1239, 1, 358.3578,167.7956,1008.3828, 0);
	Create3DTextLabel("[∏ƒ√˚¥¶] \n  π”√/changename∏ƒ√˚",0x00FF00AA, 358.3578,167.7956,1008.3828, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 358.5919,184.2908,1008.3828, 0);
    Create3DTextLabel("[ –’˛Ã¸«¿ΩŸµ„] \n /robcityhall",0x00FF00AA, 358.5919,184.2908,1008.3828, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 499.6341,-20.3592,1000.6797);
    Create3DTextLabel("[∞¢¿º≤º¿≠æ∆∞…«¿ΩŸµ„] \n /robalhambra",0x00FF00AA, 499.6341,-20.3592,1000.6797, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 756.5454,5.4325,1000.6992);
    Create3DTextLabel("[Ω°…Ì∑ø«¿ΩŸµ„] \n /robgym",0x00FF00AA, 756.5454,5.4325,1000.6992, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 492.0305,-82.4695,998.7578);
    Create3DTextLabel("[æ∆∞…«¿ΩŸµ„] \n /robbar",0x00FF00AA, 492.0305,-82.4695,998.7578, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 2309.6060,-4.0211,26.7422);
    Create3DTextLabel("[“¯––«¿ΩŸµ„] \n /robbank",0x00FF00AA, 2309.6060,-4.0211,26.7422, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 379.1978,-184.1220,1000.6328);
    Create3DTextLabel("[ÃÃ»¶µ„«¿ΩŸµ„] \n /robdonut",0x00FF00AA, 379.1978,-184.1220,1000.6328, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 371.7011,-6.2796,1001.8589);
    Create3DTextLabel("[øÏ≤ÕµÍ«¿ΩŸµ„] \n /robcluckin",0x00FF00AA, 371.7011,-6.2796,1001.8589, 15, 2, 1);
    Create3DTextLabel("[øÏ≤ÕµÍ«¿ΩŸµ„] \n /robcluckin",0x00FF00AA, 371.7011,-6.2796,1001.8589, 15, 1, 1);
    CreateDynamicPickup(1239, 1, 373.8943,-67.4481,1001.5078);
    Create3DTextLabel("[∫∫±§µÍ«¿ΩŸµ„] \n /robburger",0x00FF00AA, 373.8943,-67.4481,1001.5078, 15, 2, 1);
    Create3DTextLabel("[∫∫±§µÍ«¿ΩŸµ„] \n /robburger",0x00FF00AA, 373.8943,-67.4481,1001.5078, 15, 1, 1);
    CreateDynamicPickup(1239, 1, 373.6143,-118.8086,1001.4922);
    Create3DTextLabel("[±ÿ §øÕ«¿ΩŸµ„] \n /robpizza",0x00FF00AA, 373.6143,-118.8086,1001.4922, 15, 0, 1);
    CreateDynamicPickup(1239, 1, 358.2500,180.3491,1008.3828);
    CreateDynamicPickup(1239, 1, 358.2368,165.3652,1008.3828);
 /*
	Create3DTextLabel("[ ‘“¬∑˛¥¶] \n {F0FF00} π”√:/clothes  ‘“¬∑˛",0xFFFF00AA, 20.5627,-103.7291,1005.2578, 15, 16, 1);
	CreateDynamicPickup(1239, 1, 20.5627,-103.7291,1005.2578,16,15);
  	Create3DTextLabel("[ ‘“¬∑˛¥¶] \n {F0FF00} π”√:/clothes  ‘“¬∑˛",0xFFFF00AA, 203.9068,-41.0728,1001.8047, 15, 16, 1);
	CreateDynamicPickup(1239, 1, 203.9068,-41.0728,1001.8047,16,15);
 	Create3DTextLabel("[ ‘“¬∑˛¥¶] \n {F0FF00} π”√:/clothes  ‘“¬∑˛",0xFFFF00AA, 214.4470,-7.6471,1001.2109, 15, 16, 1);
	CreateDynamicPickup(1239, 1, 214.4470,-7.6471,1001.2109,16,15);
 	Create3DTextLabel("[ ‘“¬∑˛¥¶] \n {F0FF00} π”√:/clothes  ‘“¬∑˛",0xFFFF00AA, 161.3765,-83.8416,1001.8047, 15, 16, 1);
	CreateDynamicPickup(1239, 1, 161.3765,-83.8416,1001.8047,16,15);
*/
	printf("[Ω≈±æ]: ‘ÿ»Î %d ∂ØÃ¨¡¢ÃÂÕº±Í", CountDynamicPickups());
 	new randa = random(sizeof(RandCars));
	randa = random(sizeof(RandCars));carselect[0] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[1] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[2] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[3] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[4] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[5] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[6] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[7] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[8] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[9] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[10] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[11] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[12] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[13] = RandCars[randa][0];
	randa = random(sizeof(RandLCars));carselect[14] = RandLCars[randa][0];
//	AddStaticVehicleEx(carselect[14], 1279.4,-1337.0,13.5,1.0,-1, -1, -1);//long
/*    AddStaticVehicleEx(525,1927.0195,-1794.9001,13.2630,90.8044,0,6,30000); // GS9 Towtruck 1
	AddStaticVehicleEx(525,1919.1304,-1795.0109,13.2584,90.8058,0,6,30000); // GS9 Towtruck 2
	AddStaticVehicleEx(400,2166.2695,-1808.6523,13.4657,359.2455,-1,-1,30000); // Idlewood Landstalker
	AddStaticVehicleEx(401,2178.9514,-1808.1166,13.1534,332.7393,-1,-1,30000); // idlewood bravura
	AddStaticVehicleEx(422,2180.8223,-1775.8627,13.4289,1.9866,-1,-1,30000); // Idlewood Bobcat
	AddStaticVehicleEx(481,2152.5356,-1707.8517,14.5992,265.8467,-1,-1,30000); // Idlewood BMX 1
	AddStaticVehicleEx(509,2146.9026,-1699.1556,14.5959,88.9161,-1,-1,30000); // Idlewood Bike 1
	AddStaticVehicleEx(481,2135.9700,-1687.1991,14.5842,269.3723,-1,-1,30000); // Idlewood BMX 2
	AddStaticVehicleEx(510,2178.9465,-1621.9690,14.1795,76.9868,-1,-1,30000); // idlewood mountain bike
	AddStaticVehicleEx(509,2133.7468,-1673.9443,14.5892,42.8195,-1,-1,30000); // Idlewood Bike 2
	AddStaticVehicleEx(552,2076.3826,-1688.2611,13.1668,359.7177,-1,-1,30000); // idlewood utility
	AddStaticVehicleEx(439,2063.7095,-1636.6553,13.4430,89.5812,-1,-1,30000); // Idlewood Previon
	AddStaticVehicleEx(408,2095.5845,-1558.9166,13.6602,358.6021,-1,-1,30000); // Idlewood Trashmaster
	AddStaticVehicleEx(413,2054.8284,-1746.8115,13.5446,89.7840,-1,-1,30000); // Idlewood Pony
	AddStaticVehicleEx(468,2038.1500,-1713.3724,13.2160,173.5469,-1,-1,30000); // Idlewood Sanchez
	AddStaticVehicleEx(506,2042.8906,-1666.7197,13.1662,90.5144,-1,-1,30000); // Idlewood supergt
	AddStaticVehicleEx(521,1985.6471,-1779.8247,13.1194,269.9220,-1,-1,30000); // Idlewood FCR
	AddStaticVehicleEx(475,2258.1865,-1791.2478,13.3577,0.4041,-1,-1,30000); // Idlewood Sabre 1
	AddStaticVehicleEx(475,2251.9568,-1791.4213,13.3550,0.1226,-1,-1,30000); // Idlewood Sabre 2
	AddStaticVehicleEx(609,2328.8691,-1791.9049,13.6163,3.3316,-1,-1,30000); // Boxville idlewood
	AddStaticVehicleEx(429,2501.4519,-1756.0835,13.0994,357.5779,-1,-1,30000); // Grove Banshee
	AddStaticVehicleEx(603,2491.0969,-1756.4319,13.3496,0.6956,-1,-1,30000); // Grove Phoenix
	AddStaticVehicleEx(600,2473.8572,-1696.4337,13.2281,0.1861,-1,-1,30000); // Grove Picador
	AddStaticVehicleEx(580,2504.8862,-1680.9321,13.2576,315.9738,-1,-1,30000); // Grove Car 1
	AddStaticVehicleEx(576,2510.1106,-1671.8878,13.0225,351.6296,-1,-1,30000); // Grove Car 2
	AddStaticVehicleEx(576,2499.4338,-1654.7975,13.0361,72.0787,-1,-1,30000); // Grove Car 3
	AddStaticVehicleEx(567,2403.3853,-1643.1469,13.4166,358.2348,-1,-1,30000); // Grove Savanna
	AddStaticVehicleEx(545,2404.6743,-1727.1980,13.2926,268.1689,-1,-1,30000); // Grove Car 4
	AddStaticVehicleEx(499,2299.9480,-1644.4240,14.6879,0.4584,-1,-1,30000); // Grove Mule
	AddStaticVehicleEx(496,2296.0015,-1629.6948,14.4379,178.5523,-1,-1,30000); // Grove Blista
	AddStaticVehicleEx(492,2279.3232,-1680.0703,14.2943,272.3397,-1,-1,30000); // Grove Car 6
	AddStaticVehicleEx(492,2290.2590,-1683.5227,13.6654,359.7366,-1,-1,30000); // Grove Car 7
	AddStaticVehicleEx(492,2118.6387,-1938.3357,13.1647,279.7373,-1,-1,30000); // Car
	AddStaticVehicleEx(474,2250.8606,-1916.1077,13.2745,359.9121,-1,-1,30000); // Willowfield Car 1
	AddStaticVehicleEx(475,2297.5522,-1939.3203,13.3705,270.3922,-1,-1,30000); // Willowfield Car 2
	AddStaticVehicleEx(458,2354.8220,-1906.5938,13.4352,0.1253,-1,-1,30000); // Willowfield Car 3
	AddStaticVehicleEx(458,2471.3625,-2004.1299,13.2816,268.2415,-1,-1,30000); // Willowfield Car 4
	AddStaticVehicleEx(455,2408.1721,-2067.2705,13.8586,0.4839,-1,-1,30000); // Willowfield Car 5
	AddStaticVehicleEx(525,2293.1980,-2021.9369,13.4198,270.6808,-1,-1,30000); // Willowfield Car 6
	AddStaticVehicleEx(525,2304.8408,-2022.0619,13.4175,269.7642,-1,-1,30000); // Willowfield Car 7
	AddStaticVehicleEx(443,2325.8066,-2077.7842,14.2140,39.7875,-1,-1,30000); // Willowfield Car 8
	AddStaticVehicleEx(415,2498.8250,-1953.3690,13.1965,357.9456,-1,-1,30000); // Willowfield Car 9
	AddStaticVehicleEx(552,2485.8440,-1953.6611,13.1115,359.7697,-1,-1,30000); // Willowfield Car 10
	AddStaticVehicleEx(412,2270.8750,-1436.9567,23.6649,352.5544,-1,-1,30000); // eastls car 2
	AddStaticVehicleEx(409,2231.2168,-1339.9762,23.7829,356.7693,-1,-1,30000); // eastls car 3
	AddStaticVehicleEx(409,2230.4951,-1357.0519,23.7873,358.6161,-1,-1,30000); // eastls car 4
	AddStaticVehicleEx(442,2214.5112,-1355.6449,23.8183,358.3493,-1,-1,30000); // eastls car 5
	AddStaticVehicleEx(442,2215.3132,-1327.8352,23.8125,358.3583,-1,-1,30000); // eastls car 5
	AddStaticVehicleEx(552,2332.7471,-1306.5066,23.8479,269.5170,-1,-1,30000); // eastls car 5
	AddStaticVehicleEx(411,2347.3210,-1253.4976,22.2271,88.1388,-1,-1,30000); // eastls car 6
	AddStaticVehicleEx(572,2328.5342,-1253.8989,22.0799,91.0445,-1,-1,30000); // eastls car 7
	AddStaticVehicleEx(461,2328.0959,-1235.7213,22.0781,94.3631,-1,-1,30000); // eastls car 8
	AddStaticVehicleEx(439,2348.4666,-1235.1737,22.3960,270.4031,-1,-1,30000); // eastls car 9
	AddStaticVehicleEx(439,2076.4626,-1263.4384,23.7781,358.9693,-1,-1,30000); // eastls car 10
	AddStaticVehicleEx(475,2156.9099,-1423.6462,25.3436,92.1517,-1,-1,30000); // eastls car 11
	AddStaticVehicleEx(539,2106.1018,-1363.5519,23.3445,270.5066,-1,-1,30000); // eastls car 12
	AddStaticVehicleEx(575,2444.0955,-1370.5126,23.6014,1.2554,-1,-1,30000); // East Beach Car 1
	AddStaticVehicleEx(521,2476.2852,-1333.9211,27.1164,358.2591,-1,-1,30000); // East Beach Car 2
	AddStaticVehicleEx(525,2505.6028,-1238.0624,36.6905,359.5279,-1,-1,30000); // East Beach Car 3
	AddStaticVehicleEx(456,2566.2458,-1217.1079,55.0383,359.1705,-1,-1,30000); // East Beach Car 4
	AddStaticVehicleEx(466,2576.4968,-1336.3706,38.1885,358.7834,-1,-1,30000); // East Beach Car 5
	AddStaticVehicleEx(467,2647.8147,-1337.9943,36.6854,359.2206,-1,-1,30000); // East Beach Car 6
	AddStaticVehicleEx(467,2637.5076,-1407.5586,30.0704,358.9144,-1,-1,30000); // East Beach Car 7
	AddStaticVehicleEx(515,2662.7576,-1424.7247,31.5153,359.1375,-1,-1,30000); // East Beach Car 9
	AddStaticVehicleEx(402,2816.9800,-1448.4132,39.8919,89.9844,-1,-1,30000); // East Beach Car 10
	AddStaticVehicleEx(505,2791.6140,-1444.1470,40.2010,269.3951,-1,-1,30000); // East Beach Car 11
	AddStaticVehicleEx(420,2814.8464,-1427.6311,39.8369,359.7999,-1,-1,30000); // East Beach Car 12
	AddStaticVehicleEx(409,2792.6953,-1463.3746,39.8592,316.5130,-1,-1,30000); // East Beach Car 13
	AddStaticVehicleEx(468,2819.5532,-1436.7407,27.8246,0.0321,-1,-1,30000); // East Beach Car 14
	AddStaticVehicleEx(578,1775.1024,-1700.4089,14.1210,358.5965,-1,-1,30000); // Commerce Car 1
	AddStaticVehicleEx(489,1704.8326,-1537.6521,13.5265,88.6464,-1,-1,30000); // Commerce Car 2
	AddStaticVehicleEx(475,1697.7350,-1520.7571,13.1870,273.3176,-1,-1,30000); // Commerce Car 3
	AddStaticVehicleEx(401,1774.7185,-1346.1737,15.5358,178.7088,-1,-1,30000); // Commerce Car 5
	AddStaticVehicleEx(481,1911.5630,-1416.4326,13.0880,266.1911,-1,-1,30000); // Commerce Bmx
	AddStaticVehicleEx(481,1914.7064,-1416.5062,13.0862,269.3906,-1,-1,30000); // Commerce Bmx
	AddStaticVehicleEx(481,1917.2604,-1416.4546,13.0874,271.4726,-1,-1,30000); // Commerce Bmx
	AddStaticVehicleEx(510,1920.8254,-1416.1698,13.1760,275.0609,-1,-1,30000); // Commerce mountain
	AddStaticVehicleEx(510,1924.5038,-1416.0063,13.1785,269.2195,-1,-1,30000); // Commerce mountain
	AddStaticVehicleEx(466,1888.3424,-1130.3530,23.8403,91.4724,-1,-1,30000); // Glen Park Car 1
	AddStaticVehicleEx(475,1948.0359,-1129.1531,25.4647,90.3574,-1,-1,30000); // Glen Park Car 2
	AddStaticVehicleEx(489,1987.5978,-1275.0519,23.9666,358.9724,-1,-1,30000); // Glen Park Car 3
	AddStaticVehicleEx(475,2102.7119,-1054.8275,27.5009,52.6120,-1,-1,30000); // Las Colinas 1
	AddStaticVehicleEx(600,2181.0664,-1069.1809,48.3396,226.7116,-1,-1,30000); // Las Colinas 2
	AddStaticVehicleEx(468,2274.3962,-1073.7783,47.3578,250.5606,-1,-1,30000); // Las Colinas 3
	AddStaticVehicleEx(400,2419.9446,-1029.4894,52.4738,110.3884,-1,-1,30000); // Las Colinas 4
	AddStaticVehicleEx(466,2602.5818,-1072.9633,69.3058,8.2294,-1,-1,30000); // Las Colinas 5
	AddStaticVehicleEx(428,1587.4895,-1517.5035,13.7216,186.0508,-1,-1,30000); // Commerce 1
	AddStaticVehicleEx(412,1948.4960,-2127.5249,13.3826,271.2208,-1,-1,30000); // el corona 1
	AddStaticVehicleEx(475,1948.2723,-2118.3037,13.3551,272.1121,-1,-1,30000); // el corona 2
	AddStaticVehicleEx(514,2129.4036,-2150.4453,14.1088,317.3880,-1,-1,30000); // el corona 3
	AddStaticVehicleEx(553,1861.5247,-2371.7720,14.8955,233.3393,-1,-1,30000); // Airport 1
	AddStaticVehicleEx(553,1816.7844,-2414.8027,14.9084,126.7956,-1,-1,30000); // Airport 2
	AddStaticVehicleEx(519,1635.5955,-2462.0750,14.4744,199.1273,-1,-1,30000); // Airport 3
	AddStaticVehicleEx(519,1569.7532,-2461.3188,14.4743,345.2944,-1,-1,30000); // Airport 4
	AddStaticVehicleEx(593,1616.8318,-2632.1130,13.9947,4.3066,-1,-1,30000); // Airport 5
	AddStaticVehicleEx(521,1744.9194,-2629.3447,13.1157,270.9674,-1,-1,30000); // Airport 5
	AddStaticVehicleEx(593,1754.1902,-2632.2085,14.0101,1.3748,-1,-1,30000); // Airport 6
	AddStaticVehicleEx(487,1962.1552,-2635.8623,13.6928,22.3531,-1,-1,30000); // Airport 7
	AddStaticVehicleEx(487,1978.7484,-2630.3625,13.6924,6.5803,-1,-1,30000); // Airport 8
	AddStaticVehicleEx(563,2001.3547,-2629.1897,14.2637,345.1248,-1,-1,30000); // Airport 9
	AddStaticVehicleEx(592,2097.8684,-2621.7915,14.7241,345.5417,-1,-1,30000); // Airport 10
	AddStaticVehicleEx(412,1698.7104,-2119.2126,13.3847,270.0326,-1,-1,30000); // El Corona 9
	AddStaticVehicleEx(586,1718.8086,-2091.6785,13.0681,358.8134,-1,-1,30000); // El Corona 10
	AddStaticVehicleEx(567,1756.1415,-2107.4297,13.3049,92.7744,-1,-1,30000); // El Corona 11
	AddStaticVehicleEx(422,1278.2241,-1815.5394,13.4056,94.4411,-1,-1,30000); // Conference 1
	AddStaticVehicleEx(413,1258.6467,-1835.3020,13.4736,175.4221,-1,-1,30000); // Conference 2
	AddStaticVehicleEx(411,1265.8397,-1794.5959,13.1377,90.0781,-1,-1,30000); // Conference 3
	AddStaticVehicleEx(468,1229.4847,-1825.1532,13.2582,83.0584,-1,-1,30000); // Conference 6
	AddStaticVehicleEx(521,1197.2006,-1674.4319,12.7268,310.5614,-1,-1,30000); // FCR
	AddStaticVehicleEx(402,1083.6729,-1764.1117,13.2296,357.3847,-1,-1,30000); // Bad_Parked
	AddStaticVehicleEx(405,883.4431,-1668.8043,13.3995,179.2901,-1,-1,30000); // Verona 1
	AddStaticVehicleEx(489,892.5031,-1668.7908,13.6906,356.1361,-1,-1,30000); // Verona 2
	AddStaticVehicleEx(494,869.0477,-1658.1937,13.4472,179.4397,-1,-1,30000); // Verona 3
	AddStaticVehicleEx(405,1021.5002,-1566.7415,13.3549,87.5253,-1,-1,30000); // Verona 4
	AddStaticVehicleEx(482,822.3416,-1474.0370,13.1578,177.3582,-1,-1,30000); // Verona 5
	AddStaticVehicleEx(405,869.0074,-1537.5002,13.3975,265.8649,-1,-1,30000); // Verona 6
	AddStaticVehicleEx(514,1369.7156,-1513.4983,14.1365,163.0455,-1,-1,30000); // Verona 8
	AddStaticVehicleEx(415,718.3279,-1679.4170,10.3965,264.7437,-1,-1,30000); // Marina 1
	AddStaticVehicleEx(428,688.1823,-1571.3192,14.3317,174.4688,-1,-1,30000); // Marina 2
	AddStaticVehicleEx(405,696.0063,-1570.2332,14.1021,178.4997,-1,-1,30000); // Marina 3
	AddStaticVehicleEx(405,730.0057,-1435.4052,13.3835,202.6158,-1,-1,30000); // Marina 4
	AddStaticVehicleEx(443,847.8970,-1188.0646,17.6133,358.3141,-1,-1,30000); // TV Studio 1
	AddStaticVehicleEx(482,1065.4711,-1201.8895,18.6227,3.4043,-1,-1,30000); // TV Studio 3
	AddStaticVehicleEx(408,1015.1717,-1359.1205,13.8849,92.0477,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(408,1014.7564,-1348.7932,13.8775,91.6410,-1,-1,30000); // Vinewood 2
	AddStaticVehicleEx(405,545.2742,-1474.8009,14.5246,182.6860,-1,-1,30000); // Rodeo 4
	AddStaticVehicleEx(409,623.4055,-1626.5365,16.2008,1.9660,-1,-1,30000); // Rodeo 6
	AddStaticVehicleEx(482,393.3290,-1657.7327,31.4368,273.9533,-1,-1,30000); // Rodeo 8
	AddStaticVehicleEx(545,370.8854,-2047.2555,7.5580,268.3260,-1,-1,30000); // Santa marina
	AddStaticVehicleEx(521,331.2400,-1788.7876,4.4572,175.0981,-1,-1,30000); // Santa marina 2
	AddStaticVehicleEx(489,330.8634,-1809.2850,4.6282,359.7962,-1,-1,30000); // Santa marina 3
	AddStaticVehicleEx(467,318.2503,-1789.1472,4.4182,179.4294,-1,-1,30000); // Santa marina 4
	AddStaticVehicleEx(424,350.3261,-1809.7629,4.2956,357.8551,-1,-1,30000); // Santa marina 5
	AddStaticVehicleEx(468,563.3298,-1820.0262,5.7239,260.2305,-1,-1,30000); // Santa marina 6
	AddStaticVehicleEx(468,567.8466,-1820.4855,5.7252,275.3127,-1,-1,30000); // Santa marina 6
	AddStaticVehicleEx(468,573.0032,-1818.9811,5.7400,273.8676,-1,-1,30000); // Santa marina 6
	AddStaticVehicleEx(411,640.8479,-1864.1614,4.7936,99.2376,-1,-1,30000); // Santa marina 7
	AddStaticVehicleEx(414,215.7363,-1428.1802,13.3555,133.5344,-1,-1,30000); // Rodeo
	AddStaticVehicleEx(571,310.9940,-1360.5415,13.6817,133.0802,-1,-1,30000); // kart
	AddStaticVehicleEx(402,264.2921,-1219.9550,74.8171,104.7551,-1,-1,30000); // Hills
	AddStaticVehicleEx(415,634.2417,-1120.1586,45.2340,41.0461,-1,-1,30000); // Hills 3
	AddStaticVehicleEx(442,976.4984,-1104.1012,23.6660,270.2025,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(409,1018.2508,-1097.0669,23.6525,1.9782,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(405,1108.9163,-1034.6180,31.6518,91.4894,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(405,1295.4346,-985.2731,32.5702,81.9868,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(489,1293.8011,-979.3907,32.9081,86.2998,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(489,1487.7928,-1095.8741,23.8996,356.0617,-1,-1,30000); // Commerce
	AddStaticVehicleEx(405,1498.8147,-1246.3943,14.4285,268.6348,-1,-1,30000); // Commerce
	AddStaticVehicleEx(405,1508.0944,-1244.8503,14.4024,275.9958,-1,-1,30000); // Commerce
	AddStaticVehicleEx(409,1646.8784,-1262.6991,14.6149,60.4397,-1,-1,30000); // Commerce
	AddStaticVehicleEx(486,1250.7445,-1264.5991,13.5617,271.3419,-1,-1,30000); // dozer
	AddStaticVehicleEx(525,993.3303,-909.1383,42.0469,92.3502,-1,-1,30000); // Vinewood
	AddStaticVehicleEx(493,728.0626,-1495.0958,-0.3099,180.8798,-1,-1,30000); // Marina boat 1
	AddStaticVehicleEx(493,719.6827,-1636.6259,-0.0761,179.6018,-1,-1,30000); // Marina boat 3
	AddStaticVehicleEx(473,719.4551,-1695.2446,-0.2905,1.1552,-1,-1,30000); // Marina boat 4
	AddStaticVehicleEx(473,719.3391,-1703.0973,-0.1274,359.6229,-1,-1,30000); // Marina boat 5
	AddStaticVehicleEx(473,368.0579,-1928.3599,-0.3169,93.6816,-1,-1,30000); // Santa Marina boat 1
	AddStaticVehicleEx(473,377.2582,-1927.7323,-0.1663,94.0422,-1,-1,30000); // Santa Marina boat 2
	AddStaticVehicleEx(473,271.4555,-1900.3531,-0.3129,84.8594,-1,-1,30000); // Santa Marina boat 3
	AddStaticVehicleEx(452,209.3228,-1907.4630,-0.4619,284.7852,-1,-1,30000); // Santa Marina boat 4
	AddStaticVehicleEx(531,-76.6003,-1560.6260,2.5875,64.3567,-1,-1,30000); // Flint 1
	AddStaticVehicleEx(531,-87.3810,-1585.0276,2.5819,242.2361,-1,-1,30000); // Flint 2
	AddStaticVehicleEx(539,15.7636,-1104.1279,0.4840,64.0707,-1,-1,30000); // Vortex 1
	AddStaticVehicleEx(539,23.0492,-1114.1348,0.3032,98.2255,-1,-1,30000); // Vortex 2
	AddStaticVehicleEx(535,-90.1213,-1195.6730,2.0284,164.1133,-1,-1,30000); // FC 3
	AddStaticVehicleEx(514,-63.0928,-1145.9229,1.6467,246.9500,-1,-1,30000); // FC 4
	AddStaticVehicleEx(515,-55.0167,-1132.8124,2.0968,69.0468,-1,-1,30000); // FC 5
	AddStaticVehicleEx(514,-39.6483,-1147.8467,1.6456,333.6718,-1,-1,30000); // FC 6
	AddStaticVehicleEx(535,2680.6260,-2007.7167,13.1506,87.1120,-1,-1,30000); // Willowfield
	AddStaticVehicleEx(414,2722.7388,-2085.0894,11.8350,1.6857,-1,-1,30000); // Willowfield
	AddStaticVehicleEx(473,2926.6877,-2059.0581,0.1011,272.0857,-1,-1,30000); // boat
	AddStaticVehicleEx(473,2937.7820,-2058.9915,-0.7432,263.2728,-1,-1,30000); // boat
	AddStaticVehicleEx(493,2947.5461,-2051.9246,0.3625,7.6612,-1,-1,30000); // boat
	AddStaticVehicleEx(472,2936.3364,-2044.3103,0.0872,88.2449,-1,-1,30000); // boat
	AddStaticVehicleEx(472,953.5189,-1924.9939,-0.0610,211.7799,-1,-1,30000); // boat
	AddStaticVehicleEx(472,957.0425,-1935.1185,0.1808,185.6565,-1,-1,30000); // boat
	AddStaticVehicleEx(472,961.1982,-1947.6995,-0.0280,171.5599,-1,-1,30000); // boat
	AddStaticVehicleEx(472,962.7186,-1960.2971,0.0121,175.8541,-1,-1,30000); // boat
	AddStaticVehicleEx(472,963.1889,-1973.9542,0.2270,175.6505,-1,-1,30000); // boat
	AddStaticVehicleEx(472,962.3759,-1990.8718,0.1942,179.4361,-1,-1,30000); // boat
	AddStaticVehicleEx(417,953.7639,-2037.2424,0.1526,180.8953,-1,-1,30000); // heli
	AddStaticVehicleEx(417,956.7543,-2023.4399,-0.0105,204.9418,-1,-1,30000); // heli
	AddStaticVehicleEx(417,959.2968,-2004.7200,0.1608,178.1357,-1,-1,30000); // heli
	AddStaticVehicleEx(489,-1411.9469,-306.1706,14.1996,220.3544,-1,-1,30000); // SFAP 1
	AddStaticVehicleEx(467,-1402.5442,-318.0415,13.8104,211.2206,-1,-1,30000); // SFAP 3
	AddStaticVehicleEx(414,-1369.7383,-220.1676,6.0936,90.1146,-1,-1,30000); // SFAP 4
	AddStaticVehicleEx(475,-1355.6115,-247.1616,5.8057,359.0972,-1,-1,30000); // SFAP 5
	AddStaticVehicleEx(466,-1337.0164,-216.3273,5.7418,87.7253,-1,-1,30000); // SFAP 6*
	AddStaticVehicleEx(451,-1380.1438,-164.8833,5.7065,178.2294,-1,-1,30000); // SFAP 7
	AddStaticVehicleEx(514,-1473.9070,-212.2822,6.5917,270.8332,-1,-1,30000); // SFAP 8
	AddStaticVehicleEx(525,-1440.1591,-165.0394,5.8775,0.0624,-1,-1,30000); // SFAP 9
	AddStaticVehicleEx(510,-1441.9747,-200.0431,5.6061,87.6409,-1,-1,30000); // SFAP 10
	AddStaticVehicleEx(475,-1425.3892,-224.4450,5.8029,267.9146,-1,-1,30000); // SFAP 11
	AddStaticVehicleEx(571,-1442.8800,-96.2750,5.2838,89.6125,-1,-1,30000); // SFAP 12
	AddStaticVehicleEx(463,-1458.2521,11.7039,5.5395,86.4661,-1,-1,30000); // SFAP 13
	AddStaticVehicleEx(463,-1464.8634,42.1248,5.5391,358.4005,-1,-1,30000); // SFAP 14
	AddStaticVehicleEx(463,-1440.2589,-39.3794,5.5398,179.8006,-1,-1,30000); // SFAP 15
	AddStaticVehicleEx(463,-1425.6389,7.7932,5.5384,267.8508,-1,-1,30000); // SFAP 16
	AddStaticVehicleEx(438,-1337.5339,-112.8018,6.0060,269.2338,-1,-1,30000); // SFAP 17
	AddStaticVehicleEx(420,-1353.7983,-92.1144,5.7788,90.5762,-1,-1,30000); // SFAP 18
	AddStaticVehicleEx(409,-1386.6360,-83.6863,5.7984,178.0731,-1,-1,30000); // SFAP 19
	AddStaticVehicleEx(586,-1386.2047,19.8322,5.5141,87.7681,-1,-1,30000); // SFAP 20
	AddStaticVehicleEx(552,-1367.8475,42.1473,5.6872,0.1572,-1,-1,30000); // SFAP 21
	AddStaticVehicleEx(541,-1353.0785,7.3935,5.6248,88.7150,-1,-1,30000); // SFAP 22
	AddStaticVehicleEx(444,-1369.4357,-4.8867,6.3713,269.2831,-1,-1,30000); // SFAP 23
	AddStaticVehicleEx(563,-1185.7211,23.4895,14.8504,30.4422,-1,-1,30000); // SFAP Plane 1
	AddStaticVehicleEx(563,-1222.3115,-9.0486,14.8662,222.8062,-1,-1,30000); // SFAP Plane 2
	AddStaticVehicleEx(592,-1342.2195,-245.3548,15.3244,313.1736,-1,-1,30000); // SFAP Plane 3
	AddStaticVehicleEx(519,-1358.2054,-494.2816,15.1102,202.0110,-1,-1,30000); // SFAP Plane 4
	AddStaticVehicleEx(519,-1437.0258,-524.2431,15.0919,205.1515,-1,-1,30000); // SFAP Plane 5
	AddStaticVehicleEx(593,-1242.2192,-96.2722,14.6147,137.7133,-1,-1,30000); // SFAP Plane 6
	AddStaticVehicleEx(593,-1204.6508,-134.3675,14.6003,318.6603,-1,-1,30000); // SFAP Plane 7
	AddStaticVehicleEx(487,-1106.1146,-204.4773,14.2848,0.2739,-1,-1,30000); // SFAP Plane 8
	AddStaticVehicleEx(487,-1122.1954,-184.2038,14.2858,23.6042,-1,-1,30000); // SFAP Plane 9
	AddStaticVehicleEx(466,1708.2583,1316.2137,10.5621,179.5914,-1,-1,30000); // LVAP 1
	AddStaticVehicleEx(467,1701.7544,1316.6082,10.5606,0.8880,-1,-1,30000); // LVAP 2
	AddStaticVehicleEx(475,1705.0092,1286.8748,10.6258,359.7808,-1,-1,30000); // LVAP 3
	AddStaticVehicleEx(468,1695.3237,1297.0361,10.4881,357.3578,-1,-1,30000); // LVAP 4
	AddStaticVehicleEx(451,1688.8711,1286.9952,10.5275,359.9494,-1,-1,30000); // LVAP 5
	AddStaticVehicleEx(409,1695.3328,1306.1604,10.6189,359.2685,-1,-1,30000); // LVAP 6
	AddStaticVehicleEx(420,1682.4508,1306.3378,10.6009,179.3283,-1,-1,30000); // LVAP 7
	AddStaticVehicleEx(414,1669.9438,1315.7080,10.9164,179.4764,-1,-1,30000); // LVAP 8
	AddStaticVehicleEx(405,1659.9301,1305.8827,10.6953,359.0933,-1,-1,30000); // LVAP 9
	AddStaticVehicleEx(456,1643.1604,1293.4294,10.9944,270.2813,-1,-1,30000); // LVAP 12
	AddStaticVehicleEx(514,1669.8210,1301.8601,11.4000,0.4783,-1,-1,30000); // LVAP 13
	AddStaticVehicleEx(577,1586.4738,1189.6396,10.7320,177.3679,-1,-1,30000); // AT-400
	AddStaticVehicleEx(513,1275.5145,1368.8579,11.3672,248.9769,-1,-1,30000); // LV Plane 2
	AddStaticVehicleEx(513,1272.9738,1355.6285,11.3801,273.1835,-1,-1,30000); // LV Plane 3
	AddStaticVehicleEx(593,1274.7339,1324.2155,11.2776,90.0024,-1,-1,30000); // LV Plane 4
	AddStaticVehicleEx(553,1317.5245,1444.1763,12.1492,263.2528,-1,-1,30000); // LV Plane 5
	AddStaticVehicleEx(519,1332.0476,1563.1694,11.7443,260.6668,-1,-1,30000); // LV Plane 6
	AddStaticVehicleEx(519,1335.2677,1596.8105,11.7403,89.5537,-1,-1,30000); // LV Plane 7
	AddStaticVehicleEx(487,1399.1948,1769.9380,10.9644,359.4272,-1,-1,30000); // LV Plane 8
	AddStaticVehicleEx(487,1379.4856,1769.9442,10.9621,1.0139,-1,-1,30000); // LV Plane 9
	AddStaticVehicleEx(563,1607.5558,1622.0795,11.5132,24.6549,-1,-1,30000); // LV Plane 10
	AddStaticVehicleEx(563,1582.0110,1622.4203,11.5327,123.0889,-1,-1,30000); // LV Plane 11
	AddStaticVehicleEx(592,1568.4559,1444.8666,12.0068,270.9355,-1,-1,30000); // LV Plane 12
	AddStaticVehicleEx(525,1282.2512,1287.8291,10.7031,90.2000,-1,-1,30000); // LVAP 15
	AddStaticVehicleEx(525,1281.9968,1297.3577,10.6915,89.8853,-1,-1,30000); // LVAP 16
	AddStaticVehicleEx(552,1328.7917,1279.2231,10.5199,0.5973,-1,-1,30000); // LVAP 19*/
	tacticalcar[3] = AddStaticVehicleEx(528,1531.4615,-1478.8479,9.5432,356.2925,125,0,30000); // FBI Car - 473
	tacticalcar[4] = AddStaticVehicleEx(528,1524.1379,-1477.9585,9.5443,358.7108,125,0,30000); // FBI Car - 472
	tacticalcar[5] = AddStaticVehicleEx(421,1514.3434,-1469.8129,9.3872,271.0523,125,0,30000); // FBI Car - 471
   	armycar[11] = AddStaticVehicleEx(433,2744.5447,-2431.6230,14.0753,88.7328,43,0,30000); // æ¸∂””™∑ø - 536
	armycar[12] = AddStaticVehicleEx(433,2745.9841,-2440.6479,14.0798,89.9955,43,0,30000); // æ¸∂””™∑ø - 537
	armycar[13] = AddStaticVehicleEx(548,2772.4231,-2354.1746,15.3014,273.8928,-1,-1,30000); // Army CargoBob - 538
	armycar[14] = AddStaticVehicleEx(548,2784.5640,-2338.7678,15.2142,5.5173,-1,-1,30000); // Army CargoBob - 537
/*	AddStaticVehicleEx(409,489.4853,-1495.1212,20.0664,353.6636,1,1,30000); // RPC Limo 1
	AddStaticVehicleEx(409,481.7120,-1497.9337,20.1578,358.9848,1,0,30000); // RPC Limo 2
	AddStaticVehicleEx(409,488.7621,-1504.4691,20.2673,356.3478,0,0,30000); // RPC Limo 3
	AddStaticVehicleEx(409,480.6742,-1506.1487,20.2715,346.5531,0,1,30000); // RPC Limo 4*/
   	specialfcar[0] = AddStaticVehicleEx(490,2803.6401,-2554.0801,13.7580,88.5493,102,102,30000); // Special Forces Rancher 1 // Color 99-99 Plz
	specialfcar[1] = AddStaticVehicleEx(490,2803.9480,-2549.0674,13.7544,89.3537,102,102,30000); // Special Forces Rancher 2 // Color 99-99 Plz
	specialfcar[2] = AddStaticVehicleEx(490,2804.1360,-2543.6924,13.7542,90.0848,102,102,30000); // Special Forces Rancher 3 // Color 99-99 Plz
	specialfcar[3] = AddStaticVehicleEx(490,2804.0879,-2538.8689,13.7567,89.6524,102,102,30000); // Special Forces Rancher 4 // Color 99-99 Plz
	specialfcar[4] = AddStaticVehicleEx(487,2769.9070,-2554.8228,13.8084,267.0010,102,102,30000); // Special Forces Maverick 1 // Color 99-99 Plz
	specialfcar[5] = AddStaticVehicleEx(487,2787.7031,-2554.6406,13.7697,1.7201,102,102,30000); // Special Forces Maverick 2 // Color 99-99 Plz
	specialfcar[6] = AddStaticVehicleEx(595,2751.8066,-2584.1006,0.5155,285.0179,102,1,30000); // Army Boat 1
	armycar[15] = AddStaticVehicleEx(472,2764.1729,-2584.1931,0.2676,274.7892,102,1,30000); // Army Boat 2
	armycar[16] = AddStaticVehicleEx(595,2737.5583,-2584.5120,0.1688,275.1565,102,1,30000); // Army Boat 3
	armycar[17] = AddStaticVehicleEx(472,2720.9019,-2583.7671,-0.1109,279.0291,102,1,30000); // Army Boat 4
	swatcar[2] = AddStaticVehicleEx(427,1544.4252,-1654.9655,6.0225,89.2334,0,125,30000); // SWAT Car 2
	swatcar[3] = AddStaticVehicleEx(427,1544.3987,-1651.2699,6.0224,88.9972,0,125,30000); // SWAT Car 3
	swatcar[4] = AddStaticVehicleEx(427,1538.7837,-1645.9205,6.0225,180.6457,0,125,30000); // SWAT Car 4
	swatcar[5] = AddStaticVehicleEx(601,1534.6051,-1645.1766,5.6494,180.5705,-1,-1,30000); // SWAT Truck 2
	swatcar[6] = AddStaticVehicleEx(601,1530.5868,-1645.0754,5.6493,178.7105,-1,-1,30000); // SWAT Truck 3
	swatcar[7] = AddStaticVehicleEx(601,1526.4545,-1644.8373,5.6493,180.3205,-1,-1,30000); // SWAT Truck 4
	copcar[19] = AddStaticVehicleEx(596,1570.3909,-1710.9365,5.6125,0.3392,0,1,30000); // æØ≤Ï Car
	copcar[20] = AddStaticVehicleEx(596,1583.5194,-1710.0942,5.6150,359.7180,0,1,30000); // æØ≤Ï Car 2
	copcar[21] = AddStaticVehicleEx(596,1578.7996,-1710.9054,5.6113,359.6201,0,1,30000); // æØ≤Ï Car 3
	copcar[22] = AddStaticVehicleEx(523,1571.9241,-1691.5300,5.4614,152.0861,0,0,30000); // æØ≤Ïæ÷ Bike 1
	copcar[23] = AddStaticVehicleEx(523,1571.9734,-1694.7366,5.4608,148.4471,0,0,30000); // æØ≤Ïæ÷ Bike 2
	copcar[24] = AddStaticVehicleEx(523,1571.8988,-1697.7035,5.4605,150.0643,0,0,30000); // æØ≤Ï Bike 3
	copcar[25] = AddStaticVehicleEx(523,1560.6475,-1691.7777,5.4601,221.2671,0,0,30000); // æØ≤Ï Bike 4
	copcar[26] = AddStaticVehicleEx(523,1562.8226,-1691.7704,5.4644,217.0413,0,0,30000); // æØ≤Ï Bike 5
	copcar[27] = AddStaticVehicleEx(523,1564.7723,-1691.6658,5.4608,216.2721,0,0,30000); // æØ≤Ï Bike 6
	copcar[28] = AddStaticVehicleEx(599,1601.9353,-1700.0847,6.0811,270.4015,0,1,30000); // æØ≤Ï Ranger 1
	copcar[29] = AddStaticVehicleEx(599,1601.0905,-1683.9343,6.0827,89.5799,0,1,30000); // æØ≤Ï Ranger 2
	copcar[30] = AddStaticVehicleEx(599,1584.6278,-1677.7018,6.0838,88.0495,0,1,30000); // æØ≤Ï Ranger 3
	copcar[31] = AddStaticVehicleEx(497,1551.8477,-1709.3851,28.5725,268.8986,0,1,30000); // æØ≤Ï Maverick 2
	copcar[32] = AddStaticVehicleEx(497,1567.4618,-1692.5205,28.5753,269.6479,0,1,30000); // æØ≤Ï Maverick 3
	copcar[33] = AddStaticVehicleEx(497,1568.6174,-1707.1409,28.5713,2.6345,0,1,30000); // æØ≤Ï Maverick 4
 	tacticalcar[6] = AddStaticVehicleEx(497,1486.3965,-1486.2050,40.7001,270.3883,125,0,30000); // FBI Heli 1 // 0-0 Color plz
	fbicar[2] = AddStaticVehicleEx(563,1486.3909,-1469.6549,41.2262,0.3949,0,0,30000); // FBI Heli 2 // 0-0 Color plz
	fbicar[3] = AddStaticVehicleEx(497,1473.3531,-1472.8439,40.7001,179.7958,0,0,30000); // FBI Heli 3 // 0-0 Color plz
	fbicar[4] = AddStaticVehicleEx(497,1477.6206,-1456.4465,40.6993,88.0677,0,0,30000); // FBI Heli 4 // 0-0 Color plz
	fbicar[5] = AddStaticVehicleEx(528,1527.8539,-1478.4304,9.5428,177.6626,-1,-1,30000); // FBI Truck 3
	fbicar[6] = AddStaticVehicleEx(528,1535.6793,-1477.7722,9.5423,358.9057,-1,-1,30000); // FBI Truck 4
	swatcar[8] = AddStaticVehicleEx(497,1568.7906,-1640.6179,28.5789,90.0114,0,125,30000); // SWAT Maverick 2 - Color 125-0 Plz.
	swatcar[9] = AddStaticVehicleEx(497,1558.3198,-1645.0804,28.5783,183.4436,0,125,30000); // SWAT Maverick 1 - Color 125-0 Plz.
	swatcar[10] = AddStaticVehicleEx(563,1548.7910,-1645.6578,29.1074,221.6899,0,125,30000); // SWAT Raindance
   	armycar[18] = AddStaticVehicleEx(470,2778.8184,-2410.6421,13.6290,177.5299,43,0,30000); // Army Patriot 1
	armycar[19] = AddStaticVehicleEx(470,2778.5198,-2425.9255,13.6292,0.4874,43,0,30000); // Army Patriot 2
	armycar[20] = AddStaticVehicleEx(470,2779.2722,-2462.8450,13.6253,39.1626,43,0,30000); // Army Patriot 3
	armycar[21] = AddStaticVehicleEx(470,2766.9812,-2485.2505,13.5904,179.2908,43,0,30000); // Army Patriot 4
	armycar[22] = AddStaticVehicleEx(470,2766.8689,-2426.7644,13.5276,0.1748,43,0,30000); // Army Patriot 5
	armycar[23] = AddStaticVehicleEx(433,2743.7874,-2464.4150,14.0852,90.6209,43,0,30000); // æ¸∂””™∑ø 1
	armycar[24] = AddStaticVehicleEx(433,2743.9199,-2471.4060,14.0851,91.2237,43,0,30000); // æ¸∂””™∑ø 2
	armycar[25] = AddStaticVehicleEx(598,2792.6372,-2470.8091,13.3584,118.0182,102,1,30000); // Army LVPD Car 1
	armycar[26] = AddStaticVehicleEx(598,2793.1982,-2479.0645,13.3642,68.3628,102,1,30000); // Army LVPD Car 2
	armycar[27] = AddStaticVehicleEx(598,2791.3093,-2440.7554,13.3541,65.2562,102,1,30000); // Army LVPD Car 3
	armycar[28] = AddStaticVehicleEx(598,2791.3828,-2433.0232,13.3428,117.6212,102,1,30000); // Army LVPD Car 4
	fbicar[7] = AddStaticVehicleEx(421,1500.3885,-1487.1899,13.4345,178.8964,0,0,30000); // FBI Washington 1
	fbicar[8] = AddStaticVehicleEx(421,1507.1046,-1501.4291,13.4387,57.7142,0,0,30000); // FBI Washington 2
	fbicar[9] = AddStaticVehicleEx(421,1512.7228,-1501.2101,13.4439,53.8964,0,0,30000); // FBI Washington 3
	fbicar[10] = AddStaticVehicleEx(597,1535.3562,-1488.3970,13.3207,178.4201,0,0,30000); // FBI SFPD Car 1
	fbicar[11] = AddStaticVehicleEx(597,1530.5555,-1488.2723,13.3222,178.8598,0,0,30000); // FBI SFPD Car 2
	fbicar[12] = AddStaticVehicleEx(597,1525.5708,-1488.2776,13.3221,179.2527,0,0,30000); // FBI SFPD Car 3
	fbicar[13] = AddStaticVehicleEx(490,1520.5131,-1487.9403,13.6840,179.1519,0,0,30000); // FBI Rancher 1
	fbicar[14] = AddStaticVehicleEx(490,1505.3893,-1487.6387,13.6790,179.0214,0,0,30000); // FBI Rancher 2
	fbicar[15] = AddStaticVehicleEx(490,1510.5885,-1487.6943,13.6796,179.1744,0,0,30000); // FBI Rancher 3
	fbicar[16] = AddStaticVehicleEx(490,1515.5415,-1487.8470,13.6825,178.0985,0,0,30000); // FBI Rancher 4
	tacticalcar[7] = AddStaticVehicleEx(497,1471.9142,-1485.8225,40.7031,228.7092,125,0,30000); // FBI Tactical Heli
	ambulance[3] = AddStaticVehicleEx(487,1179.5645,-1377.4739,24.1755,178.1527,1,3,30000); // Hospital Helicopter
	ambulance[4] = AddStaticVehicleEx(487,1160.8286,-1350.5829,26.8659,88.6848,1,3,30000); // Hospital Helicopter 2
	ambulance[5] = AddStaticVehicleEx(563,1164.3000,-1369.9462,27.3490,271.1900,1,3,30000); // Medics Helicopter 3
	ambulance[6] = AddStaticVehicleEx(416,1183.3171,-1334.0085,13.7311,179.6179,1,3,30000); // Ambulance
	ambulance[7] = AddStaticVehicleEx(490,1182.9384,-1314.0101,13.7059,0.0771,1,3,30000); // Medicine Rancher
	admincar[0] = AddStaticVehicleEx(592,25.0078,1946.6964,18.8358,179.5705,126,126,30000); // Area 69 Andromeda
/*	AddStaticVehicleEx(457,-2356.1240,-1633.9432,483.3255,251.4808,-1,-1,30000); // MC Car 1
	AddStaticVehicleEx(457,-2355.4700,-1631.4500,483.3156,267.3093,-1,-1,30000); // MC Car 2
	AddStaticVehicleEx(531,-2351.7505,-1616.6631,483.6126,76.1793,-1,-1,30000); // MC Car 3
	AddStaticVehicleEx(531,-2350.6594,-1612.2018,483.5946,78.1853,-1,-1,30000); // MC Car 4
	AddStaticVehicleEx(471,-2346.5417,-1656.9923,483.1865,119.7306,-1,-1,30000); // MC Car 5
	AddStaticVehicleEx(471,-2345.3259,-1658.8834,483.1840,122.0052,-1,-1,30000); // MC Car 6
	AddStaticVehicleEx(471,-2344.1335,-1660.7922,483.1823,112.4355,-1,-1,30000); // MC Car 7
	AddStaticVehicleEx(471,-2343.1035,-1663.1897,483.1867,109.6837,-1,-1,30000); // MC Car 8
	AddStaticVehicleEx(424,-2285.8303,-1658.2640,482.6315,262.2649,-1,-1,30000); // MC Car 9
	AddStaticVehicleEx(424,-2285.2944,-1654.4158,482.7698,258.6511,-1,-1,30000); // MC Car 10
	AddStaticVehicleEx(424,-2285.0581,-1649.7699,482.9469,252.5239,-1,-1,30000); // MC Car 11
	AddStaticVehicleEx(513,-2305.2012,-1606.7601,484.4940,306.1995,-1,-1,30000); // MC Car 12
	AddStaticVehicleEx(513,-2313.4431,-1597.6970,484.4490,307.5351,-1,-1,30000); // MC Car 13
	AddStaticVehicleEx(431,-2333.2544,-1582.3125,483.7016,356.7549,-1,-1,30000); // MC Car 14
	AddStaticVehicleEx(405,-2308.4492,-1656.7092,483.5585,206.6775,-1,-1,30000); // MC Car 15
	AddStaticVehicleEx(539,-2236.8718,-1720.0170,480.2252,5.7058,-1,-1,30000); // MC Car 16
	AddStaticVehicleEx(539,-2250.0903,-1725.9283,479.4321,41.1715,-1,-1,30000); // MC Car 17
	AddStaticVehicleEx(539,-2245.2756,-1737.1003,479.2595,277.8021,-1,-1,30000); // MC Car 18
	AddStaticVehicleEx(510,-2298.3643,-1698.5747,479.6486,222.4934,-1,-1,30000); // MC Car 19
	AddStaticVehicleEx(510,-2299.1453,-1699.1655,479.5647,219.1449,-1,-1,30000); // MC Car 19
	AddStaticVehicleEx(510,-2299.9067,-1699.9274,479.3412,218.7542,-1,-1,30000); // MC Car 20
	AddStaticVehicleEx(510,-2300.6975,-1700.4137,479.1808,213.7247,-1,-1,30000); // MC Car 21
	AddStaticVehicleEx(510,-2301.3977,-1701.1587,478.9304,216.9920,-1,-1,30000); // MC Car 22
	AddStaticVehicleEx(478,-275.5605,39.7005,1.0918,161.9497,-1,-1,30000); // RC Car 1
	AddStaticVehicleEx(478,-273.4193,44.7805,1.1543,342.2089,-1,-1,30000); // RC Car 2
	AddStaticVehicleEx(478,-271.2184,51.2472,1.1890,338.7343,-1,-1,30000); // RC Car 1
	AddStaticVehicleEx(512,-222.5546,-76.1256,3.3992,340.4907,-1,-1,30000); // RC Car 3
	AddStaticVehicleEx(512,-238.7895,-70.9152,3.3996,339.0088,-1,-1,30000); // RC Car 4
	AddStaticVehicleEx(512,-206.5327,-81.4946,3.3998,342.9680,-1,-1,30000); // RC Car 5
	AddStaticVehicleEx(531,-264.8163,23.7599,1.7562,153.3321,-1,-1,30000); // RC Car 6
	AddStaticVehicleEx(531,-262.0349,30.8006,1.7697,158.9931,-1,-1,30000); // RC Car 7
	AddStaticVehicleEx(531,-266.8913,17.9702,1.7464,161.6332,-1,-1,30000); // RC Car 8
	AddStaticVehicleEx(463,-259.6686,67.3058,0.9908,339.9808,-1,-1,30000); // RC Car 9
	AddStaticVehicleEx(463,-258.5809,70.2896,0.9916,339.0085,-1,-1,30000); // RC Car 10
	AddStaticVehicleEx(468,-255.5881,65.6610,1.2805,338.1430,-1,-1,30000); // RC Car 10
	AddStaticVehicleEx(468,-254.5610,68.2625,1.2819,336.0211,-1,-1,30000); // RC Car 11
	AddStaticVehicleEx(549,-281.6021,59.2042,0.9093,342.3868,-1,-1,30000); // RC Car 12
	AddStaticVehicleEx(549,-283.8352,52.0473,0.8875,341.2758,-1,-1,30000); // RC Car 13
	AddStaticVehicleEx(408,-244.4359,91.8410,2.1839,338.5645,-1,-1,30000); // RC Car 14
	AddStaticVehicleEx(468,-253.6085,70.9392,1.2699,343.1416,-1,-1,30000); // RC Car 15
	AddStaticVehicleEx(463,-257.5023,72.9531,0.9939,337.3482,-1,-1,30000); // RC Car 16
	AddStaticVehicleEx(586,-257.3898,66.6458,1.0588,339.3088,-1,-1,30000); // RC Car 17
	AddStaticVehicleEx(586,-256.3662,69.3708,1.0598,338.7706,-1,-1,30000); // RC Car 18
	AddStaticVehicleEx(586,-255.2812,72.1226,1.0604,337.2701,-1,-1,30000); // RC Car 19
	AddStaticVehicleEx(481,-250.8665,54.4637,1.4204,340.3134,-1,-1,30000); // RC Car 20
	AddStaticVehicleEx(509,-249.6348,54.0242,1.4703,340.5471,-1,-1,30000); // RC Car 21
	AddStaticVehicleEx(509,-252.7737,55.0595,1.3437,343.5393,-1,-1,30000); // RC Car 22
	AddStaticVehicleEx(552,-278.9744,18.7939,1.0347,342.2417,-1,-1,30000); // RC Car 23
	AddStaticVehicleEx(405,386.5638,2531.9985,16.4217,358.8192,-1,-1,30000); // BC Car 1
	AddStaticVehicleEx(405,381.5459,2531.7446,16.4468,178.7319,-1,-1,30000); // BC Car 2
	AddStaticVehicleEx(426,392.0290,2531.5303,16.2863,359.5163,-1,-1,30000); // BC Car 3
	AddStaticVehicleEx(463,396.6947,2537.9631,16.0841,60.5151,-1,-1,30000); // BC Car 4
	AddStaticVehicleEx(468,399.3648,2538.6494,16.2433,144.4253,-1,-1,30000); // BC Car 5
	AddStaticVehicleEx(468,403.3810,2545.6416,16.1701,328.5111,-1,-1,30000); // BC Car 6
	AddStaticVehicleEx(463,399.8314,2546.8853,16.0515,333.4064,-1,-1,30000); // BC Car 7
	AddStaticVehicleEx(586,409.9016,2534.7144,16.0674,76.6568,-1,-1,30000); // BC Car 8
	AddStaticVehicleEx(586,401.6114,2542.5474,16.0727,148.3207,-1,-1,30000); // BC Car 9
	AddStaticVehicleEx(521,419.3879,2542.8723,15.9913,89.9778,-1,-1,30000); // BC Car 10
	AddStaticVehicleEx(489,435.8488,2528.5720,17.0411,82.8399,-1,-1,30000); // BC Car 11
	AddStaticVehicleEx(489,436.4499,2536.8975,16.4583,267.9543,-1,-1,30000); // BC Car 12
	AddStaticVehicleEx(519,392.7186,2443.7854,17.4213,321.4440,-1,-1,30000); // BC Car 13
	AddStaticVehicleEx(487,365.5753,2537.4287,16.8371,180.4783,-1,-1,30000); // BC Car 14
	AddStaticVehicleEx(487,348.8792,2538.3171,16.9210,178.0355,-1,-1,30000); // BC Car 15
	AddStaticVehicleEx(593,325.7196,2547.3926,17.2641,178.7356,-1,-1,30000); // BC Car 16
	AddStaticVehicleEx(593,325.3962,2536.1282,17.2671,179.0009,-1,-1,30000); // BC Car 17
	AddStaticVehicleEx(513,287.1572,2547.8403,17.3636,213.9241,-1,-1,30000); // BC Car 18
	AddStaticVehicleEx(513,290.6566,2536.4023,17.3653,147.1591,-1,-1,30000); // BC Car 19
	AddStaticVehicleEx(553,267.9064,2449.7527,17.8159,343.6858,-1,-1,30000); // BC Car 20
	AddStaticVehicleEx(553,306.7434,2465.4446,17.8091,3.7638,-1,-1,30000); // BC Car 21
	AddStaticVehicleEx(514,374.0794,2471.2327,17.0742,358.8745,-1,-1,30000); // BC Car 22
	AddStaticVehicleEx(403,367.5522,2471.0205,17.0899,357.2487,-1,-1,30000); // BC Car 23
	AddStaticVehicleEx(592,205.9315,2542.6279,17.7163,181.3997,-1,-1,30000); // BC Car 24
	AddStaticVehicleEx(411,-1990.1450,265.7917,34.9028,84.6952,-1,-1,30000); // SF car 1
	AddStaticVehicleEx(426,-1990.8643,261.3614,34.9213,84.6940,-1,-1,30000); // SF car 2
	AddStaticVehicleEx(409,-1991.9891,241.4115,34.9738,266.4514,-1,-1,30000); // SF car 3
	AddStaticVehicleEx(402,-1991.8899,252.3995,35.0035,85.7448,-1,-1,30000); // SF car 4
	AddStaticVehicleEx(405,-1990.0349,275.4948,35.0464,85.6166,-1,-1,30000); // SF car 5
	AddStaticVehicleEx(489,-1987.9606,308.0785,35.3182,90.4973,-1,-1,30000); // SF car 6
	AddStaticVehicleEx(421,-1988.1794,302.5997,35.0693,90.6491,-1,-1,30000); // SF car 7
	AddStaticVehicleEx(560,-1954.0841,296.5442,35.1734,128.6748,-1,-1,30000); // SF car 8
	AddStaticVehicleEx(558,-1949.6256,270.9216,35.1016,90.3506,-1,-1,30000); // SF car 9
	AddStaticVehicleEx(562,-1948.8108,259.5767,35.1283,90.8312,-1,-1,30000); // SF car 10
	AddStaticVehicleEx(424,-1955.4059,306.0126,40.8273,178.0937,-1,-1,30000); // SF car 11
	AddStaticVehicleEx(581,-1950.7200,291.6961,40.6429,358.9550,-1,-1,30000); // SF car 12
	AddStaticVehicleEx(581,-1950.8083,295.9446,40.6429,358.5987,-1,-1,30000); // SF car 13
	AddStaticVehicleEx(586,-1946.2513,268.5699,40.5736,92.6570,-1,-1,30000); // SF car 14
	AddStaticVehicleEx(461,-1956.4938,253.5625,40.6251,95.7638,-1,-1,30000); // SF car 15
	AddStaticVehicleEx(461,-1959.0183,261.7681,40.6269,179.4725,-1,-1,30000); // SF car 16
	AddStaticVehicleEx(586,-1944.8101,277.0695,40.5668,91.7838,-1,-1,30000); // SF car 17
	AddStaticVehicleEx(521,-1952.3195,253.5868,40.6205,270.6406,-1,-1,30000); // SF car 18
	AddStaticVehicleEx(521,-1949.2258,253.5063,40.6190,272.1861,-1,-1,30000); // SF car 19
	AddStaticVehicleEx(525,-1913.2430,304.8378,40.9239,359.9189,-1,-1,30000); // SF car 20
	AddStaticVehicleEx(525,-1920.9877,305.2425,40.9344,0.7815,-1,-1,30000); // SF car 21
	AddStaticVehicleEx(444,-1922.6884,244.5762,41.4181,355.6942,-1,-1,30000); // SF car 22
	AddStaticVehicleEx(487,-1937.4652,297.0116,47.8444,226.0125,-1,-1,30000); // SF car 23
	AddStaticVehicleEx(593,-1951.9119,274.6629,48.2016,227.2775,-1,-1,30000); // SF car 24
	AddStaticVehicleEx(524,-2086.7534,256.3582,36.8219,179.1412,-1,-1,30000); // SF car 25
	AddStaticVehicleEx(486,-2130.2947,225.4829,36.0806,354.4895,-1,-1,30000); // SF car 26
	AddStaticVehicleEx(443,2296.7749,1387.8851,43.4538,90.2246,-1,-1,30000); // LV car 1
	AddStaticVehicleEx(541,2264.0220,1399.6082,42.4374,92.4765,-1,-1,30000); // LV car 2
	AddStaticVehicleEx(442,2301.9365,1415.9232,42.6486,89.9542,-1,-1,30000); // LV car 3
	AddStaticVehicleEx(529,2301.9631,1429.9044,42.4544,89.8707,-1,-1,30000); // LV car 4
	AddStaticVehicleEx(405,2302.1030,1444.2933,42.7072,89.7410,-1,-1,30000); // LV car 5
	AddStaticVehicleEx(442,2301.7678,1454.9913,42.6511,90.1286,-1,-1,30000); // LV car 6
	AddStaticVehicleEx(405,2301.4822,1465.8925,42.7017,89.1443,-1,-1,30000); // LV car 7
	AddStaticVehicleEx(426,2301.4915,1483.6301,42.5599,89.6283,-1,-1,30000); // LV car 8
	AddStaticVehicleEx(560,2352.0615,1487.2291,42.5284,270.3648,-1,-1,30000); // LV car 9
	AddStaticVehicleEx(560,2352.3989,1483.4777,42.5220,268.9733,-1,-1,30000); // LV car 10
	AddStaticVehicleEx(589,2351.9302,1476.5797,42.4852,270.9115,-1,-1,30000); // LV car 11
	AddStaticVehicleEx(539,2351.9871,1469.4070,42.1759,271.1547,-1,-1,30000); // LV car 12
	AddStaticVehicleEx(539,2351.8994,1465.6301,42.1758,269.9250,-1,-1,30000); // LV car 13
	AddStaticVehicleEx(534,2352.1648,1455.1050,42.5423,268.1785,-1,-1,30000); // LV car 14
	AddStaticVehicleEx(429,2352.2507,1444.4170,42.4974,269.6964,-1,-1,30000); // LV car 15
	AddStaticVehicleEx(580,2352.8643,1430.0464,42.6170,270.5798,-1,-1,30000); // LV car 16
	AddStaticVehicleEx(589,2352.0566,1422.8802,42.4784,269.2350,-1,-1,30000); // LV car 17
	AddStaticVehicleEx(470,2302.8218,1494.3181,42.8121,270.1528,-1,-1,30000); // LV car 18
	AddStaticVehicleEx(545,2315.7776,1520.0719,42.6314,180.7798,-1,-1,30000); // LV car 19
	AddStaticVehicleEx(545,2352.5527,1415.8058,42.6314,270.0919,-1,-1,30000); // LV car 20
	AddStaticVehicleEx(487,2327.4001,1469.9596,42.9825,179.4510,-1,-1,30000); // LV car 21
	AddStaticVehicleEx(463,2352.2263,1397.5020,42.3607,269.5331,-1,-1,30000); // LV car 22
	AddStaticVehicleEx(468,2356.2029,1400.9124,42.4887,179.5780,-1,-1,30000); // LV car 23
	AddStaticVehicleEx(468,2356.2449,1397.7692,42.4837,180.5214,-1,-1,30000); // LV car 24
	AddStaticVehicleEx(463,2352.1450,1400.2195,42.3603,270.8322,-1,-1,30000); // LV car 25*/
	admincar[1] = AddStaticVehicleEx(519,425.9163,2506.4832,17.4060,88.5630,126,126,30000); // AP Shamal
/*	AddStaticVehicleEx(411,1826.6426,-1668.8549,13.1891,179.8476,0,0,30000); // Alhambra Infernus
	AddStaticVehicleEx(409,1826.7052,-1677.8651,13.2608,180.1026,0,0,30000); // Alhambra Limo
	AddStaticVehicleEx(415,1827.0911,-1688.7493,13.2326,179.5101,0,0,30000); // Alhambra Cheetah
	AddStaticVehicleEx(429,1816.2953,-1671.3656,13.1414,181.9363,0,3,30000); // Alhambra Banshee*/
    copcar[34] = AddStaticVehicleEx(510,1547.0562,-1707.2654,5.4989,318.0993,125,125,30000); // Police Bike 1
	copcar[35] = AddStaticVehicleEx(510,1545.9861,-1710.2487,5.4882,0.2663,125,125,30000); // Police Bike 2
	copcar[36] = AddStaticVehicleEx(510,1550.2926,-1706.2130,5.4990,267.0946,125,125,30000); // Police Bike 3
	fbicar[17] = AddStaticVehicleEx(510,1529.0706,-1468.1816,9.1087,267.5729,0,0,30000); // FBI Bike 1
	fbicar[18] = AddStaticVehicleEx(510,1527.8865,-1466.2854,9.1043,179.7055,0,0,30000); // FBI Bike 2
	fbicar[19] = AddStaticVehicleEx(510,1527.8395,-1463.8020,9.1084,176.1754,0,0,30000); // FBI Bike 3
	armycar[29] = AddStaticVehicleEx(510,2773.6230,-2445.2188,13.2424,0.0334,102,102,30000); // Army Bike 1
	armycar[30] = AddStaticVehicleEx(510,2773.6143,-2447.8071,13.2453,2.1920,102,102,30000); // Army Bike 2
	armycar[31] = AddStaticVehicleEx(510,2773.7979,-2450.0603,13.2423,357.4250,102,102,30000); // Army Bike 3
/*	AddStaticVehicleEx(515,1027.2369,1793.4391,11.8283,226.4514,24,77,30000); // Roadtruck
	AddStaticVehicleEx(468,1033.6381,1798.5670,10.4895,88.0753,46,46,30000); // Sanchez
	AddStaticVehicleEx(521,1079.2930,1798.5446,10.3900,270.7072,87,118,30000); // FCR
	AddStaticVehicleEx(463,1082.7469,1798.3440,10.3607,270.7102,84,84,30000); // Freeway
	AddStaticVehicleEx(411,1112.5331,1790.0494,10.5474,89.7450,75,1,30000); // Infernus
	AddStaticVehicleEx(541,1112.0984,1786.0874,10.4453,89.4736,58,8,30000); // Bullet
	AddStaticVehicleEx(550,1100.2653,1797.1552,10.6424,268.8773,42,42,30000); // Sunrise
	AddStaticVehicleEx(402,1023.2667,1774.7668,10.6520,177.3148,13,13,30000); // buffalo
	AddStaticVehicleEx(422,1023.0059,1765.3071,10.8109,358.6017,111,31,30000); // Bobcat
	AddStaticVehicleEx(495,1023.4432,1751.5807,11.1712,175.9470,119,122,30000); // Sandking
	AddStaticVehicleEx(579,1023.0743,1741.7382,10.7534,178.4911,42,42,30000); // Huntley
	AddStaticVehicleEx(413,1092.7000,1797.3877,10.9113,88.3103,105,1,30000); // Pony
	AddStaticVehicleEx(560,1113.7958,1772.7911,10.5264,91.5895,9,39,30000); // Sultan
	AddStaticVehicleEx(445,1112.9213,1777.0554,10.6953,90.6931,35,35,30000); // Admiral
	AddStaticVehicleEx(426,1113.1735,1782.0083,10.5659,90.0824,11,11,30000); // Premier
	AddStaticVehicleEx(421,1112.9479,1768.1174,10.7031,95.4921,4,1,30000); // Washington
	AddStaticVehicleEx(489,1023.6674,1782.6938,10.9642,1.8467,84,110,30000); // Rancher
	AddStaticVehicleEx(487,1049.3506,1712.4460,10.9971,269.6615,54,29,30000); // Maverick
	AddStaticVehicleEx(487,1036.1388,1712.4041,10.9969,269.7502,26,57,30000); // Maverick*/
    fdcar[3] = AddStaticVehicleEx(407,612.3863,-1520.5392,15.2842,268.9373,3,3,30000); // Firetruck 1
	fdcar[4] = AddStaticVehicleEx(407,612.2194,-1515.6306,15.2072,271.4567,3,3,30000); // Firetruck 2
	fdcar[5] = AddStaticVehicleEx(407,612.3456,-1510.6039,15.1680,272.3371,3,3,30000); // Firetruck 3
	fdcar[6] = AddStaticVehicleEx(407,612.5201,-1505.9259,15.1453,272.7405,3,3,30000); // Firetruck 4
	fdcar[7] = AddStaticVehicleEx(407,612.4583,-1500.7700,15.1373,270.8872,3,3,30000); // Firetruck 5
	fdcar[8] = AddStaticVehicleEx(490,599.3893,-1519.8585,15.1724,357.9487,3,1,30000); // FD Rancher 1
	fdcar[9] = AddStaticVehicleEx(490,594.1722,-1519.5442,15.2496,359.1350,3,1,30000); // FD Rancher 2
	fdcar[10] = AddStaticVehicleEx(490,588.1111,-1511.5336,15.4283,311.9753,3,1,30000); // FD Rancher 3
	fdcar[11] = AddStaticVehicleEx(544,589.7178,-1498.3497,15.5708,242.3840,3,3,30000); // Firetruck LA 1
	fdcar[12] = AddStaticVehicleEx(544,590.1229,-1492.5366,15.5942,241.2381,3,3,30000); // Firetruck LA 2
    fdcar[13] = AddStaticVehicleEx(487,563.7242,-1514.5681,31.0678,357.9400,3,1,30000); // Firemen Maverick 1
	fdcar[14] = AddStaticVehicleEx(487,570.7896,-1501.5830,31.1024,359.8682,3,1,30000); // Firemen Maverick 2
	fdcar[15] = AddStaticVehicleEx(487,579.1158,-1512.7356,31.0295,0.0050,3,1,30000); // Firemen Maverick 3
	vicecar[4] = AddStaticVehicleEx(506,149.6856,-1770.3978,4.2119,321.2878,0,0,30000); // ¿≠∏± Super GT
    developercar[0] = AddStaticVehicleEx(532,2528.9788,2508.6179,22.8538,270.0828,0,0,30000); // Admin Combine
	developercar[1] = AddStaticVehicleEx(532,2528.9634,2518.6167,22.8474,269.2268,0,0,30000); // Admin Combine
	developercar[2] = AddStaticVehicleEx(409,2530.5425,2501.4438,21.6750,269.9512,0,0,30000); // Stretch
	developercar[3] = AddStaticVehicleEx(409,2530.5454,2496.6086,21.6750,268.8958,0,0,30000); // Stretch
	developercar[4] = AddStaticVehicleEx(406,2522.3811,2473.3342,23.3941,0.5822,0,0,30000); // Dumper
	developercar[5] = AddStaticVehicleEx(557,2508.7439,2509.9453,22.2501,269.7003,0,0,30000); // Monster
	developercar[6] = AddStaticVehicleEx(557,2508.8909,2515.1873,22.2500,269.5440,0,0,30000); // Monster
	developercar[7] = AddStaticVehicleEx(444,2508.7722,2520.3191,22.2463,269.6400,0,0,30000); // Monster
	developercar[8] = AddStaticVehicleEx(541,2484.9048,2521.1028,21.5013,89.9361,0,1,30000); // Bullet
	developercar[9] = AddStaticVehicleEx(541,2484.8433,2515.7319,21.5052,89.3086,0,1,30000); // Bullet
	developercar[10] = AddStaticVehicleEx(541,2484.7346,2510.0544,21.5049,89.6251,0,1,30000); // Bullet
	developercar[11] = AddStaticVehicleEx(415,2481.6611,2496.1279,21.6458,358.4620,0,1,30000); // Cheetah
	developercar[12] = AddStaticVehicleEx(415,2476.0920,2496.1733,21.6461,358.7393,0,1,30000); // Cheetah
	developercar[13] = AddStaticVehicleEx(415,2470.7974,2496.1516,21.6459,359.8340,0,1,30000); // Cheetah
	developercar[14] = AddStaticVehicleEx(415,2465.2888,2496.1909,21.6462,358.3192,0,1,30000); // Cheetah
	developercar[15] = AddStaticVehicleEx(421,2487.2483,2529.7930,21.7575,0.1923,0,1,30000); // Washington
	developercar[16] = AddStaticVehicleEx(421,2482.0188,2529.7019,21.7575,358.8430,0,1,30000); // Washington
	developercar[17] = AddStaticVehicleEx(522,2476.7219,2529.7971,21.4366,180.4192,0,0,30000); // NRG
	developercar[18] = AddStaticVehicleEx(522,2471.6194,2529.8767,21.4514,180.3470,0,0,30000); // NRG
	developercar[19] = AddStaticVehicleEx(522,2465.8484,2529.5447,21.4439,180.3370,0,0,30000); // NRG
	developercar[20] = AddStaticVehicleEx(522,2460.4351,2529.3337,21.4515,172.4646,0,0,30000); // NRG
	developercar[21] = AddStaticVehicleEx(510,2455.2385,2529.2830,21.4836,180.4454,0,0,30000); // Mountain
	developercar[22] = AddStaticVehicleEx(510,2449.9700,2529.4241,21.4828,182.0900,0,0,30000); // Mountain
	developercar[23] = AddStaticVehicleEx(510,2444.5762,2529.0852,21.4831,175.8720,0,0,30000); // Mountain
	developercar[24] = AddStaticVehicleEx(510,2438.6636,2529.2864,21.4829,175.8359,0,0,30000); // Mountain
	developercar[25] = AddStaticVehicleEx(601,2447.6846,2547.5500,21.6339,1.4449,0,0,30000); // SWAT Truck
	developercar[26] = AddStaticVehicleEx(601,2442.4475,2547.3682,21.6337,359.3963,0,0,30000); // SWAT Truck
	developercar[27] = AddStaticVehicleEx(601,2437.1799,2547.5225,21.6337,359.6624,0,0,30000); // SWAT Truck
	developercar[28] = AddStaticVehicleEx(427,2443.3474,2563.6584,22.0069,165.8121,0,0,30000); // Enforcer
	developercar[29] = AddStaticVehicleEx(427,2447.4778,2562.5222,22.0069,165.2147,0,0,30000); // Enforcer
	developercar[30] = AddStaticVehicleEx(427,2452.1338,2561.1497,22.0069,164.0194,0,0,30000); // Enforcer
	developercar[31] = AddStaticVehicleEx(528,2456.5991,2559.8411,21.9185,165.0172,0,0,30000); // FBI Truck
	developercar[32] = AddStaticVehicleEx(528,2460.7891,2558.7219,21.9186,164.6705,0,0,30000); // FBI Truck
	developercar[33] = AddStaticVehicleEx(528,2465.3125,2557.3315,21.9173,164.4307,0,0,30000); // FBI Truck
	developercar[34] = AddStaticVehicleEx(571,2469.9673,2556.9539,21.1588,344.0111,0,0,30000); // kart
	developercar[35] = AddStaticVehicleEx(571,2474.2712,2555.8198,21.1588,343.4932,0,0,30000); // kart
	developercar[36] = AddStaticVehicleEx(571,2478.6838,2554.5906,21.1586,343.7452,0,0,30000); // Kart
	developercar[37] = AddStaticVehicleEx(571,2483.1709,2553.3816,21.1587,340.5306,0,0,30000); // Kart
	developercar[38] = AddStaticVehicleEx(520,2418.4536,2554.4163,22.5983,267.0737,0,0,30000); // Hydra
	developercar[39] = AddStaticVehicleEx(425,2417.8074,2564.0513,22.4430,270.6320,0,0,30000); // Hunter
	developercar[40] = AddStaticVehicleEx(487,2418.1038,2540.1895,22.0520,270.3848,0,0,30000); // Maverick
	developercar[41] = AddStaticVehicleEx(487,2417.9202,2530.4050,22.0134,269.6079,0,0,30000); // Maverick
	developercar[42] = AddStaticVehicleEx(442,2506.3760,2530.8938,21.6996,90.5943,0,0,30000); // Romero
	developercar[43] = AddStaticVehicleEx(442,2506.2390,2536.2920,21.7019,90.5036,0,0,30000); // Romero
    developercar[44] = AddStaticVehicleEx(541,1276.8678,-2034.5912,58.6272,269.9207,0,1,30000); // Bullet
	developercar[45] = AddStaticVehicleEx(541,1276.9714,-2031.6281,58.6141,269.2465,0,1,30000); // Bullet
	developercar[46] = AddStaticVehicleEx(409,1260.9607,-2008.4473,59.1928,270.3773,0,0,30000); // Stretch
	developercar[47] = AddStaticVehicleEx(428,1248.0410,-2043.8069,59.8918,88.6364,0,0,30000); // securicar
	developercar[48] = AddStaticVehicleEx(411,1277.0035,-2028.8256,58.7049,269.1481,1,1,30000); // Infernus
	developercar[49] = AddStaticVehicleEx(487,1116.0256,-2018.3485,74.6064,359.2065,0,1,30000); // Helicopter
	developercar[50] = AddStaticVehicleEx(487,1116.4584,-2051.8528,74.5771,0.0324,0,1,30000); // Helicopter
	developercar[51] = AddStaticVehicleEx(525,1276.7650,-2008.7997,58.8153,89.6459,0,0,30000); // Tow truck
    anarchybike[0] = AddStaticVehicleEx(463,694.5745,-466.9713,15.8766,89.6139,114,114,30000); // Freeway 1
	anarchybike[1] = AddStaticVehicleEx(463,694.5972,-463.8564,15.8767,90.1194,114,114,30000); // Freeway 2
	anarchybike[2] = AddStaticVehicleEx(463,694.7354,-460.7444,15.8763,266.8154,114,114,30000); // Freeway 3
	anarchybike[3] = AddStaticVehicleEx(463,709.1793,-464.4446,15.8766,270.0296,114,114,30000); // Freeway 4
	anarchybike[4] = AddStaticVehicleEx(463,709.2618,-461.3916,15.8761,87.3742,114,114,30000); // Freeway 5
	anarchybike[5] = AddStaticVehicleEx(463,709.3861,-458.2468,15.8758,270.4592,114,114,30000); // Freeway 6
	anarchybike[6] = AddStaticVehicleEx(463,694.8008,-470.2188,15.8761,88.6982,114,114,30000); // Freeway 7
	anarchybike[7] = AddStaticVehicleEx(463,694.9393,-473.1948,15.8766,94.6246,114,114,30000); // Freeway 8
	anarchybike[8] = AddStaticVehicleEx(463,708.5647,-467.8399,15.8754,271.5996,114,114,30000); // Freeway 9
	anarchybike[9] = AddStaticVehicleEx(463,708.6929,-470.7145,15.8735,268.4506,114,114,30000); // Freeway 10
	// ----------------------- SALES VEHICLES ----------------------------
	salescar[0] = AddStaticVehicleEx(541,543.0609,-1290.8246,16.8670,358.5973,1,0,30000); // SALES
	salescar[1] = AddStaticVehicleEx(565,535.2302,-1291.4296,16.8673,2.9583,1,0,30000); // SALES
	salescar[2] = AddStaticVehicleEx(415,539.2599,-1290.7301,17.0128,358.4029,1,0,30000); // SALES
	salescar[3] = AddStaticVehicleEx(503,553.3989,-1290.7466,17.1423,359.1659,1,0,30000); // SALES
	salescar[4] = AddStaticVehicleEx(502,549.9384,-1290.8817,17.1417,355.8534,1,0,30000); // SALES
	salescar[5] = AddStaticVehicleEx(451,546.5211,-1290.4878,16.9533,356.9579,1,0,30000); // SALES
	salescar[6] = AddStaticVehicleEx(477,556.7828,-1290.7666,17.0049,358.9940,1,0,30000); // SALES
	salescar[7] = AddStaticVehicleEx(475,531.3427,-1290.6179,17.0447,356.6700,1,0,30000); // SALES
	salescar[8] = AddStaticVehicleEx(559,538.0715,-1273.3647,16.8984,219.5204,1,0,30000); // SALES
	salescar[9] = AddStaticVehicleEx(402,541.1536,-1271.3398,17.0755,219.7297,1,0,30000); // SALES
	salescar[10] = AddStaticVehicleEx(602,543.8123,-1269.3551,17.0520,219.3159,1,0,30000); // SALES
	salescar[11] = AddStaticVehicleEx(429,546.3149,-1267.7365,16.9240,218.6948,1,0,30000); // SALES
	salescar[12] = AddStaticVehicleEx(589,548.7606,-1266.0286,16.9003,215.4224,1,0,30000); // SALES
	salescar[13] = AddStaticVehicleEx(603,535.2454,-1276.1641,17.0805,218.5086,1,0,30000); // SALES
	salescar[14] = AddStaticVehicleEx(558,532.5562,-1278.9426,16.8727,220.5700,1,0,30000); // SALES
	salescar[15] = AddStaticVehicleEx(496,560.5264,-1291.2327,16.9641,357.8622,1,0,30000); // SALES
	salescar[16] = AddStaticVehicleEx(587,551.9647,-1264.1091,16.9703,218.3091,1,0,30000); // SALES
	salescar[17] = AddStaticVehicleEx(419,2121.8696,-1157.1920,23.9130,27.7800,1,0,30000); // SALES
	salescar[18] = AddStaticVehicleEx(585,2116.7539,-1157.1680,23.9756,332.7423,1,0,30000); // SALES
	salescar[19] = AddStaticVehicleEx(562,2136.3140,-1151.6346,23.7591,18.3705,1,0,30000); // SALES
	salescar[20] = AddStaticVehicleEx(542,2136.7002,-1144.2312,24.6420,27.2842,1,0,30000); // SALES
	salescar[21] = AddStaticVehicleEx(507,2136.4290,-1138.2516,25.3540,34.8599,1,0,30000); // SALES
	salescar[22] = AddStaticVehicleEx(445,2126.6514,-1150.8676,24.0103,13.0313,1,0,30000); // SALES
	salescar[23] = AddStaticVehicleEx(504,2118.3157,-1140.4364,24.7672,333.5218,1,0,30000); // SALES
	salescar[24] = AddStaticVehicleEx(401,2118.6985,-1133.9883,25.0315,329.4843,1,0,30000); // SALES
	salescar[25] = AddStaticVehicleEx(518,2117.6692,-1147.0259,24.2092,327.1269,1,0,30000); // SALES
	salescar[26] = AddStaticVehicleEx(527,2136.6123,-1133.4025,25.4096,37.6723,1,0,30000); // SALES
	salescar[27] = AddStaticVehicleEx(492,2161.4019,-1152.9475,23.7138,90.2915,1,0,30000); // SALES
	salescar[28] = AddStaticVehicleEx(550,2161.7690,-1158.0039,23.6621,90.5938,1,0,30000); // SALES
	salescar[29] = AddStaticVehicleEx(474,2161.6821,-1163.1808,23.5792,87.4369,1,0,30000); // SALES
	salescar[30] = AddStaticVehicleEx(546,2161.5149,-1168.2609,23.5431,89.6639,1,0,30000); // SALES
	salescar[31] = AddStaticVehicleEx(517,2161.5833,-1172.8306,23.6738,89.3943,1,0,30000); // SALES
	salescar[32] = AddStaticVehicleEx(560,2161.5271,-1177.9507,23.5232,88.6074,1,0,30000); // SALES
	salescar[33] = AddStaticVehicleEx(580,2161.5884,-1192.5327,23.6165,89.8833,1,0,30000); // SALES
	salescar[33] = AddStaticVehicleEx(405,2161.4639,-1187.4441,23.6941,89.9795,1,0,30000); // SALES
	salescar[34] = AddStaticVehicleEx(547,2161.5581,-1182.5784,23.5528,90.5186,1,0,30000); // SALES
	salescar[35] = AddStaticVehicleEx(466,2147.8455,-1161.7062,23.5647,268.9239,1,0,30000); // SALES
	salescar[36] = AddStaticVehicleEx(549,2147.4448,-1157.2966,23.5428,269.4373,1,0,30000); // SALES
	salescar[37] = AddStaticVehicleEx(529,2148.0132,-1152.8406,23.5744,268.4661,1,0,30000); // SALES
	salescar[38] = AddStaticVehicleEx(491,2148.1853,-1148.1708,24.1860,269.4979,1,0,30000); // SALES
	salescar[39] = AddStaticVehicleEx(540,2148.5828,-1143.1030,24.8420,269.6085,1,0,30000); // SALES
	salescar[40] = AddStaticVehicleEx(526,2148.3452,-1138.3409,25.2628,268.0768,1,0,30000); // SALES
	salescar[41] = AddStaticVehicleEx(421,2161.5366,-1143.8984,24.7124,89.2633,1,0,30000); // SALES
	salescar[42] = AddStaticVehicleEx(551,2148.2112,-1166.1749,23.6209,269.8854,1,0,30000); // SALES
	salescar[43] = AddStaticVehicleEx(516,2148.1865,-1170.8929,23.6545,268.6404,1,0,30000); // SALES
	salescar[44] = AddStaticVehicleEx(567,2161.6372,-1148.3027,24.2521,87.6367,1,0,30000); // SALES
	salescar[45] = AddStaticVehicleEx(410,2148.0808,-1175.6761,23.4725,267.2171,1,0,30000); // SALES
	salescar[46] = AddStaticVehicleEx(436,2147.7703,-1185.1099,23.5919,269.3396,1,0,30000); // SALES
	salescar[47] = AddStaticVehicleEx(426,2148.3987,-1180.3538,23.5640,268.9102,1,0,30000); // SALES
	salescar[48] = AddStaticVehicleEx(535,298.5308,-1536.0713,24.3582,54.5386,1,0,30000); // SALES
	salescar[49] = AddStaticVehicleEx(566,291.8534,-1545.3234,24.3721,53.6992,1,0,30000); // SALES
	salescar[50] = AddStaticVehicleEx(576,284.7757,-1526.8540,24.2030,235.0647,1,0,30000); // SALES
	salescar[51] = AddStaticVehicleEx(567,291.1718,-1517.5702,24.4622,236.8242,1,0,30000); // SALES
	salescar[52] = AddStaticVehicleEx(536,303.7823,-1486.2943,24.3314,232.3584,1,0,30000); // SALES
	salescar[53] = AddStaticVehicleEx(575,296.9255,-1508.3019,24.1945,237.5560,1,0,30000); // SALES
	salescar[54] = AddStaticVehicleEx(534,288.0195,-1522.2119,24.3171,234.3871,1,0,30000); // SALES
	salescar[55] = AddStaticVehicleEx(412,278.5959,-1535.9141,24.4319,236.8535,1,0,30000); // SALES
	salescar[56] = AddStaticVehicleEx(444,2500.9143,-1528.3926,24.2466,268.2790,1,0,30000); // SALES
	salescar[57] = AddStaticVehicleEx(556,2500.7866,-1533.2192,24.2102,269.4319,1,0,30000); // SALES
	salescar[58] = AddStaticVehicleEx(557,2500.7258,-1538.4304,24.1660,267.7269,1,0,30000); // SALES
	salescar[59] = AddStaticVehicleEx(500,2509.4939,-1551.0629,23.4186,352.6848,1,0,30000); // SALES
	salescar[60] = AddStaticVehicleEx(573,2501.3469,-1545.3002,24.2557,304.5020,1,0,30000); // SALES
	salescar[61] = AddStaticVehicleEx(588,2504.7021,-1549.4478,23.2836,323.5706,1,0,30000); // SALES
	salescar[62] = AddStaticVehicleEx(489,2514.3125,-1551.6260,23.4374,354.3112,1,0,30000); // SALES
	salescar[63] = AddStaticVehicleEx(505,2518.6045,-1551.9891,23.4241,355.9207,1,0,30000); // SALES
	salescar[64] = AddStaticVehicleEx(579,2522.9236,-1552.1431,23.2086,357.1764,1,0,30000); // SALES
	salescar[65] = AddStaticVehicleEx(400,2527.5151,-1551.9382,23.3748,4.6366,1,0,30000); // SALES
	salescar[66] = AddStaticVehicleEx(424,2531.0911,-1550.6160,23.1106,15.7083,1,0,30000); // SALES
	salescar[67] = AddStaticVehicleEx(568,2535.0601,-1549.2341,23.2394,33.1535,1,0,30000); // SALES
	salescar[68] = AddStaticVehicleEx(554,2538.5178,-1546.8706,23.5354,28.1911,1,0,30000); // SALES
	salescar[69] = AddStaticVehicleEx(552,2542.3733,-1542.6012,23.2892,64.8356,1,0,30000); // SALES
	salescar[70] = AddStaticVehicleEx(459,2542.4900,-1537.6768,23.7145,86.4155,1,0,30000); // SALES
	salescar[71] = AddStaticVehicleEx(600,2542.5835,-1533.2406,23.4608,88.9353,1,0,30000); // SALES
	salescar[72] = AddStaticVehicleEx(413,2542.1226,-1528.3813,23.8950,93.0128,1,0,30000); // SALES
	salescar[73] = AddStaticVehicleEx(543,2541.8816,-1521.8472,23.7314,89.6132,1,0,30000); // SALES
	salescar[74] = AddStaticVehicleEx(422,2541.9836,-1518.0792,23.9559,88.0640,1,0,30000); // SALES
	salescar[75] = AddStaticVehicleEx(508,2501.3765,-1524.2905,24.2763,271.1256,1,0,30000); // SALES
	salescar[76] = AddStaticVehicleEx(434,2521.5154,-1524.0886,23.8196,269.5847,1,0,30000); // SALES
	salescar[77] = AddStaticVehicleEx(495,2501.2925,-1520.4371,24.3084,271.2679,1,0,30000); // SALES
	salescar[78] = AddStaticVehicleEx(483,2501.1294,-1516.8464,23.9633,275.8793,1,0,30000); // SALES
	salescar[79] = AddStaticVehicleEx(409,528.0662,-1289.5070,17.0423,1.2135,1,0,30000); // SALES
	salescar[80] = AddStaticVehicleEx(545,567.1934,-1286.2345,17.0593,61.6075,1,0,30000); // SALES
	salescar[81] = AddStaticVehicleEx(480,566.1036,-1281.5399,17.0195,62.3639,1,0,30000); // SALES
	salescar[82] = AddStaticVehicleEx(533,565.0033,-1277.2231,16.9512,59.7891,1,0,30000); // SALES
	salescar[83] = AddStaticVehicleEx(439,564.3416,-1273.2400,17.1588,64.8692,1,0,30000); // SALES
	salescar[84] = AddStaticVehicleEx(555,563.4419,-1269.2400,16.9270,65.5802,1,0,30000); // SALES
	salescar[85] = AddStaticVehicleEx(458,530.0738,-1281.3375,17.1203,219.5397,1,0,30000); // SALES
	salescar[86] = AddStaticVehicleEx(571,312.2964,-1507.0470,23.8779,55.1405,1,0,30000); // SALES
	salescar[87] = AddStaticVehicleEx(561,300.2239,-1490.5111,24.4069,232.8351,1,0,30000); // SALES
	salescar[88] = AddStaticVehicleEx(479,2119.1257,-1127.5951,25.1321,328.9001,1,0,30000); // SALES
	salescar[89] = AddStaticVehicleEx(418,2136.3445,-1128.7157,25.6996,46.2893,1,0,30000); // SALES
	salescar[90] = AddStaticVehicleEx(404,2148.5898,-1133.8872,25.2987,267.0212,1,0,30000); // SALES
	salescar[91] = AddStaticVehicleEx(487,1788.9675,-2521.7319,13.7236,179.8252,1,0,30000); // SALES
	salescar[92] = AddStaticVehicleEx(417,1799.5465,-2561.0972,13.6306,358.7434,1,0,30000); // SALES
	salescar[93] = AddStaticVehicleEx(563,1812.9432,-2564.7859,14.2518,352.9634,1,0,30000); // SALES
	salescar[94] = AddStaticVehicleEx(469,1804.6257,-2520.3540,13.5586,182.5819,1,0,30000); // SALES
	salescar[95] = AddStaticVehicleEx(513,1778.4980,-2564.6677,14.1008,3.6061,1,0,30000); // SALES
	salescar[96] = AddStaticVehicleEx(519,1731.5485,-2522.6389,14.4700,183.6361,1,0,30000); // SALES
	salescar[97] = AddStaticVehicleEx(512,1764.4481,-2566.4099,13.8299,2.4591,1,0,30000); // SALES
	salescar[98] = AddStaticVehicleEx(553,1829.0958,-2539.0889,14.8782,89.6379,1,0,30000); // SALES
	salescar[99] = AddStaticVehicleEx(511,1754.2103,-2521.9424,14.9224,199.0208,1,0,30000); // SALES
	salescar[100] = AddStaticVehicleEx(593,1750.9543,-2566.3916,14.0061,1.6189,1,0,30000); // SALES
	salescar[101] = AddStaticVehicleEx(592,1700.3922,-2543.8792,14.7422,269.5303,1,0,30000); // SALES
	salescar[102] = AddStaticVehicleEx(473,2482.2244,-2256.3323,-0.2499,177.9062,1,0,30000); // SALES
	salescar[103] = AddStaticVehicleEx(493,2491.5454,-2268.5105,-0.1085,92.7009,1,0,30000); // SALES
	salescar[104] = AddStaticVehicleEx(484,2514.6511,-2268.4753,0.2336,89.9008,1,0,30000); // SALES
	salescar[105] = AddStaticVehicleEx(452,2531.1682,-2267.8184,-0.4777,91.6244,1,0,30000); // SALES
	salescar[106] = AddStaticVehicleEx(454,2543.1719,-2259.5369,0.2030,1.3563,1,0,30000); // SALES
	salescar[107] = AddStaticVehicleEx(446,2465.0110,-2252.2915,-0.5977,268.0267,1,0,30000); // SALES
	salescar[108] = AddStaticVehicleEx(460,2515.4893,-2276.6602,1.6918,91.7185,1,0,30000); // SALES
	salescar[109] = AddStaticVehicleEx(578,1096.7821,-1187.2573,18.9167,180.2069,1,0,30000); // SALES
	salescar[110] = AddStaticVehicleEx(499,1101.8308,-1189.7965,18.2747,178.8198,1,0,30000); // SALES
	salescar[111] = AddStaticVehicleEx(498,1108.2472,-1193.2380,18.1827,177.3489,1,0,30000); // SALES
	salescar[112] = AddStaticVehicleEx(609,1112.1169,-1193.3124,18.1380,178.1783,1,0,30000); // SALES
	salescar[113] = AddStaticVehicleEx(515,1110.3712,-1216.6370,18.8371,0.3541,1,0,30000); // SALES
	salescar[114] = AddStaticVehicleEx(514,1105.8967,-1216.2529,18.3969,359.5729,1,0,30000); // SALES
	salescar[115] = AddStaticVehicleEx(403,1101.6841,-1215.9174,18.4119,357.4414,1,0,30000); // SALES
	salescar[116] = AddStaticVehicleEx(443,1102.4591,-1225.2379,16.4547,90.6763,1,0,30000); // SALES
	salescar[117] = AddStaticVehicleEx(455,1097.0559,-1216.4620,18.2449,358.8047,1,0,30000); // SALES
	salescar[118] = AddStaticVehicleEx(414,1087.7847,-1193.3809,18.2399,233.3392,1,0,30000); // SALES
	salescar[119] = AddStaticVehicleEx(524,1091.1569,-1217.0675,18.7353,0.9055,1,0,30000); // SALES
	salescar[120] = AddStaticVehicleEx(530,1112.0623,-1230.9290,15.5819,178.0533,1,0,30000); // SALES
	salescar[121] = AddStaticVehicleEx(572,1113.4290,-1252.4667,15.4003,265.2650,1,0,30000); // SALES
	salescar[122] = AddStaticVehicleEx(428,1119.6527,-1246.3716,16.1359,3.7388,1,0,30000); // SALES
	salescar[123] = AddStaticVehicleEx(456,1106.1638,-1251.6553,15.9929,267.5423,1,0,30000); // SALES
	salescar[124] = AddStaticVehicleEx(478,1097.5693,-1251.7938,15.8226,270.3044,1,0,30000); // SALES
	salescar[125] = AddStaticVehicleEx(531,1091.8730,-1251.8969,15.7908,270.7320,1,0,30000); // SALES
	salescar[126] = AddStaticVehicleEx(583,1084.8715,-1247.1090,15.3674,268.4910,1,0,30000); // SALES
	salescar[127] = AddStaticVehicleEx(485,1084.5018,-1242.6335,15.4874,268.6089,1,0,30000); // SALES
	salescar[128] = AddStaticVehicleEx(539,1087.8739,-1224.6439,15.1788,178.2606,1,0,30000); // SALES
	salescar[129] = AddStaticVehicleEx(408,1084.4065,-1227.3961,16.3697,180.7804,1,0,30000); // SALES
	salescar[130] = AddStaticVehicleEx(581,2793.8521,-1613.3871,10.5168,63.6541,1,0,30000); // SALES
	salescar[131] = AddStaticVehicleEx(522,2794.7295,-1611.7551,10.4853,65.2000,1,0,30000); // SALES
	salescar[132] = AddStaticVehicleEx(461,2795.2405,-1610.3214,10.5155,62.3584,1,0,30000); // SALES
	salescar[133] = AddStaticVehicleEx(521,2795.8838,-1608.5911,10.5096,65.4215,1,0,30000); // SALES
	salescar[134] = AddStaticVehicleEx(586,2788.3115,-1626.2750,10.4329,351.2980,1,0,30000); // SALES
	salescar[135] = AddStaticVehicleEx(463,2784.9482,-1626.5918,10.4919,0.7453,1,0,30000); // SALES
	salescar[136] = AddStaticVehicleEx(462,2768.9375,-1619.0316,10.5275,271.3544,1,0,30000); // SALES
	salescar[137] = AddStaticVehicleEx(509,2773.9243,-1601.8761,10.4360,174.2738,1,0,30000); // SALES
	salescar[138] = AddStaticVehicleEx(481,2775.7393,-1602.1051,10.4367,176.4980,1,0,30000); // SALES
	salescar[139] = AddStaticVehicleEx(510,2777.4241,-1601.9158,10.5303,182.9147,1,0,30000); // SALES
	salescar[140] = AddStaticVehicleEx(468,2786.3762,-1626.4934,10.6043,3.9220,1,0,30000); // SALES
	salescar[141] = AddStaticVehicleEx(471,2768.8511,-1622.0321,10.4154,268.2091,1,0,30000); // SALES
	salescar[142] = AddStaticVehicleEx(457,2766.9783,-1615.3242,10.5487,268.3609,1,0,30000); // SALES
    salescar[143] = AddStaticVehicleEx(423,2520.9075,-1531.0503,23.5884,265.1847,1,0,30000); // SALES
    salescar[144] = AddStaticVehicleEx(486,1250.3673,-1258.0903,13.3715,273.0691,1,0,30000); // SALES DOZER
	salescar[145] = AddStaticVehicleEx(532,90.3147,-308.3673,2.5570,359.1030,1,0,30000); // SALES COMBINE
	salescar[146] = AddStaticVehicleEx(406,1649.5284,-2650.1135,15.0765,1.5477,1,0,30000); // SALES DUMPER
//-----------------------------------------------------------------------------------------------------------------------------------
    AddStaticVehicleEx(591,-1616.9197,69.3118,3.5495,133.5733,1,0,30000); // trailer
	AddStaticVehicleEx(591,-1620.8041,72.7629,3.5495,133.5733,1,0,30000); // trailer
	AddStaticVehicleEx(591,-1624.9913,76.5754,3.5547,133.5733,1,0,30000); // trailer
	AddStaticVehicleEx(591,-1604.2938,63.1768,3.5547,315.3083,1,0,30000); // trailer
	AddStaticVehicleEx(591,-1586.7299,80.9306,3.5547,135.3082,1,0,30000); // trailer
	AddStaticVehicleEx(591,-76.9940,-1110.6189,1.0781,156.6361,1,0,30000); // Trailer
	AddStaticVehicleEx(435,-71.1564,-1113.8475,1.0781,158.0344,1,0,30000); // Trailer
	AddStaticVehicleEx(435,-66.3369,-1119.5477,1.0781,152.7077,1,0,30000); // Trailer
	AddStaticVehicleEx(435,-82.7050,-1132.5922,1.0781,327.1635,1,0,30000); // Trailer
	AddStaticVehicleEx(584,1892.8357,-1793.7281,13.5469,88.7181,1,0,30000); // Gas trailer
	AddStaticVehicleEx(591,2456.8306,-2108.7595,13.5469,3.5141,1,0,30000); // trailer
	AddStaticVehicleEx(591,2461.9602,-2110.1558,13.5469,355.9940,1,0,30000); // trailer
	AddStaticVehicleEx(450,2467.2715,-2110.0820,13.5469,355.9940,1,0,30000); // trailer
	AddStaticVehicleEx(450,2500.4258,-2113.4692,13.5469,0.3574,1,0,30000); // trailer
	AddStaticVehicleEx(435,2532.1450,-2107.3564,13.5469,85.6574,1,0,30000); // trailer
	AddStaticVehicleEx(584,2531.7515,-2115.6172,13.5469,88.1641,1,0,30000); // trailer
    AddStaticVehicleEx(403,2458.5984,-2077.5225,13.5469,180.8157,1,0,30000); // Linerunner
	AddStaticVehicleEx(403,2470.1030,-2075.8335,13.5469,177.9956,1,0,30000); // Linerunner
	AddStaticVehicleEx(403,2437.5808,-2107.2761,13.5530,1.1290,1,0,30000); // Linerunner
	AddStaticVehicleEx(403,2430.3086,-2106.7422,13.5469,5.5157,1,0,30000); // Linerunner
	surenoscar[5] = AddStaticVehicleEx(567,1826.9275,-2039.7380,13.2444,179.6585,2,2,30000); // Surenos car
	surenoscar[6] = AddStaticVehicleEx(567,1819.2280,-2037.9430,13.2553,179.6457,2,2,30000); // Surenos car
	surenoscar[7] = AddStaticVehicleEx(482,1819.1713,-2029.4368,13.5070,179.7433,2,2,30000); // Surenos car
	surenoscar[8] = AddStaticVehicleEx(471,1806.4163,-2006.8411,13.0235,89.5740,2,2,30000); // Surenos car
	surenoscar[9] = AddStaticVehicleEx(471,1806.4330,-2004.5773,13.0230,87.8881,2,2,30000); // Surenos car
	surenoscar[10] = AddStaticVehicleEx(468,1834.1597,-2026.7461,13.2159,139.7674,2,2,30000); // Surenos car
	surenoscar[11] = AddStaticVehicleEx(468,1834.1261,-2028.4529,13.2127,137.6069,2,2,30000); // Surenos car
	surenoscar[12] = AddStaticVehicleEx(468,1834.0007,-2030.4828,13.2152,133.5641,2,2,30000); // Surenos car
	surenoscar[13] = AddStaticVehicleEx(510,1840.7816,-2019.9149,13.1548,0.3691,2,2,30000); // Surenos car
	surenoscar[14] = AddStaticVehicleEx(510,1840.9487,-2022.3887,13.1555,357.6378,2,2,30000); // Surenos car
	surenoscar[15] = AddStaticVehicleEx(469,1791.7242,-2000.4600,13.5143,359.2115,2,2,30000); // surenos car
	signatracar[3] = AddStaticVehicleEx(429,1274.0973,-829.9329,82.8203,88.6224,6,0,30000); // Banshee Signatra
	signatracar[4] = AddStaticVehicleEx(429,1287.5389,-830.2354,82.8203,88.8272,6,0,30000); // Banshee Signatra
	signatracar[5] = AddStaticVehicleEx(428,1255.7411,-804.3434,84.2646,180.1529,6,0,30000); // Signatra
	signatracar[6] = AddStaticVehicleEx(421,1242.3684,-807.4321,84.0231,206.9495,6,6,30000); // Signatra
	signatracar[7] = AddStaticVehicleEx(421,1243.2784,-803.5999,84.0236,218.7263,6,6,30000); // Signatra
	signatracar[8] = AddStaticVehicleEx(409,1248.5852,-805.1811,83.9406,180.6074,6,0,30000); // Signatra
	signatracar[9] = AddStaticVehicleEx(482,1240.5911,-821.4020,84.2683,155.4119,6,6,30000); // Signatra
	signatracar[10] = AddStaticVehicleEx(461,1306.6462,-801.1722,83.6953,176.4525,6,6,30000); // Signatra
	signatracar[11] = AddStaticVehicleEx(461,1305.0311,-801.1612,83.7255,182.3844,6,6,30000); // Signatra
	signatracar[12] = AddStaticVehicleEx(461,1305.9081,-798.3740,83.7185,178.4044,6,6,30000); // Signatra
	signatracar[13] = AddStaticVehicleEx(487,1295.7990,-788.6344,96.6307,358.5612,6,0,30000); // Signatra
	vicecar[5] = AddStaticVehicleEx(411,147.6993,-1754.9312,4.8489,359.8741,0,0,30000); // ¿≠∏±
	vicecar[6] = AddStaticVehicleEx(521,155.8537,-1762.6429,4.2364,358.2822,0,1,30000); // ¿≠∏±
	vicecar[7] = AddStaticVehicleEx(521,146.8828,-1769.2367,4.2055,0.4392,0,1,30000); // ¿≠∏±
	vicecar[8] = AddStaticVehicleEx(541,170.9745,-1774.2821,3.8257,89.4450,0,1,30000); // ¿≠∏±
	vicecar[9] = AddStaticVehicleEx(541,176.6112,-1774.3182,3.7351,88.8877,0,1,30000); // ¿≠∏±
	vicecar[10] = AddStaticVehicleEx(493,142.8602,-1815.1538,-0.1200,356.4245,0,1,30000); // ¿≠∏±
	vicecar[11] = AddStaticVehicleEx(493,140.0789,-1797.6908,-0.2000,17.1556,0,1,30000); // ¿≠∏±
	vicecar[12] = AddStaticVehicleEx(495,164.8149,-1783.9644,4.5291,268.3272,0,0,30000); // ¿≠∏±
	AddStaticVehicleEx(584,705.8912,-440.4820,16.3359,94.1265,0,0,30000); // Trailer
	anarchybike[10] = AddStaticVehicleEx(514,690.3946,-439.8338,16.9225,89.6216,114,114,30000); // √¿π˙”ÃÃ´∞Ô 114 114
	anarchybike[11] = AddStaticVehicleEx(468,693.0028,-452.7929,16.0050,180.6051,114,114,30000); // √¿π˙”ÃÃ´∞Ô
	anarchybike[12] = AddStaticVehicleEx(468,693.0840,-450.2655,16.0033,182.4882,114,114,30000); // √¿π˙”ÃÃ´∞Ô
	anarchybike[13] = AddStaticVehicleEx(468,711.0215,-454.4970,15.9894,181.8993,114,114,30000); // √¿π˙”ÃÃ´∞Ô
	anarchybike[14] = AddStaticVehicleEx(468,711.0353,-444.1802,16.0052,180.8114,114,114,30000); // √¿π˙”ÃÃ´∞Ô
	AddStaticVehicleEx(420,1763.9529,-1850.2318,13.2700,89.5278,6,6,30000); // TAXI
	AddStaticVehicleEx(420,1777.0497,-1850.2813,13.2726,88.6225,6,6,30000); // TAXI
	AddStaticVehicleEx(437,1755.0375,-1859.3087,13.6265,90.2817,6,0,30000); // Bus
	AddStaticVehicleEx(437,1767.5996,-1859.2478,13.6275,90.2177,6,0,30000); // Bus
	AddStaticVehicleEx(437,1779.7672,-1859.3280,13.6266,89.7163,6,0,30000); // Bus
	AddStaticVehicleEx(437,1791.8431,-1859.4441,13.6265,89.4766,6,0,30000); // Bus
	AddStaticVehicleEx(438,1790.8120,-1850.3438,13.4926,89.4600,6,0,30000); // Taxi
	AddStaticVehicleEx(438,1810.0251,-1850.8486,13.5032,88.8539,6,0,30000); // Taxi
	AddStaticVehicleEx(437,1803.5990,-1859.7802,13.6267,88.2115,6,0,30000); // Bus
	AddStaticVehicleEx(574,1668.6537,-1899.8236,13.2720,267.6652,1,1,30000); // Sweeper
	AddStaticVehicleEx(574,1669.2572,-1893.7932,13.2720,89.0004,1,1,30000); // Sweeper
	AddStaticVehicleEx(574,1669.2305,-1897.8838,13.2719,88.2807,1,1,30000); // Sweeper
	AddStaticVehicleEx(574,1651.9894,-1883.6919,13.2778,179.2658,1,1,30000); // Sweeper
	AddStaticVehicleEx(574,1649.6823,-1883.7217,13.2778,177.9070,1,1,30000); // Sweeper
	AddStaticVehicleEx(525,2089.3826,-1996.4927,13.4277,91.0702,0,0,30000); // Tow Truck
	AddStaticVehicleEx(525,2093.8792,-2000.1681,13.4225,88.7684,0,0,30000); // Tow Truck
	AddStaticVehicleEx(525,2079.1194,-2015.3557,13.4265,272.7825,0,0,30000); // Tow Truck
	AddStaticVehicleEx(525,2079.3335,-2010.8264,13.4286,270.8900,0,0,30000); // Tow Truck
	AddStaticVehicleEx(525,2102.7808,-2010.5750,13.4149,42.5003,0,0,30000); // Tow Truck
	AddStaticVehicleEx(552,2099.4714,-2028.1343,13.2574,314.0533,1,0,30000); // Utility Van
	AddStaticVehicleEx(552,2096.5454,-2025.2590,13.2528,315.0451,1,0,30000); // Utility Van
	AddStaticVehicleEx(552,2104.5618,-2033.5122,13.2472,314.0822,1,0,30000); // Utility Van
   	hitmencar[3] = AddStaticVehicleEx(461,1082.1561,-310.7266,73.5757,58.1138,0,0, 30000); // Hitmen Bike
	hitmencar[4] = AddStaticVehicleEx(461,1081.8062,-312.3098,73.5871,81.5071,0,0, 30000); // Hitmen Bike
	hitmencar[5] = AddStaticVehicleEx(461,1081.7549,-314.0566,73.5864,106.6530,0,0, 30000); // Hitmen Bike
	hitmencar[6] = AddStaticVehicleEx(487,1038.2389,-348.9474,74.1424,354.3348,0,0, 30000); // Hitmen Maverick
	hitmencar[7] = AddStaticVehicleEx(409,1082.7068,-338.1070,73.7924,271.6790,0,1, 30000); // Hitmen Limo
	hitmencar[8] = AddStaticVehicleEx(482,1041.7119,-303.3239,74.1186,194.1715,0,0, 30000); // Hitmen Burrito
	hitmencar[9] = AddStaticVehicleEx(482,1050.4072,-292.9874,74.1147,163.5958,0,0, 30000); // Hitmen Burrito
	hitmencar[10] = AddStaticVehicleEx(451,1015.1517,-300.5827,73.6981,209.5244,0,1, 30000); // Hitmen Turismo
	hitmencar[11] = AddStaticVehicleEx(451,1024.1422,-292.5638,73.7010,161.7099,0,1, 30000); // Hitmen turismo
	hitmencar[12] = AddStaticVehicleEx(411,1024.4528,-311.5430,73.7202,25.4639,0,0, 30000); // Hitmen Infernus
	hitmencar[13] = AddStaticVehicleEx(411,1050.5648,-312.4720,73.7201,26.6504,0,0, 30000); // Hitmen infernus

    for(new c = 1; c < MAX_VEHICLES; c ++)
	{
	    if(!IsAnOwnableCar(c))
	    {
			EncodeVehicle(c);
		}
	}

//-----------------------------------------------------------------------------------------------------------------------------------
	for(new c = 0; c < MAX_VEHICLES; c++)
	{
	    if(IsASalesVehicle(c))
	    {
	        new Float:x,Float:y,Float:z; GetVehiclePos(c, x,y,z);
	        new model[24]; GetVehicleName(c,model,sizeof(model));
	        format(PropertyString,sizeof(PropertyString),"’πœ˙≥µ¡æ! \n –Õ∫≈: %s (%d) \n ≥ˆ €º€∏Ò: $%d \n »Áπ˚ƒ„œÎπ∫¬Ú’‚¡æ«Î…œ≥µ ‰»Î{FFF0FF}/v buy",model,GetVehicleModel(c),GetVehiclePrice(c));
	        VehicleLabel[c] = Create3DTextLabel(PropertyString, 0xFF0000CC, x, y, z, 10, 0, 1);
	        Attach3DTextLabelToVehicle(VehicleLabel[c],c,0,0,0);
		}
	}
//-----------------------------------------------------------------------------------------------------------------------------------
	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		SetWorldTime(tmphour);
	}
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	ammutraintimer = SetTimer("AmmuTrain", 1000, 1);
	regularcounttimer = SetTimer("RegularCount", 1000, 1);
	Canrobagaintimer = SetTimer("CanRobAgain", 1000, 1);
	othtimer = SetTimer("OtherTimer", 500, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 1500, 1);
	idletimer = SetTimer("IdleKick", idletime, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	accountstimer = SetTimer("SaveAccounts", 900000, 1); //15 mins every account saved
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
    checkcarhealthtimer = SetTimer("CheckCarHealth", 10000, 1);
    burgertimer = SetTimer("UpdateBurgerPositions", 1000, 1);
	chickentimer = SetTimer("UpdateChickenPositions", 1000, 1);
	tracetimer = SetTimer("TraceLastCall", 300000, 1);
	
	scratchcarcp = CreateDynamicCP(2587.5195,-1543.7015,11.2107,7.0);
	return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	new cpstrings[128];
	if(checkpointid == scratchcarcp)
	{
		if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
	    {
	        new ownvehkey;
         	if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
            else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { ownvehkey = PlayerInfo[playerid][pPcarkey2]; }
      		format(cpstrings,sizeof(cpstrings),"ƒ„»∑∂®“™”√ƒ„µƒ≥µ◊”Ωªªª %d ≤ƒ¡œ?",(GetVehiclePrice(ownvehkey) / 5));
      		ShowPlayerDialog(playerid, 1000,DIALOG_STYLE_MSGBOX,"---≥µ¡æœ˙ªŸ---",cpstrings," «","≤ª «");
		}
		else
		{
			TogglePlayerDynamicCP(playerid, scratchcarcp, 1);
			SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ª‘⁄ƒ„◊‘º∫µƒ≥µ¿Ô!");
		}
	}
	return 1;
}

public SyncUp()
{
	SyncTime();
	DollahScoreUpdate();
}

public SyncTime()
{
	new string[128];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
      	format(string, sizeof(string), "∑˛ŒÒ∆˜Ã· æ: œ÷‘⁄µƒ ±º‰ « %d:00",tmphour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
		format(string, sizeof(string), "~y~Lotto Time!! ~n~~w~Select Your Number ~n~~p~/lotto 1-80 ~g~($100) ~n~~r~Prize: ~g~$%d", Jackpot);
        if(TD3D == 1)
		{
       		KillTimer(HideTD4Timer);
			TextDrawHideForAll(TD3);
	 		TextDrawSetString(TD3, string);
			TextDrawShowForAll(TD3);
			HideTD4Timer = SetTimer("HideTD4", 8500, false);
		}
		else
		{
			TextDrawSetString(TD3, string);
		   	TextDrawShowForAll(TD3);
		   	TD3D = 1;
		   	HideTD4Timer = SetTimer("HideTD4", 8500, false);
		}
		SetTimer("StartLotto",20000,false);
	}
}

public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerUpdateEx(i);
			if(PlayerInfo[i][pJob] > 0)
	    	{
	    	    if(PlayerInfo[i][pContractTime] < 25)
	    	    {
					PlayerInfo[i][pContractTime] ++;
				}
	    	}
		}
	}
}


public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}


public Production()
{
	new string[128];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFishes] >= 5) { if(FishCount[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCount[i] += 1; } }
		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
		    for(new k = 0; k < MAX_PLAYERS; k++)
			{
				if(IsPlayerConnected(k))
				{
				    if(gTeam[k] == 2 && CrimInRange(80.0, i,k))
				    {
					}
					else
					{
					    WantedPoints[i] -= 3;
					    if(WantedPoints[i] < 0) { WantedPoints[i] = 0; }
					    new points = WantedPoints[i];
					    new wlevel;
					    if(points > 0)
						{
						    new yesno;
							if(points == 3) { if(WantedLevel[i] != 1) { WantedLevel[i] = 1; wlevel = 1; yesno = 1; } }
							else if(points >= 4 && points <= 5) { if(WantedLevel[i] != 2) { WantedLevel[i] = 2; wlevel = 2; yesno = 1; } }
							else if(points >= 6 && points <= 7) { if(WantedLevel[i] != 3) { WantedLevel[i] = 3; wlevel = 3; yesno = 1; } }
							else if(points >= 8 && points <= 9) { if(WantedLevel[i] != 4) { WantedLevel[i] = 4; wlevel = 4; yesno = 1; } }
							else if(points >= 10 && points <= 11) { if(WantedLevel[i] != 5) { WantedLevel[i] = 5; wlevel = 5; yesno = 1; } }
							else if(points >= 12 && points <= 13) { if(WantedLevel[i] != 6) { WantedLevel[i] = 6; wlevel = 6; yesno = 1; } }
							else if(points >= 14) { if(WantedLevel[i] != 10) { WantedLevel[i] = 10; wlevel = 10; yesno = 1; } }
							else if(points <= 0) { if(WantedLevel[i] != 0) { ClearCrime(i); WantedLevel[i] = 0; wlevel = 0; yesno = 1;} }
							if(yesno)
							{
								format(string, sizeof(string), "ƒ„µ±«∞µƒÕ®º©µ»º∂: %d", wlevel);
								SendClientMessage(i, COLOR_YELLOW, string);
							}
						}
					}
				}
			}
		}
	}
}



public PayDay()
{
	new string[128];
	new account,interest;
	new rent = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
			    if(MoneyMessage[i]==1)
				{
				    new bank = PlayerInfo[i][pAccount];
				    SendClientMessage(i, COLOR_LIGHTRED, "ƒ„√ª”–÷ß∏∂ƒ„µƒ’ÆŒÒ,±ª≈–»Î”¸.");
				    GameTextForPlayer(i, "~r~Busted!", 2000, 1);
				    SafeSetPlayerInterior(i, 6);
			   		SafeSetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            SafeResetPlayerWeapons(i);
		            SafeResetPlayerMoney(i);
					SafeGivePlayerMoney(i, 1);
					WantedPoints[i] = 0;
					PlayerInfo[i][pAccount] = (bank + DebtMoney[i]);
					DebtMoney[i] = 0;
					PlayerInfo[i][pJailTime] = 240;
					TextDrawShowForPlayer(i, Textdraw1[i]);
					format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: Œﬁ∑®±£ Õ", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_WHITE, string);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				account = PlayerInfo[i][pAccount];
				new key = PlayerInfo[i][pPhousekey];
				if(key != 9999)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerMoney(i))
					{
						PlayerInfo[i][pPhousekey] = 9999;
						SendClientMessage(i, COLOR_WHITE, "ƒ„“—æ≠±ª÷≥ˆ.");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
				if (key != 999 && strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
				{
				    if(PlayerInfo[i][pRegularRank] > 0) { tmpintrate = intrate+4; }
					else { tmpintrate = intrate+2; }//HouseInfo[key][hLevel]
				}
				else
				{
				    if(PlayerInfo[i][pRegularRank] > 0) { tmpintrate = 3; }
					else { tmpintrate = 1; }
				}
				if(PlayerInfo[i][pPayDay] >= 5)
				{
				    Tax += TaxValue;//Should work for every player online
				    PlayerInfo[i][pAccount] -= TaxValue;
					new checks = PlayerInfo[i][pPayCheck] / 5;
					if(PlayerInfo[i][pRegularRank] > 0)
					{
					    new bonus = PlayerInfo[i][pPayCheck] / 10;
					    checks += bonus;
					}
				    new ebill = (PlayerInfo[i][pAccount]/10000)*(PlayerInfo[i][pLevel]);
				    account += checks;
				    if(PlayerInfo[i][pAccount] > 0)
				    {
				    	PlayerInfo[i][pAccount] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					interest = (PlayerInfo[i][pAccount]/1000)*(tmpintrate);
					PlayerInfo[i][pExp]++;
					PlayerPlayMusic(i);
					PlayerInfo[i][pAccount] = account+interest;
					SendClientMessage(i, COLOR_GREEN, "|___ “¯––…˘√˜ ___|");
					format(string, sizeof(string), "  –ΩÀÆ: $%d   À∞øÓ: -$%d", checks, TaxValue);
					SendClientMessage(i, COLOR_WHITE, string);
					if(PlayerInfo[i][pPhousekey] != 9999 || PlayerInfo[i][pPbiskey] != 9999)
					{
					    format(string, sizeof(string), "  µÁ∑—: -$%d", ebill);
						SendClientMessage(i, COLOR_GRAD1, string);
					}
					format(string, sizeof(string), "  ”‡∂Ó: $%d", account - checks);
					SendClientMessage(i, COLOR_WHITE, string);
					format(string, sizeof(string), "  ¿˚¬ :∞Ÿ∑÷÷Æ0.%d",tmpintrate);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  ¿˚œ¢:$%d", interest);
					SendClientMessage(i, COLOR_GRAD3, string);
					SendClientMessage(i, COLOR_GREEN, "|--------------------------------------|");
					format(string, sizeof(string), "  œ÷‘⁄”‡∂Ó: $%d", PlayerInfo[i][pAccount]);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "  ∑ø◊‚: -$%d", rent);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "~y~PayDay~n~~w~Check paid into your account");
					GameTextForPlayer(i, string, 5000, 1);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pPayCheck] = 0;
					if(FarmerVar[i] == 0)
					{
						FarmerPickup[i][0] = 0;
					}
					if(DrugFarmerVar[i] == 0)
					{
						DrugFarmerPickup[i][0] = 0;
					}
					if(SmugglerWork[i] == 0)
					{
						PayDaySecure[i] = 0;
					}
					if(PlayerInfo[i][pRegularRank] > 0)
					{
					    PlayerInfo[i][pPayDayHad] += 1;
					    if(PlayerInfo[i][pPayDayHad] >= 5)
					    {
					        PlayerInfo[i][pExp]++;
					        PlayerInfo[i][pPayDayHad] = 0;
					    }
					}
				}
				else
				{
				    SendClientMessage(i, COLOR_WHITE, "* ƒ„µƒ‘⁄œﬂ ±º‰≤ª◊„“‘»°µ√π§◊ .");
				}
			}
		}
	}
	SaveAccounts();
	new rand = random(2500); rand += 1245;
   	Jackpot += rand;
    SaveStuff();
    SaveAnticheat();
    format(string, sizeof(string), "≤ ∆±œ˚œ¢: Ω±Ω“—æ≠‘ˆº”µΩ $%d.", Jackpot);
	OOCOff(COLOR_WHITE, string);
	return 1;
}


public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
		new string3[64];
		new string[128];
		new playersip[24];
		new playername3[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername3, sizeof(playername3));
		GetPlayerIp(playerid, playersip, sizeof(playersip));
		
		format(string3, sizeof(string3), "LARP/Users/%s.ini", playername3);
		
		dini_Create(string3);
		new password2 = num_hash(password);
		PlayerInfo[playerid][pKey] = password2;
		dini_IntSet(string3, "Password",password2);
		dini_IntSet(string3, "Level",PlayerInfo[playerid][pLevel]);
		dini_IntSet(string3, "Spawn",PlayerInfo[playerid][pSpawn]);
		dini_IntSet(string3, "TesterLevel",PlayerInfo[playerid][pTester]);
		dini_IntSet(string3, "HelperLevel",PlayerInfo[playerid][pHelper]);
	    dini_IntSet(string3, "AdminLevel",PlayerInfo[playerid][pAdmin]);
	    dini_IntSet(string3, "RegularRank",PlayerInfo[playerid][pRegularRank]);
	    dini_IntSet(string3, "UpgradePoints",PlayerInfo[playerid][gPupgrade]);
	    dini_IntSet(string3, "ConnectedTime",PlayerInfo[playerid][pConnectSeconds]);
	    dini_IntSet(string3, "Registered",PlayerInfo[playerid][pReg]);
	    dini_IntSet(string3, "Sex",PlayerInfo[playerid][pSex]);
	    dini_IntSet(string3, "Age",PlayerInfo[playerid][pAge]);
	    dini_IntSet(string3, "GPS",PlayerInfo[playerid][pGPS]);
	    dini_IntSet(string3, "Origin",PlayerInfo[playerid][pOrigin]);
	    dini_IntSet(string3, "CK",PlayerInfo[playerid][pCK]);
	    dini_IntSet(string3, "Muted",PlayerInfo[playerid][pMuted]);
	    dini_IntSet(string3, "Frozen",PlayerInfo[playerid][pFrozen]);
	    dini_IntSet(string3, "Blind",PlayerInfo[playerid][pBlind]);
	    dini_IntSet(string3, "Respect",PlayerInfo[playerid][pExp]);
	    dini_IntSet(string3, "Money",PlayerInfo[playerid][pCash]);
	    PlayerInfo[playerid][pCash] = ScriptMoney[playerid];
	    dini_IntSet(string3, "Bank",PlayerInfo[playerid][pAccount]);
        dini_IntSet(string3, "Crimes",PlayerInfo[playerid][pCrimes]);
	    dini_Set(string3, "CrimeReason",PlayerInfo[playerid][pCrimeReason]);
	    dini_IntSet(string3, "Wanted",PlayerInfo[playerid][pWanted]);
	    dini_IntSet(string3, "WantedLevel",PlayerInfo[playerid][pWantedLevel]);
	    dini_IntSet(string3, "Kills",PlayerInfo[playerid][pKills]);
	    dini_IntSet(string3, "Deaths",PlayerInfo[playerid][pDeaths]);
	    dini_IntSet(string3, "Arrested",PlayerInfo[playerid][pArrested]);
	    dini_IntSet(string3, "WantedDeaths",PlayerInfo[playerid][pWantedDeaths]);
	    dini_IntSet(string3, "Phonebook",PlayerInfo[playerid][pPhoneBook]);
	    dini_IntSet(string3, "LottoNr",PlayerInfo[playerid][pLottoNr]);
	    dini_IntSet(string3, "Fishes",PlayerInfo[playerid][pFishes]);
	    dini_IntSet(string3, "BiggestFish",PlayerInfo[playerid][pBiggestFish]);
	    dini_IntSet(string3, "Job",PlayerInfo[playerid][pJob]);
	    dini_IntSet(string3, "Paycheck",PlayerInfo[playerid][pPayCheck]);
	    dini_IntSet(string3, "HeadValue",PlayerInfo[playerid][pHeadValue]);
	    dini_IntSet(string3, "Jailed",PlayerInfo[playerid][pJailed]);
	    dini_IntSet(string3, "JailTime",PlayerInfo[playerid][pJailTime]);
	    dini_IntSet(string3, "CanRobTime",PlayerInfo[playerid][pRobTime]);
	    dini_IntSet(string3, "Materials",PlayerInfo[playerid][pMats]);
	    dini_IntSet(string3, "Drugs",PlayerInfo[playerid][pDrugs]);
        dini_IntSet(string3, "Leader",PlayerInfo[playerid][pLeader]);
	    dini_IntSet(string3, "Member",PlayerInfo[playerid][pMember]);
	    dini_IntSet(string3, "FMember",PlayerInfo[playerid][pFMember]);
	    dini_IntSet(string3, "Rank",PlayerInfo[playerid][pRank]);
	    dini_IntSet(string3, "Char",PlayerInfo[playerid][pChar]);
	    dini_IntSet(string3, "ContractTime",PlayerInfo[playerid][pContractTime]);
	    dini_IntSet(string3, "DetSkill",PlayerInfo[playerid][pDetSkill]);
	    dini_IntSet(string3, "SexSkill",PlayerInfo[playerid][pSexSkill]);
	    dini_IntSet(string3, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
	    dini_IntSet(string3, "LawSkill",PlayerInfo[playerid][pLawSkill]);
	    dini_IntSet(string3, "MechSkill",PlayerInfo[playerid][pMechSkill]);
	    dini_IntSet(string3, "JackSkill",PlayerInfo[playerid][pJackSkill]);
	    dini_IntSet(string3, "CarSkill",PlayerInfo[playerid][pCarSkill]);
	    dini_IntSet(string3, "NewsSkill",PlayerInfo[playerid][pNewsSkill]);
	    dini_IntSet(string3, "DrugsSkill",PlayerInfo[playerid][pDrugsSkill]);
	    dini_IntSet(string3, "CookSkill",PlayerInfo[playerid][pCookSkill]);
	    dini_IntSet(string3, "FishSkill",PlayerInfo[playerid][pFishSkill]);
	    dini_FloatSet(string3, "pHealth",PlayerInfo[playerid][pHealth]);
	    dini_FloatSet(string3, "pArmour",PlayerInfo[playerid][pArmour]);
	    dini_IntSet(string3, "Int",PlayerInfo[playerid][pInt]);
	    dini_IntSet(string3, "InteriorNr",PlayerInfo[playerid][pInteriorNr]);
	    dini_IntSet(string3, "Local",PlayerInfo[playerid][pLocal]);
	    dini_IntSet(string3, "Team",PlayerInfo[playerid][pTeam]);
	    dini_IntSet(string3, "Model",PlayerInfo[playerid][pModel]);
	    dini_IntSet(string3, "PhoneNr",PlayerInfo[playerid][pPnumber]);
	    dini_IntSet(string3, "Car",PlayerInfo[playerid][pPcarkey]);
	    dini_IntSet(string3, "Car2",PlayerInfo[playerid][pPcarkey2]);
	    dini_IntSet(string3, "House",PlayerInfo[playerid][pPhousekey]);
	    dini_IntSet(string3, "Bizz",PlayerInfo[playerid][pPbiskey]);
	    dini_FloatSet(string3, "Pos_x",PlayerInfo[playerid][pPos_x]);
	    dini_FloatSet(string3, "Pos_y",PlayerInfo[playerid][pPos_y]);
	    dini_FloatSet(string3, "Pos_z",PlayerInfo[playerid][pPos_z]);
	    dini_IntSet(string3, "Passport",PlayerInfo[playerid][pPassport]);
        dini_IntSet(string3, "CarLic",PlayerInfo[playerid][pCarLic]);
	    dini_IntSet(string3, "FlyLic",PlayerInfo[playerid][pFlyLic]);
	    dini_IntSet(string3, "BoatLic",PlayerInfo[playerid][pBoatLic]);
	    dini_IntSet(string3, "FishLic",PlayerInfo[playerid][pFishLic]);
	    dini_IntSet(string3, "GunLic",PlayerInfo[playerid][pGunLic]);
	    dini_IntSet(string3, "CopLic",PlayerInfo[playerid][pCopLic]);
	    dini_IntSet(string3, "CarTime",PlayerInfo[playerid][pCarTime]);
	    dini_IntSet(string3, "PayDay",PlayerInfo[playerid][pPayDay]);
	    dini_IntSet(string3, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
	    dini_IntSet(string3, "Watch",PlayerInfo[playerid][pWatch]);
	    dini_IntSet(string3, "Crashed",PlayerInfo[playerid][pCrashed]);
	    dini_IntSet(string3, "Wins",PlayerInfo[playerid][pWins]);
  		dini_IntSet(string3, "Loses",PlayerInfo[playerid][pLoses]);
	    dini_IntSet(string3, "AlcoholPerk",PlayerInfo[playerid][pAlcoholPerk]);
	    dini_IntSet(string3, "DrugPerk",PlayerInfo[playerid][pDrugPerk]);
	    dini_IntSet(string3, "MiserPerk",PlayerInfo[playerid][pMiserPerk]);
	    dini_IntSet(string3, "PainPerk",PlayerInfo[playerid][pPainPerk]);
	    dini_IntSet(string3, "TraderPerk",PlayerInfo[playerid][pTraderPerk]);
		dini_IntSet(string3, "Tutorial",PlayerInfo[playerid][pTut]);
		dini_IntSet(string3, "VirWorld",PlayerInfo[playerid][pVirWorld]);
		dini_IntSet(string3, "Fuel",PlayerInfo[playerid][pFuel]);
		dini_IntSet(string3, "Married",PlayerInfo[playerid][pMarried]);
		dini_Set(string3, "MarriedTo",PlayerInfo[playerid][pMarriedTo]);
		dini_IntSet(string3, "FishTool",PlayerInfo[playerid][pFishTool]);
		dini_Set(string3, "WhyLeft",PlayerInfo[playerid][pWhyLeft]);
		dini_Set(string3, "Note1",PlayerInfo[playerid][pNote1]);
        dini_IntSet(string3, "Note1s",PlayerInfo[playerid][pNote1s]);
        dini_Set(string3, "Note2",PlayerInfo[playerid][pNote2]);
        dini_IntSet(string3, "Note2s",PlayerInfo[playerid][pNote2s]);
        dini_Set(string3, "Note3",PlayerInfo[playerid][pNote3]);
        dini_IntSet(string3, "Note3s",PlayerInfo[playerid][pNote3s]);
        dini_Set(string3, "Note4",PlayerInfo[playerid][pNote4]);
        dini_IntSet(string3, "Note4s",PlayerInfo[playerid][pNote4s]);
        dini_Set(string3, "Note5",PlayerInfo[playerid][pNote5]);
        dini_IntSet(string3, "Note5s",PlayerInfo[playerid][pNote5s]);
        dini_IntSet(string3, "InvWeapon",PlayerInfo[playerid][pInvWeapon]);
	    dini_IntSet(string3, "InvAmmo",PlayerInfo[playerid][pInvAmmo]);
	    dini_IntSet(string3, "InvWeapon2",PlayerInfo[playerid][pInvWeapon2]);
	    dini_IntSet(string3, "InvAmmo2",PlayerInfo[playerid][pInvAmmo2]);
	    dini_IntSet(string3, "InvWeapon3",PlayerInfo[playerid][pInvWeapon3]);
	    dini_IntSet(string3, "InvAmmo3",PlayerInfo[playerid][pInvAmmo3]);
	    dini_IntSet(string3, "InvWeapon4",PlayerInfo[playerid][pInvWeapon4]);
	    dini_IntSet(string3, "InvAmmo4",PlayerInfo[playerid][pInvAmmo4]);
	    dini_IntSet(string3, "InvWeapon5",PlayerInfo[playerid][pInvWeapon5]);
	    dini_IntSet(string3, "InvAmmo5",PlayerInfo[playerid][pInvAmmo5]);
        dini_IntSet(string3, "InvWeapon6",PlayerInfo[playerid][pInvWeapon6]);
	    dini_IntSet(string3, "InvAmmo6",PlayerInfo[playerid][pInvAmmo6]);
		dini_IntSet(string3, "Lighter",PlayerInfo[playerid][pLighter]);
	    dini_IntSet(string3, "Cigarettes",PlayerInfo[playerid][pCigarettes]);
	    dini_IntSet(string3, "DDManager",PlayerInfo[playerid][pDM]);
	    dini_IntSet(string3, "OnDuty",PlayerInfo[playerid][pDuty]);
	    dini_IntSet(string3, "Warnings",PlayerInfo[playerid][pWarned]);
	    dini_IntSet(string3, "Swat",PlayerInfo[playerid][pSwat]);
	    dini_IntSet(string3, "Fighting",PlayerInfo[playerid][pFS]);
	    dini_IntSet(string3, "Boxing",PlayerInfo[playerid][pBoxiSkill]);
	    dini_IntSet(string3, "KneeHead",PlayerInfo[playerid][pKneeSkill]);
        dini_IntSet(string3, "KungFu",PlayerInfo[playerid][pKungSkill]);
	    dini_IntSet(string3, "GrabKick",PlayerInfo[playerid][pGrabSkill]);
	    dini_IntSet(string3, "Elbow",PlayerInfo[playerid][pElbowSkill]);
	    dini_IntSet(string3, "Tactical",PlayerInfo[playerid][pTactical]);
	    dini_IntSet(string3, "SpecialF",PlayerInfo[playerid][pSpecialF]);
	    dini_IntSet(string3, "DutyBanned",PlayerInfo[playerid][pDBanned]);
	    dini_IntSet(string3, "DDTicket",PlayerInfo[playerid][pDTK]);
	    dini_IntSet(string3, "DDSTicket",PlayerInfo[playerid][pDSTK]);
	    dini_IntSet(string3, "Speedo",PlayerInfo[playerid][pSpeedo]);
        dini_IntSet(string3, "HydraDriver",PlayerInfo[playerid][pHydraR]);
	    dini_IntSet(string3, "HunterDriver",PlayerInfo[playerid][pHunterR]);
	    dini_IntSet(string3, "RhinoDriver",PlayerInfo[playerid][pRhinoR]);
	    dini_IntSet(string3, "PredatorDriver",PlayerInfo[playerid][pPredR]);
	    dini_IntSet(string3, "ViewPms",PlayerInfo[playerid][pViewPms]);
	    dini_IntSet(string3, "AppearList",PlayerInfo[playerid][pAppearList]);
	    dini_IntSet(string3, "AmmunationTime",PlayerInfo[playerid][pAmmuTrainTime]);
	    dini_IntSet(string3, "PistolSkill",PlayerInfo[playerid][pPistSkill]);
	    dini_IntSet(string3, "SilencedSkill",PlayerInfo[playerid][pSilenSkill]);
        dini_IntSet(string3, "DesertSkill",PlayerInfo[playerid][pDesertSkill]);
	    dini_IntSet(string3, "ShotgunSkill",PlayerInfo[playerid][pShotgSkill]);
	    dini_IntSet(string3, "SawnoffSkill",PlayerInfo[playerid][pSawnSkill]);
	    dini_IntSet(string3, "CombatSkill",PlayerInfo[playerid][pCombSkill]);
	    dini_IntSet(string3, "UziSkill",PlayerInfo[playerid][pUziSkill]);
	    dini_IntSet(string3, "SMGSkill",PlayerInfo[playerid][pSmgSkill]);
	    dini_IntSet(string3, "AK47Skill",PlayerInfo[playerid][pAkSkill]);
	    dini_IntSet(string3, "M4Skill",PlayerInfo[playerid][pM4Skill]);
	    dini_IntSet(string3, "TutorialDone",PlayerInfo[playerid][pTutDone]);
	    dini_IntSet(string3, "RegularCount",PlayerInfo[playerid][pRegularCount]);
	    dini_IntSet(string3, "PassportTime",PlayerInfo[playerid][pPassportTime]);
	    dini_IntSet(string3, "OfficerTime",PlayerInfo[playerid][pOfficerTime]);
	    dini_IntSet(string3, "Achievement0",PlayerInfo[playerid][pAchievement0]);
	    dini_IntSet(string3, "Achievement1",PlayerInfo[playerid][pAchievement1]);
	    dini_IntSet(string3, "Achievement2",PlayerInfo[playerid][pAchievement2]);
	    dini_IntSet(string3, "Achievement3",PlayerInfo[playerid][pAchievement3]);
	    dini_IntSet(string3, "Achievement4",PlayerInfo[playerid][pAchievement4]);
	    dini_IntSet(string3, "Achievement5",PlayerInfo[playerid][pAchievement5]);
	    dini_IntSet(string3, "Achievement6",PlayerInfo[playerid][pAchievement6]);
	    dini_IntSet(string3, "Achievement7",PlayerInfo[playerid][pAchievement7]);
	    dini_IntSet(string3, "Achievement8",PlayerInfo[playerid][pAchievement8]);
	    dini_IntSet(string3, "Achievement9",PlayerInfo[playerid][pAchievement9]);
	    dini_IntSet(string3, "Achievement10",PlayerInfo[playerid][pAchievement10]);
	    dini_IntSet(string3, "Achievement11",PlayerInfo[playerid][pAchievement11]);
	    dini_IntSet(string3, "Achievement12",PlayerInfo[playerid][pAchievement12]);
	    dini_IntSet(string3, "Achievement13",PlayerInfo[playerid][pAchievement13]);
	    dini_IntSet(string3, "Achievement14",PlayerInfo[playerid][pAchievement14]);
	    dini_IntSet(string3, "Achievement15",PlayerInfo[playerid][pAchievement15]);
	    dini_IntSet(string3, "Achievement16",PlayerInfo[playerid][pAchievement16]);
	    dini_IntSet(string3, "Achievement17",PlayerInfo[playerid][pAchievement17]);
	    dini_IntSet(string3, "Achievement18",PlayerInfo[playerid][pAchievement18]);
	    dini_IntSet(string3, "Achievement19",PlayerInfo[playerid][pAchievement19]);
	    dini_IntSet(string3, "Achievement20",PlayerInfo[playerid][pAchievement20]);
	    dini_IntSet(string3, "ShiftName",PlayerInfo[playerid][pShiftName]);
	    dini_IntSet(string3, "Weapon",PlayerInfo[playerid][pWeapon]);
	    dini_IntSet(string3, "Ammo",PlayerInfo[playerid][pAmmo]);
	    dini_IntSet(string3, "Weapon2",PlayerInfo[playerid][pWeapon2]);
	    dini_IntSet(string3, "Ammo2",PlayerInfo[playerid][pAmmo2]);
	    dini_IntSet(string3, "Weapon3",PlayerInfo[playerid][pWeapon3]);
	    dini_IntSet(string3, "Ammo3",PlayerInfo[playerid][pAmmo3]);
	    dini_IntSet(string3, "Weapon4",PlayerInfo[playerid][pWeapon4]);
	    dini_IntSet(string3, "Ammo4",PlayerInfo[playerid][pAmmo4]);
	    dini_IntSet(string3, "Weapon5",PlayerInfo[playerid][pWeapon5]);
	    dini_IntSet(string3, "Ammo5",PlayerInfo[playerid][pAmmo5]);
	    dini_IntSet(string3, "Weapon6",PlayerInfo[playerid][pWeapon6]);
	    dini_IntSet(string3, "Ammo6",PlayerInfo[playerid][pAmmo6]);
	    dini_IntSet(string3, "Weapon7",PlayerInfo[playerid][pWeapon7]);
	    dini_IntSet(string3, "Ammo7",PlayerInfo[playerid][pAmmo7]);
	    dini_IntSet(string3, "Weapon8",PlayerInfo[playerid][pWeapon8]);
	    dini_IntSet(string3, "Ammo8",PlayerInfo[playerid][pAmmo8]);
	    dini_IntSet(string3, "Weapon9",PlayerInfo[playerid][pWeapon9]);
	    dini_IntSet(string3, "Ammo9",PlayerInfo[playerid][pAmmo9]);
	    dini_IntSet(string3, "Weapon10",PlayerInfo[playerid][pWeapon10]);
	    dini_IntSet(string3, "Ammo10",PlayerInfo[playerid][pAmmo10]);
	    dini_IntSet(string3, "Weapon11",PlayerInfo[playerid][pWeapon11]);
	    dini_IntSet(string3, "Ammo11",PlayerInfo[playerid][pAmmo11]);
	    dini_IntSet(string3, "Weapon12",PlayerInfo[playerid][pWeapon12]);
	    dini_IntSet(string3, "Ammo12",PlayerInfo[playerid][pAmmo12]);
	    dini_IntSet(string3, "Atc",PlayerInfo[playerid][pAtc]);
	    dini_IntSet(string3, "AtcRadio",PlayerInfo[playerid][pAtcRadio]);
	    dini_IntSet(string3, "Pending",PlayerInfo[playerid][pPending]);
	    dini_Set(string3, "PendingInfo",PlayerInfo[playerid][pPendingInfo]);
	    dini_IntSet(string3, "ChatMode",PlayerInfo[playerid][pChatMode]);
	    dini_Set(string3, "Punishment1",PlayerInfo[playerid][pPunishment1]);
	    dini_Set(string3, "Punishment2",PlayerInfo[playerid][pPunishment2]);
	    dini_Set(string3, "Punishment3",PlayerInfo[playerid][pPunishment3]);
	    dini_Set(string3, "Punishment4",PlayerInfo[playerid][pPunishment4]);
	    dini_Set(string3, "Punishment5",PlayerInfo[playerid][pPunishment5]);
	    dini_Set(string3, "Punishment6",PlayerInfo[playerid][pPunishment6]);
	    dini_Set(string3, "Punishment7",PlayerInfo[playerid][pPunishment7]);
	    dini_Set(string3, "Punishment8",PlayerInfo[playerid][pPunishment8]);
	    dini_IntSet(string3, "NextPunishment",PlayerInfo[playerid][pNextPunishment]);
	    dini_IntSet(string3, "PunishedTimes",PlayerInfo[playerid][pPunished]);
	    dini_IntSet(string3, "TazerBullets",PlayerInfo[playerid][pTazerBullets]);
	    dini_Set(string3, "IP",PlayerInfo[playerid][pIP]);
	    dini_Set(string3, "LastLogged",PlayerInfo[playerid][pLastSeen]);
	    dini_IntSet(string3, "Changed",PlayerInfo[playerid][pChanged]);
	    dini_Set(string3, "RegistredDate",PlayerInfo[playerid][pRegistredDate]);
	    dini_IntSet(string3, "BizzEntered",BizzEntered[playerid]);
	    dini_IntSet(string3, "HouseEntered",HouseEntered[playerid]);
	    dini_IntSet(string3, "Decoder",PlayerInfo[playerid][pDecoder]);
	    dini_IntSet(string3, "Banned",PlayerInfo[playerid][pBanned]);
	    
	    dini_IntSet(string3, "KillStart",KillSpawnStart[playerid]);

		ShowPlayerDialog(playerid, 1245, DIALOG_STYLE_INPUT,"ª∂”≠π‚¡Ÿ,«Îœ»µ«¬º","’Àªß◊ ¡œ“—≥…π¶–¥»Î ˝æ›ø‚!{FFFFF0}«Îƒ„œ÷‘⁄µ«¬º\n«Î‘⁄œ¬√Ê ‰»Îƒ„µƒ√‹¬Î£∫","µ«¬º","ÕÀ≥ˆ");
        new y,m,d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d) [%d:%d:%d] %s Has registred in under IP %s.",d,m,y,h,mi,s,playername3,playersip);
		PlayerInfo[playerid][pReg] = 0;
		LoginLog(string);
	}
	return 1;
}

public OnPlayerUpdateEx(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
	    if(gPlayerLogged[playerid] == 1)
	    {
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "LARP/Users/%s.ini", playername3);
			
			dini_IntSet(string3, "Password",PlayerInfo[playerid][pKey]);
			dini_IntSet(string3, "Level",PlayerInfo[playerid][pLevel]);
			dini_IntSet(string3, "Spawn",PlayerInfo[playerid][pSpawn]);
			dini_IntSet(string3, "TesterLevel",PlayerInfo[playerid][pTester]);
			dini_IntSet(string3, "HelperLevel",PlayerInfo[playerid][pHelper]);
		    dini_IntSet(string3, "AdminLevel",PlayerInfo[playerid][pAdmin]);
		    dini_IntSet(string3, "RegularRank",PlayerInfo[playerid][pRegularRank]);
		    dini_IntSet(string3, "UpgradePoints",PlayerInfo[playerid][gPupgrade]);
		    dini_IntSet(string3, "ConnectedTime",PlayerInfo[playerid][pConnectSeconds]);
		    dini_IntSet(string3, "Registered",PlayerInfo[playerid][pReg]);
		    dini_IntSet(string3, "Sex",PlayerInfo[playerid][pSex]);
		    dini_IntSet(string3, "Age",PlayerInfo[playerid][pAge]);
		    dini_IntSet(string3, "GPS",PlayerInfo[playerid][pGPS]);
		    dini_IntSet(string3, "Origin",PlayerInfo[playerid][pOrigin]);
		    dini_IntSet(string3, "CK",PlayerInfo[playerid][pCK]);
		    dini_IntSet(string3, "Muted",PlayerInfo[playerid][pMuted]);
		    dini_IntSet(string3, "Frozen",PlayerInfo[playerid][pFrozen]);
		    dini_IntSet(string3, "Blind",PlayerInfo[playerid][pBlind]);
		    dini_IntSet(string3, "Respect",PlayerInfo[playerid][pExp]);
		    dini_IntSet(string3, "Money",PlayerInfo[playerid][pCash]);
		    PlayerInfo[playerid][pCash] = ScriptMoney[playerid];
		    dini_IntSet(string3, "Bank",PlayerInfo[playerid][pAccount]);
	        dini_IntSet(string3, "Crimes",PlayerInfo[playerid][pCrimes]);
		    dini_Set(string3, "CrimeReason",PlayerInfo[playerid][pCrimeReason]);
		    dini_IntSet(string3, "Wanted",PlayerInfo[playerid][pWanted]);
		    dini_IntSet(string3, "WantedLevel",PlayerInfo[playerid][pWantedLevel]);
		    dini_IntSet(string3, "Kills",PlayerInfo[playerid][pKills]);
		    dini_IntSet(string3, "Deaths",PlayerInfo[playerid][pDeaths]);
		    dini_IntSet(string3, "Arrested",PlayerInfo[playerid][pArrested]);
		    dini_IntSet(string3, "WantedDeaths",PlayerInfo[playerid][pWantedDeaths]);
		    dini_IntSet(string3, "Phonebook",PlayerInfo[playerid][pPhoneBook]);
		    dini_IntSet(string3, "LottoNr",PlayerInfo[playerid][pLottoNr]);
		    dini_IntSet(string3, "Fishes",PlayerInfo[playerid][pFishes]);
		    dini_IntSet(string3, "BiggestFish",PlayerInfo[playerid][pBiggestFish]);
		    dini_IntSet(string3, "Job",PlayerInfo[playerid][pJob]);
		    dini_IntSet(string3, "Paycheck",PlayerInfo[playerid][pPayCheck]);
		    dini_IntSet(string3, "HeadValue",PlayerInfo[playerid][pHeadValue]);
		    dini_IntSet(string3, "Jailed",PlayerInfo[playerid][pJailed]);
		    dini_IntSet(string3, "JailTime",PlayerInfo[playerid][pJailTime]);
		    dini_IntSet(string3, "CanRobTime",PlayerInfo[playerid][pRobTime]);
		    dini_IntSet(string3, "Materials",PlayerInfo[playerid][pMats]);
		    dini_IntSet(string3, "Drugs",PlayerInfo[playerid][pDrugs]);
	        dini_IntSet(string3, "Leader",PlayerInfo[playerid][pLeader]);
		    dini_IntSet(string3, "Member",PlayerInfo[playerid][pMember]);
		    dini_IntSet(string3, "FMember",PlayerInfo[playerid][pFMember]);
		    dini_IntSet(string3, "Rank",PlayerInfo[playerid][pRank]);
		    dini_IntSet(string3, "Char",PlayerInfo[playerid][pChar]);
		    dini_IntSet(string3, "ContractTime",PlayerInfo[playerid][pContractTime]);
		    dini_IntSet(string3, "DetSkill",PlayerInfo[playerid][pDetSkill]);
		    dini_IntSet(string3, "SexSkill",PlayerInfo[playerid][pSexSkill]);
		    dini_IntSet(string3, "BoxSkill",PlayerInfo[playerid][pBoxSkill]);
		    dini_IntSet(string3, "LawSkill",PlayerInfo[playerid][pLawSkill]);
		    dini_IntSet(string3, "MechSkill",PlayerInfo[playerid][pMechSkill]);
		    dini_IntSet(string3, "JackSkill",PlayerInfo[playerid][pJackSkill]);
		    dini_IntSet(string3, "CarSkill",PlayerInfo[playerid][pCarSkill]);
		    dini_IntSet(string3, "NewsSkill",PlayerInfo[playerid][pNewsSkill]);
		    dini_IntSet(string3, "DrugsSkill",PlayerInfo[playerid][pDrugsSkill]);
		    dini_IntSet(string3, "CookSkill",PlayerInfo[playerid][pCookSkill]);
		    dini_IntSet(string3, "FishSkill",PlayerInfo[playerid][pFishSkill]);
	    	dini_FloatSet(string3, "pHealth",PlayerInfo[playerid][pHealth]);
		    dini_FloatSet(string3, "pArmour",PlayerInfo[playerid][pArmour]);
		    dini_IntSet(string3, "Int",PlayerInfo[playerid][pInt]);
		    dini_IntSet(string3, "InteriorNr",PlayerInfo[playerid][pInteriorNr]);
		    dini_IntSet(string3, "Local",PlayerInfo[playerid][pLocal]);
		    dini_IntSet(string3, "Team",PlayerInfo[playerid][pTeam]);
		    dini_IntSet(string3, "Model",PlayerInfo[playerid][pModel]);
		    dini_IntSet(string3, "PhoneNr",PlayerInfo[playerid][pPnumber]);
		    dini_IntSet(string3, "Car",PlayerInfo[playerid][pPcarkey]);
		    dini_IntSet(string3, "Car2",PlayerInfo[playerid][pPcarkey2]);
		    dini_IntSet(string3, "House",PlayerInfo[playerid][pPhousekey]);
		    dini_IntSet(string3, "Bizz",PlayerInfo[playerid][pPbiskey]);
		    dini_FloatSet(string3, "Pos_x",PlayerInfo[playerid][pPos_x]);
		    dini_FloatSet(string3, "Pos_y",PlayerInfo[playerid][pPos_y]);
		    dini_FloatSet(string3, "Pos_z",PlayerInfo[playerid][pPos_z]);
		    dini_IntSet(string3, "Passport",PlayerInfo[playerid][pPassport]);
	        dini_IntSet(string3, "CarLic",PlayerInfo[playerid][pCarLic]);
		    dini_IntSet(string3, "FlyLic",PlayerInfo[playerid][pFlyLic]);
		    dini_IntSet(string3, "BoatLic",PlayerInfo[playerid][pBoatLic]);
		    dini_IntSet(string3, "FishLic",PlayerInfo[playerid][pFishLic]);
		    dini_IntSet(string3, "GunLic",PlayerInfo[playerid][pGunLic]);
		    dini_IntSet(string3, "CopLic",PlayerInfo[playerid][pCopLic]);
		    dini_IntSet(string3, "CarTime",PlayerInfo[playerid][pCarTime]);
		    dini_IntSet(string3, "PayDay",PlayerInfo[playerid][pPayDay]);
		    dini_IntSet(string3, "PayDayHad",PlayerInfo[playerid][pPayDayHad]);
		    dini_IntSet(string3, "Watch",PlayerInfo[playerid][pWatch]);
		    dini_IntSet(string3, "Crashed",PlayerInfo[playerid][pCrashed]);
		    dini_IntSet(string3, "Wins",PlayerInfo[playerid][pWins]);
	  		dini_IntSet(string3, "Loses",PlayerInfo[playerid][pLoses]);
		    dini_IntSet(string3, "AlcoholPerk",PlayerInfo[playerid][pAlcoholPerk]);
		    dini_IntSet(string3, "DrugPerk",PlayerInfo[playerid][pDrugPerk]);
		    dini_IntSet(string3, "MiserPerk",PlayerInfo[playerid][pMiserPerk]);
		    dini_IntSet(string3, "PainPerk",PlayerInfo[playerid][pPainPerk]);
		    dini_IntSet(string3, "TraderPerk",PlayerInfo[playerid][pTraderPerk]);
			dini_IntSet(string3, "Tutorial",PlayerInfo[playerid][pTut]);
			dini_IntSet(string3, "VirWorld",PlayerInfo[playerid][pVirWorld]);
			dini_IntSet(string3, "Fuel",PlayerInfo[playerid][pFuel]);
			dini_IntSet(string3, "Married",PlayerInfo[playerid][pMarried]);
			dini_Set(string3, "MarriedTo",PlayerInfo[playerid][pMarriedTo]);
			dini_IntSet(string3, "FishTool",PlayerInfo[playerid][pFishTool]);
			dini_Set(string3, "WhyLeft",PlayerInfo[playerid][pWhyLeft]);
			dini_Set(string3, "Note1",PlayerInfo[playerid][pNote1]);
	        dini_IntSet(string3, "Note1s",PlayerInfo[playerid][pNote1s]);
	        dini_Set(string3, "Note2",PlayerInfo[playerid][pNote2]);
	        dini_IntSet(string3, "Note2s",PlayerInfo[playerid][pNote2s]);
	        dini_Set(string3, "Note3",PlayerInfo[playerid][pNote3]);
	        dini_IntSet(string3, "Note3s",PlayerInfo[playerid][pNote3s]);
	        dini_Set(string3, "Note4",PlayerInfo[playerid][pNote4]);
	        dini_IntSet(string3, "Note4s",PlayerInfo[playerid][pNote4s]);
	        dini_Set(string3, "Note5",PlayerInfo[playerid][pNote5]);
	        dini_IntSet(string3, "Note5s",PlayerInfo[playerid][pNote5s]);
	        dini_IntSet(string3, "InvWeapon",PlayerInfo[playerid][pInvWeapon]);
		    dini_IntSet(string3, "InvAmmo",PlayerInfo[playerid][pInvAmmo]);
		    dini_IntSet(string3, "InvWeapon2",PlayerInfo[playerid][pInvWeapon2]);
		    dini_IntSet(string3, "InvAmmo2",PlayerInfo[playerid][pInvAmmo2]);
		    dini_IntSet(string3, "InvWeapon3",PlayerInfo[playerid][pInvWeapon3]);
		    dini_IntSet(string3, "InvAmmo3",PlayerInfo[playerid][pInvAmmo3]);
		    dini_IntSet(string3, "InvWeapon4",PlayerInfo[playerid][pInvWeapon4]);
		    dini_IntSet(string3, "InvAmmo4",PlayerInfo[playerid][pInvAmmo4]);
		    dini_IntSet(string3, "InvWeapon5",PlayerInfo[playerid][pInvWeapon5]);
		    dini_IntSet(string3, "InvAmmo5",PlayerInfo[playerid][pInvAmmo5]);
	        dini_IntSet(string3, "InvWeapon6",PlayerInfo[playerid][pInvWeapon6]);
		    dini_IntSet(string3, "InvAmmo6",PlayerInfo[playerid][pInvAmmo6]);
			dini_IntSet(string3, "Lighter",PlayerInfo[playerid][pLighter]);
		    dini_IntSet(string3, "Cigarettes",PlayerInfo[playerid][pCigarettes]);
		    dini_IntSet(string3, "DDManager",PlayerInfo[playerid][pDM]);
		    dini_IntSet(string3, "OnDuty",PlayerInfo[playerid][pDuty]);
		    dini_IntSet(string3, "Warnings",PlayerInfo[playerid][pWarned]);
		    dini_IntSet(string3, "Swat",PlayerInfo[playerid][pSwat]);
		    dini_IntSet(string3, "Fighting",PlayerInfo[playerid][pFS]);
		    dini_IntSet(string3, "Boxing",PlayerInfo[playerid][pBoxiSkill]);
		    dini_IntSet(string3, "KneeHead",PlayerInfo[playerid][pKneeSkill]);
	        dini_IntSet(string3, "KungFu",PlayerInfo[playerid][pKungSkill]);
		    dini_IntSet(string3, "GrabKick",PlayerInfo[playerid][pGrabSkill]);
		    dini_IntSet(string3, "Elbow",PlayerInfo[playerid][pElbowSkill]);
		    dini_IntSet(string3, "Tactical",PlayerInfo[playerid][pTactical]);
		    dini_IntSet(string3, "SpecialF",PlayerInfo[playerid][pSpecialF]);
		    dini_IntSet(string3, "DutyBanned",PlayerInfo[playerid][pDBanned]);
		    dini_IntSet(string3, "DDTicket",PlayerInfo[playerid][pDTK]);
		    dini_IntSet(string3, "DDSTicket",PlayerInfo[playerid][pDSTK]);
		    dini_IntSet(string3, "Speedo",PlayerInfo[playerid][pSpeedo]);
	        dini_IntSet(string3, "HydraDriver",PlayerInfo[playerid][pHydraR]);
		    dini_IntSet(string3, "HunterDriver",PlayerInfo[playerid][pHunterR]);
		    dini_IntSet(string3, "RhinoDriver",PlayerInfo[playerid][pRhinoR]);
		    dini_IntSet(string3, "PredatorDriver",PlayerInfo[playerid][pPredR]);
		    dini_IntSet(string3, "ViewPms",PlayerInfo[playerid][pViewPms]);
		    dini_IntSet(string3, "AppearList",PlayerInfo[playerid][pAppearList]);
		    dini_IntSet(string3, "AmmunationTime",PlayerInfo[playerid][pAmmuTrainTime]);
		    dini_IntSet(string3, "PistolSkill",PlayerInfo[playerid][pPistSkill]);
		    dini_IntSet(string3, "SilencedSkill",PlayerInfo[playerid][pSilenSkill]);
	        dini_IntSet(string3, "DesertSkill",PlayerInfo[playerid][pDesertSkill]);
		    dini_IntSet(string3, "ShotgunSkill",PlayerInfo[playerid][pShotgSkill]);
		    dini_IntSet(string3, "SawnoffSkill",PlayerInfo[playerid][pSawnSkill]);
		    dini_IntSet(string3, "CombatSkill",PlayerInfo[playerid][pCombSkill]);
		    dini_IntSet(string3, "UziSkill",PlayerInfo[playerid][pUziSkill]);
		    dini_IntSet(string3, "SMGSkill",PlayerInfo[playerid][pSmgSkill]);
		    dini_IntSet(string3, "AK47Skill",PlayerInfo[playerid][pAkSkill]);
		    dini_IntSet(string3, "M4Skill",PlayerInfo[playerid][pM4Skill]);
		    dini_IntSet(string3, "TutorialDone",PlayerInfo[playerid][pTutDone]);
		    dini_IntSet(string3, "RegularCount",PlayerInfo[playerid][pRegularCount]);
		    dini_IntSet(string3, "PassportTime",PlayerInfo[playerid][pPassportTime]);
		    dini_IntSet(string3, "OfficerTime",PlayerInfo[playerid][pOfficerTime]);
		    dini_IntSet(string3, "Achievement0",PlayerInfo[playerid][pAchievement0]);
		    dini_IntSet(string3, "Achievement1",PlayerInfo[playerid][pAchievement1]);
		    dini_IntSet(string3, "Achievement2",PlayerInfo[playerid][pAchievement2]);
		    dini_IntSet(string3, "Achievement3",PlayerInfo[playerid][pAchievement3]);
		    dini_IntSet(string3, "Achievement4",PlayerInfo[playerid][pAchievement4]);
		    dini_IntSet(string3, "Achievement5",PlayerInfo[playerid][pAchievement5]);
		    dini_IntSet(string3, "Achievement6",PlayerInfo[playerid][pAchievement6]);
		    dini_IntSet(string3, "Achievement7",PlayerInfo[playerid][pAchievement7]);
		    dini_IntSet(string3, "Achievement8",PlayerInfo[playerid][pAchievement8]);
		    dini_IntSet(string3, "Achievement9",PlayerInfo[playerid][pAchievement9]);
		    dini_IntSet(string3, "Achievement10",PlayerInfo[playerid][pAchievement10]);
		    dini_IntSet(string3, "Achievement11",PlayerInfo[playerid][pAchievement11]);
		    dini_IntSet(string3, "Achievement12",PlayerInfo[playerid][pAchievement12]);
		    dini_IntSet(string3, "Achievement13",PlayerInfo[playerid][pAchievement13]);
		    dini_IntSet(string3, "Achievement14",PlayerInfo[playerid][pAchievement14]);
		    dini_IntSet(string3, "Achievement15",PlayerInfo[playerid][pAchievement15]);
		    dini_IntSet(string3, "Achievement16",PlayerInfo[playerid][pAchievement16]);
		    dini_IntSet(string3, "Achievement17",PlayerInfo[playerid][pAchievement17]);
		    dini_IntSet(string3, "Achievement18",PlayerInfo[playerid][pAchievement18]);
		    dini_IntSet(string3, "Achievement19",PlayerInfo[playerid][pAchievement19]);
		    dini_IntSet(string3, "Achievement20",PlayerInfo[playerid][pAchievement20]);
		    dini_IntSet(string3, "ShiftName",PlayerInfo[playerid][pShiftName]);
		    dini_IntSet(string3, "Weapon",PlayerInfo[playerid][pWeapon]);
		    dini_IntSet(string3, "Ammo",PlayerInfo[playerid][pAmmo]);
		    dini_IntSet(string3, "Weapon2",PlayerInfo[playerid][pWeapon2]);
		    dini_IntSet(string3, "Ammo2",PlayerInfo[playerid][pAmmo2]);
		    dini_IntSet(string3, "Weapon3",PlayerInfo[playerid][pWeapon3]);
		    dini_IntSet(string3, "Ammo3",PlayerInfo[playerid][pAmmo3]);
		    dini_IntSet(string3, "Weapon4",PlayerInfo[playerid][pWeapon4]);
		    dini_IntSet(string3, "Ammo4",PlayerInfo[playerid][pAmmo4]);
		    dini_IntSet(string3, "Weapon5",PlayerInfo[playerid][pWeapon5]);
		    dini_IntSet(string3, "Ammo5",PlayerInfo[playerid][pAmmo5]);
		    dini_IntSet(string3, "Weapon6",PlayerInfo[playerid][pWeapon6]);
		    dini_IntSet(string3, "Ammo6",PlayerInfo[playerid][pAmmo6]);
		    dini_IntSet(string3, "Weapon7",PlayerInfo[playerid][pWeapon7]);
		    dini_IntSet(string3, "Ammo7",PlayerInfo[playerid][pAmmo7]);
		    dini_IntSet(string3, "Weapon8",PlayerInfo[playerid][pWeapon8]);
		    dini_IntSet(string3, "Ammo8",PlayerInfo[playerid][pAmmo8]);
		    dini_IntSet(string3, "Weapon9",PlayerInfo[playerid][pWeapon9]);
		    dini_IntSet(string3, "Ammo9",PlayerInfo[playerid][pAmmo9]);
		    dini_IntSet(string3, "Weapon10",PlayerInfo[playerid][pWeapon10]);
		    dini_IntSet(string3, "Ammo10",PlayerInfo[playerid][pAmmo10]);
		    dini_IntSet(string3, "Weapon11",PlayerInfo[playerid][pWeapon11]);
		    dini_IntSet(string3, "Ammo11",PlayerInfo[playerid][pAmmo11]);
		    dini_IntSet(string3, "Weapon12",PlayerInfo[playerid][pWeapon12]);
		    dini_IntSet(string3, "Ammo12",PlayerInfo[playerid][pAmmo12]);
		    dini_IntSet(string3, "Atc",PlayerInfo[playerid][pAtc]);
		    dini_IntSet(string3, "AtcRadio",PlayerInfo[playerid][pAtcRadio]);
		    dini_IntSet(string3, "Pending",PlayerInfo[playerid][pPending]);
		    dini_Set(string3, "PendingInfo",PlayerInfo[playerid][pPendingInfo]);
		    dini_IntSet(string3, "ChatMode",PlayerInfo[playerid][pChatMode]);
		    dini_Set(string3, "Punishment1",PlayerInfo[playerid][pPunishment1]);
		    dini_Set(string3, "Punishment2",PlayerInfo[playerid][pPunishment2]);
		    dini_Set(string3, "Punishment3",PlayerInfo[playerid][pPunishment3]);
		    dini_Set(string3, "Punishment4",PlayerInfo[playerid][pPunishment4]);
		    dini_Set(string3, "Punishment5",PlayerInfo[playerid][pPunishment5]);
		    dini_Set(string3, "Punishment6",PlayerInfo[playerid][pPunishment6]);
		    dini_Set(string3, "Punishment7",PlayerInfo[playerid][pPunishment7]);
		    dini_Set(string3, "Punishment8",PlayerInfo[playerid][pPunishment8]);
		    dini_IntSet(string3, "NextPunishment",PlayerInfo[playerid][pNextPunishment]);
		    dini_IntSet(string3, "PunishedTimes",PlayerInfo[playerid][pPunished]);
		    dini_IntSet(string3, "TazerBullets",PlayerInfo[playerid][pTazerBullets]);
		    dini_Set(string3, "IP",PlayerInfo[playerid][pIP]);
		    dini_Set(string3, "LastLogged",PlayerInfo[playerid][pLastSeen]);
		    dini_IntSet(string3, "Changed",PlayerInfo[playerid][pChanged]);
		    dini_Set(string3, "RegistredDate",PlayerInfo[playerid][pRegistredDate]);
		    dini_IntSet(string3, "BizzEntered",BizzEntered[playerid]);
		    dini_IntSet(string3, "HouseEntered",HouseEntered[playerid]);
		    dini_IntSet(string3, "Decoder",PlayerInfo[playerid][pDecoder]);
		    dini_IntSet(string3, "Banned",PlayerInfo[playerid][pBanned]);
		    
            dini_IntSet(string3, "KillStart",KillSpawnStart[playerid]);
		}
	}
	return 1;
}


public OnPlayerLogin(playerid,password[])
{
	new tmp2[256]
	new	string2[64];
    new	string[128];
	new	playername2[MAX_PLAYER_NAME];
	new playersip[24];
		
    GetPlayerName(playerid, playername2, sizeof(playername2));
    GetPlayerIp(playerid, playersip, sizeof(playersip));
    
	format(string2, sizeof(string2), "LARP/Users/%s.ini", playername2);
	
	if (dini_Exists(string2))
	{
	    new password2 = num_hash(password);
 		if(dini_Int(string2,"Password") == password2)
		{
		    KillSpawnStart[playerid] = dini_Int(string2, "KillStart");//BY nill
		    PlayerInfo[playerid][pKey] = dini_Int(string2,"Password");
		    PlayerInfo[playerid][pLevel] = dini_Int(string2,"Level");
		    PlayerInfo[playerid][pSpawn] = dini_Int(string2,"Spawn");
		    PlayerInfo[playerid][pTester] = dini_Int(string2,"TesterLevel");
		    PlayerInfo[playerid][pHelper] = dini_Int(string2,"HelperLevel");
		    PlayerInfo[playerid][pAdmin] = dini_Int(string2,"AdminLevel");
		    PlayerInfo[playerid][pRegularRank] = dini_Int(string2,"RegularRank");
		    PlayerInfo[playerid][gPupgrade] = dini_Int(string2,"UpgradePoints");
		    PlayerInfo[playerid][pConnectSeconds] = dini_Int(string2,"ConnectedTime");
		    PlayerInfo[playerid][pReg] = dini_Int(string2,"Registered");
		    PlayerInfo[playerid][pSex] = dini_Int(string2,"Sex");
		    PlayerInfo[playerid][pAge] = dini_Int(string2,"Age");
		    PlayerInfo[playerid][pGPS] = dini_Int(string2,"GPS");
		    PlayerInfo[playerid][pOrigin] = dini_Int(string2,"Origin");
		    PlayerInfo[playerid][pCK] = dini_Int(string2,"CK");
		    PlayerInfo[playerid][pMuted] = dini_Int(string2,"Muted");
		    PlayerInfo[playerid][pFrozen] = dini_Int(string2,"Frozen");
		    PlayerInfo[playerid][pBlind] = dini_Int(string2,"Blind");
		    PlayerInfo[playerid][pExp] = dini_Int(string2,"Respect");
		    PlayerInfo[playerid][pCash] = dini_Int(string2,"Money");
		    PlayerInfo[playerid][pAccount] = dini_Int(string2,"Bank");
		    PlayerInfo[playerid][pCrimes] = dini_Int(string2,"Crimes");
		    strmid(PlayerInfo[playerid][pCrimeReason],dini_Get(string2,"CrimeReason"),0,strlen(dini_Get(string2,"CrimeReason")),255);
		    PlayerInfo[playerid][pWanted] = dini_Int(string2,"Wanted");
		    PlayerInfo[playerid][pWantedLevel] = dini_Int(string2,"WantedLevel");
		    PlayerInfo[playerid][pKills] = dini_Int(string2,"Kills");
		    PlayerInfo[playerid][pDeaths] = dini_Int(string2,"Deaths");
		    PlayerInfo[playerid][pArrested] = dini_Int(string2,"Arrested");
		    PlayerInfo[playerid][pWantedDeaths] = dini_Int(string2,"WantedDeaths");
		    PlayerInfo[playerid][pPhoneBook] = dini_Int(string2,"PhoneBook");
		    PlayerInfo[playerid][pLottoNr] = dini_Int(string2,"LottoNr");
		    PlayerInfo[playerid][pFishes] = dini_Int(string2,"Fishes");
		    PlayerInfo[playerid][pBiggestFish] = dini_Int(string2,"BiggestFish");
		    PlayerInfo[playerid][pJob] = dini_Int(string2,"Job");
		    PlayerInfo[playerid][pPayCheck] = dini_Int(string2,"Paycheck");
		    PlayerInfo[playerid][pHeadValue] = dini_Int(string2,"HeadValue");
		    PlayerInfo[playerid][pJailed] = dini_Int(string2,"Jailed");
		    PlayerInfo[playerid][pJailTime] = dini_Int(string2,"JailTime");
		    PlayerInfo[playerid][pRobTime] = dini_Int(string2,"CanRobTime");
		    PlayerInfo[playerid][pMats] = dini_Int(string2,"Materials");
		    PlayerInfo[playerid][pDrugs] = dini_Int(string2,"Drugs");
		    PlayerInfo[playerid][pLeader] = dini_Int(string2,"Leader");
		    PlayerInfo[playerid][pMember] = dini_Int(string2,"Member");
		    PlayerInfo[playerid][pFMember] = dini_Int(string2,"FMember");
		    PlayerInfo[playerid][pRank] = dini_Int(string2,"Rank");
		    PlayerInfo[playerid][pChar] = dini_Int(string2,"Char");
		    PlayerInfo[playerid][pContractTime] = dini_Int(string2,"ContractTime");
		    PlayerInfo[playerid][pDetSkill] = dini_Int(string2,"DetSkill");
		    PlayerInfo[playerid][pSexSkill] = dini_Int(string2,"SexSkill");
		    PlayerInfo[playerid][pBoxSkill] = dini_Int(string2,"BoxSkill");
		    PlayerInfo[playerid][pLawSkill] = dini_Int(string2,"LawSkill");
		    PlayerInfo[playerid][pMechSkill] = dini_Int(string2,"MechSkill");
		    PlayerInfo[playerid][pJackSkill] = dini_Int(string2,"JackSkill");
		    PlayerInfo[playerid][pCarSkill] = dini_Int(string2,"CarSkill");
		    PlayerInfo[playerid][pNewsSkill] = dini_Int(string2,"NewsSkill");
		    PlayerInfo[playerid][pDrugsSkill] = dini_Int(string2,"DrugsSkill");
		    PlayerInfo[playerid][pCookSkill] = dini_Int(string2,"CookSkill");
		    PlayerInfo[playerid][pFishSkill] = dini_Int(string2,"FishSkill");
		    PlayerInfo[playerid][pHealth] = dini_Float(string2,"pHealth");
		    PlayerInfo[playerid][pArmour] = dini_Float(string2,"pArmour");
		    PlayerInfo[playerid][pInt] = dini_Int(string2,"Int");
		    PlayerInfo[playerid][pInteriorNr] = dini_Int(string2,"InteriorNr");
		    PlayerInfo[playerid][pLocal] = dini_Int(string2,"Local");
		    PlayerInfo[playerid][pTeam] = dini_Int(string2,"Team");
		    PlayerInfo[playerid][pModel] = dini_Int(string2,"Model");
		    PlayerInfo[playerid][pPnumber] = dini_Int(string2,"PhoneNr");
		    PlayerInfo[playerid][pPcarkey] = dini_Int(string2,"Car");
		    PlayerInfo[playerid][pPcarkey2] = dini_Int(string2,"Car2");
		    PlayerInfo[playerid][pPhousekey] = dini_Int(string2,"House");
		    PlayerInfo[playerid][pPbiskey] = dini_Int(string2,"Bizz");
		    PlayerInfo[playerid][pPos_x] = dini_Float(string2,"Pos_x");
		    PlayerInfo[playerid][pPos_y] = dini_Float(string2,"Pos_y");
		    PlayerInfo[playerid][pPos_z] = dini_Float(string2,"Pos_z");
		    PlayerInfo[playerid][pPassport] = dini_Int(string2,"Passport");
		    PlayerInfo[playerid][pCarLic] = dini_Int(string2,"CarLic");
		    PlayerInfo[playerid][pFlyLic] = dini_Int(string2,"FlyLic");
		    PlayerInfo[playerid][pBoatLic] = dini_Int(string2,"BoatLic");
		    PlayerInfo[playerid][pFishLic] = dini_Int(string2,"FishLic");
		    PlayerInfo[playerid][pGunLic] = dini_Int(string2,"GunLic");
		    PlayerInfo[playerid][pCopLic] = dini_Int(string2,"CopLic");
		    PlayerInfo[playerid][pCarTime] = dini_Int(string2,"CarTime");
		    PlayerInfo[playerid][pPayDay] = dini_Int(string2,"PayDay");
		    PlayerInfo[playerid][pPayDayHad] = dini_Int(string2,"PayDayHad");
		    PlayerInfo[playerid][pWatch] = dini_Int(string2,"Watch");
		    PlayerInfo[playerid][pCrashed] = dini_Int(string2,"Crashed");
		    PlayerInfo[playerid][pWins] = dini_Int(string2,"Wins");
		    PlayerInfo[playerid][pLoses] = dini_Int(string2,"Loses");
		    PlayerInfo[playerid][pAlcoholPerk] = dini_Int(string2,"AlcoholPerk");
		    PlayerInfo[playerid][pDrugPerk] = dini_Int(string2,"DrugPerk");
		    PlayerInfo[playerid][pMiserPerk] = dini_Int(string2,"MiserPerk");
		    PlayerInfo[playerid][pPainPerk] = dini_Int(string2,"PainPerk");
		    PlayerInfo[playerid][pTraderPerk] = dini_Int(string2,"TraderPerk");
		    PlayerInfo[playerid][pTut] = dini_Int(string2,"Tutorial");
		    PlayerInfo[playerid][pVirWorld] = dini_Int(string2,"VirWorld");
		    PlayerInfo[playerid][pFuel] = dini_Int(string2,"Fuel");
		    PlayerInfo[playerid][pMarried] = dini_Int(string2,"Married");
		    strmid(PlayerInfo[playerid][pMarriedTo],dini_Get(string2,"MarriedTo"),0,strlen(dini_Get(string2,"MarriedTo")),255);
		    PlayerInfo[playerid][pFishTool] = dini_Int(string2,"FlyLic");
		    strmid(PlayerInfo[playerid][pWhyLeft],dini_Get(string2,"WhyLeft"),0,strlen(dini_Get(string2,"WhyLeft")),255);
		    strmid(PlayerInfo[playerid][pNote1],dini_Get(string2,"Note1"),0,strlen(dini_Get(string2,"Note1")),255);
		    PlayerInfo[playerid][pNote1s] = dini_Int(string2,"Note1s");
		    strmid(PlayerInfo[playerid][pNote2],dini_Get(string2,"Note2"),0,strlen(dini_Get(string2,"Note2")),255);
		    PlayerInfo[playerid][pNote2s] = dini_Int(string2,"Note2s");
		    strmid(PlayerInfo[playerid][pNote3],dini_Get(string2,"Note3"),0,strlen(dini_Get(string2,"Note3")),255);
		    PlayerInfo[playerid][pNote3s] = dini_Int(string2,"Note3s");
		    strmid(PlayerInfo[playerid][pNote4],dini_Get(string2,"Note4"),0,strlen(dini_Get(string2,"Note4")),255);
		    PlayerInfo[playerid][pNote4s] = dini_Int(string2,"Note4s");
		    strmid(PlayerInfo[playerid][pNote5],dini_Get(string2,"Note5"),0,strlen(dini_Get(string2,"Note5")),255);
		    PlayerInfo[playerid][pNote5s] = dini_Int(string2,"Note5s");
		    PlayerInfo[playerid][pInvWeapon] = dini_Int(string2,"InvWeapon");
		    PlayerInfo[playerid][pInvAmmo] = dini_Int(string2,"InvAmmo");
		    PlayerInfo[playerid][pInvWeapon2] = dini_Int(string2,"InvWeapon2");
		    PlayerInfo[playerid][pInvAmmo2] = dini_Int(string2,"InvAmmo2");
		    PlayerInfo[playerid][pInvWeapon3] = dini_Int(string2,"InvWeapon3");
		    PlayerInfo[playerid][pInvAmmo3] = dini_Int(string2,"InvAmmo3");
		    PlayerInfo[playerid][pInvWeapon4] = dini_Int(string2,"InvWeapon4");
		    PlayerInfo[playerid][pInvAmmo4] = dini_Int(string2,"InvAmmo4");
		    PlayerInfo[playerid][pInvWeapon5] = dini_Int(string2,"InvWeapon5");
		    PlayerInfo[playerid][pInvAmmo5] = dini_Int(string2,"InvAmmo5");
		    PlayerInfo[playerid][pInvWeapon6] = dini_Int(string2,"InvWeapon6");
		    PlayerInfo[playerid][pInvAmmo6] = dini_Int(string2,"InvAmmo6");
		    PlayerInfo[playerid][pLighter] = dini_Int(string2,"Lighter");
		    PlayerInfo[playerid][pCigarettes] = dini_Int(string2,"Cigarettes");
		    PlayerInfo[playerid][pDM] = dini_Int(string2,"DDManager");
		    PlayerInfo[playerid][pDuty] = dini_Int(string2,"OnDuty");
		    PlayerInfo[playerid][pWarned] = dini_Int(string2,"Warnings");
		    PlayerInfo[playerid][pSwat] = dini_Int(string2,"Swat");
		    PlayerInfo[playerid][pFS] = dini_Int(string2,"Fighting");
		    PlayerInfo[playerid][pBoxiSkill] = dini_Int(string2,"Boxing");
		    PlayerInfo[playerid][pKneeSkill] = dini_Int(string2,"KneeHead");
		    PlayerInfo[playerid][pKungSkill] = dini_Int(string2,"KungFu");
		    PlayerInfo[playerid][pGrabSkill] = dini_Int(string2,"GrabKick");
		    PlayerInfo[playerid][pElbowSkill] = dini_Int(string2,"ElBow");
		    PlayerInfo[playerid][pTactical] = dini_Int(string2,"Tactical");
		    PlayerInfo[playerid][pSpecialF] = dini_Int(string2,"SpecialF");
		    PlayerInfo[playerid][pDBanned] = dini_Int(string2,"DutyBanned");
		    PlayerInfo[playerid][pDTK] = dini_Int(string2,"DDTicket");
		    PlayerInfo[playerid][pDSTK] = dini_Int(string2,"DDSTicket");
		    PlayerInfo[playerid][pSpeedo] = dini_Int(string2,"Speedo");
		    PlayerInfo[playerid][pHunterR] = dini_Int(string2,"HunterDriver");
		    PlayerInfo[playerid][pRhinoR] = dini_Int(string2,"RhinoDriver");
		    PlayerInfo[playerid][pPredR] = dini_Int(string2,"PredatorDriver");
		    PlayerInfo[playerid][pHydraR] = dini_Int(string2,"RhinoDriver");
		    PlayerInfo[playerid][pViewPms] = dini_Int(string2,"ViewPms");
		    PlayerInfo[playerid][pAppearList] = dini_Int(string2,"AppearList");
		    PlayerInfo[playerid][pAmmuTrainTime] = dini_Int(string2,"AmmunationTime");
		    PlayerInfo[playerid][pPistSkill] = dini_Int(string2,"PistolSkill");
		    PlayerInfo[playerid][pSilenSkill] = dini_Int(string2,"SilencedSkill");
		    PlayerInfo[playerid][pDesertSkill] = dini_Int(string2,"DesertSkill");
		    PlayerInfo[playerid][pShotgSkill] = dini_Int(string2,"ShotgunSkill");
		    PlayerInfo[playerid][pSawnSkill] = dini_Int(string2,"SawnoffSkill");
		    PlayerInfo[playerid][pCombSkill] = dini_Int(string2,"CombatSkill");
		    PlayerInfo[playerid][pUziSkill] = dini_Int(string2,"UziSkill");
		    PlayerInfo[playerid][pSmgSkill] = dini_Int(string2,"SMGSkill");
		    PlayerInfo[playerid][pAkSkill] = dini_Int(string2,"AK47Skill");
		    PlayerInfo[playerid][pM4Skill] = dini_Int(string2,"M4Skill");
		    PlayerInfo[playerid][pTutDone] = dini_Int(string2,"TutorialDone");
		    PlayerInfo[playerid][pRegularCount] = dini_Int(string2,"RegularCount");
		    PlayerInfo[playerid][pPassportTime] = dini_Int(string2,"PassportTime");
		    PlayerInfo[playerid][pOfficerTime] = dini_Int(string2,"Officertime");
		    PlayerInfo[playerid][pAchievement0] = dini_Int(string2,"Achievement0");
		    PlayerInfo[playerid][pAchievement1] = dini_Int(string2,"Achievement1");
		    PlayerInfo[playerid][pAchievement2] = dini_Int(string2,"Achievement2");
		    PlayerInfo[playerid][pAchievement3] = dini_Int(string2,"Achievement3");
		    PlayerInfo[playerid][pAchievement4] = dini_Int(string2,"Achievement4");
		    PlayerInfo[playerid][pAchievement5] = dini_Int(string2,"Achievement5");
		    PlayerInfo[playerid][pAchievement6] = dini_Int(string2,"Achievement6");
		    PlayerInfo[playerid][pAchievement7] = dini_Int(string2,"Achievement7");
		    PlayerInfo[playerid][pAchievement8] = dini_Int(string2,"Achievement8");
		    PlayerInfo[playerid][pAchievement9] = dini_Int(string2,"Achievement9");
		    PlayerInfo[playerid][pAchievement10] = dini_Int(string2,"Achievement10");
		    PlayerInfo[playerid][pAchievement11] = dini_Int(string2,"Achievement11");
		    PlayerInfo[playerid][pAchievement12] = dini_Int(string2,"Achievement12");
		    PlayerInfo[playerid][pAchievement13] = dini_Int(string2,"Achievement13");
		    PlayerInfo[playerid][pAchievement14] = dini_Int(string2,"Achievement14");
		    PlayerInfo[playerid][pAchievement15] = dini_Int(string2,"Achievement15");
		    PlayerInfo[playerid][pAchievement16] = dini_Int(string2,"Achievement16");
		    PlayerInfo[playerid][pAchievement17] = dini_Int(string2,"Achievement17");
		    PlayerInfo[playerid][pAchievement18] = dini_Int(string2,"Achievement18");
		    PlayerInfo[playerid][pAchievement19] = dini_Int(string2,"Achievement19");
		    PlayerInfo[playerid][pAchievement20] = dini_Int(string2,"Achievement20");
		    PlayerInfo[playerid][pShiftName] = dini_Int(string2,"ShiftName");
		    PlayerInfo[playerid][pWeapon] = dini_Int(string2,"Weapon");
		    PlayerInfo[playerid][pAmmo] = dini_Int(string2,"Ammo");
		    PlayerInfo[playerid][pWeapon2] = dini_Int(string2,"Weapon2");
		    PlayerInfo[playerid][pAmmo2] = dini_Int(string2,"Ammo2");
		    PlayerInfo[playerid][pWeapon3] = dini_Int(string2,"Weapon3");
		    PlayerInfo[playerid][pAmmo3] = dini_Int(string2,"Ammo3");
		    PlayerInfo[playerid][pWeapon4] = dini_Int(string2,"Weapon4");
		    PlayerInfo[playerid][pAmmo4] = dini_Int(string2,"Ammo4");
		    PlayerInfo[playerid][pWeapon5] = dini_Int(string2,"Weapon5");
		    PlayerInfo[playerid][pAmmo5] = dini_Int(string2,"Ammo5");
		    PlayerInfo[playerid][pWeapon6] = dini_Int(string2,"Weapon6");
		    PlayerInfo[playerid][pAmmo6] = dini_Int(string2,"Ammo6");
		    PlayerInfo[playerid][pWeapon7] = dini_Int(string2,"Weapon7");
		    PlayerInfo[playerid][pAmmo7] = dini_Int(string2,"Ammo7");
		    PlayerInfo[playerid][pWeapon8] = dini_Int(string2,"Weapon8");
		    PlayerInfo[playerid][pAmmo8] = dini_Int(string2,"Ammo8");
		    PlayerInfo[playerid][pWeapon9] = dini_Int(string2,"Weapon9");
		    PlayerInfo[playerid][pAmmo9] = dini_Int(string2,"Ammo9");
		    PlayerInfo[playerid][pWeapon10] = dini_Int(string2,"Weapon10");
		    PlayerInfo[playerid][pAmmo10] = dini_Int(string2,"Ammo10");
		    PlayerInfo[playerid][pWeapon11] = dini_Int(string2,"Weapon11");
		    PlayerInfo[playerid][pAmmo11] = dini_Int(string2,"Ammo11");
		    PlayerInfo[playerid][pWeapon12] = dini_Int(string2,"Weapon12");
		    PlayerInfo[playerid][pAmmo12] = dini_Int(string2,"Ammo12");
		    PlayerInfo[playerid][pAtc] = dini_Int(string2,"Atc");
		    PlayerInfo[playerid][pAtcRadio] = dini_Int(string2,"AtcRadio");
		    PlayerInfo[playerid][pPending] = dini_Int(string2,"Pending");
		    strmid(PlayerInfo[playerid][pPendingInfo],dini_Get(string2,"PendingInfo"),0,strlen(dini_Get(string2,"PendingInfo")),255);
		    PlayerInfo[playerid][pChatMode] = dini_Int(string2,"ChatMode");
		    strmid(PlayerInfo[playerid][pPunishment1],dini_Get(string2,"Punishment1"),0,strlen(dini_Get(string2,"Punishment1")),255);
		    strmid(PlayerInfo[playerid][pPunishment2],dini_Get(string2,"Punishment2"),0,strlen(dini_Get(string2,"Punishment2")),255);
		    strmid(PlayerInfo[playerid][pPunishment3],dini_Get(string2,"Punishment3"),0,strlen(dini_Get(string2,"Punishment3")),255);
		    strmid(PlayerInfo[playerid][pPunishment4],dini_Get(string2,"Punishment4"),0,strlen(dini_Get(string2,"Punishment4")),255);
		    strmid(PlayerInfo[playerid][pPunishment5],dini_Get(string2,"Punishment5"),0,strlen(dini_Get(string2,"Punishment5")),255);
		    strmid(PlayerInfo[playerid][pPunishment6],dini_Get(string2,"Punishment6"),0,strlen(dini_Get(string2,"Punishment6")),255);
		    strmid(PlayerInfo[playerid][pPunishment7],dini_Get(string2,"Punishment7"),0,strlen(dini_Get(string2,"Punishment7")),255);
		    strmid(PlayerInfo[playerid][pPunishment8],dini_Get(string2,"Punishment8"),0,strlen(dini_Get(string2,"Punishment8")),255);
            PlayerInfo[playerid][pNextPunishment] = dini_Int(string2,"NextPunishment");
            PlayerInfo[playerid][pTazerBullets] = dini_Int(string2,"TazerBullets");
			strmid(PlayerInfo[playerid][pIP],dini_Get(string2,"IP"),0,strlen(dini_Get(string2,"IP")),255);
		    strmid(PlayerInfo[playerid][pLastSeen],dini_Get(string2,"LastLogged"),0,strlen(dini_Get(string2,"LastLogged")),255);
            PlayerInfo[playerid][pChanged] = dini_Int(string2,"Changed");
			strmid(PlayerInfo[playerid][pRegistredDate],dini_Get(string2,"RegistredDate"),0,strlen(dini_Get(string2,"RegistredDate")),255);
		    BizzEntered[playerid] = dini_Int(string2,"BizzEntered");
		    HouseEntered[playerid] = dini_Int(string2,"HouseEntered");
		    PlayerInfo[playerid][pDecoder] = dini_Int(string2,"Decoder");//227
		}
		else
		{
	        gPlayerLogTries[playerid] += 1;
	        ShowPlayerDialog(playerid, 1245, DIALOG_STYLE_INPUT,"«Î‘⁄¥À ‰»Îƒ„µƒµ«¬º√‹¬Î","ƒ„ ‰»Îµƒ√‹¬Î≤ª’˝»∑,«Î÷ÿ–¬ ‰»Î\n«Î‘⁄œ¬√Ê ‰»Îƒ„µƒ√‹¬Î£∫","µ«¬º","ÕÀ≥ˆ");
	        if(gPlayerLogTries[playerid] == 3) { Kick(playerid); }
	        return 1;
		}
		RingTone[playerid] = 20;
		TextDrawShowForPlayer(playerid, Textdraw44);
		TextDrawShowForPlayer(playerid, Textdraw45);
		TextDrawShowForPlayer(playerid, Textdraw49[playerid]);
		TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
		TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
		TextDrawShowForPlayer(playerid, Textdraw55);
		if(PlayerInfo[playerid][pWatch] == 1)
		{
			TextDrawShowForPlayer(playerid, Textdraw56);
			TextDrawShowForPlayer(playerid, Textdraw57);
			TextDrawShowForPlayer(playerid, Textdraw58);
		}
		if(CountdownRunning == 1)
		{
		    TextDrawShowForPlayer(playerid, Textdraw46);
		}
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 1;
			PlayerInfo[playerid][pHealth] = 50.0;
			PlayerInfo[playerid][pArmour] = 0.0;
			PlayerInfo[playerid][pPassportTime] = 1800;
			PlayerInfo[playerid][pRegularCount] = 144000;
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
			PlayerInfo[playerid][pTeam] = 3;
			PlayerInfo[playerid][pModel] = 135;
			//new randphone = 100000 + random(899999);//minimum 1000  max 9999 //giving one at the start
			PlayerInfo[playerid][pPnumber] = 0;//randphone;
			PlayerInfo[playerid][pPhousekey] = 9999;
			PlayerInfo[playerid][pPcarkey] = 9999;
			PlayerInfo[playerid][pPcarkey2] = 9999;
			PlayerInfo[playerid][pPbiskey] = 9999;
			PlayerInfo[playerid][pAccount] = 0;
			PlayerInfo[playerid][pReg] = 1;
			SafeGivePlayerMoney(playerid, 300);
			new d,m,y;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string),  "%d/%d/%d at %d:%d:%d",d,m,y,h,mi,s);
			strmid(PlayerInfo[playerid][pRegistredDate], string, 0, strlen(string), 255);
		}
		SetPlayerSkills(playerid);
		if(PlayerInfo[playerid][pPending] == 1)
		{
		    format(string, sizeof(string), "[–≈œ¢]: %s ∏’µ«¬Ω¡À“ª∏ˆ±ªΩ˚÷πµƒ’ ∫≈, ∂‘À˚≤…»°––∂Ø!!",playername2);
		    SendAdminMessage(COLOR_GREEN, string);
		}
		else if(PlayerInfo[playerid][pCK] > 0)
		{
		    Kick(playerid);
		}
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			admins ++;
		}
		ClearChatbox(playerid, 8);
		SendClientMessage(playerid, COLOR_GREEN, "=======================================================================");
		format(string2, sizeof(string2), "{F0FFF0}ª∂”≠¿¥µΩ{FFF0F0}ƒ≥ƒ≥{F0FFF0}∑˛ŒÒ∆˜,{F0FFFF} %s.",playername2);
		SendClientMessage(playerid, COLOR_WHITE,string2);
		format(string2, sizeof(string2), "µ±«∞∞Ê±æ:{FFF0F0} %s.",Version);
		SendClientMessage(playerid, COLOR_YELLOW, string2);
		strmid(PlayerInfo[playerid][pIP], playersip, 0, strlen(playersip), 255);
		if (PlayerInfo[playerid][pRegularRank] > 0)
		{
			SendClientMessage(playerid, COLOR_WHITE,"LSÀ˘”–µƒ»À: ‘⁄¥Àª∂”≠ ≥£øÕÕÊº“ ƒ„,∏––ªƒ„≥£¿¥’‚¿ÔÕÊ!");
		}
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			format(string2, sizeof(string2), "∑˛ŒÒ∆˜œ˚œ¢: ƒ„µ«¬º¡Àµ»º∂Œ™ %d π‹¿Ì’Àªß.",PlayerInfo[playerid][pAdmin]);
			SendClientMessage(playerid, COLOR_WHITE,string2);
		}
		SendClientMessage(playerid, COLOR_GREEN, "=======================================================================");
		SendClientMessage(playerid, COLOR_WHITE, " ");
		// Reset the FirstSpawn variable
		SetTimerEx("UnsetFirstSpawn", 5000, false, "i", playerid);
		// Unset Crash
		SetTimerEx("UnsetCrash", 5000, false, "i", playerid);
		SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
		if(gTeam[playerid] == 0)
		{
			gTeam[playerid] = 3;
		}
		else
		{
			gTeam[playerid] = PlayerInfo[playerid][pTeam];
		}
		gPlayerLogged[playerid] = 1;
		SpawnPlayer(playerid);
		
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    PlayerInfo[playerid][pAppearList] = 0;
		}
		else
		{
		    PlayerInfo[playerid][pAppearList] = 1;
		}
		SafeSetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
		SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVirWorld]);
		SpawnWorld[playerid] = GetPlayerVirtualWorld(playerid);
		SpawnInterior[playerid] = GetPlayerInterior(playerid);
		if(PlayerInfo[playerid][pBlind] == 1)
		{
			TextDrawShowForPlayer(playerid, Textdraw5);
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„…œ¥Œ±ªπ‹¿Ì‘±±’ƒø;  π”√ /askq —∞«Ûπ‹¿Ì‘±∞Ô÷˙.");
		}
	    if(PlayerInfo[playerid][pFrozen] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„…œ¥Œπ‹¿Ì‘±∂≥Ω·;  π”√ /askq —∞«Ûπ‹¿Ì‘±∞Ô÷˙.");
		}
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„…œ¥Œπ‹¿Ì‘±Ω˚—‘;  π”√ /askq —∞«Ûπ‹¿Ì‘±∞Ô÷˙.");
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î;  π”√ /askq —∞«Ûπ‹¿Ì‘±∞Ô÷˙.", PlayerInfo[playerid][pJailTime]);
			SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
			TextDrawShowForPlayer(playerid, Textdraw1[playerid]);
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
			format(string, sizeof(string), "ƒ„±ªº‡Ω˚¡À %d √Î;  π”√ /askq —∞«Ûπ‹¿Ì‘±∞Ô÷˙.", PlayerInfo[playerid][pJailTime]);
			SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
			TextDrawShowForPlayer(playerid, Textdraw1[playerid]);
		}
		if(PlayerInfo[playerid][pCrashed] == 0)
		{
			format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~y~   %s", playername2);
		}
		GameTextForPlayer(playerid, tmp2, 5000, 1);
		//SendClientMessage(playerid, COLOR_YELLOW, textmotd);
		if(PlayerInfo[playerid][pFMember] < 255)
		{
		    format(tmp2, sizeof(tmp2), "º“◊Â MOTD: %s.", FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyMOTD]);
		    SendClientMessage(playerid, COLOR_YELLOW, tmp2);
		}
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
	    	if(IsPlayerConnected(i))
	    	{
	        	if(PlayerInfo[i][pMaskuse] == 1)
	        	{
	            	ShowPlayerNameTagForPlayer(playerid, i, 0);
	        	}
	    	}
		}
		if(!strcmp(playername2, "<nill>", true)) // If your nickname is John_Sheppard, change the <changeme> to John_Sheppard, this will give you immunity.
		{
		    Untouchable[playerid] = 1;
	  	}
	  	if(!strcmp(playername2, "CuervO", true)) // Change this too, its only here for testing porpuses.
		{
		    Untouchable[playerid] = 1;
	  	}
		
	  	if(First == 0)
	  	{
		  	if(PlayerInfo[playerid][pAdmin] >= 6)
		  	{
		  	    new message[] = "ª∂”≠; ∏√Ω≈±æºÏ≤‚µΩƒ„ø…ƒ‹ «µ⁄“ª¥Œ¥Úø™∑˛ŒÒ∆˜. \n\n\n Œ“ « Cuervo, Œ“ª·ΩÃƒ„“ª–© ¬«È,ƒ„±ÿ–Î–ﬁ∏ƒÀ˚µƒΩ≈±æ. \n\n\n ∞¥ \"ºÃ–¯\"ºÃ–¯—ßœ∞±æΩÃ≥Ã";
				ShowPlayerDialog(playerid, 1250, DIALOG_STYLE_MSGBOX, "ª∂”≠.......",message,"ºÃ–¯","»°œ˚");
			}
		}
		if(PlayerInfo[playerid][pWanted] == 1)
		{
		    SetPlayerColor(playerid, 0xFF990000);
			WantedPoints[playerid] = PlayerInfo[playerid][pWantedLevel];
		    SetPlayerCriminal(playerid, 255, PlayerInfo[playerid][pCrimeReason]);
		}
		
		if(strlen(dini_Get("LARP/Users/Aliases/alias.txt", playersip)) == 0)
	   	{
		   	dini_Set("LARP/Users/Aliases/alias.txt", playersip, playername2);
		}
		else
		{
			if( strfind( dini_Get("LARP/Users/Aliases/alias.txt", playersip), playername2, true) == -1 )
			{
				format(string,sizeof(string),"%s, %s", dini_Get("LARP/Users/Aliases/alias.txt",playersip), playername2);
				dini_Set("LARP/Users/Aliases/alias.txt", playersip, string);
			}
		}
		
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has logged in under IP %s.",d,m,y,h,mi,s,playername2,playersip);
		LoginLog(string);
	}
	return 1;
}



stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

public OnPropTextdrawUpdate(update, id)
{
	new PropertyString[256];
	if(update == 1)
	{
		if(HouseInfo[id][hOwned] == 0)
		{
		    if(HouseInfo[id][hSetted] == 1)
		    {
		        Delete3DTextLabel(HouseLabel[id]);
			    format(PropertyString,sizeof(PropertyString),"¥À∑øŒ›…–Œﬁ“µ÷˜! \n ∑ø≤˙±‡∫≈: %d \n ≥ˆ €º€∏Ò: $%d \n ∑øŒ›√Ë ˆ: %s \n π∫¬Úµ»º∂–Ë«Û: %d",HouseInfo[id][hWorld], HouseInfo[id][hValue],HouseInfo[id][hDiscription], HouseInfo[id][hLevel]);
				HouseLabel[id] = Create3DTextLabel(PropertyString ,0x00FF00AA,HouseInfo[id][hEntrancex], HouseInfo[id][hEntrancey], HouseInfo[id][hEntrancez],25, 0, 1);
			}
		}
		else if(HouseInfo[id][hOwned] == 1)
		{
		    Delete3DTextLabel(HouseLabel[id]);
			format(PropertyString,sizeof(PropertyString),"%s \n “µ÷˜: %s \n ∑ø≤˙±‡∫≈: %d \n ≥ˆ◊‚º€∏Ò: $%d \n ∑øŒ›√Ë ˆ: %s \n »ÙœÎ◊‚”√«Î‘⁄’‚¿Ô ‰»Î/rentroom", HouseInfo[id][hMessage],HouseInfo[id][hOwner],HouseInfo[id][hWorld], HouseInfo[id][hRent], HouseInfo[id][hDiscription]);
			HouseLabel[id] = Create3DTextLabel(PropertyString ,0x00FFFFAA,HouseInfo[id][hEntrancex], HouseInfo[id][hEntrancey], HouseInfo[id][hEntrancez],25, 0, 1);
		}
	}
	else if(update == 2)
	{
		if(BizzInfo[id][bOwned] == 0)
		{
		    Delete3DTextLabel(BizzLabel[id]);
		    format(PropertyString,sizeof(PropertyString),"¥À≤˙“µ…–Œﬁ“µ÷˜! \n %s \n ≤˙“µ±‡∫≈: %d \n ≥ˆ €º€∏Ò: $%d \n π∫¬Úµ»º∂–Ë«Û: %d \n »Áπ˚œÎπ∫¬Ú’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F00FF0}/buybiz",BizzInfo[id][bMessage], BizzInfo[id][bVirWorld], BizzInfo[id][bBuyPrice], BizzInfo[id][bLevelNeeded]);
			BizzLabel[id] = Create3DTextLabel(PropertyString ,0x00FF00AA,BizzInfo[id][bEntranceX], BizzInfo[id][bEntranceY], BizzInfo[id][bEntranceZ],50, 0, 1);
		}
		else if(BizzInfo[id][bOwned] == 1)
		{
		    Delete3DTextLabel(BizzLabel[id]);
			format(PropertyString,sizeof(PropertyString),"%s \n “µ÷˜: %s \n ≤˙“µ±‡∫≈: %d \n ¿’À˜: %s \n √≈∑—: $%d. \n »Áπ˚œÎΩ¯»Î’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F000F0}/enter",BizzInfo[id][bMessage],BizzInfo[id][bOwner], BizzInfo[id][bVirWorld], BizzInfo[id][bExtortion], BizzInfo[id][bEntranceCost]);
			BizzLabel[id] = Create3DTextLabel(PropertyString ,0x00FFFFAA,BizzInfo[id][bEntranceX], BizzInfo[id][bEntranceY], BizzInfo[id][bEntranceZ],50, 0, 1);
		}
	}
	else if(update == 3)
	{
		if(SBizzInfo[id][sbOwned] == 0)
		{
		    Delete3DTextLabel(SBizzLabel[id]);
			format(PropertyString,sizeof(PropertyString),"S-¥À≤˙“µ…–Œﬁ“µ÷˜! \n %s \n ≥ˆ €º€∏Ò: $%d \n π∫¬Úµ»º∂–Ë«Û: %d \n »Áπ˚œÎπ∫¬Ú’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F00FF0}/buybiz",SBizzInfo[id][sbMessage], SBizzInfo[id][sbBuyPrice], SBizzInfo[id][sbLevelNeeded]);
			SBizzLabel[id] = Create3DTextLabel(PropertyString ,0x00FF00AA,SBizzInfo[id][sbEntranceX], SBizzInfo[id][sbEntranceY], SBizzInfo[id][sbEntranceZ],30, 0, 1);
		}
		else if(SBizzInfo[id][sbOwned] == 1)
		{
		    Delete3DTextLabel(SBizzLabel[id]);
			format(PropertyString,sizeof(PropertyString),"%s \n “µ÷˜: %s \n ¿’À˜: %s \n √≈∑—: $%d. \n »Áπ˚œÎΩ¯»Î’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F000F0}/enter",SBizzInfo[id][sbMessage],SBizzInfo[id][sbOwner], SBizzInfo[id][sbExtortion], BizzInfo[id][bEntranceCost]);
			SBizzLabel[id] = Create3DTextLabel(PropertyString ,0x00FFFFAA,SBizzInfo[id][sbEntranceX], SBizzInfo[id][sbEntranceY], SBizzInfo[id][sbEntranceZ],30, 0, 1);
		}
	}
	return 1;
}

public OnPropUpdate(update,idx)
{
	new file[64];
	if(update == 1)
	{
 		format(file, sizeof(file),"LARP/Properties/%d.ini",idx);
 		if(dini_Exists(file))
 		{
 		    if(HouseInfo[idx][hSetted] == 1)
 		    {
			 	dini_FloatSet(file,"Entrance_X",HouseInfo[idx][hEntrancex]);
			    dini_FloatSet(file,"Entrance_Y",HouseInfo[idx][hEntrancey]);
			    dini_FloatSet(file,"Entrance_Z",HouseInfo[idx][hEntrancez]);
		 	    dini_FloatSet(file,"Exit_X",HouseInfo[idx][hExitx]);
		 	    dini_FloatSet(file,"Exit_Y",HouseInfo[idx][hExity]);
		 	    dini_FloatSet(file,"Exit_Z",HouseInfo[idx][hExitz]);
		 	    dini_IntSet(file,"Health_X",HouseInfo[idx][hHealthx]);
		 	    dini_IntSet(file,"Health_Y",HouseInfo[idx][hHealthy]);
		 	    dini_IntSet(file,"Health_Z",HouseInfo[idx][hHealthz]);
		 	    dini_IntSet(file,"Armour_X",HouseInfo[idx][hArmourx]);
		 	    dini_IntSet(file,"Armour_Y",HouseInfo[idx][hArmoury]);
		 	    dini_IntSet(file,"Armour_Z",HouseInfo[idx][hArmourz]);
		 	    dini_Set(file,"Owner",HouseInfo[idx][hOwner]);
		 	    dini_Set(file,"Description",HouseInfo[idx][hDiscription]);
		 	    dini_IntSet(file,"Price",HouseInfo[idx][hValue]);
		 	    dini_IntSet(file,"Health",HouseInfo[idx][hHel]);
		 	    dini_IntSet(file,"Armour",HouseInfo[idx][hArm]);
		 	    dini_IntSet(file,"Interior",HouseInfo[idx][hInt]);
		 	    dini_IntSet(file,"Locked",HouseInfo[idx][hLock]);
		 	    dini_IntSet(file,"Owned",HouseInfo[idx][hOwned]);
		 	    dini_IntSet(file,"Rooms",HouseInfo[idx][hRooms]);
		 	    dini_IntSet(file,"RentPrice",HouseInfo[idx][hRentabil]);
		 	    dini_IntSet(file,"Takings",HouseInfo[idx][hTakings]);
		 	    dini_IntSet(file,"LevelNeeded",HouseInfo[idx][hLevel]);
		 	    dini_IntSet(file,"World",HouseInfo[idx][hWorld]);
		 	    dini_IntSet(file,"Setted",HouseInfo[idx][hSetted]);
			    dini_IntSet(file,"Drugs",HouseInfo[idx][hDrugs]);
		 	    dini_IntSet(file,"Materials",HouseInfo[idx][hMaterials]);
		 	    dini_IntSet(file,"Weapon1",HouseInfo[idx][hWeapon1]);
		 	    dini_IntSet(file,"Ammo1",HouseInfo[idx][hAmmo1]);
		 	    dini_IntSet(file,"Weapon2",HouseInfo[idx][hWeapon2]);
		 	    dini_IntSet(file,"Ammo2",HouseInfo[idx][hAmmo2]);
		 	    dini_IntSet(file,"Weapon3",HouseInfo[idx][hWeapon3]);
		 	    dini_IntSet(file,"Ammo3",HouseInfo[idx][hAmmo3]);
		 	    dini_IntSet(file,"Weapon4",HouseInfo[idx][hWeapon4]);
		 	    dini_IntSet(file,"Ammo4",HouseInfo[idx][hAmmo4]);
		        dini_IntSet(file,"Weapon5",HouseInfo[idx][hWeapon5]);
		 	    dini_IntSet(file,"Ammo5",HouseInfo[idx][hAmmo5]);
		 	    dini_IntSet(file,"Weapon6",HouseInfo[idx][hWeapon6]);
		 	    dini_IntSet(file,"Ammo6",HouseInfo[idx][hAmmo6]);
		 	    dini_Set(file,"Message",HouseInfo[idx][hMessage]);
			}
			else
			{
			    fremove(file);
			}
		}
	}
	else if(update == 2)
	{
	    format(file, sizeof(file),"LARP/Bizzes/%d.ini",idx);
 		if(dini_Exists(file))
 		{
 		    if(BizzInfo[idx][bSetted] == 1)
 		    {
				dini_IntSet(file,"Owned",BizzInfo[idx][bOwned]);
				dini_Set(file,"Owner",BizzInfo[idx][bOwner]);
				dini_Set(file,"Message",BizzInfo[idx][bMessage]);
				dini_Set(file,"ExtortionBy",BizzInfo[idx][bExtortion]);
				dini_FloatSet(file,"Entrance_X",BizzInfo[idx][bEntranceX]);
				dini_FloatSet(file,"Entrance_Y",BizzInfo[idx][bEntranceY]);
				dini_FloatSet(file,"Entrance_Z",BizzInfo[idx][bEntranceZ]);
				dini_FloatSet(file,"Exit_X",BizzInfo[idx][bExitX]);
				dini_FloatSet(file,"Exit_Y",BizzInfo[idx][bExitY]);
				dini_FloatSet(file,"Exit_Z",BizzInfo[idx][bExitZ]);
		        dini_IntSet(file,"LevelNeeded",BizzInfo[idx][bLevelNeeded]);
		        dini_IntSet(file,"Price",BizzInfo[idx][bBuyPrice]);
		        dini_IntSet(file,"EntranceCost",BizzInfo[idx][bEntranceCost]);
		        dini_IntSet(file,"Till",BizzInfo[idx][bTill]);
		        dini_IntSet(file,"Locked",BizzInfo[idx][bLocked]);
		        dini_IntSet(file,"Interior",BizzInfo[idx][bInterior]);
		        dini_IntSet(file,"Products",BizzInfo[idx][bProducts]);
		        dini_IntSet(file,"MaxProducts",BizzInfo[idx][bMaxProducts]);
		        dini_IntSet(file,"ProductPrice",BizzInfo[idx][bPriceProd]);
		        dini_IntSet(file,"VirtualWorld",BizzInfo[idx][bVirWorld]);
		        dini_IntSet(file,"InteriorNr",BizzInfo[idx][bInteriorNr]);
		        dini_IntSet(file,"Setted",BizzInfo[idx][bSetted]);
			}
			else
			{
			    fremove(file);
			}
		}
	}
	else if(update == 3)
	{
		format(file, sizeof(file),"LARP/SBizzes/%d.ini",idx);
 		if(!dini_Exists(file))
 		{
 		    dini_Create(file);
		}
		dini_IntSet(file,"Owned",SBizzInfo[idx][sbOwned]);
		dini_Set(file,"Owner",SBizzInfo[idx][sbOwner]);
		dini_Set(file,"Message",SBizzInfo[idx][sbMessage]);
		dini_Set(file,"ExtortionBy",SBizzInfo[idx][sbExtortion]);
		dini_FloatSet(file,"Entrance_X",SBizzInfo[idx][sbEntranceX]);
		dini_FloatSet(file,"Entrance_Y",SBizzInfo[idx][sbEntranceY]);
		dini_FloatSet(file,"Entrance_Z",SBizzInfo[idx][sbEntranceZ]);
		dini_IntSet(file,"LevelNeeded",SBizzInfo[idx][sbLevelNeeded]);
        dini_IntSet(file,"Price",SBizzInfo[idx][sbBuyPrice]);
        dini_IntSet(file,"EntranceCost",SBizzInfo[idx][sbEntranceCost]);
        dini_IntSet(file,"Till",SBizzInfo[idx][sbTill]);
        dini_IntSet(file,"Locked",SBizzInfo[idx][sbLocked]);
        dini_IntSet(file,"Interior",SBizzInfo[idx][sbInterior]);
        dini_IntSet(file,"Products",SBizzInfo[idx][sbProducts]);
        dini_IntSet(file,"MaxProducts",SBizzInfo[idx][sbMaxProducts]);
        dini_IntSet(file,"ProductPrice",SBizzInfo[idx][sbPriceProd]);
	}
	else if(update == 4)
	{
		format(file, sizeof(file),"LARP/Vehicles/%d.ini",idx);
		if(dini_Exists(file))
		{
			dini_IntSet(file,"Model",CarInfo[idx][cModel]);
			dini_FloatSet(file,"Location_X",CarInfo[idx][cLocationx]);
			dini_FloatSet(file,"Location_Y",CarInfo[idx][cLocationy]);
			dini_FloatSet(file,"Location_Z",CarInfo[idx][cLocationz]);
			dini_FloatSet(file,"Angle",CarInfo[idx][cAngle]);
			dini_IntSet(file,"Color_1",CarInfo[idx][cColorOne]);
			dini_IntSet(file,"Color_2",CarInfo[idx][cColorTwo]);
			dini_Set(file,"Owner",CarInfo[idx][cOwner]);
			dini_IntSet(file,"Owned",CarInfo[idx][cOwned]);
			dini_IntSet(file,"Locked",CarInfo[idx][cLock]);
			dini_IntSet(file,"Paintjob",CarInfo[idx][cPaintjob]);
			dini_IntSet(file,"VirtualWorld",CarInfo[idx][cVirWorld]);
			dini_IntSet(file,"Component0",CarInfo[idx][cComponent0]);
			dini_IntSet(file,"Component1",CarInfo[idx][cComponent1]);
			dini_IntSet(file,"Component2",CarInfo[idx][cComponent2]);
			dini_IntSet(file,"Component3",CarInfo[idx][cComponent3]);
			dini_IntSet(file,"Component4",CarInfo[idx][cComponent4]);
			dini_IntSet(file,"Component5",CarInfo[idx][cComponent5]);
			dini_IntSet(file,"Component6",CarInfo[idx][cComponent6]);
			dini_IntSet(file,"Component7",CarInfo[idx][cComponent7]);
			dini_IntSet(file,"Component8",CarInfo[idx][cComponent8]);
			dini_IntSet(file,"Component9",CarInfo[idx][cComponent9]);
			dini_IntSet(file,"Component10",CarInfo[idx][cComponent10]);
			dini_IntSet(file,"Component11",CarInfo[idx][cComponent11]);
			dini_IntSet(file,"Component12",CarInfo[idx][cComponent12]);
			dini_IntSet(file,"Component13",CarInfo[idx][cComponent13]);
			dini_IntSet(file,"SecurityCode",CarInfo[idx][cCode]);
		}
 	}
	return 1;
}

public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level || IsPlayerAdmin(i))
			{
			    if(ViewAdmin[i] == 1)
				{
				    if(PlayerInfo[i][pAdminDuty] == 1 || UcAdmin[i] == 1)
				    {
						SendClientMessage(i, color, string);
					}
				}
			}
		}
	}
	printf("%s", string);
	return 1;
}

public OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(SentMessage[i] == 0)
		    {
			    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
			    {
					SendClientMessage(i, color, string);
				}
				if(member == 1)
				{
				    if(IsAFreecop (i) && PlayerInfo[i][pDuty] == 1)
				    {
				        SendClientMessage(i, color, string);
					}
				}
			}
		}
	}
}

public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendNewFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFMember] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public SendIRCMessage(channel, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayersChannel[i] == channel)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamBeepMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
				RingTone[i] = 20;
			}
		}
	}
}

public SendEnemyMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] >= 3)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}


public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] >= 1 || IsPlayerAdmin(i))
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	printf("%s", string);
}

public SendTesterMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pTester] >= 1 || PlayerInfo[i][pAdmin] >= 6 || IsPlayerAdmin(i))
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	printf("%s", string);
}

public SendTesterAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pTester] >= 1 || PlayerInfo[i][pAdmin] >= 1 || IsPlayerAdmin(i))
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
	printf("%s", string);
}


/*public AddCar(carcoords)
{
	new randcol = random(126);
	new randcol2 = 1;
	if (rccounter == 14)
	{
		rccounter = 0;
	}
	AddStaticVehicleEx(carselect[rccounter], CarSpawns[carcoords][pos_x], CarSpawns[carcoords][pos_y], CarSpawns[carcoords][pos_z], CarSpawns[carcoords][z_angle], randcol, randcol2, 60000);
	rccounter++;
	return 1;
}*/

public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

//ª®∑—2ÃÏ∫∫ªØ26165––ÕÍ≥…
//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------

public OnPlayerCommandText(playerid, cmdtext[])
{
    dcmd(xgoto, 5, cmdtext);
    dcmd(gpsfind, 7, cmdtext);
    dcmd(attach,6,cmdtext);
	dcmd(unattach,8,cmdtext);
	dcmd(acheckcode,10,cmdtext);
	dcmd(alias,5,cmdtext);
	dcmd(ips,3,cmdtext);
	dcmd(getips,6,cmdtext);
	dcmd(getaliases,10,cmdtext);
	dcmd(unban,5,cmdtext);
	//dcmd(saveeverything,14,cmdtext);
	new string[512 char];
	new playermoney;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new cmd[128];
	new tmp[128];
	new dancestyle;
	new giveplayerid, moneys, idx;
	new idcar = GetPlayerVehicleID(playerid);
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	cmd = strtok(cmdtext, idx);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	new y5, m5, d5;
	new h5,mi5,s5;
	getdate(y5,m5,d5);
	gettime(h5,mi5,s5);
	format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> %s",d5,m5,y5,h5,mi5,s5,sendername,cmdtext);
	AllCommandLog(string);
	
    if(KillSpawnStart[playerid] == 1)
    {
  		SendClientMessage(playerid, COLOR_GREY, "ƒ„œ÷‘⁄¥¶”⁄≤°Œ£◊¥Ã¨(≤ªø…“‘ π”√»Œ∫Œ÷∏¡Ó),ƒ„ø…“‘œÚ¬∑»À«Ûæ»≤π—™,∑Ò‘Ú‘⁄200√Î∫ÛΩ´±ªÀÕÕ˘“Ω‘∫");
  		return 1;
	}

	if(PlayerInfo[playerid][pAdmin] == 0) Commands[playerid] ++;
	if(Commands[playerid] >= 1)
	{
	    KillTimer(CommandsTimer[playerid]);
		CommandsTimer[playerid] = SetTimerEx("ResetCommands",1500,false,"i",playerid);
	}
	if(Commands[playerid] == 5) SendClientMessage(playerid, COLOR_LIGHTBLUE,"* «Îºı¬˝ ‰»Î÷∏¡ÓµƒÀŸ∂»∑Ò‘Úƒ„Ω´ª·±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	if(Commands[playerid] == 10)
	{
	    GetPlayerName(playerid, playername, sizeof(playername));
        format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚  ‘≠“Ú:¿ƒ”√÷∏¡Ó.", playername, playerid);
		SendClientMessageToAll(COLOR_NICERED, string);
		SendClientMessage(playerid,COLOR_LIGHTBLUE, "ƒ„±ªÃﬂ≥ˆ¡À∑˛ŒÒ∆˜Õ®π˝ ∑¥Õ‚π“ºÏ≤‚ ‘≠“Ú:¿ƒ”√÷∏¡Ó.");
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Flooding the Commands.",d5,m5,y5,h5,mi5,s5,playername);
		KickLog(string);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by the ∑¥Õ‚π“ºÏ≤‚ - Flooding the Commands.",d5,m5,y5,h5,mi5,s5,playername);
		AddPunishment(playerid, string);
		Kick(playerid);
		
		KillTimer(CommandsTimer[playerid]);
	}
	
    if(PlayerInfo[playerid][pAdmin] >= 1 && AFK[playerid] == 1)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) SafeSetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
        else SetVehiclePos(idcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		afkadmins --;
		AFK[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		TextDrawHideForPlayer(playerid, Textdraw5);
		TextDrawHideForPlayer(playerid, Textdraw50);
		TextDrawShowForPlayer(playerid, Textdraw44);
		TextDrawShowForPlayer(playerid, Textdraw45);
		TextDrawShowForPlayer(playerid, Textdraw49[playerid]);
		TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
		TextDrawShowForPlayer(playerid, Textdraw55);
		if(PlayerInfo[playerid][pWatch] == 1)
		{
			TextDrawShowForPlayer(playerid, Textdraw56);
			TextDrawShowForPlayer(playerid, Textdraw57);
			TextDrawShowForPlayer(playerid, Textdraw58);
		}
	}


	if (strcmp(cmd, "/breathtest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsACop(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /breathtest [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
			 	giveplayerid = ReturnUser(tmp);
			 	new level = GetPlayerDrunkLevel(giveplayerid);
			 	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(GetDistanceBetweenPlayers(playerid,giveplayerid) < 3)
	        			{
						    if(level > 600)
						    {
							    format(string, sizeof(string), "* %s ◊•◊°æ∆æ´≤‚ ‘“«µƒπ‹◊”∑≈µΩ %s◊Ï¿Ô.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							    SendClientMessage(playerid, COLOR_LIGHTBLUE, "** æ∆æ´≤‚ ‘Ω·π˚: ∫»¥Û¡À **");
							    GameTextForPlayer(playerid,"~w~This player is~n~~r~Drunk", 8000, 1);
							    return 1;
						    }
		                   	else
					   		{
								format(string, sizeof(string), "* %s ◊•◊°æ∆æ´≤‚ ‘“«µƒπ‹◊”∑≈µΩ %s◊Ï¿Ô.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							    SendClientMessage(playerid, COLOR_LIGHTBLUE, "** æ∆æ´≤‚ ‘Ω·π˚: √ª”–◊Ì **");
							    GameTextForPlayer(playerid,"~w~This player is~n~~r~Not Drunk", 8000, 1);
							    return 1;
		                 	}
						}
				    }
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				}
			}
		    else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó! (÷ª  ”√”⁄æØ≤Ï)");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/drugtest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsACop(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /drugtest [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
			 	giveplayerid = ReturnUser(tmp);
			 	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(GetDistanceBetweenPlayers(playerid,giveplayerid) < 3)
	        			{
						    if(PlayerStoned[playerid] >= 1)
						    {
							    format(string, sizeof(string), "* %s ◊•◊°∂æ∆∑≤‚ ‘“«µƒπ‹◊”∑≈µΩ %s◊Ï¿Ô.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							    SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ∂æ∆∑≤‚ ‘Ω·π˚: …Ò÷æ≤ª«Â **");
							    GameTextForPlayer(playerid,"~w~This player is~n~~r~High", 8000, 1);
							    return 1;
						    }
		                   	else
					   		{
								format(string, sizeof(string), "* %s ◊•◊°∂æ∆∑≤‚ ‘“«µƒπ‹◊”∑≈µΩ %s◊Ï¿Ô.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							    SendClientMessage(playerid, COLOR_LIGHTBLUE, "** ∂æ∆∑≤‚ ‘Ω·π˚: ’˝≥£ **");
							    GameTextForPlayer(playerid,"~w~This player is~n~~r~Not High", 8000, 1);
							    return 1;
		                 	}
						}
				    }
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				}
			}
		    else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó! (÷ª  ”√”⁄æØ≤Ï)");
			}
		}
		return 1;
	}
///////////////////////////////////////////
	if (strcmp(cmd, "/helpbz", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /helpbz [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
			 	giveplayerid = ReturnUser(tmp);
			 	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(IsPlayerConnected(giveplayerid))
				{
					if(KillSpawnStart[giveplayerid] != 1)
					{
  						SendClientMessage(playerid, COLOR_GREY,"¥À»À≤ª–Ë“™æ»‘Æ.");
     					return 1;
					}
        			if(KillSpawnStart[giveplayerid] == 1)
    				{
        				new Float:health;
        				GetPlayerHealth(giveplayerid,health);
        				if(health > 13)
        				{
       						SetRealMoney(giveplayerid, ScriptMoney[giveplayerid]);
							PlayerInfo[giveplayerid][pDeaths] += 1;
        					KillSpawnStart[giveplayerid] = 0;
							SendClientMessage(giveplayerid, COLOR_GREY, "ƒ„ªÒæ»¡À...µ´ «ƒ„ªπ∫‹–È»ı,ƒ„ø…ƒ‹ªπ–Ë“™»•“Ω‘∫÷Œ¡∆");
    						SetTimerEx("StopKillSpawn", 3000, 0, "i", giveplayerid);
   							KillTimer(KillSpawnTK1[giveplayerid]);
   							SendClientMessage(playerid, COLOR_GREY,"¥À»À≤ª–Ë“™æ»‘Æ.");
   							return 1;
						}
					}
					new Float:x, Float:y, Float:z;
					GetPlayerPos(giveplayerid,x,y,z);
					if(IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
					{
						new Float:healthz;
						GetPlayerHealth(giveplayerid,healthz);
 						SetPlayerHealth(giveplayerid,healthz+1);
	    				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„’˝‘⁄ ©æ»!À˚”–µ„∫ÙŒ¸¡Àƒ„–Ë“™‘Ÿ≈¨¡¶œ¬!");
	    				
			    		format(string, sizeof(string), "* %s ◊•◊° %s µƒ¡≥,◊ˆ»Àπ§∫ÙŒ¸.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    					format(string, sizeof(string), "* %s ’˝‘⁄«¿æ»ƒ„.", sendername);
				    	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
        			}else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/robcityhall", true) == 0)
	{
	    new success = random(2);
	    if(CityHallRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 358.5919,184.2908,1008.3828))
	    {
            if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ  –’˛Ã¸, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 60√Î!");
	                    RobbingTime[playerid] = 60;
						RobCityHallTimer = SetTimerEx("RobCityHall",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ –’˛Ã¸");
			            PlayerInfo[playerid][pRobTime] = 900;
			            CityHallRobbedRecently = 1;
						SetTimer("UnsetCityHallRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À---  –’˛Ã¸!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ  –’˛Ã¸");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄ –’˛Ã¸«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robbank", true) == 0)
	{
	    new success = random(2);
	    if(BankRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 2309.6060,-4.0211,26.7422))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ “¯––, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 95√Î!");
	                    RobbingTime[playerid] = 95;
						RobBankTimer = SetTimerEx("RobBank",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ“¯––");
			            PlayerInfo[playerid][pRobTime] = 900;
			            BankRobbedRecently = 1;
						SetTimer("UnsetBankRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- “¯––!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ “¯––");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄“¯––«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robgym", true) == 0)
	{
	    new success = random(2);
	    if(GymRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 756.5454,5.4325,1000.6992))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸΩ°…Ì∑ø, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 50√Î!");
	                    RobbingTime[playerid] = 50;
						RobGymTimer = SetTimerEx("RobGym",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸΩ°…Ì∑ø");
			            PlayerInfo[playerid][pRobTime] = 900;
			            GymRobbedRecently = 1;
						SetTimer("UnsetGymRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À---Ω°…Ì∑ø!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸΩ°…Ì∑ø");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄Ω°…Ì∑ø«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robdonut", true) == 0)
	{
	    new success = random(2);
	    if(DonutRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 379.1978,-184.1220,1000.6328))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ ÃÃ»¶…ÃµÍ, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 55√Î!");
	                    RobbingTime[playerid] = 55;
						RobDonutTimer = SetTimerEx("RobDonut",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸÃÃ»¶…ÃµÍ");
			            PlayerInfo[playerid][pRobTime] = 900;
			            DonutRobbedRecently = 1;
						SetTimer("UnsetDonutRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- ÃÃ»¶…ÃµÍ!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ ÃÃ»¶…ÃµÍ");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄ÃÃ»¶…ÃµÍ«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robalhambra", true) == 0)
	{
	    new success = random(2);
	    if(AlhambraRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 499.6341,-20.3592,1000.6797))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ ∞¢¿º≤º¿≠æ„¿÷≤ø, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 45√Î!");
	                    RobbingTime[playerid] = 45;
						RobAlhambraTimer = SetTimerEx("RobAlhambra",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ∞¢¿º≤º¿≠æ„¿÷≤ø");
			            PlayerInfo[playerid][pRobTime] = 900;
			            AlhambraRobbedRecently = 1;
						SetTimer("UnsetAlhambraRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- ∞¢¿º≤º¿≠æ„¿÷≤ø!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ ∞¢¿º≤º¿≠æ„¿÷≤ø");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄∞¢¿º≤º¿≠æ„¿÷≤ø«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robbar", true) == 0)
	{
	    new success = random(2);
	    if(BarRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 492.0305,-82.4695,998.7578))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ ¬Ã∆ø◊”æ∆∞…, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 50√Î!");
	                    RobbingTime[playerid] = 50;
						RobBarTimer = SetTimerEx("RobBar",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ¬Ã∆ø◊”æ∆∞…");
			            PlayerInfo[playerid][pRobTime] = 900;
			            BarRobbedRecently = 1;
						SetTimer("UnsetBarRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- ¬Ã∆ø◊”æ∆∞…!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ ¬Ã∆ø◊”æ∆∞…");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄¬Ã∆ø◊”æ∆∞…«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robpizza", true) == 0)
	{
	    new success = random(2);
	    if(PizzaRobbedRecently == 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
		    return 1;
		}
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 373.6143,-118.8086,1001.4922))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ ±ÿ §øÕ, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 50√Î!");
	                    RobbingTime[playerid] = 50;
						RobPizzaTimer = SetTimerEx("RobPizza",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ±ÿ §øÕ");
			            PlayerInfo[playerid][pRobTime] = 900;
			            PizzaRobbedRecently = 1;
						SetTimer("UnsetPizzaRob",1500000,false);
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- ±ÿ §øÕ!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ ±ÿ §øÕ");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄±ÿ §øÕ«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robburger", true) == 0)
	{
	    new success = random(2);
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 373.8943,-67.4481,1001.5078))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		    	if(GetPlayerVirtualWorld(playerid) == 1 && Burger1RobbedRecently == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
				    return 1;
				}
				else if(GetPlayerVirtualWorld(playerid) == 2 && Burger2RobbedRecently == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
				    return 1;
				}
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ ∫∫±§µÍ, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 55√Î!");
	                    RobbingTime[playerid] = 55;
						RobBurgerTimer = SetTimerEx("RobBurger",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ∫∫±§µÍ");
			            PlayerInfo[playerid][pRobTime] = 900;
						if(GetPlayerVirtualWorld(playerid) == 1) { Burger1RobbedRecently = 1; SetTimer("UnsetBurger1Rob",1500000,false); }
						else if(GetPlayerVirtualWorld(playerid) == 2) { Burger2RobbedRecently = 1; SetTimer("UnsetBurger2Rob",1500000,false); }
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- ∫∫±§µÍ!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ ∫∫±§µÍ!");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄∫∫±§µÍ«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/robcluckin", true) == 0)
	{
	    new success = random(2);
		if(PlayerInfo[playerid][pRobTime] >= 1)
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸ƒ„“—æ≠«¿ΩŸ¡À“ª∏ˆµÿ∑Ω,«Î…‘µ».");
		    return 1;
		}
	    if(IsPlayerInRangeOfPoint(playerid, 2, 371.7011,-6.2796,1001.8589))
	    {
	        if(GetPlayerWeapon(playerid) >= 24 && GetPlayerWeapon(playerid) <= 40)
			{
		    	if(GetPlayerVirtualWorld(playerid) == 1 && Cluckin1RobbedRecently == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
				    return 1;
				}
				else if(GetPlayerVirtualWorld(playerid) == 2 && Cluckin2RobbedRecently == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ◊ÓΩ¸’‚∏ˆŒª÷√±ª«¿ΩŸ¡À,«Î…‘∫Û‘Ÿ ‘");
				    return 1;
				}
		        if(PlayerInfo[playerid][pDuty] == 0)
				{
			        if(success == 1)
					{
				        SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„œ÷‘⁄‘⁄«¿ΩŸ øÏ≤ÕµÍ, «Î‘⁄ºÏ≤È’æƒ⁄µ»¥˝ 55√Î!");
	                    RobbingTime[playerid] = 55;
						RobCluckinTimer = SetTimerEx("RobCluckin",1000,true,"i",playerid);
			            WantedPoints[playerid] = 5;
			            SetPlayerCriminal(playerid,255, "«¿ΩŸ«¿ΩŸøÏ≤ÕµÍ");
			            PlayerInfo[playerid][pRobTime] = 900;
						if(GetPlayerVirtualWorld(playerid) == 1) { Cluckin1RobbedRecently = 1; SetTimer("UnsetCluckin1Rob",1500000,false); }
						else if(GetPlayerVirtualWorld(playerid) == 2) { Cluckin2RobbedRecently = 1; SetTimer("UnsetCluckin2Rob",1500000,false); }
						OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
					}
					else
					{
					    SendClientMessage(playerid, COLOR_ORANGE, "* ƒ„«¿ΩŸ ß∞‹¡À--- øÏ≤ÕµÍ!");
					    WantedPoints[playerid] = 2;
			            SetPlayerCriminal(playerid,255, "∆ÛÕº«¿ΩŸ øÏ≤ÕµÍ!");
						PlayerInfo[playerid][pRobTime] = 500;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»œ¬∞‡!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™“ª—˘Œ‰∆˜¿¥Ω¯––«¿ΩŸ!");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄øÏ≤ÕµÍ«¿ΩŸµ„!");
		    return 1;
		}
		return 1;
	}

    if(strcmp(cmd, "/wank", true) == 0)
	{
		new Float:Health;
		GetPlayerHealth(playerid, Health);
		if(WankedRecently[playerid] == 0)
		{
			if(IsWanking[playerid] == 0)
			{
				ApplyAnimation(playerid, "PAULNMAC","wank_in",4.1,0,1,1,1,0);
				TimesWanked[playerid] = 0;
				SetTimerEx("StartWank",3500,0,"i",playerid);
				format(string, sizeof(string),"* %s ¿≠ø™À˚µƒø„◊”¿≠¡¥‘⁄∏¯À˚µƒ–°JJ◊ˆªÓ»˚‘À∂Ø",sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
			else
			{
			    ApplyAnimation(playerid, "PAULNMAC","wank_out",4.1,0,1,1,1,0);
			    IsWanking[playerid] = 0;
			    WankedRecently[playerid] = 1;
			    new rand = random(sizeof(RandomWankTime));
				SetTimerEx("CanWankAgain",RandomWankTime[rand][0],0,"i",playerid);
				if(TimesWanked[playerid] > 0 && TimesWanked[playerid] < 10)
				{
                    if(Health < 90) { SetPlayerHealth(playerid, Health+10); }
					else { SetPlayerHealth(playerid, 100); }
				}
				else if(TimesWanked[playerid] > 11 && TimesWanked[playerid] < 20)
				{
				    if(Health < 85) { SetPlayerHealth(playerid, Health+15); }
					else { SetPlayerHealth(playerid, 100); }
				}
				else if(TimesWanked[playerid] > 21 && TimesWanked[playerid] < 30)
				{
				    if(Health < 80) { SetPlayerHealth(playerid, Health+20); }
					else { SetPlayerHealth(playerid, 100); }
				}
				else if(TimesWanked[playerid] > 31 && TimesWanked[playerid] < 40)
				{
				    if(Health < 75) { SetPlayerHealth(playerid, Health+25); }
					else { SetPlayerHealth(playerid, 100); }
				}
				else if(TimesWanked[playerid] > 41 && TimesWanked[playerid] < 50)
				{
				    if(Health < 70) { SetPlayerHealth(playerid, Health+30); }
					else { SetPlayerHealth(playerid, 100); }
				}
				new RandomFormat = random(5);
				switch (RandomFormat)
				{
				    case 0: { format(string, sizeof(string),"* %s ¥Û∫“ªæ‰’ÊTMDÀ¨,»ª∫Û¿≠…œ¡Àø„◊”¿≠¡¥.",sendername); }
				    case 1: { format(string, sizeof(string),"** %s ¥Û∫“ªæ‰’ÊÀ¨,»ª∫Û¿≠…œ¡Àø„◊”¿≠¡¥.",sendername); }
				    case 2: { format(string, sizeof(string),"** %s ¥Û∫“ª…˘À¨,»ª∫Û¿≠…œ¡Àø„◊”¿≠¡¥",sendername); }
				    case 3: { format(string, sizeof(string),"** %s ¥Û∫“ªæ‰Œ“øÏ∑…œ…¡À,»ª∫Û¿≠…œ¡Àø„◊”¿≠¡¥",sendername); }
				    case 4: { format(string, sizeof(string),"** %s ¥Û∫“ªæ‰Œ““™…‰¡À,»ª∫Û¿≠…œ¡Àø„◊”¿≠¡¥",sendername); }
				}
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				TimesWanked[playerid] = 0;
                if (PlayerInfo[playerid][pAchievement19] == 0)
				{
				    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~A Dirty Mind (19) ~n~~n~~w~you won ~g~$300");
	    			ShowAchievement(playerid);
					SafeGivePlayerMoney(playerid, 300);
					PlayerInfo[playerid][pAchievement19] = 1;
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„∏’∏’◊ˆπ˝“ª¥Œ ÷“˘,–Ë“™–›œ¢“ªª·...");
   			return 1;
		}
		return 1;
	}



	if(strcmp(cmd, "/offerblowjob", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
    		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /offerblowjob [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					format(string, sizeof(string),"* %s œÎ∫Õƒ„ø⁄Ωª, »Áπ˚ƒ„Ω” ‹º¸»Î/acceptblowjob≤ªΩ” ‹º¸»Î/declineblowjob",sendername);
					SendClientMessage(giveplayerid, COLOR_ORANGE, string);
					OfferedBlowjob[giveplayerid] = playerid;
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/acceptblowjob", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if(OfferedBlowjob[playerid] != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "* %s Ω” ‹ƒ„µƒø⁄Ωª∑˛ŒÒ!", sendername);
				SendClientMessage(OfferedBlowjob[playerid], COLOR_GREY, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* √ª”–»ÀÃ·π©ƒ„ø⁄Ωª∑˛ŒÒ.");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/declineblowjob", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if(OfferedBlowjob[playerid] != INVALID_PLAYER_ID)
			{
				format(string, sizeof(string), "* %s √ª”–Ω” ‹ƒ„Ã·π©µƒø⁄Ωª∑˛ŒÒ!", sendername);
				SendClientMessage(OfferedBlowjob[playerid], COLOR_GREY, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* √ª”–»ÀÃ·π©ƒ„ø⁄Ωª∑˛ŒÒ.");
			    return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/blowjob", true) == 0 || strcmp(cmd, "/bj", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /blowjob [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
   			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if (OfferedBlowjob[giveplayerid] != playerid)
					{
						SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤¢√ª”–Ω” ‹ƒ„µƒø⁄Ωª∑˛ŒÒ");
			            return 1;
					}
					if(giveplayerid != playerid)
					{
						if (PlayerInfo[giveplayerid][pSex] == 1)
						{
							if (!IsPlayerInAnyVehicle(playerid) && !IsPlayerInAnyVehicle(giveplayerid))
							{
								if (ProxDetectorS(1.5, playerid, giveplayerid))
								{
								    if(GivingBlowjob[playerid] == 0)
								    {
								        TogglePlayerControllable(playerid, 0);
								        TogglePlayerControllable(giveplayerid, 0);
								        GettingBlowjob[giveplayerid] = 1;
								        ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_START_W",4.1,0,0,0,1,0);
		                                ApplyAnimation(giveplayerid,"BLOWJOBZ","BJ_COUCH_START_P",4.1,0,0,0,1,0);
		                                SetTimerEx("BlowJobStart",3500,0,"i",playerid);
									}
									else if(GivingBlowjob[playerid] == 1)
									{
									    TogglePlayerControllable(playerid, 1);
								        TogglePlayerControllable(giveplayerid, 1);
								        GivingBlowjob[playerid] = 0;
								        GettingBlowjob[giveplayerid] = 0;
								        ApplyAnimation(giveplayerid,"BLOWJOBZ","BJ_COUCH_END_P",4.1,0,0,0,1,0);
									    ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_END_W",4.1,0,0,0,1,0);
										new Float:Health;
										GetPlayerHealth(giveplayerid, Health);
										OfferedBlowjob[playerid] = INVALID_PLAYER_ID;
										if(Health <= 70)
										{
										    SetPlayerHealth(giveplayerid, Health+30);
										}
										else
										{
										    SetPlayerHealth(giveplayerid, 100);
										}
										if (PlayerInfo[playerid][pAchievement20] == 0)
										{
										    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~You're a Hooker, Sir. (20) ~n~~n~~w~you won ~g~$250");
	    									ShowAchievement(playerid);
											SafeGivePlayerMoney(playerid, 250);
											PlayerInfo[playerid][pAchievement20] = 1;
										}
									}
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "* √ª”–ƒ–∫¢Ω”Ω¸ƒ„.");
								    return 1;
								}
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒ∑˛ŒÒ∂‘œÛ‘⁄≥µ¿Ô«Î»√À˚¿Îø™À˚µƒ∆˚≥µ.");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* ≈Æ…˙ø…√ª–°µ‹µ‹≈∂");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ÃÏ∞°!ƒ„…˙≤°¡Àƒ„œ÷‘⁄≤ªø…“‘ø⁄Ωª!!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* Œﬁ–ßµƒÕÊº“ID.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“ªπ√ª”–º”»ÎµΩ”Œœ∑.");
			    return 1;
			}
		}
		return 1;
	}

    if(strcmp(cmd,"/animlist",true)==0)
	{
	    SendClientMessage(playerid, COLOR_YELLOW, "________________________________________________________________________________________________________________________");
		SendClientMessage(playerid,COLOR_GRAD5,"-ø…”√µƒ∂Ø◊˜:");
	    SendClientMessage(playerid,COLOR_GRAD4,"/fall - /fallback - /injured - /akick - /push - /lowbodypush - /handsup - /bomb - /drunk - /getarrested - /laugh - /sup");
        SendClientMessage(playerid,COLOR_GRAD4,"/basket - /headbutt - /medic - /spray - /robman - /taichi - /lookout - /kiss - /cellin - /cellout - /crossarms - /lay");
        SendClientMessage(playerid,COLOR_GRAD3,"/deal - /crack - /smokeanim - /groundsit - /chat - /chat2 - /dance - /fucku - /strip - /hide - /vomit - /eat - /chairsit - /reload");
        SendClientMessage(playerid,COLOR_GRAD3,"/koface - /kostomach - /rollfall - /carjacked1 - /carjacked2 - /rcarjack1 - /rcarjack2 - /lcarjack1 - /lcarjack2 - /bat");
        SendClientMessage(playerid,COLOR_GRAD2,"/lifejump - /exhaust - /leftslap - /carlock - /hoodfrisked - /lightcig - /tapcig - /box - /lay2 - /chant - finger");
        SendClientMessage(playerid,COLOR_GRAD2,"/shouting - /knife - /cop - /elbow - /kneekick - /airkick - /gkick - /gpunch - /fstance - /lowthrow - /highthrow - /aim");
        SendClientMessage(playerid,COLOR_GRAD1,"/pee - /lean - /run");
        SendClientMessage(playerid, COLOR_YELLOW, "________________________________________________________________________________________________________________________");
        return true;
	}

	// carjacked
    if(strcmp(cmd, "/carjacked1", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_jackedLHS",4.0,0,1,1,1,0);
         return 1;
    }

    // carjacked
    if(strcmp(cmd, "/carjacked2", true) == 0) {
		 LoopingAnim(playerid,"PED","CAR_jackedRHS",4.0,0,1,1,1,0);
         return 1;
    }

	// HANDSUP
 	if(strcmp(cmd, "/handsup", true) == 0) {
		//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		LoopingAnim(playerid, "ROB_BANK","SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
        return 1;
    }

    // CELLPHONE IN
 	if(strcmp(cmd, "/cellin", true) == 0) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
        return 1;
    }

    // CELLPHONE OUT
 	if(strcmp(cmd, "/cellout", true) == 0) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
        return 1;
    }

    // Drunk
    if(strcmp(cmd, "/drunk", true) == 0) {
		LoopingAnim(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
		return 1;
    }

	// Place a Bomb
    if (strcmp("/bomb", cmdtext, true) == 0) {
		ClearAnimations(playerid);
		LoopingAnim(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,1,0); // Place Bomb
		return 1;
	}
	// Police Arrest
    if (strcmp("/getarrested", cmdtext, true) == 0) {
	      LoopingAnim(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); // Gun Arrest
		  return 1;
    }
	// Laugh
    if (strcmp("/laugh", cmdtext, true) == 0) {
          OnePlayAnim(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
		  return 1;
	}
	// Rob Lookout
    if (strcmp("/lookout", cmdtext, true) == 0) {
          OnePlayAnim(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
		  return 1;
	}
	// Rob Threat
    if (strcmp("/robman", cmdtext, true) == 0) {
          LoopingAnim(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob
		  return 1;
	}
	// Arms crossed
    if (strcmp("/crossarms", cmdtext, true) == 0) {
          LoopingAnim(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
		  return 1;
	}
	// Lay Down
    if (strcmp("/lay", cmdtext, true) == 0) {
          LoopingAnim(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down
		  return 1;
    }
	// Take Cover
    if (strcmp("/hide", cmdtext, true) == 0) {
          LoopingAnim(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); // Taking Cover
		  return 1;
	}
	// Vomit
    if (strcmp("/vomit", cmdtext, true) == 0) {
	      OnePlayAnim(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
		  return 1;
	}
	// Eat Burger
    if (strcmp("/eat", cmdtext, true) == 0) {
	      OnePlayAnim(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
		  return 1;
	}
	// Wave
    if (strcmp("/wave", cmdtext, true) == 0) {
	      LoopingAnim(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
		  return 1;
	}
	// Slap Ass
    if (strcmp("/slapass", cmdtext, true) == 0) {
   		OnePlayAnim(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0); // Ass Slapping
 		return 1;
	}
	// Dealer
    if (strcmp("/deal", cmdtext, true) == 0) {
          OnePlayAnim(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); // Deal Drugs
		  return 1;
	}
	// Crack Dieing
    if (strcmp("/crack", cmdtext, true) == 0) {
          LoopingAnim(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack
		  return 1;
	}
	// Smoking animations
	if(strcmp(cmd, "/smokeanim", true) == 0)
    {
        if (!strlen(cmdtext[7])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /smoke [1-4]");
    	switch (cmdtext[7])
    	{
        	case '1': LoopingAnim(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); // male
        	case '2': LoopingAnim(playerid,"SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0); //female
        	case '3': LoopingAnim(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0); // standing-fucked
        	case '4': LoopingAnim(playerid,"SMOKING","M_smk_out", 4.0, 1, 0, 0, 0, 0); // standing
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /smoke [1-4]");
    	}
    	return 1;
    }
	// Sit
    if (strcmp("/groundsit", cmdtext, true) == 0 || strcmp("/gro", cmdtext, true) == 0) {
          LoopingAnim(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); // Sit
		  return 1;
    }
    // Idle Chat
    if(strcmp(cmd, "/chat", true) == 0) {
		 LoopingAnim(playerid,"PED","IDLE_CHAT",4.0,1,0,0,1,1);
         return 1;
    }
    // Idle Chat2
    if(strcmp(cmd, "/chat2", true) == 0) {
		 LoopingAnim(playerid,"MISC","Idle_Chat_02",4.0,1,0,0,1,1);
         return 1;
    }
    // Fucku
    if(strcmp(cmd, "/fucku", true) == 0) {
		 OnePlayAnim(playerid,"PED","fucku",4.0,0,0,0,0,0);
         return 1;
    }
    // TaiChi
    if(strcmp(cmd, "/taichi", true) == 0) {
		 LoopingAnim(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
         return 1;
    }

    // ChairSit
    if(strcmp(cmd, "/chairsit", true) == 0) {
		 LoopingAnim(playerid,"PED","SEAT_down",4.1,0,1,1,1,0);
         return 1;
    }

    // Fall on the ground
    if(strcmp(cmd, "/fall", true) == 0) {
		 LoopingAnim(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
         return 1;
    }

    // Fall
    if(strcmp(cmd, "/fallback", true) == 0) {
		 LoopingAnim(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
         return 1;
    }

    // kiss
    if(strcmp(cmd, "/kiss", true) == 0) {
		 LoopingAnim(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
         return 1;
    }

    // Injujred
    if(strcmp(cmd, "/injured", true) == 0) {
		 LoopingAnim(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
         return 1;
    }

    // Homie animations
    if(strcmp(cmd, "/sup", true) == 0)
    {
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /sup [1-3]");
    	switch (cmdtext[5])
    	{
        	case '1': OnePlayAnim(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
         	case '2': OnePlayAnim(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
         	case '3': OnePlayAnim(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /sup [1-3]");
    	}
    	return 1;
    }

    // Rap animations
    if(strcmp(cmd, "/rap", true) == 0)
    {
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /rap [1-4]");
    	switch (cmdtext[5])
    	{
    	    case '1': LoopingAnim(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
        	case '2': LoopingAnim(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
        	case '3': LoopingAnim(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
        	case '4': LoopingAnim(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /rap [1-4]");
    	}
    	return 1;
    }

    // Violence animations
    if(strcmp(cmd, "/push", true) == 0) {
		 OnePlayAnim(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
         return 1;
    }

    if(strcmp(cmd, "/akick", true) == 0) {
		 OnePlayAnim(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
         return 1;
    }

    if(strcmp(cmd, "/lowbodypush", true) == 0) {
		 OnePlayAnim(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
         return 1;
    }

    // Spray
    if(strcmp(cmd, "/spray", true) == 0) {
		 OnePlayAnim(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
         return 1;
    }

    // Headbutt
    if(strcmp(cmd, "/headbutt", true) == 0) {
		 OnePlayAnim(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
         return 1;
    }

    // Medic
    if(strcmp(cmd, "/medic", true) == 0) {
		 OnePlayAnim(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
         return 1;
    }

    // KO Face
    if(strcmp(cmd, "/koface", true) == 0) {
		 LoopingAnim(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0);
         return 1;
    }

    // KO Stomach
    if(strcmp(cmd, "/kostomach", true) == 0) {
		 LoopingAnim(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
         return 1;
    }

    // Jump for your life!
    if(strcmp(cmd, "/lifejump", true) == 0) {
		 LoopingAnim(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
         return 1;
    }

    // Exhausted
    if(strcmp(cmd, "/exhaust", true) == 0) {
		 LoopingAnim(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
         return 1;
    }

    // Left big slap
    if(strcmp(cmd, "/leftslap", true) == 0) {
		 OnePlayAnim(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
         return 1;
    }

    // Big fall
    if(strcmp(cmd, "/rollfall", true) == 0) {
		 LoopingAnim(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
         return 1;
    }

    //…œÀ¯
    if(strcmp(cmd, "/carlock", true) == 0) {
		 OnePlayAnim(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/rcarjack1", true) == 0) {
		 OnePlayAnim(playerid,"PED","CAR_pulloutL_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/lcarjack1", true) == 0) {
		 OnePlayAnim(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/rcarjack2", true) == 0) {
		 OnePlayAnim(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/lcarjack2", true) == 0) {
		 OnePlayAnim(playerid,"PED","CAR_pullout_RHS",4.0,0,0,0,0,0);
         return 1;
    }

    // Hood frisked
    if(strcmp(cmd, "/hoodfrisked", true) == 0) {
		 LoopingAnim(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
         return 1;
    }

    // Lighting cigarette
    if(strcmp(cmd, "/lightcig", true) == 0) {
		 OnePlayAnim(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
         return 1;
    }

    // Tap cigarette
    if(strcmp(cmd, "/tapcig", true) == 0) {
		 OnePlayAnim(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0);
         return 1;
    }

    // Bat stance
    if(strcmp(cmd, "/bat", true) == 0) {
		 LoopingAnim(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0);
         return 1;
    }

    // Boxing
    if(strcmp(cmd, "/box", true) == 0) {
		 LoopingAnim(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
         return 1;
    }

    // Lay 2
    if(strcmp(cmd, "/lay2", true) == 0) {
		 LoopingAnim(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
         return 1;
    }

    // Gogogo
    if(strcmp(cmd, "/chant", true) == 0) {
		 LoopingAnim(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
         return 1;
    }

    // Finger
    if(strcmp(cmd, "/finger", true) == 0) {
		 OnePlayAnim(playerid,"RIOT","RIOT_FUKU",2.0,0,0,0,0,0);
         return 1;
    }

    // Shouting
    if(strcmp(cmd, "/shouting", true) == 0) {
		 LoopingAnim(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
         return 1;
    }

    // Cop stance
    if(strcmp(cmd, "/cop", true) == 0) {
		 OnePlayAnim(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
         return 1;
    }

    // Elbow
    if(strcmp(cmd, "/elbow", true) == 0) {
		 OnePlayAnim(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
         return 1;
    }

    // Knee kick
    if(strcmp(cmd, "/kneekick", true) == 0) {
		 OnePlayAnim(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0);
         return 1;
    }

    // Fight stance
    if(strcmp(cmd, "/fstance", true) == 0) {
		 LoopingAnim(playerid,"FIGHT_D","FightD_IDLE",4.0,1,1,1,1,0);
         return 1;
    }

    // Ground punch
    if(strcmp(cmd, "/gpunch", true) == 0) {
		 OnePlayAnim(playerid,"FIGHT_B","FightB_G",4.0,0,0,0,0,0);
         return 1;
    }

    // Air kick
    if(strcmp(cmd, "/airkick", true) == 0) {
		 OnePlayAnim(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0);
         return 1;
    }

    // Ground kick
    if(strcmp(cmd, "/gkick", true) == 0) {
		 OnePlayAnim(playerid,"FIGHT_D","FightD_G",4.0,0,0,0,0,0);
         return 1;
    }

    // Low throw
    if(strcmp(cmd, "/lowthrow", true) == 0) {
		 OnePlayAnim(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
         return 1;
    }

    // Ground kick
    if(strcmp(cmd, "/highthrow", true) == 0) {
		 OnePlayAnim(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0);
         return 1;
    }

    // Deal stance
    if(strcmp(cmd, "/dealstance", true) == 0) {
		 LoopingAnim(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
         return 1;
    }

    // Deal stance
    if(strcmp(cmd, "/pee", true) == 0) {
		 SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
         return 1;
    }

    // Knife animations
    if(strcmp(cmd, "/knife", true) == 0)
    {
        if (!strlen(cmdtext[7])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /knife [1-4]");
    	switch (cmdtext[7])
    	{
    	    case '1': LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
        	case '2': LoopingAnim(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
        	case '3': OnePlayAnim(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
        	case '4': LoopingAnim(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /knife [1-4]");
    	}
    	return 1;
    }

    // Basket-ball
    if(strcmp(cmd, "/basket", true) == 0)
    {
        if (!strlen(cmdtext[8])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /basket [1-6]");
    	switch (cmdtext[8])
    	{
        	case '1': LoopingAnim(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
        	case '2': OnePlayAnim(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
        	case '3': OnePlayAnim(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
        	case '4': LoopingAnim(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
        	case '5': LoopingAnim(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
        	case '6': LoopingAnim(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /basket [1-6]");
    	}
    	return 1;
    }

    // Reloading guns
    if(strcmp(cmd, "/reload", true) == 0)
    {
        if (!strlen(cmdtext[8])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /reload [deagle/smg/ak/m4]");
       	if (strcmp("deagle",cmdtext[8],true) == 0)
   	    {
   			OnePlayAnim(playerid,"COLT45","colt45_reload",4.0,0,0,0,0,1);
 	    }
 	    else if (strcmp("smg",cmdtext[8],true) == 0 || strcmp("ak",cmdtext[8],true) == 0 || strcmp("m4",cmdtext[8],true) == 0)
   	    {
   			OnePlayAnim(playerid,"UZI","UZI_reload",4.0,0,0,0,0,0);
 	    }
       	else SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /reload [deagle/smg/ak/m4]");
    	return 1;
    }

    if(strcmp(cmd, "/gwalk", true) == 0)
    {
        if (!strlen(cmdtext[6])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /gwalk [1/2]");
        new style = strval(cmdtext[6]);
       	if (style == 1)
   	    {
   			LoopingAnim(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
 	    }
 	    else if (style == 2)
   	    {
   			LoopingAnim(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
 	    }
       	else SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /gwalk [1/2]");
    	return 1;
    }

    //Aiming animation
    if(strcmp(cmd, "/aim", true) == 0)
    {
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /aim [1-.]");
    	switch (cmdtext[5])
    	{
        	case '1': LoopingAnim(playerid,"PED","gang_gunstand",4.0,1,1,1,1,1);
        	case '2': LoopingAnim(playerid,"PED","Driveby_L",4.0,0,1,1,1,1);
        	case '3': LoopingAnim(playerid,"PED","Driveby_R",4.0,0,1,1,1,1);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /aim [1-3]");
    	}
    	return 1;
    }

    // Leaning animation
    if(strcmp(cmd, "/lean", true) == 0)
    {
        if (!strlen(cmdtext[6])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /lean [1-2]");
    	switch (cmdtext[6])
    	{
        	case '1': LoopingAnim(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0);
        	case '2': LoopingAnim(playerid,"MISC","Plyrlean_loop",4.0,0,1,1,1,0);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /lean [1-2]");
    	}
    	return 1;
    }

    if(strcmp(cmd, "/run", true) == 0)
    {
		LoopingAnim(playerid,"PED","sprint_civi",floatstr(cmdtext[5]),1,1,1,1,1);
		printf("%f",floatstr(cmdtext[5]));
    	return 1;
    }

    // Clear
    if(strcmp(cmd, "/clearanim", true) == 0) {
		 //ClearAnimations(playerid);
		 ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
         return 1;
    }

    // Strip
    if(strcmp(cmd, "/strip", true) == 0)
    {
        if (!strlen(cmdtext[7])) return SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /strip [A-G]");
    	switch (cmdtext[7])
    	{
        	case 'a', 'A': LoopingAnim(playerid,"STRIP", "strip_A", 4.1, 1, 1, 1, 1, 1 );
        	case 'b', 'B': LoopingAnim(playerid,"STRIP", "strip_B", 4.1, 1, 1, 1, 1, 1 );
        	case 'c', 'C': LoopingAnim(playerid,"STRIP", "strip_C", 4.1, 1, 1, 1, 1, 1 );
        	case 'd', 'D': LoopingAnim(playerid,"STRIP", "strip_D", 4.1, 1, 1, 1, 1, 1 );
        	case 'e', 'E': LoopingAnim(playerid,"STRIP", "strip_E", 4.1, 1, 1, 1, 1, 1 );
        	case 'f', 'F': LoopingAnim(playerid,"STRIP", "strip_F", 4.1, 1, 1, 1, 1, 1 );
        	case 'g', 'G': LoopingAnim(playerid,"STRIP", "strip_G", 4.1, 1, 1, 1, 1, 1 );
        	default: SendClientMessage(playerid,0xEFEFF7AA,"”√∑®: /strip [A-G]");
    	}
    	return 1;
    }

    // Bed Sleep R
    if(strcmp(cmd, "/inbedright", true) == 0) {
		 LoopingAnim(playerid,"INT_HOUSE","BED_Loop_R",4.0,1,0,0,0,0);
         return 1;
    }
    // Bed Sleep L
    if(strcmp(cmd, "/inbedleft", true) == 0) {
		 LoopingAnim(playerid,"INT_HOUSE","BED_Loop_L",4.0,1,0,0,0,0);
         return 1;
    }


	// START DANCING
 	if(strcmp(cmd, "/dance", true) == 0) {

			// Get the dance style param
      		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,0xFF0000FF,"”√∑®: /dance [1-4]");
				return 1;
			}

			dancestyle = strval(tmp);
			if(dancestyle < 1 || dancestyle > 4) {
			    SendClientMessage(playerid,0xFF0000FF,"”√∑®: /dance [1-4]");
			    return 1;
			}

			if(dancestyle == 1) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			} else if(dancestyle == 2) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			} else if(dancestyle == 3) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			} else if(dancestyle == 4) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
			}
 	  		return 1;
	}

	if(strcmp(cmd, "/createpickup", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /createpickup [ƒ£–Õ±‡∫≈] [◊¥Ã¨]");
				SendClientMessage(playerid, COLOR_GREY, "Ã· æ: | 1240 - Ω°øµ | 1242 - ª§º◊ | 1241 - “© | 1247 - æØ–« |");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
   			new model;
			model = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /createpickup [ƒ£–Õ±‡∫≈] [◊¥Ã¨]");
				SendClientMessage(playerid, COLOR_GREY, "Ã· æ: | 1240 - Ω°øµ | 1242 - ª§º◊ | 1241 - “© | 1247 - æØ–« |");
				return 1;
			}
			new type;
			type = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if((model >= 1210 && model <= 1325) && (model >= 321 && model <= 372)) { SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: ƒ£–Õ±‡∫≈ø…“‘ « ∏ﬂ”⁄1210µÕ”⁄ 1325;∏ﬂ”⁄321µÕ”⁄373!"); return 1; }
			    if(type < 1 || type > 3) { SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: ÷ª”–◊¥Ã¨: 1,2,3  «ø…“‘ π”√µƒ(»Áπ˚ƒ„≤ª÷™µ¿À˚√«µƒ“‚Àºƒ„ø…“‘ π”√◊¥Ã¨2)"); return 1; }
				CreateDynamicPickup(model, type, X,Y,Z);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Created a Pickup at X:%f Y:%f Z:%f [–Õ∫≈: %d - Type: %d]",d,m,y,h,mi,s,sendername,X,Y,Z,model,type);
				AdminLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/reports", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	        new ReportCount;
			for(new i = 1; i < MAX_REPORTS; i++)
			{
				if(strcmp( Reports[i], "<none>", true) != 0) { ReportCount++; SendClientMessage(playerid, COLOR_GRAD3, "◊Ó∫Ûµƒ9∑›±®∏Ê:"); SendClientMessage(playerid,COLOR_GRAD1,Reports[i]); }
			}
			if(ReportCount == 0)
			{
				SendClientMessage(playerid,COLOR_GRAD1," √ª”–±®∏Ê");
			}
	    }
		else
		{
			SendClientMessage(playerid,COLOR_GRAD1,"¥ÌŒÛ: ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
		}
		return 1;
	}


	if(strcmp(cmd, "/report", true) == 0 || strcmp(cmd, "/re", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(JustReported[playerid] == 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** µ»¥˝1∑÷÷”∫Û∑¢ÀÕœ¬“ª¥Œµƒ±®∏Ê! ");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/re)port [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
				return 1;
			}
			giveplayerid = strval(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
           			new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/re)port [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
						return 1;
					}
					if(PlayerInfo[playerid][pRegularRank] == 0)
					{
			        	format(string, sizeof(string), "[–≈œ¢]: %s (%d) ±®∏Ê %s (%d) ƒ⁄»›: %s",sendername, playerid, giveplayer, giveplayerid, (result));
					}
					else
					{
						format(string, sizeof(string), "[–≈œ¢]: ≥£øÕÕÊº“ %s (%d) ±®∏Ê %s (%d) ƒ⁄»›: %s",sendername, playerid, giveplayer, giveplayerid, (result));
					}
					SendAdminMessage(COLOR_GREEN,string);
					SendAdminMessage(COLOR_LIGHTRED, "----------------------------------------------------------------------------------------------");
					SendAdminMessage(COLOR_GREEN," ‰»ÎΩ” ‹±®∏Ê'/acceptreport (/ar) [±®∏Ê»ÀID]' ªÚ ‰»Îæ‹æ¯±®∏Ê'/trashreport (/tr) [±®∏Ê»ÀID]]'");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* ƒ„µƒ±®∏Ê“—±ª∑¢ÀÕµΩ‘⁄œﬂπ‹¿Ì‘±ƒ«¿Ô.");
					JustReported[playerid] = 1;
					PlayerNeedsHelp[playerid] = 1;
					SetTimerEx("ReportReset", 60000, false, "i", playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Reported %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
					ReportLog(string);
					Reports[MAX_REPORTS-1] = string;
			    }
			}
	    }
	    return 1;
 }

	if(strcmp(cmd, "/askq", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /askq [ƒ⁄»›]");
				return 1;
			}
			format(string, sizeof(string), "[«Û÷˙]: %s (%d): %s", sendername,playerid, (result));
			SendTesterAdminMessage(COLOR_PINK,string);
			SendClientMessage(playerid, COLOR_ASKQ, "ƒ„µƒ«Û÷˙–≈œ¢“—±ªÀÕÕ˘π‹¿Ì‘±ƒ«¿Ô.");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /askq %s",d,m,y,h,mi,s,sendername, (result));
			CommandLog(string);
			ReportLog(string);
	    }
	    return 1;
	}
	
	if(strcmp(cmd, "/setmotd", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 5)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[32];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setmotd [ƒ⁄»›]");
					return 1;
				}
				if(strlen(result) > 32)
                {
                    SendClientMessage(playerid, COLOR_GREY,"* œﬁ÷∆Œ™32∏ˆ◊÷∑˚!");
                    return 1;
                }
				format(string, sizeof(string), "[π‹¿Ì]: %s (%d) …Ë÷√∑˛ŒÒ∆˜œ¬∑Ωµ«¬ºª∂”≠¥ Œ™ %s", sendername,playerid, (result));
				SendAdminMessage(COLOR_LIGHTRED,string);
				format(string, sizeof(string),"%s",(result));
				strmid(Motd,string,0,255,sizeof(string));
				format(string,sizeof(string),"%s.  Build %s",(result),Version);
				TextDrawSetString(Textdraw3,string);
				SaveMotd();
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /setmotd %s",d,m,y,h,mi,s,sendername, (result));
				AdminLog(string);
			}
		}
	    return 1;
	}

	// HANDSUP
 	if(strcmp(cmd, "/handsup", true) == 0) {
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
  	  		return 1;
		}
	}

	if(!strcmp(cmd, "/st", true))
 	{
 		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(engineOn[GetPlayerVehicleID(playerid)]) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "“˝«Ê“—æ≠¥Úø™!");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„»œŒ™ƒ„√ª”–∆Ù∂Ø“˝«Ê?");
			if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "÷ª”–Àæª˙≤≈ø…“‘’‚—˘◊ˆ!");
			if(IsABike(pveh)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "◊‘––≥µø…√ª”–“˝«Ê");
			//if(pveh == 462) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„√ª±ÿ“™’‚—˘◊ˆ");
			engineOn[GetPlayerVehicleID(playerid)] = true;
			TogglePlayerControllable(playerid, true);
			new playerveh = GetPlayerVehicleID(playerid);
			PutPlayerInVehicle(playerid, playerveh, 0);
			format(string, sizeof(string), "* %s –˝◊™¡À∆˚≥µµƒ‘ø≥◊ø◊,∆Ù∂Ø¡À∆˚≥µ.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /st [Vehicle: %d]",d,m,y,h,mi,s,sendername, GetPlayerVehicleID(playerid));
			CommandLog(string);
		}
		return true;
	}
	if(!strcmp(cmd, "/tn", true))
	{
		if (PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(!engineOn[GetPlayerVehicleID(playerid)]) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "“˝«Ê“—æ≠πÿ±’!");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„»œŒ™ƒ„√ª”–∆Ù∂Ø“˝«Ê?");
			if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "÷ª”–Àæª˙≤≈ø…“‘’‚—˘◊ˆ!");
			if(IsABike(pveh)) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "◊‘––≥µø…√ª”–“˝«Ê");
			//if(pveh == 462) return SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„√ª±ÿ“™’‚—˘◊ˆ");
			engineOn[GetPlayerVehicleID(playerid)] = false;
			SafeRemovePlayerFromVehicle(playerid);
			format(string, sizeof(string), "* %s πÿ±’¡À“˝«Ê.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /tn [Vehicle: %d]",d,m,y,h,mi,s,sendername, GetPlayerVehicleID(playerid));
			CommandLog(string);
		}
		return true;
	}

//---------------------getip------------------
	if(strcmp(cmd, "/ip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext,idx);
			new playersip[128];
			if(!strlen(tmp))
			{
  				SendClientMessage(playerid,COLOR_GRAD1,"”√∑®: /ip [ÕÊº“ID]");
		        return 1;
			}
 			giveplayerid = ReturnUser(tmp);
 			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
 			format(string, sizeof(string), "ÕÊº“: %s IP: %s",giveplayer,playersip);
			SendClientMessage(playerid,COLOR_GRAD2,string);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Checked %s's IP (%s)",d,m,y,h,mi,s,sendername, giveplayer,playersip);
			AdminLog(string);
		}
		return 1;
	}

//----------------------/unbanip--------------
	if(strcmp(cmd,"/unbanip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 5)
		{
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"”√∑®: /unbanip [ÕÊº“ip]");
		        return 1;
   			}

			format(string,sizeof(string),"unbanip %s",tmp);
			SendRconCommand(string);
			SendRconCommand("reloadbans");
			format(string, sizeof(string), "[π‹¿Ì]: %s Ω‚≥˝¡À∂‘ IP [%s]∑‚À¯.", sendername,tmp);
			ABroadCast(COLOR_YELLOW,string, 5);
			format(string, sizeof(string), "* ≥…π¶Ω‚≥˝ [%s] IP", tmp);
			SendClientMessage(playerid,TEAM_GROVE_COLOR,string);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Unbanned IP [%s]",d,m,y,h,mi,s,sendername,tmp);
			LoginLog(string);
		}
		return 1;
	}
//---------------------GIVE MATS-----------------
	if(strcmp(cmd, "/setmats", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setmats [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	        	giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setmats [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
		    	PlayerInfo[giveplayerid][pMats] = moneys;
			    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			    format(string, sizeof(string),"* π‹¿Ì‘± %s …Ë÷√ƒ„µƒ≤ƒ¡œ ˝¡øŒ™ %d!",sendername,moneys);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			    format(string, sizeof(string),"* …Ë÷√ %s ≤ƒ¡œ ˝¡øŒ™ %d",giveplayer,moneys);
			    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, 256, "[π‹¿Ì]: %s …Ë÷√ %s (%d) ≤ƒ¡œ ˝¡øŒ™ %d.", sendername,giveplayer,giveplayerid,moneys);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave %d Materials to %s",d,m,y,h,mi,s,sendername,moneys,giveplayer);
				GiveLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/givemats", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /givemats [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	        	giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /givemats [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
		    	PlayerInfo[giveplayerid][pMats] += moneys;
			    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			    format(string, sizeof(string),"* π‹¿Ì‘± %s ∏¯¡Àƒ„ %d ≤ƒ¡œ!",sendername,moneys);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			    format(string, sizeof(string),"* ∏¯¡ÀÕÊº“ %s  %d≤ƒ¡œ",giveplayer,moneys);
			    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, 256, "[π‹¿Ì]: %s ∏¯¡À %s (%d) %d ≤ƒ¡œ.", sendername,giveplayer,giveplayerid,moneys);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave %d Materials to %s",d,m,y,h,mi,s,sendername,moneys,giveplayer);
				GiveLog(string);
			}
		}
		return 1;
	}
//-----------------------------------------------------------------------------

   	if(strcmp(cmd, "/crash", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /crash [ÕÊº“ID/ÕÊº“√˚◊÷]");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
			            if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªø…“‘∂‘’‚∏ˆÕÊº“’‚—˘!");
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 1000, 0);
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 2000, 1);
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 3000, 2);
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 4000, 3);
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 5000, 4);
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 6000, 5);
						GameTextForPlayer(giveplayerid, "ï§∂ß!$$%&'()*+,-./01~!@#$^&*()_-+={[}]:;'<,>.?/", 7000, 6);
						format(string, sizeof(string), "ƒ„≈™ªµ¡À %s (%d)µƒ”Œœ∑,∆» πÀ˚µÙœﬂ", giveplayer,giveplayerid);
				  		SendClientMessage(playerid,COLOR_DBLUE, string);
						return 1;
					}
					else
					{
					    format(string, sizeof(string), "** Œ¥÷™ÕÊº“!", giveplayerid);
					    SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
			else
			{
			    format(string, sizeof(string), "** ƒ„Œﬁ»® π”√¥À√¸¡Ó!", giveplayerid);
			    SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

//--------------------------------[Explode]---------------------------------------------------------------------
	if(strcmp(cmd, "/explode", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 4)
		{
			SendClientMessage(playerid, COLOR_GREY, "/explode [ÕÊº“ID]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        new targetlevel = PlayerInfo[giveplayerid][pAdmin];
					new playerlevel = PlayerInfo[playerid][pAdmin];
					if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
      				if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
					format(string, sizeof(string), "[π‹¿Ì]: %s ∂‘ÕÊº“ %s (%d)Ω¯––¡À±¨∆∆¥¶¿Ì.",sendername,giveplayer,giveplayerid);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					format(string, sizeof(string), "ƒ„∂‘ÕÊº“ %s (%d)Ω¯––¡À±¨∆∆¥¶¿Ì",giveplayer,giveplayerid);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					format(string, sizeof(string), "π‹¿Ì‘± %s ∂‘ƒ„Ω¯––¡À±¨∆∆",sendername);
					SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 1);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Exploded to %s",d,m,y,h,mi,s,sendername,giveplayer);
					ExplodeLog(string);
					if (PlayerInfo[giveplayerid][pAchievement12] == 0)
					{
					    TextDrawSetString(Textdraw64[giveplayerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Acme Dinamyte (12) ~n~~n~~w~you won ~g~$125");
	    				ShowAchievement(giveplayerid);
						SafeGivePlayerMoney(giveplayerid,125);
						PlayerInfo[giveplayerid][pAchievement12] = 1;
					}
				}
				else
				{
				    format(string, sizeof(string), "%d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED, "ƒ„±ÿ–Îµ«¬º≤≈ø…“‘ π”√’‚∏ˆ÷∏¡Ó!");
		}
		return 1;
	}

// ----------------------------------------------- BURN ---------------------------------------

	if(strcmp(cmd, "/burn", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "/burn [ÕÊº“ID]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        new targetlevel = PlayerInfo[giveplayerid][pAdmin];
					new playerlevel = PlayerInfo[playerid][pAdmin];
					if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
      				if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
					format(string, sizeof(string), "[π‹¿Ì]: %s µ„»º¡ÀÕÊº“ %s (%d).",sendername,giveplayer,giveplayerid);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					format(string, sizeof(string), "ƒ„µ„»º¡ÀÕÊº“ %s(%d).",giveplayer,giveplayerid);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					format(string, sizeof(string), "π‹¿Ì‘± %s µ„»º¡Àƒ„",sendername);
					SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 1, 1);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Burned Down to %s",d,m,y,h,mi,s,sendername,giveplayer);
					ExplodeLog(string);
				}
				else
				{
				    format(string, sizeof(string), "%d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_RED, "ƒ„±ÿ–Îµ«¬º≤≈ø…“‘ π”√’‚∏ˆ÷∏¡Ó!");
		}
		return 1;
	}
//---------------------------------------------------------------------------------------------------------------
	if(strcmp(cmd, "/setdrugs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setdrugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	        	giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setdrugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
		    	PlayerInfo[giveplayerid][pDrugs] = moneys;
			    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			    format(string, sizeof(string),"* π‹¿Ì‘± %s …Ë÷√ƒ„∂æ∆∑ ˝¡øŒ™ %d!",sendername,moneys);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			    format(string, sizeof(string),"* …Ë÷√ÕÊº“ %s ∂æ∆∑ ˝¡øŒ™ %d",giveplayer,moneys);
			    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, 256, "[π‹¿Ì]: %s …Ë÷√ÕÊº“ %s (%d) ∂æ∆∑ ˝¡øŒ™ %d.", sendername,giveplayer,giveplayerid,moneys);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave %d Materials to %s",d,m,y,h,mi,s,sendername,moneys,giveplayer);
				GiveLog(string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/givedrugs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /givedrugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	        	giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /givedrugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
		    	PlayerInfo[giveplayerid][pDrugs] += moneys;
			    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			    format(string, sizeof(string),"* π‹¿Ì‘± %s ∏¯¡Àƒ„ %d ∂æ∆∑!",sendername,moneys);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			    format(string, sizeof(string),"* ∏¯”ËÕÊº“ %s ∂æ∆∑ %d",giveplayer,moneys);
			    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				format(string, 128, "[π‹¿Ì]: %s ∏¯”ËÕÊº“ %s (%d)∂æ∆∑ ˝¡ø %d.", sendername,giveplayer,giveplayerid,moneys);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave %d Materials to %s",d,m,y,h,mi,s,sendername,moneys,giveplayer);
				GiveLog(string);
			}
		}
		return 1;
	}
/*
	if(strcmp(cmdtext, "/newspaper", true) == 0) // by LordMan
	{
	    if (IsPlayerInRangeOfPoint(playerid, 4,1505.2416,-1694.5597,14.0469))
	    {
	    	TogglePlayerControllable(playerid, 0);
  			ShowMenuForPlayer(Guide, playerid);
  			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /newspaper",d,m,y,h,mi,s,sendername);
			CommandLog(string);
			return 1;
		}
		else { SendClientMessage(playerid, COLOR_GREY,"** ƒ„√ª”–“ª∑›±®÷Ω."); }
	}
*/

	if(strcmp(cmd, "/respawnthiscar", true) == 0 || strcmp(cmd, "/rtc", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2 )
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			    format(string, 256, "[π‹¿Ì]: %s ÷ÿ…˙¡À∆˚≥µ±‡∫≈Œ™ %dµƒ≥µ¡æ.",sendername,GetPlayerVehicleID(playerid));
				ABroadCast(COLOR_LIGHTRED,string, 5);
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			    LinkVehicleToInterior(GetPlayerVehicleID(playerid), 0);
   				SafeRemovePlayerFromVehicle(playerid);
			    SendClientMessage(playerid, COLOR_ORANGE, "** ≥µ¡æ÷ÿ…˙!");
			    new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Respawned His Car",d,m,y,h,mi,s,sendername);
				AdminLog(string);
   			}
		}
		return 1;
	}

	if(strcmp(cmd, "/respawnallcars", true) == 0 || strcmp(cmd, "/carreset", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car = 1; car <= 1850; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
			format(string, sizeof(string), "∑˛ŒÒ∆˜œ˚œ¢: ÷ÿ…˙¡ÀÀ˘”–Œ¥±ª π”√µƒ≥µ¡æ---Õ®π˝π‹¿Ì‘±: %s.", sendername);
			BroadCast(COLOR_WHITE,string);
			format(string, sizeof(string), "[π‹¿Ì]: %s ÷ÿ…˙¡ÀÀ˘”–Œ¥±ª π”√µƒ≥µ¡æ.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			GameTextForAll("~w~Every Unused Car ~n~~g~Respawned!",5000,1);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Respawned All Unused Cars",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/respawnrentcars", true) == 0 || strcmp(cmd, "/rrc", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new v = 0; v < sizeof(rentcar); v++)
			{
				if(!unwanted[v]) SetVehicleToRespawn(v);
			}
			format(string, sizeof(string), "∑˛ŒÒ∆˜œ˚œ¢: ÷ÿ…˙¡ÀÀ˘”–Œ¥±ª π”√µƒ◊‚”√≥µ¡æ---Õ®π˝π‹¿Ì‘±: %s.", sendername);
			BroadCast(COLOR_WHITE,string);
			format(string, sizeof(string), "[π‹¿Ì]: %s ÷ÿ…˙¡ÀÀ˘”–Œ¥±ª π”√µƒ◊‚”√≥µ¡æ.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Respawned Rented Cars",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/respawnrentbikes", true) == 0 || strcmp(cmd, "/rrb", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new v = 0; v < sizeof(rentbike); v++)
			{
				if(!unwanted[v]) SetVehicleToRespawn(v);
			}
			format(string, sizeof(string), "∑˛ŒÒ∆˜œ˚œ¢: ÷ÿ…˙¡ÀÀ˘”–Œ¥±ª π”√µƒ◊‚”√◊‘––≥µ---Õ®π˝π‹¿Ì‘±: %s.", sendername);
			BroadCast(COLOR_WHITE,string);
			format(string, sizeof(string), "[π‹¿Ì]: %s ÷ÿ…˙¡ÀÀ˘”–Œ¥±ª π”√µƒ◊‚”√◊‘––≥µ", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Respawned Rented Bikes",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/drag", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "ƒ„≤ª «æØ≤Ï!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /drag [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
 				return 1;
			}
			new newcar = GetPlayerVehicleID(playerid);
			new playa;
			playa = ReturnUser(tmp);
			if(IsACopCar(newcar) || IsNgCar(newcar) || IsAnFbiCar(newcar))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            new Float:x, Float:y, Float:z;
			            GetPlayerPos(playa,x,y,z);
			            if(IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
			            {
			            	PutPlayerInVehicle(playa,newcar,1);
			            	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* %s Õœ∂Ø %s À˚µƒ≥µ.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							new y1, m, d;
							new h,mi,s;
							getdate(y1,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /drag %s",d,m,y1,h,mi,s,sendername,giveplayer);
							CommandLog(string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸.");
						}
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "ƒ„≤ª‘⁄æØ≥µ…œ!");
			}
	    }
	    return 1;
	}
//------------------------------[Vehicle Slap]---------------------------------------------------
	if(strcmp(cmd, "/vslap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /vslap [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			new Float:slx, Float:sly, Float:slz;
			if (PlayerInfo[playerid][pAdmin] >=3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
			            if(GetPlayerState(giveplayerid) == 2)
			            {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
							SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+550);
							PlayerPlaySound(giveplayerid, 1130, slx, sly, slz);
							format(string, sizeof(string), "[π‹¿Ì]: %s ≈æµÿ“ª…˘∑≈œ¬ %s (%d)≥µ.", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "** ƒ„≈ƒ¥Ú¡À %s (%d) µƒ∆˚≥µ!", giveplayer, giveplayerid);
							SendClientMessage(playerid,COLOR_ORANGE,string);
							SendClientMessage(giveplayerid,COLOR_NICERED,"*** ƒ„µƒ≥µ±ª≈ƒ¥Ú!");
							GameTextForPlayer(giveplayerid, "~r~Vehicle Slapped!",5000,3);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Slapped %s's Car",d,m,y,h,mi,s,sendername,giveplayer);
							SlapLog(string);
						}
						else
						{
						    SendClientMessage(playerid,COLOR_NICERED,"** ’‚∏ˆÕÊº“√ª”–ø™≥µ!");
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
			}
		}
		return 1;
	}

//------------------------------[super vehslap]--------------------------------------------------
	if(strcmp(cmd, "/supervehslap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /supervehslap [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new playa;
			giveplayerid = ReturnUser(tmp);
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(GetPlayerState(playa) == 2)
			            {
					        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							GetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz);
							SetVehiclePos(GetPlayerVehicleID(giveplayerid), slx, sly, slz+1000);
							PlayerPlaySound(playa, 1130, slx, sly, slz+5);
							format(string, sizeof(string), "[π‹¿Ì]: %s ∑«≥£”√¡¶µƒ≈ƒ¥Ú¡À %s (%d)µƒ≥µ¡æ.",sendername, giveplayer,playa);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "** ƒ„µƒ≥µ±ªπ‹¿Ì‘±∑«≥£”√¡¶≈ƒ¥Ú¡À“ªœ¬ %s",sendername);
							SendClientMessage(playa,COLOR_ORANGE,string);
							format(string, sizeof(string), "** ƒ„∑«≥£”√¡¶µƒ≈ƒ¥Ú¡À“ªœ¬ %sµƒ≥µ",giveplayer);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Slapped %s's Car",d,m,y,h,mi,s,sendername,giveplayer);
							SlapLog(string);
						}
						else
						{
						    SendClientMessage(playerid,COLOR_NICERED,"** ’‚∏ˆÕÊº“√ª”–ø™≥µ!");
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/maskon", true) == 0) // by CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMask] == 0)
	   	 	{
	   		     SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–“ª∏ˆ√Êæﬂ");
	   		     return 1;
	   		}
	   		if(PlayerInfo[playerid][pLevel] < 5)
	    	{
	       		SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„≤ªø…“‘ π”√À¸.");
	        	return 1;
	    	}
			for(new i = 0; i < MAX_PLAYERS; i++)
   			{
   		    	if(IsPlayerConnected(i))
   		    	{
		   			ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
			}
			PlayerInfo[playerid][pMaskuse] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "** ƒ„¥¯…œ¡À√Êæﬂ [/maskoffø…“‘’™œ¬√Êæﬂ].");
      		format(string, sizeof(string), "* %s ¥¯…œ¡À√Êæﬂ.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      		new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /maskon",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/maskoff", true) == 0) // by CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMask] == 0)
	    	{
	       		SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–“ª∏ˆ√Êæﬂ");
	        	return 1;
	    	}
	    	if(PlayerInfo[playerid][pLevel] < 5)
	    	{
	        	SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ªø…“‘ π”√À¸.");
	        	return 1;
	    	}
	    	for(new i = 0; i < MAX_PLAYERS; i++)
   			{
   		    	if(IsPlayerConnected(i))
   		    	{
		   			ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
			PlayerInfo[playerid][pMaskuse] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "ƒ„’™œ¬¡À√Êæﬂ[/maskonø…“‘¥¯…œ√Êæﬂ].");
      		format(string, sizeof(string), "* %s ’™œ¬¡À√Êæﬂ.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      		new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /maskoff",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/hidenumber", true)) // by LordMan
	{
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pPnumber] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–“˛≤ÿµÁª∞∫≈¬Î.");
		        return 1;
		    }
			if(PlayerInfo[playerid][pRegularRank] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„–Ë“™¥ÔµΩ ≥£øÕÕÊº“µ»º∂ 1 ≤≈ø…“‘ π”√’‚œÓπ¶ƒ‹.");
			    return 1;
			}
			if(PlayerInfo[playerid][pHideNumber] == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "** ƒ„µƒµÁª∞∫≈¬Îœ÷‘⁄±ª“˛≤ÿ¡À.");
				PlayerInfo[playerid][pHideNumber] = 1;
				return 1;
			}
			if(PlayerInfo[playerid][pHideNumber] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "** ƒ„œ÷‘⁄µƒµÁª∞∫≈¬Î «π´ø™µƒ.");
				PlayerInfo[playerid][pHideNumber] = 0;
				return 1;
			}
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hidenumber",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/speaker", true)) // by LordMan
	{
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pPnumber] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–“ª≤ø ÷ª˙.");
		        return 1;
		    }
		    if(Mobile[playerid] == 255)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–‘⁄¥ÚµÁª∞.");
		        return 1;
		    }
			if(PlayerInfo[playerid][pSpeaker] == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "* ﬂŸ * —Ô…˘∆˜¥Úø™.");
				PlayerInfo[playerid][pSpeaker] = 1;
				return 1;
			}
			if(PlayerInfo[playerid][pSpeaker] == 1)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "* ﬂŸ * —Ô…˘∆˜πÿ±’.");
				PlayerInfo[playerid][pSpeaker] = 0;
				return 1;
			}
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /speaker",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	
	//----------------------------------[Shout]-----------------------------------------------
  	if(strcmp(cmd, "/doorshout", true) == 0 || strcmp(cmd, "/ds", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,m,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[640];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/ds)hout [±æµÿ¡ƒÃÏ]");
				return 1;
			}
            for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
                    if(PlayerInfo[playerid][pAdminDuty] == 1)
					{
						format(string, sizeof(string), "π‹¿Ì‘±¥Û∫∞: %s !!", result);
						SetPlayerChatBubble(playerid, string, COLOR_NICERED, 30.0, 8000);
						ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Shout): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
					{
						format(string, sizeof(string), "ƒ∞…˙»À¥Û∫∞: %s !!", result);
						SetPlayerChatBubble(playerid, string, COLOR_WHITE, 30.0, 8000);
						ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Shout): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
					{
						format(string, sizeof(string), "%s ¥Û∫∞: %s !!", sendername, result);
						SetPlayerChatBubble(playerid, string, COLOR_WHITE, 30.0, 8000);
						ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Shout): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
					    if(IsPlayerInRangeOfPoint(p, 60, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					    {
					        if(PlayerInfo[playerid][pAdminDuty] == 1)
							{
								format(string, sizeof(string), "π‹¿Ì‘±¥Û∫∞: %s !!", result);
							}
							if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
							{
								format(string, sizeof(string), "ƒ∞…˙»À¥Û∫∞: %s !!", result);
							}
							if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
							{
								format(string, sizeof(string), "%s ¥Û∫∞: %s !!", sendername, result);
							}
  							SendClientMessage(p, COLOR_FADE1,string);
					    }
				 	 }
				}
			}
        }
        return 1;
	}
	
 	if(!strcmp(cmdtext, "/knock", true)) // By Frank
    {
        if(IsPlayerConnected(playerid))
        {
            for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
                    format(string, sizeof(string), "* %s «√¡À«√∑ø√≈.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
					    if(IsPlayerInRangeOfPoint(p, 60, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					    {
				 			SendClientMessage(p, COLOR_PURPLE, "* «√«√√≈");
					    }
					}
				}
			}
        }
        return 1;
    }
//-----------------------------------------------------[House CMDS]---------------------------------------

	if(strcmp(cmd, "/houseentrance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /houseentrance [∑øŒ›±‡∫≈] - “∆∂Ø“ªÀ˘∑øŒ›»Îø⁄µΩƒ„’‚¿Ô");
				return 1;
			}
			new proplev = strval(tmp);
			if(proplev > sizeof(HouseInfo) || proplev < 0)
			{
			    SendClientMessage(playerid,COLOR_WHITE,"∑ø≤˙±‡∫≈ ±ÿ–Î∏ﬂ”⁄ 0 ≤¢«“µÕ”⁄ 500");
			    return 1;
			}
			else
   			{
   			    if(proplev <= 500)
      			{
      			    format(string, sizeof(string),"* ƒ„“∆∂Ø¡À∑øŒ›±‡∫≈Œ™ %d µƒ»Îø⁄µΩƒ„’‚¿Ô.  π”√ /edit ∫Õ /setdesc Ω¯––±‡º≠À¸.",proplev);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				    new Float:X,Float:Y,Float:Z;
				    GetPlayerPos(playerid,X,Y,Z);
				    format(string,sizeof(string),"[π‹¿Ì]: %s “∆∂Ø∑øŒ›±‡∫≈: [%d]µƒ»Îø⁄µΩ [%f - %f - %f].",sendername,proplev,X,Y,Z);
				    ABroadCast(COLOR_LIGHTRED,string, 5);
					HouseInfo[proplev][hEntrancex] = X;
					HouseInfo[proplev][hEntrancey] = Y;
					HouseInfo[proplev][hEntrancez] = Z;
					OnPropUpdate(1,proplev);
					OnPropTextdrawUpdate(1, proplev);
					OnHousePickupUpdate(proplev);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Moved the House: [%d]'s Entrance to [%f - %f - %f]",d,m,y,h,mi,s,sendername,proplev,X,Y,Z);
					PlaceLog(string);
					return 1;
				}
				else
				{
				    SendClientMessage(playerid,COLOR_WHITE,"≤ªƒ‹ π”√‘⁄≤‚ ‘∑øŒ›.");
				    return 1;
				}
			}
		}
	}
	if(strcmp(cmd, "/houseexit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /houseexit [∑øŒ›±‡∫≈] - “∆∂Ø“ªÀ˘∑øŒ›≥ˆø⁄µΩƒ„’‚¿Ô");
				return 1;
			}
			new proplev = strval(tmp);
			if(proplev > sizeof(HouseInfo) || proplev < 0)
			{
			    SendClientMessage(playerid,COLOR_WHITE,"∑ø≤˙±‡∫≈ ∑ø≤˙±‡∫≈ ±ÿ–Î∏ﬂ”⁄ 0 ≤¢«“µÕ”⁄ 500");
			    return 1;
			}
			else
   			{
	   			if(proplev <= 500)
	      		{
	      			format(string, sizeof(string),"* ƒ„“∆∂Ø¡À∑øŒ›±‡∫≈Œ™ %d µƒ≥ˆø⁄µΩƒ„’‚¿Ô.  π”√ /edit ∫Õ /setdesc Ω¯––±‡º≠À¸.",proplev);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				    new Float:X,Float:Y,Float:Z;
				    GetPlayerPos(playerid,X,Y,Z);
				    format(string,sizeof(string),"[π‹¿Ì]: %s “∆∂Ø∑øŒ›±‡∫≈: [%d]µƒ≥ˆø⁄µΩ [%f - %f - %f].",sendername,proplev,X,Y,Z);
				    ABroadCast(COLOR_LIGHTRED,string, 5);
					HouseInfo[proplev][hExitx] = X;
					HouseInfo[proplev][hExity] = Y;
					HouseInfo[proplev][hExitz] = Z;
					HouseInfo[proplev][hInt] = GetPlayerInterior(playerid);
					OnPropUpdate(1,proplev);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Moved the House: [%d]'s Exit to [%f - %f - %f]",d,m,y,h,mi,s,sendername,proplev,X,Y,Z);
					PlaceLog(string);
					return 1;
				}
				else
				{
				    SendClientMessage(playerid,COLOR_WHITE,"≤ªƒ‹ π”√‘⁄≤‚ ‘∑øŒ›.");
				    return 1;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/bizentrance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /bizentrance [≤˙“µ±‡∫≈] - “∆∂Ø≤˙“µµΩƒ„’‚¿Ô");
				return 1;
			}
			new proplev = strval(tmp);
			if(proplev > sizeof(HouseInfo) || proplev < 0)
			{
			    SendClientMessage(playerid,COLOR_WHITE,"≤˙“µ±‡∫≈ ±ÿ–Î∏ﬂ”⁄ 0 ≤¢«“µÕ”⁄ 30");
			    return 1;
			}
			else
   			{
			    new Float:X,Float:Y,Float:Z;
			    GetPlayerPos(playerid,X,Y,Z);
			    format(string,sizeof(string),"[π‹¿Ì]: %s “∆∂Ø¡À≤˙“µ [%d]Œª÷√Œ™ [%f - %f - %f].",sendername,proplev,X,Y,Z);
			    ABroadCast(COLOR_LIGHTRED,string, 5);
				BizzInfo[proplev][bEntranceX] = X;
				BizzInfo[proplev][bEntranceY] = Y;
				BizzInfo[proplev][bEntranceZ] = Z;
				OnPropUpdate(2,proplev);
				OnPropTextdrawUpdate(2, proplev);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Moved Biz [%d] to [%f - %f - %f]",d,m,y,h,mi,s,sendername,proplev,X,Y,Z);
				PlaceLog(string);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sbizentrance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "”Ô∑®: /sbizentrance [s≤˙“µ±‡∫≈] - “∆∂ØS≤˙“µµΩƒ„’‚¿Ô");
				return 1;
			}
			new proplev = strval(tmp);
			if(proplev > sizeof(HouseInfo) || proplev < 0)
			{
			    SendClientMessage(playerid,COLOR_WHITE,"∑ø≤˙±‡∫≈ ±ÿ–Î∏ﬂ”⁄ 0 ≤¢«“µÕ”⁄ 5");
			    return 1;
			}
			else
   			{
			    new Float:X,Float:Y,Float:Z;
			    GetPlayerPos(playerid,X,Y,Z);
			    format(string,sizeof(string),"[π‹¿Ì]: %s “∆∂Ø¡ÀS≤˙“µ [%d]Œª÷√Œ™ [%f - %f - %f].",sendername,proplev,X,Y,Z);
			    ABroadCast(COLOR_LIGHTRED,string, 5);
				SBizzInfo[proplev][sbEntranceX] = X;
				SBizzInfo[proplev][sbEntranceY] = Y;
				SBizzInfo[proplev][sbEntranceZ] = Z;
				OnPropUpdate(3,proplev);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Moved Biz [%d] to [%f - %f - %f]",d,m,y,h,mi,s,sendername,proplev,X,Y,Z);
				PlaceLog(string);
				return 1;
			}
		}
		return 1;
	}
//------------------------------------------------[Job shit]---------------------------------------------------
	if(!strcmp(cmdtext, "/startharvest", true)) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsAHarvest(idcar))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª‘⁄≈©≥° ’∏Óª˙…œ.");
			    return 1;
			}
			if(FarmerVar[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„“—æ≠ø™ º¡Àƒ„µƒπ§◊˜.");
			    return 1;
			}
			if(FarmerPickup[playerid][0] >= 22)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "ΩÒÃÏ“—æ≠◊„πª¡À(ªÿ¿¥œ¬∑¢–ΩÀÆ).");
			    return 1;
			}
	        if(PlayerInfo[playerid][pJob] == 18)
	        {
	            JustStarted[playerid] = 1;
	            FarmerVar[playerid] = 1;
	            TogglePlayerControllable(playerid, 1);
	            OnPlayerEnterCheckpoint(playerid);
	            SendClientMessage(playerid, COLOR_YELLOW, "≈©≥°“µ÷˜: ƒ„µƒπ§◊˜ ±º‰µΩ¡À,œ÷‘⁄»•∫Ï…´±Íº«µ„.");
	        }
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /startharvest",d,m,y,h,mi,s,sendername);
			CommandLog(string);
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/stopharvest", true)) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(FarmerVar[playerid] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤¢√ª”–ø™ ºπ§◊˜∞°.");
			    return 1;
			}
			if(PlayerInfo[playerid][pJob] == 18)
			{
			    if(IsAHarvest(idcar))
			    {
			        TogglePlayerControllable(playerid, 1);
			        SafeRemovePlayerFromVehicle(playerid);
			    }
			    if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
				{
					FarmerPickup[playerid][0]--;
				}
				JustStarted[playerid] = 0;
			    FarmerVar[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			}
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stopharvest",d,m,y,h,mi,s,sendername);
			CommandLog(string);
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/startdrugharvest", true)) // by LordMan
	{
		if(IsPlayerConnected(playerid))
		{
			if(!IsADrugHarvest(idcar))
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª‘⁄∂æ∆∑ ’∏Óª˙…œ.");
			    return 1;
			}
			if(DrugFarmerVar[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠ø™ º¡Àƒ„µƒπ§◊˜.");
			    return 1;
			}
			if(DrugFarmerPickup[playerid][0] >= 37)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "ΩÒÃÏ“—æ≠◊„πª¡À(ªÿ¿¥œ¬∑¢–ΩÀÆ).");
			    return 1;
			}
			if(PlayerInfo[playerid][pJob] == 19)
			{
			    JustStarted[playerid] = 1;
			    TogglePlayerControllable(playerid, 1);
			    DrugFarmerVar[playerid] = 1;
			    OnPlayerEnterCheckpoint(playerid);
			    SendClientMessage(playerid, COLOR_YELLOW, "∂æ∆∑≈©≥°“µ÷˜: ƒ„µƒπ§◊˜ ±º‰µΩ¡À,œ÷‘⁄»•∫Ï…´±Íº«µ„.");
			}
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /startdrugharvest",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/stopdrugharvest", true)) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(DrugFarmerVar[playerid] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤¢√ª”–ø™ ºπ§◊˜∞°.");
			    return 1;
			}
			if(PlayerInfo[playerid][pJob] == 19)
			{
			    if(IsADrugHarvest(idcar))
			    {
			        TogglePlayerControllable(playerid, 1);
			        SafeRemovePlayerFromVehicle(playerid);
			    }
			    if(DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
				{
					DrugFarmerPickup[playerid][0]--;
				}
				JustStarted[playerid] = 0;
				DrugFarmerVar[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			}
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stopdrugharvest",d,m,y,h,mi,s,sendername);
			CommandLog(string);
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/smuggledrugs", true)) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 20)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «“ª√˚∂æ∆∑◊ﬂÀΩ∑∑.");
	            return 1;
	        }
	        if(SmugglerWork[playerid] != 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„“—æ≠‘⁄◊ﬂÀΩ∂æ∆∑¡À.");
			    return 1;
			}
			if(GetPlayerMoney(playerid) < 299)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„÷¡…Ÿ“™”–300$≤≈ø…“‘◊ﬂÀΩ∂æ∆∑.");
		    	return 1;
			}
			if(PayDaySecure[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ΩÒÃÏƒ„»∑∂®“™‘Ÿ¥Œ◊ﬂÀΩ∂æ∆∑?");
			    return 1;
			}
			if(!IsPlayerInRangeOfPoint(playerid, 5,-38.8664,56.3031,3.1172))
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª‘⁄∂æ∆∑≈©≥°.");
			    return 1;
			}
			if(IsASmuggleCar(idcar) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    TogglePlayerControllable(playerid, 0);
			    SmugglerWork[playerid] = 1;
			    PayDaySecure[playerid] = 1;
			    GameTextForPlayer(playerid, "~w~Loading car with drugs...", 5000, 1);
			    SetTimerEx("LoadingDrugsForSmugglers", 5000, false, "i", playerid);
		        new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /smuggledrugs",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª‘⁄∂æ∆∑◊ﬂÀΩ∑∑µƒ≥µ¿Ô.");
			    return 1;
			}
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/lockhq", true)) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "«Îƒ„œ»◊¢≤·.");
		        return 1;
	        }
	        else
	        {
	            if(PlayerInfo[playerid][pLeader] == 5)
	            {
	                if(hqlock[surlock] == 0)
	                {
	                    hqlock[surlock] = 1;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "»˝∫œª· ◊‹≤ø…œÀ¯.");
	                }
	                else if(hqlock[surlock] == 1)
	                {
	                    hqlock[surlock] = 0;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "»˝∫œª· ◊‹≤øΩ‚À¯.");
					}
	            }
	            else if(PlayerInfo[playerid][pLeader] == 6)
	            {
	                if(hqlock[luclock] == 0)
	                {
	                    hqlock[luclock] = 1;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "La Famiglia Sinatra ◊‹≤ø…œÀ¯.");
	                }
	                else if(hqlock[luclock] == 1)
	                {
	                    hqlock[luclock] = 0;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "La Famiglia Sinatra ◊‹≤øΩ‚À¯.");
	                }
	            }
	            else if(PlayerInfo[playerid][pLeader] == 14)
	            {
	                if(hqlock[guclock] == 0)
	                {
	                    hqlock[guclock] = 1;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "…Ωø⁄◊È◊‹≤ø…œÀ¯.");
	                }
	                else if(hqlock[guclock] == 1)
	                {
	                    hqlock[guclock] = 0;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "…Ωø⁄◊È◊‹≤øΩ‚À¯.");
	                }
	            }
	            else if(PlayerInfo[playerid][pLeader] == 15)
	            {
	                if(hqlock[stlock] == 0)
	                {
	                    hqlock[stlock] = 1;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "¥Û»¶∞Ô HQ…œÀ¯.");
	                }
	                else if(hqlock[stlock] == 1)
	                {
	                    hqlock[stlock] = 0;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "¥Û»¶∞Ô ◊‹≤øΩ‚À¯.");
	                }
                }
	            else if(PlayerInfo[playerid][pLeader] == 16)
	            {
	                if(hqlock[iolock] == 0)
	                {
	                    hqlock[iolock] = 1;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "¿≠∏± gang ◊‹≤ø…œÀ¯.");
	                }
	                else if(hqlock[iolock] == 1)
	                {
	                    hqlock[iolock] = 0;
	                    SaveHQLocks();
	                    SendClientMessage(playerid, COLOR_GREY, "¿≠∏± gang ◊‹≤øΩ‚À¯.");
	                }
				}
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»Œ∫Œ◊‹≤øµƒ‘ø≥◊.");
	                return 1;
	            }
		        new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /lockhq",d,m,y,h,mi,s,sendername);
				CommandLog(string);
	        }
	    }
	    return 1;
	}

	if(strcmp(cmd, "/knockout", true) == 0) // by LordMan
	{
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "«Îƒ„œ»µ«¬º.");
		        return 1;
	        }
	        if(PlayerInfo[playerid][pLevel] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "ƒ„÷¡…Ÿ–Ë“™3º∂,≤≈ø…“‘ π”√’‚∏ˆ÷∏¡Ó.");
	            return 1;
	        }
	        if(KnockedDown[playerid] == 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "µ±ƒ„±ª◊≤œ¬¿¥ ±,≤ªƒ‹“°∞⁄");
	            return 1;
	        }
            if(PlayerInfo[playerid][pSex] == 2)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„Ã´Œ¢»ıµƒ“‘÷¡”⁄≤ªƒ‹◊≤œ¬¿¥ƒ≥»À.");
	            return 1;
            }
            if(PlayerBoxing[playerid] != 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "»≠ª˜ ±≤ªƒ‹ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /knockout [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(1.0, playerid, giveplayerid))
			        {
           				if(KnockedDown[giveplayerid] != 1)
			        	{
			        	    if(giveplayerid == playerid)
			        	    {
			        	        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªƒ‹∞⁄∂Øƒ„◊‘º∫.");
			        	        return 1;
			        	    }
			        	    if(PlayerInfo[giveplayerid][pSex] == 2)
			        	    {
			        	        SendClientMessage(playerid, COLOR_GREY, "ƒ„œÎ¥ÚµΩ’‚∏ˆ≈Æ»À√¥?");
			        	        return 1;
			        	    }
			        	    if(IsPlayerInAnyVehicle(giveplayerid))
			        	    {
			        	        return 1;
			        	    }
			            	new giveplayername[MAX_PLAYER_NAME];
			            	GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
			            	new rands = random(2)+1;
							format(string, sizeof(string), "* %s √Õ¥Ú %s ≤¢ ‘Õº¥ÚªËÀ˚.", sendername, giveplayername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
                            ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
					        new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /knockout",d,m,y,h,mi,s,sendername);
							CommandLog(string);
							if(rands == 1)
							{
							    TogglePlayerControllable(giveplayerid, 0);
								ApplyAnimation(giveplayerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
								SetTimerEx("ClearKnock", 20000, false, "i", giveplayerid);
								KnockedDown[giveplayerid] = 1;
								format(string, sizeof(string), "* %s ≥…π¶µƒ“ª»≠¥Úµπ¡ÀÀ˚.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
							    format(string, sizeof(string), "* %s  ß∞‹¡À√ª”–¥ÚªËÀ˚.", sendername);
                                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "ÕÊº“±ªª˜µπ¡À.");
						}
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸.");
			        }
			    }
			}

		}
		return 1;
	}

	/*if(strcmp(cmd, "/carcolor", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPcarkey] == 999)
	        {
	            SendClientMessage(playerid, COLOR_GREY,"   ƒ„√ª”–“ª¡æ◊‘º∫µƒ≥µ to respray.");
	            return 1;
	        }
	        if(GetPlayerMoney(playerid) < 1000)
	        {
	            SendClientMessage(playerid, COLOR_GREY,"   ƒ„√ª”–◊„πªµƒ«Æ for car respray.");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /carcolor [—’…´1±‡∫≈] [—’…´2±‡∫≈]");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 && color1 > 126)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   √ª”–’‚∏ˆ—’…´±‡∫≈!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /carcolor [—’…´1±‡∫≈] [—’…´2±‡∫≈]");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 && color2 > 126)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   √ª”–’‚∏ˆ—’…´±‡∫≈!");
			    return 1;
			}
	        if(IsPlayerInAnyVehicle(playerid))
	        {
	            if(PlayerInfo[playerid][pPcarkey] == idcar)
	            {
	                CarInfo[idcar][cColorOne] = color1;
	                CarInfo[idcar][cColorTwo] = color2;
	                SafeGivePlayerMoney(playerid, -1000);
	                GameTextForPlayer(playerid, "~w~Bill for a Paint Respray~n~~r~-$1000", 5000, 1);
	                ChangeVehicleColor(idcar, color1, color2);
	                OnPropUpdate(4,idcar);
					OnPlayerUpdateEx(playerid);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY,"   ’‚≤ª «ƒ„µƒ≥µ.");
	            	return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY,"   You are not in vehicle.");
	            return 1;
	        }
	    }
	    return 1;
	}*/
	
	if(strcmp(cmd, "/use", true) == 0) // by Cuervo
	{
		if(IsPlayerConnected(playerid))
		{
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /use [backpack*±≥∞¸*, briefcase*π´Œƒ∞¸*, nothing*œ˚≥˝À˘”–≥÷ŒÔ*]");
			    SendClientMessage(playerid, COLOR_GREY, "Ã· æ: 'nothing' Ω´œ˚≥˝ƒ„…Ì…œµƒÀ˘”–∂´Œ˜!");
				return 1;
			}
			if(strcmp(x_nr,"backpack",true) == 0)
			{
   				AttachObjectCorrectly(playerid, 3026);
			}
			else if(strcmp(x_nr,"briefcase",true) == 0)
			{
   				AttachObjectCorrectly(playerid, 1210);
			}
			else if(strcmp(x_nr,"nothing",true) == 0)
			{
			    RemovePlayerAttachedObject(playerid,3);
/*			    if(IsACop(playerid) && PlayerInfo[playerid][pDuty] == 1)
			    {
			        if(Tazer[playerid] == 1)
			        {
						AttachWeaponCorrectly(playerid, 24);
					}
					else
					{
					    AttachWeaponCorrectly(playerid, 23);
					}
				}*/
			}
			else return SendClientMessage(playerid, COLOR_GREY,"* Œ¥÷™œÓƒø!");
		}
		return 1;
	}

    if(strcmp(cmd, "/atcradio", true) == 0) // by Cuervo
	{
	    if(PlayerInfo[playerid][pAtc] == 1 || PlayerInfo[playerid][pAdmin] >= 2)
	    {
		    if(IsPlayerConnected(playerid))
		    {
				new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
				    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /atcradio <on/off>");
					return 1;
				}
				if(strcmp(x_nr,"on",true) == 0)
				{
				    PlayerInfo[playerid][pAtcRadio] = 1;
				    SendClientMessage(playerid, COLOR_GREY, "* ATC µÁÃ®œ÷‘⁄¥Úø™");
				    for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
						    new carid = GetPlayerVehicleID(i);
						    if(IsModelAPlane(carid) || IsModelAHeli(carid) || PlayerInfo[i][pAtcRadio] == 1)
						    {
		        				format(string, sizeof(string),"* ATC %s œ÷‘⁄…œ∞‡¡À◊º±∏Œ™ƒ„∑˛ŒÒ",sendername);
		        				SendClientMessage(i, TEAM_GROVE_COLOR, string);
							}
						}
					}
				}
				else if(strcmp(x_nr,"off",true) == 0)
				{
				    PlayerInfo[playerid][pAtcRadio] = 0;
				    SendClientMessage(playerid, COLOR_GREY, "* ATC µÁÃ®œ÷‘⁄πÿ±’");
				    for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
						    new carid = GetPlayerVehicleID(i);
						    if(IsModelAPlane(carid) || IsModelAHeli(carid) || PlayerInfo[i][pAtcRadio] == 1)
						    {
		        				format(string, sizeof(string),"* ATC %s œ÷‘⁄œ¬∞‡¡À≤ª‘⁄Œ™ƒ„∑˛ŒÒ",sendername);
		        				SendClientMessage(i, TEAM_GROVE_COLOR, string);
							}
						}
					}
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À√¸¡Ó");
		    return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/give", true) == 0) // by Cuervo
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /give [ø…”√√˚≥∆] [ÕÊº“ID/ÕÊº“√˚◊÷]");
				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: drugs*∂æ∆∑*, gun*Œ‰∆˜*, vehkey*≥µ‘ø≥◊1*,vehkey2*≥µ‘ø≥◊2*, hirekey*◊‚≥µ‘ø≥◊*, rope*…˛À˜*");
				return 1;
			}
			if(strcmp(x_nr,"drugs",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give drugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        new Float:x, Float:y, Float:z;
			            GetPlayerPos(giveplayerid,x,y,z);
			            if(!IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
			            {
			                SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
			                return 1;
			            }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give drugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
							return 1;
						}
						new dammount;
						dammount = strval(tmp);
						if(dammount > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒ∂æ∆∑."); return 1; }
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						PlayerInfo[playerid][pDrugs] -= dammount;
						PlayerInfo[giveplayerid][pDrugs] += dammount;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ◊∞”–∂æ∆∑µƒ¥¸◊”µ›∏¯¡À %s.", sendername, giveplayer); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ◊∞”–∂æ∆∑µƒ¥¸◊”µ›∏¯¡À %s.", sendername, giveplayer); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				        new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /give drugs %s %d",d,m,y1,h,mi,s,sendername,giveplayer, dammount);
						CommandLog(string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
				    return 1;
				}
			}
			if(strcmp(x_nr,"gun",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give gun [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        new Float:x, Float:y, Float:z;
			            GetPlayerPos(giveplayerid,x,y,z);
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			            if(!IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
			            {
			                SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
			                return 1;
			            }
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give gun [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
							return 1;
						}
						new sammo = GetPlayerAmmo(playerid);
						new weapon = GetPlayerWeapon(playerid);
						new ammo = strval(tmp);
						if(ammo > sammo)
						{
							SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–ƒ«√¥∂‡◊”µØ.");
							return 1;
						}
						SafeGivePlayerWeapon(giveplayerid, weapon, ammo);
						SafeGivePlayerWeapon(playerid, weapon, -ammo);
						if(PlayerInfo[playerid][pSex] == 1)
						{
							format(string, sizeof(string), "* %s ÃÕ≥ˆÀ˚µƒŒ‰∆˜µ›∏¯¡À %s ≤¢ÃÕ≥ˆ %d ∑¢◊”µØ.", sendername, giveplayer, ammo);
						}
						else
						{
							format(string, sizeof(string), "* %s ÃÕ≥ˆŒ‰∆˜µ›∏¯¡À %s ≤¢ÃÕ≥ˆ %d ∑¢◊”µØ.", sendername, giveplayer, ammo);
						}
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				        new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /give gun %s %d",d,m,y1,h,mi,s,sendername,giveplayer, ammo);
						CommandLog(string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"vehkey",true) == 0)
			{
			    if(PlayerInfo[playerid][pPcarkey] == 9999)
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤¢√ª”–“ª¡æ≥µµƒ‘ø≥◊!");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give vehkey [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[giveplayerid][pPcarkey] != 9999)
			    		{
			        		SendClientMessage(playerid, COLOR_GRAD1, "** À˚“—æ≠”–“ª∞—≥µ‘ø≥◊¡À!");
			        		return 1;
			    		}
			    		new Float:x, Float:y, Float:z;
			            GetPlayerPos(giveplayerid,x,y,z);
			            if(IsPlayerInRangeOfPoint(playerid, 15, x, y, z))
			            {
			                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        new y1, m, d;
							new h,mi,s;
							getdate(y1,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /give vehkey %s",d,m,y1,h,mi,s,sendername,giveplayer);
							CommandLog(string);
			                if(PlayerInfo[giveplayerid][pPcarkey] == 9999)
			                {
			    				PlayerInfo[giveplayerid][pPcarkey] = PlayerInfo[playerid][pPcarkey];
			    				PlayerInfo[playerid][pPcarkey] = 9999;
								format(string, sizeof(string), "* %s ‰Ï»˜µƒÃÕ≥ˆ≥µ‘ø≥◊∏¯¡À %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
								OnPlayerUpdateEx(playerid);
								OnPlayerUpdateEx(giveplayerid);
							}
							else if(PlayerInfo[giveplayerid][pPcarkey2] == 9999)
			                {
			    				PlayerInfo[giveplayerid][pPcarkey2] = PlayerInfo[playerid][pPcarkey];
			    				PlayerInfo[playerid][pPcarkey] = 9999;
								format(string, sizeof(string), "* %s ‰Ï»˜µƒÃÕ≥ˆ≥µ‘ø≥◊∏¯¡À %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
								OnPlayerUpdateEx(playerid);
								OnPlayerUpdateEx(giveplayerid);
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
						    return 1;
						}

					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
				    return 1;
				}

			}
			else if(strcmp(x_nr,"vehkey2",true) == 0)
			{
			    if(PlayerInfo[playerid][pPcarkey] == 9999)
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤¢√ª”–“ª¡æ≥µµƒ‘ø≥◊!");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give vehkey2 [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[giveplayerid][pPcarkey] != 9999 && PlayerInfo[giveplayerid][pPcarkey2] != 9999)
			    		{
			        		SendClientMessage(playerid, COLOR_GRAD1, "** À˚“—æ≠”–“ª∞—≥µ‘ø≥◊¡À!");
			        		return 1;
			    		}
			    		new Float:x, Float:y, Float:z;
			            GetPlayerPos(giveplayerid,x,y,z);
			            if(IsPlayerInRangeOfPoint(playerid, 15, x, y, z))
			            {
			                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        new y1, m, d;
							new h,mi,s;
							getdate(y1,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /give vehkey2 %s",d,m,y1,h,mi,s,sendername,giveplayer);
							CommandLog(string);
			                if(PlayerInfo[giveplayerid][pPcarkey] == 9999)
			                {
			    				PlayerInfo[giveplayerid][pPcarkey] = PlayerInfo[playerid][pPcarkey];
			    				PlayerInfo[playerid][pPcarkey] = 9999;
								format(string, sizeof(string), "* %s ‰Ï»˜µƒÃÕ≥ˆ≥µ‘ø≥◊∏¯¡À %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
								OnPlayerUpdateEx(playerid);
								OnPlayerUpdateEx(giveplayerid);
							}
							else if(PlayerInfo[giveplayerid][pPcarkey2] == 9999)
			                {
			    				PlayerInfo[giveplayerid][pPcarkey2] = PlayerInfo[playerid][pPcarkey];
			    				PlayerInfo[playerid][pPcarkey] = 9999;
								format(string, sizeof(string), "* %s ‰Ï»˜µƒÃÕ≥ˆ≥µ‘ø≥◊∏¯¡À %s.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
								OnPlayerUpdateEx(playerid);
								OnPlayerUpdateEx(giveplayerid);
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
						    return 1;
						}

					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
				    return 1;
				}

			}
			else if(strcmp(x_nr,"hirekey",true) == 0)
			{
			    if(HireCar[playerid] == 299)
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–◊‚≥µ‘ø≥◊!");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give hirekey [ÕÊº“ID/ÕÊº“√˚◊÷]");
			        return 1;
			    }
			    giveplayerid = ReturnUser(tmp);
       			if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
			            new Float:x, Float:y, Float:z;
			            GetPlayerPos(giveplayerid,x,y,z);
			            if(!IsPlayerInRangeOfPoint(playerid, 15, x, y, z))
			            {
			                SendClientMessage(playerid, COLOR_GRAD1, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
			                return 1;
			            }
			    		if(HireCar[giveplayerid] != 299)
			    		{
			        		SendClientMessage(playerid, COLOR_GRAD1, "    ’‚∏ˆÕÊº““—æ≠”–¡À◊‚≥µ‘ø≥◊ !");
			        		return 1;
			    		}
			    		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
      					new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /give hirekey %s",d,m,y1,h,mi,s,sendername,giveplayer);
						CommandLog(string);
			    		HireCar[giveplayerid] = HireCar[playerid];
			    		HireCar[playerid] = 299;
						format(string, sizeof(string), "* %s ÃÕ≥ˆ◊‚≥µ‘ø≥◊∏¯¡À %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
				}
			}
			else if(strcmp(x_nr,"rope",true) == 0)
			{
			    if(Rope[playerid] == 0)
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–…˛À˜!");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /give rope [ÕÊº“ID/ÕÊº“√˚◊÷]");
			        return 1;
			    }
			    giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
			            if(ProxDetectorS(5, playerid, giveplayerid))
			            {
			                if(Rope[giveplayerid] > 4)
			                {
			                    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº““—æ≠”–◊„πªµƒ…˛À˜¡À !");
			                    return 1;
			                }
			                Rope[playerid]--;
			                Rope[giveplayerid]++;
			                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /give rope %s",d,m,y,h,mi,s,sendername,giveplayer);
							CommandLog(string);
							format(string, sizeof(string), "* %s hands a rope to %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							return 1;
			            }
			        }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /give [ø…”√√˚≥∆] [ÕÊº“ID/ÕÊº“√˚◊÷]");
				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: drugs*∂æ∆∑*, gun*Œ‰∆˜*, vehkey*≥µ‘ø≥◊1*,vehkey2*≥µ‘ø≥◊2*, hirekey*◊‚≥µ‘ø≥◊*, rope*…˛À˜*");
				return 1;
			}

	    }
	    return 1;
	}
	
	if(strcmp(cmd, "/load", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /load [ø…”√√˚≥∆]");
				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: drugs*∂æ∆∑*, materials*≤ƒ¡œ*, weapon*Œ‰∆˜*, weapon2*Œ‰∆˜2*, weapon3*Œ‰∆˜3*, weapon4*Œ‰∆˜4*, weapon5*Œ‰∆˜5*, weapon6*Œ‰∆˜6*");
				return 1;
			}
			if(strcmp(x_nr,"drugs",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load drugs  ˝¡ø]");
						format(string, sizeof(string),"* ƒ„”– %d ∂æ∆∑±£¥Ê‘⁄’‚¿Ô",HouseInfo[house][hDrugs]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new dammount;
					dammount = strval(tmp);
					if(dammount > HouseInfo[house][hDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒ∂æ∆∑."); return 1; }
					PlayerInfo[playerid][pDrugs] += dammount;
					HouseInfo[house][hDrugs] -= dammount;
					if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©∂æ∆∑,∑≈Ω¯¡ÀÀ˚±≥…œµƒ±≥∞¸.", sendername); }
					else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©∂æ∆∑,∑≈Ω¯¡ÀÀ˚±≥…œµƒ±≥∞¸", sendername); }
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load drugs %d",d,m,y1,h,mi,s,sendername, dammount);
					CommandLog(string);
					OnPropUpdate(1, house);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"materials",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load materials [ ˝¡ø]");
						format(string, sizeof(string),"* ƒ„”– %d ≤ƒ¡œ±£¥Ê‘⁄’‚¿Ô",HouseInfo[house][hMaterials]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new dammount;
					dammount = strval(tmp);
					if(dammount > HouseInfo[house][hMaterials]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–ƒ«√¥∂‡µƒ≤ƒ¡œ.");
					PlayerInfo[playerid][pMats] += dammount;
					HouseInfo[house][hMaterials] -= dammount;
					if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©≤ƒ¡œ,∑≈Ω¯¡ÀÀ˚±≥…œµƒ±≥∞¸.", sendername); }
					else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©≤ƒ¡œ,∑≈Ω¯¡ÀÀ˚±≥…œµƒ±≥∞¸.", sendername); }
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load materials %d",d,m,y1,h,mi,s,sendername, dammount);
					CommandLog(string);
					OnPropUpdate(1, house);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				new weapon = HouseInfo[house][hWeapon1];
				GetWeaponName(weapon,gunname, sizeof(gunname));
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load weapon [µØ“©]");
						format(string, sizeof(string),"* ƒ„”–“ª÷ß %s %d◊”µØµƒŒ‰∆˜¥Ê∑≈‘⁄≤€ 1",gunname, HouseInfo[house][hAmmo1]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > HouseInfo[house][hAmmo1])
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					if(HouseInfo[house][hWeapon1] != 0)
					{
						SafeGivePlayerWeapon(playerid, weapon, ammo);
						if(ammo == HouseInfo[house][hAmmo1]) HouseInfo[house][hWeapon1] = 0;
						HouseInfo[house][hAmmo1] -= ammo;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load weapon %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚√ª”– ≤√¥≤€!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon2",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				new weapon = HouseInfo[house][hWeapon2];
				GetWeaponName(weapon,gunname, sizeof(gunname));
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load weapon2 [µØ“©]");
						format(string, sizeof(string),"* ƒ„”–“ª÷ß %s %d◊”µØµƒŒ‰∆˜¥Ê∑≈‘⁄≤€ 2",gunname, HouseInfo[house][hAmmo2]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > HouseInfo[house][hAmmo2])
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					if(HouseInfo[house][hWeapon2] != 0)
					{
						SafeGivePlayerWeapon(playerid, weapon, ammo);
						if(ammo == HouseInfo[house][hAmmo2]) HouseInfo[house][hWeapon2] = 0;
						HouseInfo[house][hAmmo2] -= ammo;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load weapon2 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚√ª”– ≤√¥≤€!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon3",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				new weapon = HouseInfo[house][hWeapon3];
				GetWeaponName(weapon,gunname, sizeof(gunname));
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load weapon3 [µØ“©]");
						format(string, sizeof(string),"* ƒ„”–“ª÷ß %s %d◊”µØµƒŒ‰∆˜¥Ê∑≈‘⁄≤€ 3",gunname, HouseInfo[house][hAmmo3]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > HouseInfo[house][hAmmo3])
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					if(HouseInfo[house][hWeapon3] != 0)
					{
						SafeGivePlayerWeapon(playerid, weapon, ammo);
						if(ammo == HouseInfo[house][hAmmo3]) HouseInfo[house][hWeapon3] = 0;
						HouseInfo[house][hAmmo3] -= ammo;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load weapon3 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚√ª”– ≤√¥≤€!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon4",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				new weapon = HouseInfo[house][hWeapon4];
				GetWeaponName(weapon,gunname, sizeof(gunname));
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load weapon4 [µØ“©]");
						format(string, sizeof(string),"* ƒ„”–“ª÷ß %s %d◊”µØµƒŒ‰∆˜¥Ê∑≈‘⁄≤€ 4",gunname, HouseInfo[house][hAmmo4]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > HouseInfo[house][hAmmo4])
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					if(HouseInfo[house][hWeapon4] != 0)
					{
						SafeGivePlayerWeapon(playerid, weapon, ammo);
						if(ammo == HouseInfo[house][hAmmo4]) HouseInfo[house][hWeapon4] = 0;
						HouseInfo[house][hAmmo4] -= ammo;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load weapon4 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚√ª”– ≤√¥≤€!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon5",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				new weapon = HouseInfo[house][hWeapon5];
				GetWeaponName(weapon,gunname, sizeof(gunname));
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load weapon5 [µØ“©]");
						format(string, sizeof(string),"* ƒ„”–“ª÷ß %s %d◊”µØµƒŒ‰∆˜¥Ê∑≈‘⁄≤€ 5",gunname, HouseInfo[house][hAmmo5]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > HouseInfo[house][hAmmo5])
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					if(HouseInfo[house][hWeapon5] != 0)
					{
						SafeGivePlayerWeapon(playerid, weapon, ammo);
						if(ammo == HouseInfo[house][hAmmo5]) HouseInfo[house][hWeapon5] = 0;
						HouseInfo[house][hAmmo5] -= ammo;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load weapon5 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚√ª”– ≤√¥≤€!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon6",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				new weapon = HouseInfo[house][hWeapon6];
				GetWeaponName(weapon,gunname, sizeof(gunname));
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /load weapon6 [µØ“©]");
						format(string, sizeof(string),"* ƒ„”–“ª÷ß %s %d◊”µØµƒŒ‰∆˜¥Ê∑≈‘⁄≤€ 6",gunname, HouseInfo[house][hAmmo5]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > HouseInfo[house][hAmmo6])
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					if(HouseInfo[house][hWeapon6] != 0)
					{
						SafeGivePlayerWeapon(playerid, weapon, ammo);
						if(ammo == HouseInfo[house][hAmmo6]) HouseInfo[house][hWeapon6] = 0;
						HouseInfo[house][hAmmo6] -= ammo;
						if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡ÀÀ˚µƒ %s ≤¢Ω´À˚∑≈‘⁄¡À±≥…œµƒ±≥∞¸¿Ô.", sendername,gunname); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /load weapon6 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚√ª”– ≤√¥≤€!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
		}
	    return 1;
	}
	
	if(strcmp(cmd, "/store", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /store [ø…”√√˚≥∆]");
				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: drugs*∂æ∆∑*, materials*≤ƒ¡œ*, weapon*Œ‰∆˜*, weapon2*Œ‰∆˜2*, weapon3*Œ‰∆˜3*, weapon4*Œ‰∆˜4*, weapon5*Œ‰∆˜5*, weapon6*Œ‰∆˜6*");
				return 1;
			}
			if(strcmp(x_nr,"drugs",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store drugs [ ˝¡ø]");
						format(string, sizeof(string),"* ƒ„±≥◊≈ %d ∂æ∆∑",PlayerInfo[playerid][pDrugs]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new dammount;
					dammount = strval(tmp);
					if(dammount > PlayerInfo[playerid][pDrugs]) return SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒ∂æ∆∑.");
					if(HouseInfo[house][hDrugs] >= 10000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 10000 µƒ ˝∂Ó.");
					PlayerInfo[playerid][pDrugs] -= dammount;
					HouseInfo[house][hDrugs] += dammount;
					if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©∂æ∆∑,∑≈Ω¯¡À±£œ’œ‰.", sendername); }
					else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©∂æ∆∑,∑≈Ω¯¡À±£œ’œ‰.", sendername); }
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store drugs %d",d,m,y1,h,mi,s,sendername, dammount);
					CommandLog(string);
					OnPropUpdate(1, house);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"materials",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store materials [ ˝¡ø]");
						format(string, sizeof(string),"* ƒ„±≥◊≈ %d ≤ƒ¡œ",PlayerInfo[playerid][pMats]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
					}
					new dammount;
					dammount = strval(tmp);
					if(dammount > PlayerInfo[playerid][pMats]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–ƒ«√¥∂‡µƒ≤ƒ¡œ.");
					if(HouseInfo[house][hMaterials] >= 35000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 35000 µƒ ˝∂Ó.");
					PlayerInfo[playerid][pMats] -= dammount;
					HouseInfo[house][hMaterials] += dammount;
					if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©≤ƒ¡œ,∑≈Ω¯¡À±£œ’œ‰.", sendername); }
					else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©≤ƒ¡œ,∑≈Ω¯¡À±£œ’œ‰.", sendername); }
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store materials %d",d,m,y1,h,mi,s,sendername, dammount);
					CommandLog(string);
					OnPropUpdate(1, house);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store weapon [µØ“©]");
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > GetPlayerAmmo(playerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					new weapon = GetPlayerWeapon(playerid);
					GetWeaponName(weapon,gunname, sizeof(gunname));
					if(weapon != 0)
					{
						if(HouseInfo[house][hWeapon1] == 0)
						{
						    if(HouseInfo[house][hAmmo1] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hWeapon1] = weapon;
							HouseInfo[house][hAmmo1] = ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else if(HouseInfo[house][hWeapon1] == weapon)
						{
						    if(HouseInfo[house][hAmmo1] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hAmmo1] += ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
						    return 1;
						}
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store weapon %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
					    SendClientMessage(playerid, COLOR_GREY,"* ¥Ê»Îœ‡Õ¨µƒŒ‰∆˜,ªÚ’ﬂ π”√/loadΩ´’‚∏ˆŒ‰∆˜»°◊ﬂ!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon2",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store weapon2 [µØ“©]");
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > GetPlayerAmmo(playerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					new weapon = GetPlayerWeapon(playerid);
					GetWeaponName(weapon,gunname, sizeof(gunname));
					if(weapon != 0)
					{
						if(HouseInfo[house][hWeapon2] == 0)
						{
						    if(HouseInfo[house][hAmmo2] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hWeapon2] = weapon;
							HouseInfo[house][hAmmo2] = ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else if(HouseInfo[house][hWeapon2] == weapon)
						{
						    if(HouseInfo[house][hAmmo2] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hAmmo2] += ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
						    SendClientMessage(playerid, COLOR_GREY,"* ¥Ê»Îœ‡Õ¨µƒŒ‰∆˜,ªÚ’ﬂ π”√/loadΩ´’‚∏ˆŒ‰∆˜»°◊ﬂ!");
						    return 1;
						}
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store weapon2 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ ÷…œ√ª”–»Œ∫Œ“ª÷÷Œ‰∆˜!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon3",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store weapon3 [µØ“©]");
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > GetPlayerAmmo(playerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					new weapon = GetPlayerWeapon(playerid);
					GetWeaponName(weapon,gunname, sizeof(gunname));
					if(weapon != 0)
					{
						if(HouseInfo[house][hWeapon3] == 0)
						{
						    if(HouseInfo[house][hAmmo3] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hWeapon3] = weapon;
							HouseInfo[house][hAmmo3] = ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else if(HouseInfo[house][hWeapon3] == weapon)
						{
						    if(HouseInfo[house][hAmmo3] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hAmmo3] += ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
						    SendClientMessage(playerid, COLOR_GREY,"* ¥Ê»Îœ‡Õ¨µƒŒ‰∆˜,ªÚ’ﬂ π”√/loadΩ´’‚∏ˆŒ‰∆˜»°◊ﬂ!");
						    return 1;
						}
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store weapon3 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ ÷…œ√ª”–»Œ∫Œ“ª÷÷Œ‰∆˜!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon4",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store weapon4 [µØ“©]");
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > GetPlayerAmmo(playerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					new weapon = GetPlayerWeapon(playerid);
					GetWeaponName(weapon,gunname, sizeof(gunname));
					if(weapon != 0)
					{
						if(HouseInfo[house][hWeapon4] == 0)
						{
						    if(HouseInfo[house][hAmmo4] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hWeapon4] = weapon;
							HouseInfo[house][hAmmo4] = ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else if(HouseInfo[house][hWeapon4] == weapon)
						{
						    if(HouseInfo[house][hAmmo4] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hAmmo4] += ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
						    SendClientMessage(playerid, COLOR_GREY,"* ¥Ê»Îœ‡Õ¨µƒŒ‰∆˜,ªÚ’ﬂ π”√/loadΩ´’‚∏ˆŒ‰∆˜»°◊ﬂ!");
						    return 1;
						}
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store weapon4 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ ÷…œ√ª”–»Œ∫Œ“ª÷÷Œ‰∆˜!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon5",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store weapon5 [µØ“©]");
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > GetPlayerAmmo(playerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					new weapon = GetPlayerWeapon(playerid);
					GetWeaponName(weapon,gunname, sizeof(gunname));
					if(weapon != 0)
					{
						if(HouseInfo[house][hWeapon5] == 0)
						{
						    if(HouseInfo[house][hAmmo5] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hWeapon5] = weapon;
							HouseInfo[house][hAmmo5] = ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else if(HouseInfo[house][hWeapon5] == weapon)
						{
						    if(HouseInfo[house][hAmmo5] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hAmmo5] += ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
						    SendClientMessage(playerid, COLOR_GREY,"* ¥Ê»Îœ‡Õ¨µƒŒ‰∆˜,ªÚ’ﬂ π”√/loadΩ´’‚∏ˆŒ‰∆˜»°◊ﬂ!");
						    return 1;
						}
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store weapon5 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ ÷…œ√ª”–»Œ∫Œ“ª÷÷Œ‰∆˜!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"weapon6",true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				new gunname[24];
				if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /store weapon6 [µØ“©]");
						return 1;
					}
					new ammo;
					ammo = strval(tmp);
					if(ammo > GetPlayerAmmo(playerid))
					{
						SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡µƒµØ“©.");
						return 1;
					}
					new weapon = GetPlayerWeapon(playerid);
					GetWeaponName(weapon,gunname, sizeof(gunname));
					if(weapon != 0)
					{
						if(HouseInfo[house][hWeapon6] == 0)
						{
						    if(HouseInfo[house][hAmmo6] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hWeapon6] = weapon;
							HouseInfo[house][hAmmo6] = ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else if(HouseInfo[house][hWeapon6] == weapon)
						{
						    if(HouseInfo[house][hAmmo6] >= 25000) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹≥¨π˝ 25000  µƒ ˝∂Ó.");
							SafeGivePlayerWeapon(playerid, weapon, -ammo);
							HouseInfo[house][hAmmo6] += ammo;
							if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª∞— %s ≤¢Ω´À˚∑≈µΩ¡À±£œ’œ‰.", sendername,gunname); }
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ≤€“—±ª¥Ê»Î∆‰À˚µƒŒ‰∆˜!");
						    SendClientMessage(playerid, COLOR_GREY,"* ¥Ê»Îœ‡Õ¨µƒŒ‰∆˜,ªÚ’ﬂ π”√/loadΩ´’‚∏ˆŒ‰∆˜»°◊ﬂ!");
						    return 1;
						}
						new y1, m, d;
						new h,mi,s;
						getdate(y1,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /store weapon6 %d (%s)",d,m,y1,h,mi,s,sendername, ammo, gunname);
						CommandLog(string);
						OnPropUpdate(1, house);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ ÷…œ√ª”–»Œ∫Œ“ª÷÷Œ‰∆˜!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„ «≤ª «‘⁄ƒ„µƒ∑ø◊”¿Ô!");
				    return 1;
				}
			}
		}
	    return 1;
	}

	if(strcmp(cmd, "/ita", true) == 0 || strcmp(cmd, "/italian", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pMember] == 6)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/ita)lian [œÎÀµµƒª∞]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(IsPlayerInRangeOfPoint(i, 20, x, y, z))
					    {
							if(PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pLeader] == 6 || PlayerInfo[i][pAdmin] >= 1)
							{
					    		format(string, sizeof(string), "%s Àµ: [“‚¥Û¿˚”Ô] %s", sendername, result);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
							else
							{
					    		format(string, sizeof(string), "%s Àµ: [Œ¥÷™”Ô—‘]", sendername);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
						}
					}
				}
				new ys, m, d;
				new h,mi,s;
				getdate(ys,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [“‚¥Û¿˚”Ô]: %s",d,m,ys,h,mi,s,sendername, result);
				ChatLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªª·Àµ“‚¥Û¿˚”Ô !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/spa", true) == 0 || strcmp(cmd, "/spanish", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 5)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/spa)nish [œÎÀµµƒª∞]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(IsPlayerInRangeOfPoint(i, 20, x, y, z))
					    {
							if(PlayerInfo[i][pMember] == 5 || PlayerInfo[i][pLeader] == 5 || PlayerInfo[i][pAdmin] >= 1)
							{
					    		format(string, sizeof(string), "%s Àµ: [Œ˜∞‡—¿”Ô] %s", sendername, result);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
							else
							{
					    		format(string, sizeof(string), "%s Àµ: [Œ¥÷™”Ô—‘]", sendername);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
						}
					}
				}
                new ys, m, d;
				new h,mi,s;
				getdate(ys,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [Œ˜∞‡—¿”Ô]: %s",d,m,ys,h,mi,s,sendername, result);
				ChatLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªª·ÀµŒ˜∞‡—¿”Ô !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/jap", true) == 0 || strcmp(cmd, "/japaneese", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pMember] == 14)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/jap)aneese [œÎÀµµƒª∞]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(IsPlayerInRangeOfPoint(i, 20, x, y, z))
					    {
							if(PlayerInfo[i][pMember] == 14 || PlayerInfo[i][pLeader] == 14 || PlayerInfo[i][pAdmin] >= 1)
							{
					    		format(string, sizeof(string), "%s Àµ: [»’”Ô] %s", sendername, result);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
							else
							{
					    		format(string, sizeof(string), "%s Àµ: [Œ¥÷™”Ô—‘]", sendername);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
						}
					}
				}
				new ys, m, d;
				new h,mi,s;
				getdate(ys,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [»’”Ô]: %s",d,m,ys,h,mi,s,sendername, result);
				ChatLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªª·Àµ»’”Ô !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rus", true) == 0 || strcmp(cmd, "/russian", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pMember] == 15)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/rus)sian [œÎÀµµƒª∞]");
					return 1;
				}
				new Float:x, Float:y, Float:z;
    			GetPlayerPos(playerid,x,y,z);
   				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(IsPlayerInRangeOfPoint(i, 20, x, y, z))
					    {
							if(PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pLeader] == 15 || PlayerInfo[i][pAdmin] >= 1)
							{
					    		format(string, sizeof(string), "%s Àµ: [∂Ì”Ô] %s", sendername, result);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
							else
							{
					    		format(string, sizeof(string), "%s Àµ: [Œ¥÷™”Ô—‘]", sendername);
					    		SendClientMessage(i, COLOR_FADE3, string);
							}
						}
					}
				}
				new ys, m, d;
				new h,mi,s;
				getdate(ys,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [∂Ì”Ô]: %s",d,m,ys,h,mi,s,sendername, result);
				ChatLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªª·Àµ∂Ì”Ô !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/blind", true) == 0) // by CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó");
				return 1;
			}
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
	        {
	        	SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /blind [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pBlind] == 0)
			        {
        				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						TextDrawShowForPlayer(giveplayerid, Textdraw5);
  						PlayerInfo[giveplayerid][pBlind] = 1;
       					format(string, sizeof(string), "[π‹¿Ì]: %s »√ÕÊº“ %s (%d) ß√˜.", sendername, giveplayer,giveplayerid);
						SendAdminMessage(COLOR_LIGHTRED,string);
						GameTextForPlayer(giveplayerid, "~r~Blind!",5000,4);
						format(string, sizeof(string),"%s (%d) ß√˜¡À,”…π‹¿Ì‘± %s.",giveplayer,giveplayerid,sendername);
						SendClientMessageToAll(COLOR_NICERED,string);
						if (PlayerInfo[giveplayerid][pAchievement3] == 0)
						{
						    TextDrawSetString(Textdraw64[giveplayerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Admin Loves You (3) ~n~~n~~w~you won ~g~$75");
	    					ShowAchievement(giveplayerid);
							SafeGivePlayerMoney(giveplayerid,75);
							PlayerInfo[giveplayerid][pAchievement3] = 1;
						}
					}
				 	else
					{
       					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        TextDrawHideForPlayer(giveplayerid, Textdraw5);
				    	PlayerInfo[giveplayerid][pBlind] = 0;
				    	format(string, sizeof(string), "[π‹¿Ì]: %s Ω‚≥˝¡ÀÕÊº“ %s (%d) ß√˜◊¥Ã¨.", sendername, giveplayer,giveplayerid);
                        SendAdminMessage(COLOR_LIGHTRED,string);
                        GameTextForPlayer(giveplayerid, "~g~Unblind!",5000,4);
                        format(string, sizeof(string),"%s (%d)Ω‚≥˝ ß√˜¡À,”…π‹¿Ì‘± %s.",giveplayer,giveplayerid,sendername);
						SendClientMessageToAll(COLOR_NICERED,string);
						if (PlayerInfo[giveplayerid][pAchievement4] == 0)
						{
						    TextDrawSetString(Textdraw64[giveplayerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Admin hates You (4) ~n~~n~~w~you won ~g~$50");
	    					ShowAchievement(giveplayerid);
							SafeGivePlayerMoney(giveplayerid,50);
							PlayerInfo[giveplayerid][pAchievement4] = 1;
						}
					}
     				new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /blind %s",d,m,y,h,mi,s,sendername,giveplayer);
					AdminLog(string);
			    }
			}
	    }
	    return 1;
	}

	if(strcmp(cmd, "/blindfold", true) == 0) // by LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
	        {
	        	SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /blindfold [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { return 1; }
			        if(BlindFold[giveplayerid] == 0)
			        {
			        	if(PlayerTied[giveplayerid] == 1)
			        	{
			            	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))
	        				{
               					SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ÿ–Î‘⁄Õ¨“ª¡æ≥µ π”√À¸ !");
        						return 1;
	        				}
	        				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							TextDrawShowForPlayer(giveplayerid, Textdraw5);
			            	BlindFold[giveplayerid] = 1;
			            	format(string, sizeof(string), "* %s ”√∫⁄≤ºŒÊ◊°¡À %s —€æ¶", sendername, giveplayer);
			            	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			        	}
			        	else
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "**  ◊œ»ƒ„–Ë“™∞Û◊°’‚∏ˆÕÊº“ !");
							return 1;
						}
					}
					else
					{
					    new Float:x, Float:y, Float:z;
					    GetPlayerPos(giveplayerid,x,y,z);
					    if(IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
					    {
	        				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
             				TextDrawHideForPlayer(giveplayerid, Textdraw5);
					    	BlindFold[giveplayerid] = 0;
					    	format(string, sizeof(string), "* %s »°◊ﬂ¡À∫⁄≤º %s —€æ¶", sendername, giveplayer);
			            	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);

						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						    return 1;
						}
					}
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /blindfold %s",d,m,y,h,mi,s,sendername,giveplayer);
					CommandLog(string);
			    }
			}
	    }
	    return 1;
	}

 	if(!strcmp(cmdtext, "/hqin", true))
 	{
		if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerState(playerid) == 1)
		    {
		        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdminDuty] == 1)
		        {
		            if(IsPlayerInRangeOfPoint(playerid, 1,1510.6852,-1458.0654,9.5000) || IsPlayerInRangeOfPoint(playerid, 1,1494.3761,-1467.0068,40.5234))
		            {
		            	SafeSetPlayerPos(playerid, 231.4331,140.4850,1003.0234);
		            	GameTextForPlayer(playerid, "~w~FBI Headquarters",5000,1);
						SafeSetPlayerInterior(playerid,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hqin",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}
		        }
		    }
		}
		return 1;
 	}

 	if(!strcmp(cmdtext, "/hqroof", true))
 	{
		if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerState(playerid) == 1)
		    {
		        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdminDuty] == 1)
		        {
		            if(IsPlayerInRangeOfPoint(playerid, 1,231.4331,140.4850,1003.0234) || IsPlayerInRangeOfPoint(playerid,1, 1510.6852,-1458.0654,9.5000))
		            {
		            	SafeSetPlayerPos(playerid, 1494.3761,-1467.0068,40.5234);
		            	GameTextForPlayer(playerid, "~w~FBI Headquarters Roof",5000,1);
						SafeSetPlayerInterior(playerid,0);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hqroof",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}
		        }
		    }
		}
		return 1;
 	}

 	if(!strcmp(cmdtext, "/hqdown", true))
 	{
		if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerState(playerid) == 1)
		    {
		        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdminDuty] == 1)
		        {
		            if(IsPlayerInRangeOfPoint(playerid, 1, 231.4331,140.4850,1003.0234) || IsPlayerInRangeOfPoint(playerid, 1, 1494.3761,-1467.0068,40.5234))
		            {
		            	SafeSetPlayerPos(playerid, 1510.6852,-1458.0654,9.5000);
		            	GameTextForPlayer(playerid, "~w~FBI Headquarters Garage",5000,1);
						SafeSetPlayerInterior(playerid,0);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hqdown",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}
		        }
		    }
		}
		return 1;
 	}

 	if(!strcmp(cmdtext, "/pdup", true))
 	{
		if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerState(playerid) == 1)
		    {
		        if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pAdminDuty] == 1)
		        {
		            if(IsPlayerInRangeOfPoint(playerid, 1,242.7591,66.4315,1003.6406))
		            {
		            	SafeSetPlayerPos(playerid, 1556.1990,-1671.6530,28.3956);
		            	GameTextForPlayer(playerid, "~w~Police Departemnt Roof",5000,1);
						SafeSetPlayerInterior(playerid,0);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /pdup",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}
		        }
		    }
		}
		return 1;
 	}

 	if(!strcmp(cmdtext, "/pddown", true))
 	{
 	    if(IsPlayerConnected(playerid))
		{
		    if(GetPlayerState(playerid) == 1)
		    {
		        if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pAdminDuty] == 1)
		        {
		            if(IsPlayerInRangeOfPoint(playerid, 1,242.7591,66.4315,1003.6406))
		            {
		            	SafeSetPlayerPos(playerid, 1526.5972,-1676.0651,5.8906);
		            	GameTextForPlayer(playerid, "~w~Police Departemnt Garage",5000,1);
						SafeSetPlayerInterior(playerid,0);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /pddown",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}
		        }
		    }
		}
		return 1;
 	}

    if(!strcmp(cmdtext, "/shownotes", true)) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "    «Îƒ„œ»µ«¬º ! ");
                return 1;
            }
            SendClientMessage(playerid, COLOR_LIGHT_BLUE, "_____________± º«±æ_____________");
            format(string, sizeof(string), "1| %s", PlayerInfo[playerid][pNote1]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "2| %s", PlayerInfo[playerid][pNote2]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "3| %s", PlayerInfo[playerid][pNote3]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "4| %s", PlayerInfo[playerid][pNote4]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            format(string, sizeof(string), "5| %s", PlayerInfo[playerid][pNote5]);
            SendClientMessage(playerid, COLOR_WHITE, string);
            SendClientMessage(playerid, COLOR_LIGHT_BLUE, "___________________________________");
            format(string, sizeof(string), "* %s ’˝‘⁄ø¥◊‘º∫µƒ± º«±æ.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /shownotes",d,m,y,h,mi,s,sendername);
			CommandLog(string);
        }
        return 1;
    }

    if(strcmp(cmd,"/deletenote",true)==0) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "    «Îƒ„œ»µ«¬º ! ");
                return 1;
            }
            new x_nr[24];
            x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /deletenote [≤€ø◊(1-5)]");
				return 1;
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /deletenote",d,m,y,h,mi,s,sendername);
			CommandLog(string);
			if(strcmp(x_nr,"1",true) == 0)
			{
			    if(PlayerInfo[playerid][pNote1s] == 1)
			    {
			    	strmid(PlayerInfo[playerid][pNote1], "None", 0, strlen("None"), 255);
			    	PlayerInfo[playerid][pNote1s] = 0;
			    	SendClientMessage(playerid, COLOR_WHITE, "◊¢“‚(≤€ø◊ 1) “—æ≠«Âø’.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 1 ! ");
				}
			}
			else if(strcmp(x_nr,"2",true) == 0)
			{
			    if(PlayerInfo[playerid][pNote2s] == 1)
			    {
			    	strmid(PlayerInfo[playerid][pNote2], "None", 0, strlen("None"), 255);
			    	PlayerInfo[playerid][pNote2s] = 0;
			    	SendClientMessage(playerid, COLOR_WHITE, "◊¢“‚(≤€ø◊ 2) “—æ≠«Âø’.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 2 ! ");
				}
			}
			else if(strcmp(x_nr,"3",true) == 0)
			{
			    if(PlayerInfo[playerid][pNote3s] == 1)
			    {
			    	strmid(PlayerInfo[playerid][pNote3], "None", 0, strlen("None"), 255);
			    	PlayerInfo[playerid][pNote3s] = 0;
			    	SendClientMessage(playerid, COLOR_WHITE, "◊¢“‚(≤€ø◊ 3) “—æ≠«Âø’.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 3 ! ");
				}
			}
			else if(strcmp(x_nr,"4",true) == 0)
			{
			    if(PlayerInfo[playerid][pNote4s] == 1)
			    {
			    	strmid(PlayerInfo[playerid][pNote4], "None", 0, strlen("None"), 255);
			    	PlayerInfo[playerid][pNote4s] = 0;
			    	SendClientMessage(playerid, COLOR_WHITE, "◊¢“‚(≤€ø◊ 4) “—æ≠«Âø’.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 4 ! ");
				}
			}
			else if(strcmp(x_nr,"5",true) == 0)
			{
			    if(PlayerInfo[playerid][pNote5s] == 1)
			    {
			    	strmid(PlayerInfo[playerid][pNote5], "None", 0, strlen("None"), 255);
			    	PlayerInfo[playerid][pNote5s] = 0;
			    	SendClientMessage(playerid, COLOR_WHITE, "◊¢“‚(≤€ø◊ 5) “—æ≠«Âø’.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "**  √ª”–º«¬º 5 ! ");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "**  ¥ÌŒÛµƒ≤Â≤€ID ! ");
			    return 1;
			}
        }
        return 1;
    }

    if(strcmp(cmd,"/createnote",true)==0) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "    «Îƒ„œ»µ«¬º ! ");
                return 1;
            }
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /createnote",d,m,y,h,mi,s,sendername);
			CommandLog(string);
            new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(length > 60)
			{
			    SendClientMessage(playerid, COLOR_GREY, "    ± º«Ã´≥§¡À ! ");
			    return 1;
			}
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /createnote [ƒ⁄»›]");
				return 1;
			}
			if(PlayerInfo[playerid][pNote1s] == 0)
			{
			    strmid(PlayerInfo[playerid][pNote1], result, 0, strlen(result), 255);
			    PlayerInfo[playerid][pNote1s] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "“—≥…π¶¥¥Ω®◊¢ Õ.");
			    return 1;
			}
			else if(PlayerInfo[playerid][pNote2s] == 0)
			{
			    strmid(PlayerInfo[playerid][pNote2], result, 0, strlen(result), 255);
			    PlayerInfo[playerid][pNote2s] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "“—≥…π¶¥¥Ω®◊¢ Õ.");
			    return 1;
			}
			else if(PlayerInfo[playerid][pNote3s] == 0)
			{
			    strmid(PlayerInfo[playerid][pNote3], result, 0, strlen(result), 255);
			    PlayerInfo[playerid][pNote3s] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "“—≥…π¶¥¥Ω®◊¢ Õ.");
			    return 1;
			}
			else if(PlayerInfo[playerid][pNote4s] == 0)
			{
			    strmid(PlayerInfo[playerid][pNote4], result, 0, strlen(result), 255);
			    PlayerInfo[playerid][pNote4s] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "“—≥…π¶¥¥Ω®◊¢ Õ.");
			    return 1;
			}
			else if(PlayerInfo[playerid][pNote5s] == 0)
			{
			    strmid(PlayerInfo[playerid][pNote5], result, 0, strlen(result), 255);
			    PlayerInfo[playerid][pNote5s] = 1;
			    SendClientMessage(playerid, COLOR_WHITE, "“—≥…π¶¥¥Ω®◊¢ Õ.");
			    return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "    ƒ„µƒ± º«±æ√ª”–¡Ùœ¬ø’∞◊“≥ ! ");
			    return 1;
			}
        }
        return 1;
    }

    if(strcmp(cmd,"/givenote",true)==0) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "    «Îƒ„œ»µ«¬º ! ");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givenote [ÕÊº“ID/ÕÊº“√˚◊÷] [±∏◊¢ID]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        new Float:x, Float:y, Float:z;
           			GetPlayerPos(giveplayerid,x,y,z);
			        if(!IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "    ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ ! ");
			            return 1;
			        }
			        new x_nr[24];
			        x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givenote [ÕÊº“ID/ÕÊº“√˚◊÷] [± º«±‡∫≈]");
						return 1;
					}
					if(strcmp(x_nr,"1",true) == 0)
					{
					    if(PlayerInfo[playerid][pNote1s] == 1)
					    {
					        if(PlayerInfo[giveplayerid][pNote1s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
					            PlayerInfo[giveplayerid][pNote1s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote2s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
					            PlayerInfo[giveplayerid][pNote2s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote3s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
					            PlayerInfo[giveplayerid][pNote3s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote4s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
					            PlayerInfo[giveplayerid][pNote4s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote5s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote1], 0, strlen(PlayerInfo[playerid][pNote1]), 255);
					            PlayerInfo[giveplayerid][pNote5s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "    ’‚∏ˆÕÊº“µƒ± º«±æ¬˙¡À ! ");
					            return 1;
					        }
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 1 ! ");
					        return 1;
					    }
					}
					else if(strcmp(x_nr,"2",true) == 0)
					{
					    if(PlayerInfo[playerid][pNote2s] == 1)
					    {
					        if(PlayerInfo[giveplayerid][pNote1s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
					            PlayerInfo[giveplayerid][pNote1s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote2s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
					            PlayerInfo[giveplayerid][pNote2s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote3s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
					            PlayerInfo[giveplayerid][pNote3s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote4s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
					            PlayerInfo[giveplayerid][pNote4s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote5s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote2], 0, strlen(PlayerInfo[playerid][pNote2]), 255);
					            PlayerInfo[giveplayerid][pNote5s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "    ’‚∏ˆÕÊº“µƒ± º«±æ¬˙¡À ! ");
					            return 1;
					        }
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 2 ! ");
					        return 1;
					    }
					}
					else if(strcmp(x_nr,"3",true) == 0)
					{
					    if(PlayerInfo[playerid][pNote3s] == 1)
					    {
					        if(PlayerInfo[giveplayerid][pNote1s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote3], 0, strlen(PlayerInfo[playerid][pNote3]), 255);
					            PlayerInfo[giveplayerid][pNote1s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote2s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote3], 0, strlen(PlayerInfo[playerid][pNote3]), 255);
					            PlayerInfo[giveplayerid][pNote2s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote3s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote3], 0, strlen(PlayerInfo[playerid][pNote3]), 255);
					            PlayerInfo[giveplayerid][pNote3s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote4s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
					            PlayerInfo[giveplayerid][pNote4s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote5s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
					            PlayerInfo[giveplayerid][pNote5s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "    ’‚∏ˆÕÊº“µƒ± º«±æ¬˙¡À ! ");
					            return 1;
					        }
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 3 ! ");
					        return 1;
					    }
					}
					else if(strcmp(x_nr,"4",true) == 0)
					{
					    if(PlayerInfo[playerid][pNote4s] == 1)
					    {
					        if(PlayerInfo[giveplayerid][pNote1s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
					            PlayerInfo[giveplayerid][pNote1s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote2s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
					            PlayerInfo[giveplayerid][pNote2s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote3s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
					            PlayerInfo[giveplayerid][pNote3s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote4s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
					            PlayerInfo[giveplayerid][pNote4s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote5s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote4], 0, strlen(PlayerInfo[playerid][pNote4]), 255);
					            PlayerInfo[giveplayerid][pNote5s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "    ’‚∏ˆÕÊº“µƒ± º«±æ¬˙¡À ! ");
					            return 1;
					        }
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 4 ! ");
					        return 1;
					    }
					}
					else if(strcmp(x_nr,"5",true) == 0)
					{
					    if(PlayerInfo[playerid][pNote5s] == 1)
					    {
					        if(PlayerInfo[giveplayerid][pNote1s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote1], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
					            PlayerInfo[giveplayerid][pNote1s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote2s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote2], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
					            PlayerInfo[giveplayerid][pNote2s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote3s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote3], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
					            PlayerInfo[giveplayerid][pNote3s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote4s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote4], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
					            PlayerInfo[giveplayerid][pNote4s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else if(PlayerInfo[giveplayerid][pNote5s] == 0)
					        {
					            strmid(PlayerInfo[giveplayerid][pNote5], PlayerInfo[playerid][pNote5], 0, strlen(PlayerInfo[playerid][pNote5]), 255);
					            PlayerInfo[giveplayerid][pNote5s] = 1;
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "ƒ„∑¢ÀÕ¡À“ªÃı± º«∏¯ [ID:%d] %s.", giveplayerid, giveplayer);
					            SendClientMessage(playerid, COLOR_WHITE, string);
					            format(string, sizeof(string), "ƒ„ ’µΩ¡À“ªÃı± º«¿¥◊‘ [ID:%d] %s.", playerid, sendername);
					            SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "    ’‚∏ˆÕÊº“µƒ± º«±æ¬˙¡À ! ");
					            return 1;
					        }
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "    √ª”–º«¬º 5 ! ");
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "    ¥ÌŒÛµƒ± º«±‡∫≈ ! ");
					    return 1;
					}
			    }
			}
        }
        return 1;
    }

    if(strcmp(cmd,"/govinvite",true)==0) // By LordMan
    {
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º ! ");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 7)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /govinvite [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerInfo[giveplayerid][pMember] != 0)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ÕÊº““—æ≠”–◊È÷Ø¡À ! ");
				            return 1;
				        }
				        if(PlayerInfo[giveplayerid][pLeader] != 0)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ÕÊº““—æ≠”–◊È÷Ø¡À ! ");
				            return 1;
				        }
				        PlayerInfo[giveplayerid][pMember] = 7;
						PlayerInfo[giveplayerid][pTeam] = 11;
						gTeam[giveplayerid] = 11;
				        SendClientMessage(playerid, COLOR_WHITE, "  ƒ„≥…π¶µƒ—˚«ÎÕÊº“µΩ’˛∏Æ.");
				        SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ≤ª“™Õ¸º«…Ë÷√À˚µƒΩ«…´/setrole .");
				        SendClientMessage(giveplayerid, COLOR_WHITE, "  ƒ„±ª –≥§—˚«ÎµΩ’˛∏Æ.");
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /govinvite %s",d,m,y,h,mi,s,sendername, giveplayer);
						CommandLog(string);
				    }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª « –≥§ ! ");
			    return 1;
			}
		}
		return 1;
    }

    if(strcmp(cmd,"/govuninvite",true)==0) // By LordMan
    {
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º ! ");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 7)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /govuninvite [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerInfo[giveplayerid][pMember] != 7)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤¢≤ª‘⁄ƒ„µƒ’‚∏ˆ◊È÷Ø¿Ô ! ");
				            return 1;
						}
						PlayerInfo[giveplayerid][pMember] = 0;
						PlayerInfo[giveplayerid][pRank] = 0;
						PlayerInfo[giveplayerid][pTeam] = 3;
						gTeam[giveplayerid] = 3;
						new randomskin;
						if(PlayerInfo[giveplayerid][pSex] == 1) { randomskin = random(sizeof(CivMalePeds)); }
						else if(PlayerInfo[giveplayerid][pSex] == 1) { randomskin = random(sizeof(CivFemalePeds)); }
						else { randomskin = random(sizeof(CivMalePeds)); }
						SetPlayerSkin(giveplayerid, randomskin);
						PlayerInfo[giveplayerid][pChar] = randomskin;
						SendClientMessage(giveplayerid, COLOR_WHITE, "  ƒ„±ª –≥§Ãﬂ≥ˆ¡À’˛∏Æ.");
						SendClientMessage(playerid, COLOR_WHITE, "   ƒ„Ãﬂ≥ˆ¡À“ª√˚’˛∏Æ◊È÷Ø≥…‘±.");
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /govuninvite %s",d,m,y,h,mi,s,sendername, giveplayer);
						CommandLog(string);
				    }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª « –≥§ ! ");
			    return 1;
			}
		}
		return 1;
    }

    if(strcmp(cmd,"/setrole",true)==0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º ! ");
                return 1;
            }
            if(PlayerInfo[playerid][pLeader] != 7)
            {
                SendClientMessage(playerid, COLOR_GREY, "  ƒ„≤ª « –≥§ ! ");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
   				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setrole [ÕÊº“ID/ÕÊº“√˚◊÷] [÷∞ŒÒ√˚≥∆]");
   				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: driver*Àæª˙*, bodyguard*±£Ô⁄*, driverschief*÷˜Àæª˙*, securitychief*±£Œ¿ø∆≥§*,assistantmayor* –≥§÷˙¿Ì*");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
      		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMember] != 7)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„µƒ◊È÷Ø÷– ! ");
			            return 1;
			        }
			        new x_nr[64];
			        x_nr = strtok(cmdtext, idx);
			        if(!strlen(x_nr))
			        {
			            SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setrole [ÕÊº“ID/ÕÊº“√˚◊÷] [÷∞ŒÒ√˚≥∆]");
			            SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: driver*Àæª˙*, bodyguard*±£Ô⁄*, driverschief*÷˜Àæª˙*, securitychief*±£Œ¿ø∆≥§*,assistantmayor* –≥§÷˙¿Ì*");
						return 1;
			        }
			        if(strcmp(x_nr,"driver",true) == 0)
			        {
			            PlayerInfo[giveplayerid][pRank] = 1;
						SendClientMessage(giveplayerid, COLOR_WHITE, " –≥§…Ë÷√ƒ„µƒ÷∞ŒÒ « Àæª˙");
						SendClientMessage(playerid, COLOR_WHITE, "÷∞ŒÒ…Ë÷√≥…π¶");
						return 1;
			        }
			        else if(strcmp(x_nr,"bodyguard",true) == 0)
			        {
			            PlayerInfo[giveplayerid][pJob] = 8;
			            PlayerInfo[giveplayerid][pRank] = 2;
			            SendClientMessage(giveplayerid, COLOR_WHITE, " –≥§…Ë÷√ƒ„µƒ÷∞ŒÒ « ±£Ô⁄");
						SendClientMessage(playerid, COLOR_WHITE, "÷∞ŒÒ…Ë÷√≥…π¶");
						return 1;
			        }
			        else if(strcmp(x_nr,"driverschief",true) == 0)
			        {
			            PlayerInfo[giveplayerid][pRank] = 3;
			            SendClientMessage(giveplayerid, COLOR_WHITE, " –≥§…Ë÷√ƒ„µƒ÷∞ŒÒ « ÷˜Àæª˙");
						SendClientMessage(playerid, COLOR_WHITE, "÷∞ŒÒ…Ë÷√≥…π¶");
						return 1;
			        }
			        else if(strcmp(x_nr,"securitychief",true) == 0)
			        {
			            PlayerInfo[giveplayerid][pJob] = 8;
			            PlayerInfo[giveplayerid][pRank] = 4;
			            SendClientMessage(giveplayerid, COLOR_WHITE, " –≥§…Ë÷√ƒ„µƒ÷∞ŒÒ « ±£Œ¿ø∆≥§");
						SendClientMessage(playerid, COLOR_WHITE, "÷∞ŒÒ…Ë÷√≥…π¶");
						return 1;
			        }
			        else if(strcmp(x_nr,"assistantmayor",true) == 0)
			        {
			            PlayerInfo[giveplayerid][pRank] = 5;
			            SendClientMessage(giveplayerid, COLOR_WHITE, " –≥§…Ë÷√ƒ„µƒ÷∞ŒÒ «  –≥§÷˙¿Ì");
						SendClientMessage(playerid, COLOR_WHITE, "÷∞ŒÒ…Ë÷√≥…π¶");
						return 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setrole [ÕÊº“ID/ÕÊº“√˚◊÷] [÷∞ŒÒ√˚≥∆]");
			            SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: driver*Àæª˙*, bodyguard*±£Ô⁄*, driverschief*÷˜Àæª˙*, securitychief*±£Œ¿ø∆≥§*,assistantmayor* –≥§÷˙¿Ì*");
						return 1;
			        }
			    }
			}
        }
       	new y, m,d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /setrole %s",d,m,y,h,mi,s,sendername, giveplayer);
		CommandLog(string);
        return 1;
    }

    if(!strcmp(cmdtext, "/knock", true)) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
                    format(string, sizeof(string), "* %s «√¡À∑ø◊”µƒ√≈.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /knock",d,m,y,h,mi,s,sendername);
					CommandLog(string);
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
					    if(IsPlayerInRangeOfPoint(p, 60, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
					    {
					        SendClientMessage(p, COLOR_PURPLE, "* ”–»À«√¡À∑ø◊”µƒ√≈.");
					    }
					}
				}
			}
        }
        return 1;
    }

    if(!strcmp(cmdtext, "/startsweep", true)) // By LordMan
    {
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pJob] != 21)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤¢≤ª «µ¿¬∑«Â…®π§ ! ");
		        return 1;
		    }
		    if(PlayerIsSweeping[playerid] == 1)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ƒ„“—æ≠ø™ º«Â…®¥ÛΩ÷ ! ");
		        return 1;
		    }
		    if(IsASweeper(idcar))
		    {
		        PlayerIsSweeping[playerid] = 1;
		        TogglePlayerControllable(playerid, 1);
		        new randomize;
		        randomize = random(sizeof(gSweeperPoints));
		        SetPlayerCheckpoint(playerid, gSweeperPoints[randomize][0], gSweeperPoints[randomize][1], gSweeperPoints[randomize][2], 5.0);
		        SendClientMessage(playerid, COLOR_WHITE, "ƒ„µƒπ§◊˜ ±º‰µΩ¡À!«∞Õ˘∫Ï…´ºÏ≤È’æ.");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /startsweep",d,m,y,h,mi,s,sendername);
				CommandLog(string);
		    }
		}
		return 1;
    }

    if(!strcmp(cmdtext, "/stopsweep", true)) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerIsSweeping[playerid] == 1)
            {
                DisablePlayerCheckpoint(playerid);
                PlayerIsSweeping[playerid] = 0;
                SendClientMessage(playerid, COLOR_WHITE, "ƒ„“—Ω¸Õ£÷π¡À«Â…®¥ÛΩ÷.");
                if(IsASweeper(idcar))
                {
                    SafeRemovePlayerFromVehicle(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stopsweep",d,m,y,h,mi,s,sendername);
					CommandLog(string);
                }
            }
            else
            {
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤¢√ª”–«Â…®¥ÛΩ÷ ! ");
				return 1;
            }
        }
        return 1;
    }

    if(!strcmp(cmdtext, "/inv", true) || !strcmp(cmdtext, "/inventory", true)) // By LordMan
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º ! ");
                return 1;
            }
            new gunname[100]; GetWeaponName(PlayerInfo[playerid][pInvWeapon], gunname, sizeof(gunname));
            new gunname2[100]; GetWeaponName(PlayerInfo[playerid][pInvWeapon2], gunname2, sizeof(gunname2));
            new gunname3[100]; GetWeaponName(PlayerInfo[playerid][pInvWeapon3], gunname3, sizeof(gunname3));
            new gunname4[100]; GetWeaponName(PlayerInfo[playerid][pInvWeapon4], gunname4, sizeof(gunname4));
            new gunname5[100]; GetWeaponName(PlayerInfo[playerid][pInvWeapon5], gunname5, sizeof(gunname5));
            new gunname6[100]; GetWeaponName(PlayerInfo[playerid][pInvWeapon6], gunname6, sizeof(gunname6));
            SendClientMessage(playerid, COLOR_LIGHT_BLUE, "__________ ø‚¥Ê __________");
            if(PlayerInfo[playerid][pInvWeapon] != 0 && PlayerInfo[playerid][pInvAmmo] != 0)
            {
            	format(string, sizeof(string), "≤€ 1: %s, µØ“©: %d", gunname, PlayerInfo[playerid][pInvAmmo]);
            	SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if(PlayerInfo[playerid][pInvWeapon2] != 0 && PlayerInfo[playerid][pInvAmmo2] != 0)
            {
            	format(string, sizeof(string), "≤€ 2: %s, µØ“©: %d", gunname2, PlayerInfo[playerid][pInvAmmo2]);
            	SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if(PlayerInfo[playerid][pInvWeapon3] != 0 && PlayerInfo[playerid][pInvAmmo3] != 0)
            {
            	format(string, sizeof(string), "≤€ 3: %s, µØ“©: %d", gunname3, PlayerInfo[playerid][pInvAmmo3]);
            	SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if(PlayerInfo[playerid][pInvWeapon4] != 0 && PlayerInfo[playerid][pInvAmmo4] != 0)
            {
            	format(string, sizeof(string), "≤€ 4: %s, µØ“©: %d", gunname4, PlayerInfo[playerid][pInvAmmo4]);
            	SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if(PlayerInfo[playerid][pInvWeapon5] != 0 && PlayerInfo[playerid][pInvAmmo5] != 0)
            {
            	format(string, sizeof(string), "≤€ 5: %s, µØ“©: %d", gunname5, PlayerInfo[playerid][pInvAmmo5]);
            	SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if(PlayerInfo[playerid][pInvWeapon6] != 0 && PlayerInfo[playerid][pInvAmmo6] != 0)
            {
            	format(string, sizeof(string), "≤€ 6: %s, µØ“©: %d", gunname6, PlayerInfo[playerid][pInvAmmo6]);
            	SendClientMessage(playerid, COLOR_WHITE, string);
			}
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "_______________________________");
            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /takegun /putgun");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /inv",d,m,y,h,mi,s,sendername);
			CommandLog(string);
        }
        return 1;
    }


	if(!strcmp(cmd, "/takegun", true)) // Modified by CuervO_NegrO
    {
		if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "** «Îƒ„œ»µ«¬º !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /takegun [≤€]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdminDuty] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "** ’‚∏ˆ√¸¡Ó‘⁄π‹¿Ì‘±÷µ∞‡ ±Œﬁ–ß");
			    return 1;
			}
			new slot;
			new gunname[100];
			slot = strval(tmp);
			if(slot < 1||slot > 12) { SendClientMessage(playerid, COLOR_GREY, "** ≤€ ≤ªƒ‹µÕ”⁄1≤ª¥Û”⁄12"); return 1; }
			if(slot == 1)
			{
	            if(PlayerInfo[playerid][pInvWeapon] == 0 && PlayerInfo[playerid][pInvAmmo] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–∑≈÷√»Œ∫Œ«πµΩ ≤€ 1!");
                	return 1;
				}
                GetWeaponName(PlayerInfo[playerid][pInvWeapon], gunname, sizeof(gunname));
                SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon], PlayerInfo[playerid][pInvAmmo]);
      			format(string, sizeof(string), "** ƒ„¥”≤€1¥¯◊ﬂ¡À %s .", gunname);
      			SendClientMessage(playerid, COLOR_GREY, string);
      			PlayerInfo[playerid][pInvWeapon] = 0;
                PlayerInfo[playerid][pInvAmmo] = 0;
            }
            if(slot == 2)
			{
	            if(PlayerInfo[playerid][pInvWeapon2] == 0 && PlayerInfo[playerid][pInvAmmo2] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–∑≈÷√»Œ∫Œ«πµΩ ≤€ 2!");
                	return 1;
				}
                GetWeaponName(PlayerInfo[playerid][pInvWeapon2], gunname, sizeof(gunname));
                SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon2], PlayerInfo[playerid][pInvAmmo2]);
      			format(string, sizeof(string), "** ƒ„¥”≤€2¥¯◊ﬂ¡À %s  2.", gunname);
      			SendClientMessage(playerid, COLOR_GREY, string);
      			PlayerInfo[playerid][pInvWeapon2] = 0;
                PlayerInfo[playerid][pInvAmmo2] = 0;
            }
            if(slot == 3)
			{
	            if(PlayerInfo[playerid][pInvWeapon3] == 0 && PlayerInfo[playerid][pInvAmmo3] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–∑≈÷√»Œ∫Œ«πµΩ ≤€ 3!");
                	return 1;
				}
                GetWeaponName(PlayerInfo[playerid][pInvWeapon3], gunname, sizeof(gunname));
                SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon3], PlayerInfo[playerid][pInvAmmo3]);
      			format(string, sizeof(string), "** ƒ„¥”≤€3¥¯◊ﬂ¡À %s  3.", gunname);
      			SendClientMessage(playerid, COLOR_GREY, string);
      			PlayerInfo[playerid][pInvWeapon3] = 0;
                PlayerInfo[playerid][pInvAmmo3] = 0;
            }
            if(slot == 4)
			{
	            if(PlayerInfo[playerid][pInvWeapon4] == 0 && PlayerInfo[playerid][pInvAmmo4] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–∑≈÷√»Œ∫Œ«πµΩ ≤€ 4!");
                	return 1;
				}
                GetWeaponName(PlayerInfo[playerid][pInvWeapon4], gunname, sizeof(gunname));
                SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon4], PlayerInfo[playerid][pInvAmmo4]);
      			format(string, sizeof(string), "** ƒ„¥”≤€4¥¯◊ﬂ¡À %s  4.", gunname);
      			SendClientMessage(playerid, COLOR_GREY, string);
      			PlayerInfo[playerid][pInvWeapon4] = 0;
                PlayerInfo[playerid][pInvAmmo4] = 0;
            }
            if(slot == 5)
			{
	            if(PlayerInfo[playerid][pInvWeapon5] == 0 && PlayerInfo[playerid][pInvAmmo5] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–∑≈÷√»Œ∫Œ«πµΩ ≤€ 5!");
                	return 1;
				}
                GetWeaponName(PlayerInfo[playerid][pInvWeapon5], gunname, sizeof(gunname));
                SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon5], PlayerInfo[playerid][pInvAmmo5]);
      			format(string, sizeof(string), "** ƒ„¥”≤€5¥¯◊ﬂ¡À %s  5.", gunname);
      			SendClientMessage(playerid, COLOR_GREY, string);
      			PlayerInfo[playerid][pInvWeapon5] = 0;
                PlayerInfo[playerid][pInvAmmo5] = 0;
            }
            if(slot == 6)
			{
	            if(PlayerInfo[playerid][pInvWeapon6] == 0 && PlayerInfo[playerid][pInvAmmo6] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–∑≈÷√»Œ∫Œ«πµΩ ≤€ 6!");
                	return 1;
				}
                GetWeaponName(PlayerInfo[playerid][pInvWeapon6], gunname, sizeof(gunname));
                SafeGivePlayerWeapon(playerid, PlayerInfo[playerid][pInvWeapon6], PlayerInfo[playerid][pInvAmmo6]);
      			format(string, sizeof(string), "** ƒ„¥”≤€6¥¯◊ﬂ¡À %s  .", gunname);
      			SendClientMessage(playerid, COLOR_GREY, string);
      			PlayerInfo[playerid][pInvWeapon6] = 0;
                PlayerInfo[playerid][pInvAmmo6] = 0;
            }
			format(string, sizeof(string), "* %s ¥”…Ì∫Ûµƒ±≥∞¸ƒ√≥ˆ¡À %s .", sendername, gunname);
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /takegun %d (%s)",d,m,y,h,mi,s,sendername, slot, gunname);
			CommandLog(string);
        }
        return 1;
    }

//µΩ’‚¿ÔÕÍ¡À

    if(!strcmp(cmd, "/putgun", true)) // Modified by CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(gPlayerLogged[playerid] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "** «Îƒ„œ»µ«¬º !");
                return 1;
            }
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /putgun [≤€]");
				return 1;
   			}
   			if(PlayerInfo[playerid][pAdminDuty] >= 1)
   			{
   			    SendClientMessage(playerid, COLOR_GRAD2, "** ”ﬁ¥¿µƒπ‹¿Ì‘±≤ªª·∆≠ƒ„µƒŒ‰∆˜!");
   			    return 1;
			}
			if(PlayerInfo[playerid][pDuty] == 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ª“™∆€∆≠ƒ„µƒŒ‰∆˜!!!");
			    return 1;
			}
   			new slot;
			slot = strval(tmp);
			new gunname[100];
            new gunID = GetPlayerWeapon(playerid);
            new gunAmmo = GetPlayerAmmo(playerid);
            new Float:Health;
            GetPlayerHealth(playerid, Health);
            if(Health <= 15) return SendClientMessage(playerid, COLOR_GREY,"ƒ„µƒΩ°øµ÷∏ ˝Ã´µÕ¡À,≤ªƒ‹ π”√’‚∏ˆ√¸¡Ó");
            if(gunID != 0 && gunAmmo != 0)
            {
                if(slot < 1||slot > 12)
				{
					SendClientMessage(playerid, COLOR_GREY, "** ≤€ ≤ªƒ‹µÕ”⁄1≤ª¥Û”⁄12");
					return 1;
				}
				if(slot == 1)
				{
					if(PlayerInfo[playerid][pInvWeapon] != 0 || PlayerInfo[playerid][pInvAmmo] != 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "** ƒ„∞—ƒ„µƒ∂´Œ˜∑≈»Î¡À≤€ 1!");
		                return 1;
		            }
	                PlayerInfo[playerid][pInvWeapon] = gunID;
	                PlayerInfo[playerid][pInvAmmo] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
					GetWeaponName(gunID, gunname, sizeof(gunname));
	                format(string, sizeof(string), "** ƒ„∞—ƒ„µƒŒ‰∆˜%s∑≈»Î¡À≤€ 1.", gunname);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				if(slot == 2)
				{
					if(PlayerInfo[playerid][pInvWeapon2] != 0 || PlayerInfo[playerid][pInvAmmo2] != 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "** ƒ„∞—ƒ„µƒ∂´Œ˜∑≈»Î¡À≤€ 2!");
		                return 1;
		            }
	                PlayerInfo[playerid][pInvWeapon2] = gunID;
	                PlayerInfo[playerid][pInvAmmo2] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
					GetWeaponName(gunID, gunname, sizeof(gunname));
	                format(string, sizeof(string), "** ƒ„∞—ƒ„µƒŒ‰∆˜%s∑≈»Î¡À≤€ 2.", gunname);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				if(slot == 3)
				{
					if(PlayerInfo[playerid][pInvWeapon3] != 0 || PlayerInfo[playerid][pInvAmmo3] != 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "** ƒ„∞—ƒ„µƒ∂´Œ˜∑≈»Î¡À≤€ 3!");
		                return 1;
		            }
	                PlayerInfo[playerid][pInvWeapon3] = gunID;
	                PlayerInfo[playerid][pInvAmmo3] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
					GetWeaponName(gunID, gunname, sizeof(gunname));
	                format(string, sizeof(string), "** ƒ„∞—ƒ„µƒŒ‰∆˜%s∑≈»Î¡À≤€ 3.", gunname);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				if(slot == 4)
				{
					if(PlayerInfo[playerid][pInvWeapon4] != 0 || PlayerInfo[playerid][pInvAmmo4] != 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "** ƒ„∞—ƒ„µƒ∂´Œ˜∑≈»Î¡À≤€ 4!");
		                return 1;
		            }
	                PlayerInfo[playerid][pInvWeapon4] = gunID;
	                PlayerInfo[playerid][pInvAmmo4] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
					GetWeaponName(gunID, gunname, sizeof(gunname));
	                format(string, sizeof(string), "** ƒ„∞—ƒ„µƒŒ‰∆˜%s∑≈»Î¡À≤€ 4.", gunname);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				if(slot == 5)
				{
					if(PlayerInfo[playerid][pInvWeapon5] != 0 || PlayerInfo[playerid][pInvAmmo5] != 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "** ƒ„∞—ƒ„µƒ∂´Œ˜∑≈»Î¡À≤€ 5!");
		                return 1;
		            }
	                PlayerInfo[playerid][pInvWeapon5] = gunID;
	                PlayerInfo[playerid][pInvAmmo5] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
					GetWeaponName(gunID, gunname, sizeof(gunname));
	                format(string, sizeof(string), "** ƒ„∞—ƒ„µƒŒ‰∆˜%s∑≈»Î¡À≤€ 5.", gunname);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				if(slot == 6)
				{
					if(PlayerInfo[playerid][pInvWeapon6] != 0 || PlayerInfo[playerid][pInvAmmo6] != 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "** ƒ„∞—ƒ„µƒ∂´Œ˜∑≈»Î¡À≤€ 6!");
		                return 1;
		            }
	                PlayerInfo[playerid][pInvWeapon6] = gunID;
	                PlayerInfo[playerid][pInvAmmo6] = gunAmmo;
					RemovePlayerWeapon(playerid, gunID);
					GetWeaponName(gunID, gunname, sizeof(gunname));
	                format(string, sizeof(string), "** ƒ„∞—ƒ„µƒŒ‰∆˜%s∑≈»Î¡À≤€ 6.", gunname);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				format(string, sizeof(string), "* %s ¥”À˚µƒ±≥∞¸Ã·»°¡ÀŒ‰∆˜ %s .", sendername, gunname);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /putgun %d (%s)",d,m,y,h,mi,s,sendername, slot, gunname);
				CommandLog(string);
            }
		}
        return 1;
    }
    
    if (strcmp(cmd, "/clearrecord", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /clearrecord [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						strmid(PlayerInfo[giveplayerid][pPunishment1], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment2], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment3], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment4], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment5], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment6], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment7], "None", 0, strlen("None"), 255);
						strmid(PlayerInfo[giveplayerid][pPunishment8], "None", 0, strlen("None"), 255);
						PlayerInfo[giveplayerid][pNextPunishment] = 1;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s “—«Â≥˝ %s (%d) π‹¿Ìº«¬º.", sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s “—«Â≥˝ %sπ‹¿Ìº«¬º",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}
    
    if(strcmp(cmd, "/trace", true) == 0) // Edited by LordMan, orginally from CW-RP
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /trace [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %sPunishments",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ºÏ≤È¡À %s (%d)¥¶∑£º«¬º.", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "%s (%d) ”–“‘œ¬µƒ¥¶∑£º«¬º:", giveplayer,giveplayerid);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
		if(!strcmp(PlayerInfo[giveplayerid][pPunishment1], "None", true))
		{
		    SendClientMessage(playerid, COLOR_YELLOW,"1 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"1 - %s", PlayerInfo[giveplayerid][pPunishment1]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
		if(!strcmp(PlayerInfo[giveplayerid][pPunishment2], "None", true))
		{
		    SendClientMessage(playerid, COLOR_YELLOW,"2 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"2 - %s", PlayerInfo[giveplayerid][pPunishment2]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
  		if(!strcmp(PlayerInfo[giveplayerid][pPunishment3], "None", true)) 
  		{
		    SendClientMessage(playerid, COLOR_YELLOW,"3 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"3 - %s", PlayerInfo[giveplayerid][pPunishment3]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
  		if(!strcmp(PlayerInfo[giveplayerid][pPunishment4], "None", true))
  		{
		    SendClientMessage(playerid, COLOR_YELLOW,"4 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"4 - %s", PlayerInfo[giveplayerid][pPunishment4]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
  		if(!strcmp(PlayerInfo[giveplayerid][pPunishment5], "None", true))
  		{
		    SendClientMessage(playerid, COLOR_YELLOW,"5 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"5 - %s", PlayerInfo[giveplayerid][pPunishment5]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
  		if(!strcmp(PlayerInfo[giveplayerid][pPunishment6], "None", true))
  		{
		    SendClientMessage(playerid, COLOR_YELLOW,"6 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"6 - %s", PlayerInfo[giveplayerid][pPunishment6]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
  		if(!strcmp(PlayerInfo[giveplayerid][pPunishment7], "None", true))
  		{
		    SendClientMessage(playerid, COLOR_YELLOW,"7 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"7 - %s", PlayerInfo[giveplayerid][pPunishment7]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
  		if(!strcmp(PlayerInfo[giveplayerid][pPunishment8], "None", true))
  		{
		    SendClientMessage(playerid, COLOR_YELLOW,"8 - √ª”–");
		}
	  	else
  		{
		  	format(string, sizeof(string),"8 - %s", PlayerInfo[giveplayerid][pPunishment8]);
		  	SendClientMessage(playerid, COLOR_YELLOW, string);
  		}
		return 1;
	}
	
	if(strcmp(cmd, "/registred", true) == 0) // Edited by LordMan, orginally from CW-RP
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /registred [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %s◊¢≤·»’∆⁄",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ºÏ≤È¡À %s (%d)◊¢≤·»’∆⁄.", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "%s (%d) ◊¢≤·»’∆⁄ « %s", giveplayer,giveplayerid, PlayerInfo[giveplayerid][pRegistredDate]);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
		return 1;
	}

   	if(strcmp(cmd, "/checkweapons", true) == 0) // Edited by LordMan, orginally from CW-RP
	{
		if (PlayerInfo[playerid][pAdmin] < 1)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /checkweapons [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
		new sweapon, sammo, gunname[100];
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %s–Ø¥¯µƒŒ‰∆˜",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ºÏ≤È¡À %s (%d)–Ø¥¯µƒŒ‰∆˜.", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "%s (%d) ”–œ¬¡–Œ‰∆˜:", giveplayer,giveplayerid);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
		for (new i=0; i<12; i++)
	    {
		    GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
		    GetWeaponName(sweapon, gunname, sizeof(gunname));
		    if(sweapon != 0)
		    {
		        format(string, sizeof(string), "≤€ %d:    %s    [ID: %d    µØ“©: %d]", i, gunname,sweapon, sammo);
		    	SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
			}
	    }
		return 1;
	}

	if(strcmp(cmd, "/resetammutimer", true) == 0) // Bye CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] < 1337)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /resetammutimer [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		PlayerInfo[giveplayerid][pAmmuTrainTime] = 0;
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ÷ÿ÷√¡À %s (%d)Œ‰∆˜—µ¡∑∂® ±∆˜...", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "ƒ„÷ÿ÷√¡À %s (%d)Œ‰∆˜—µ¡∑∂® ±∆˜.", giveplayer,giveplayerid);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
	    SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "** π‹¿Ì‘±÷ÿ÷√¡Àƒ„µƒŒ‰∆˜—µ¡∑∂® ±∆˜,ƒ„œ÷‘⁄ø…“‘ºÃ–¯—µ¡∑Œ‰∆˜¡À!");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid, X,Y,Z);
		PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ÷ÿ÷√¡À %sŒ‰∆˜—µ¡∑∂® ±∆˜",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
		return 1;
	}
	
	if(strcmp(cmd, "/resetofficertimer", true) == 0) // Bye CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] < 1337)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /resetofficertimer [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		PlayerInfo[giveplayerid][pOfficerTime] = 0;
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ÷ÿ÷√¡À %s (%d)æ¸πŸøº ‘ ±º‰..", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "ƒ„÷ÿ÷√¡À %s (%d)æ¸πŸøº ‘µ»¥˝ ±º‰r.", giveplayer,giveplayerid);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
	    SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "** π‹¿Ì‘±÷ÿ÷√¡Àƒ„µƒæ¸πŸøº ‘µ»¥˝ ±º‰, ƒ„œ÷‘⁄ø…“‘»•Ω” ‹øº ‘¡À!");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid, X,Y,Z);
		PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ÷ÿ÷√¡À %sª§’’øº ‘ ±º‰",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
		return 1;
	}
	
	if(strcmp(cmd, "/resetpassporttimer", true) == 0) // Bye CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] < 1337)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /resetpassporttimer [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		PlayerInfo[giveplayerid][pPassportTime] = 0;
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ÷ÿ÷√¡À %s (%d)ª§’’øº ‘ ±º‰..", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "ƒ„÷ÿ÷√¡À %s (%d)'s ª§’’øº ‘µ»¥˝ ±º‰.", giveplayer,giveplayerid);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
	    SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "** π‹¿Ì‘±÷ÿ÷√¡Àƒ„µƒª§’’øº ‘µ»¥˝ ±º‰, ƒ„œ÷‘⁄ø…“‘»•Ω” ‹ª§’’øº ‘¡À!");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid, X,Y,Z);
		PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ÷ÿ÷√¡À %sª§’’øº ‘ ±º‰",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
		return 1;
	}

	if(strcmp(cmd, "/resetrobtimer", true) == 0) // Bye CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] < 1337)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "”√∑®: /resetrobtimer [ÕÊº“ID/ÕÊº“√˚◊÷]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆÕÊº“≤ª‘⁄œﬂ");
		    return 1;
	    }
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		PlayerInfo[giveplayerid][pRobTime] = 0;
		format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘±%s ÷ÿ÷√¡À %s (%d)«¿ΩŸ ±º‰..", sendername,giveplayer, giveplayerid);
		ABroadCast(COLOR_LIGHTRED, string, 5);
	    format(string, sizeof(string), "ƒ„÷ÿ÷√¡À %s (%d)«¿ΩŸ ±º‰.", giveplayer,giveplayerid);
	    SendClientMessage(playerid, COLOR_LIGHTRED, string);
	    SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "** π‹¿Ì‘±÷ÿ÷√¡Àƒ„µƒ«¿ΩŸµ»¥˝ ±º‰,ƒ„œ÷‘⁄ø…“‘»•«¿ΩŸ“ª∏ˆµÿ∑Ω¡À!");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid, X,Y,Z);
		PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ÷ÿ÷√¡À %s«¿ΩŸ ±º‰",d,m,y,h,mi,s,sendername,giveplayer);
		AdminLog(string);
		return 1;
	}

	if(strcmp(cmd, "/v", true) == 0 || strcmp(cmd, "/vehicle", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º ! ");
	            return 1;
	        }
	        new x_nr[64];
	        x_nr = strtok(cmdtext, idx);
	        if(!strlen(x_nr))
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: (/v)ehicle [ø…”√√˚≥∆]");
	            SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: park*…Ë÷√≥µ¡æ≥ˆ…˙µ„*, lock*≥µÀ¯*, sell*≥ˆ €*, sellto*≥ˆ €∏¯∆‰À˚»À*, color*≈Á–¬∆·*,paintjob,setcode*…Ë÷√≥µ¡æ√‹¬Î*");
	            return 1;
	        }
	        if(strcmp(x_nr,"sell",true) == 0)
	        {
	            if(IsAtDealership(playerid))
	            {
	                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
	                {
	                    new ownvehkey;
	                    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
                        else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { ownvehkey = PlayerInfo[playerid][pPcarkey2]; }
	                    else { return 1; }
	                    if(strcmp(sendername, CarInfo[ownvehkey][cOwner], true) == 0)
	                    {
	                        new carsellprice = GetVehiclePrice(ownvehkey) / 4 * 3;
	                        SafeGivePlayerMoney(playerid,carsellprice);

							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

							format(string, sizeof(string), "~w~You have sold your car for: ~n~~g~$%d", carsellprice);
	                        GameTextForPlayer(playerid, string, 10000, 3);
	                        
	                        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey])
								PlayerInfo[playerid][pPcarkey] = 9999;
							else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
								 PlayerInfo[playerid][pPcarkey2] = 9999;

							SafeRemovePlayerFromVehicle(playerid);
							CarInfo[ownvehkey][cOwned] = 0;
							DestroyVehicle(ownvehkey);

	                        TogglePlayerControllable(playerid, 1);
	                        
	                        format(string, sizeof(string),"LARP/Vehicles/%d.ini",ownvehkey);
         					fremove(string);
	                        
	                        OnPlayerUpdateEx(playerid);
	                        return 1;
	                    }
	                }
	                else
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "  ƒ„±ÿ–Î◊¯‘⁄ƒ„◊‘º∫µƒ≥µ…œ≤≈ø…“‘∞—À¸¬ÙµÙ! ");
	                    return 1;
	                }
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª‘⁄∆˚≥µæ≠œ˙…ÃµÍ");
	                return 1;
	            }
	        }
	        else if(strcmp(x_nr,"sellto",true) == 0)
	        {
				if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey] || GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2])
				{
				    new ownvehkey;
	                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
	                else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { ownvehkey = PlayerInfo[playerid][pPcarkey2]; }
	                else { return 1; }
				    if(strcmp(sendername, CarInfo[ownvehkey][cOwner], true) == 0)
				    {
						tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /v sellto [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
						    return 1;
						}
						giveplayerid = ReturnUser(tmp);
						if(IsPlayerConnected(giveplayerid))
						{
							if(giveplayerid != INVALID_PLAYER_ID)
							{
							    if(ProxDetectorS(8.0, playerid, giveplayerid))
       							{
							    	if(PlayerInfo[giveplayerid][pPcarkey] == 9999)
							    	{
							            tmp = strtok(cmdtext, idx);
							            if(!strlen(tmp))
							            {
							                SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /v sellto [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
							                return 1;
							            }
							            new price;
							            price = strval(tmp);
							            if(price < 1 || price > 1500000)
							            {
							                SendClientMessage(playerid, COLOR_GREY, "  º€∏Ò±ÿ–Î≤ªµÕ”⁄1,∂¯≤ª∏ﬂ”⁄1500000. ");
							                return 1;
							            }
							            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							       		format(string, sizeof(string), "* ƒ„Ω´≥µ≥ˆ €∏¯ %s ≥ˆ €º€∏Ò: $%d .", giveplayer, price);
					        			SendClientMessage(playerid, COLOR_WHITE, string);
					        			format(string, sizeof(string), "* ≥µ÷˜ %s “‘ $%d µƒº€∏Ò≥ˆ €À˚µƒ≥µ (º¸»Î /accept ownablecar) π∫¬Ú.", playername, price);
					        			SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        			OwnableCarOffer[giveplayerid] = playerid;
					        			OwnableCarID[giveplayerid] = ownvehkey;
					        			OwnableCarPrice[giveplayerid] = price;
					        			return 1;
							        }
							    }
							    else if(PlayerInfo[giveplayerid][pPcarkey2] == 9999)
							    {
							        tmp = strtok(cmdtext, idx);
							        if(!strlen(tmp))
							        {
							            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /v sellto [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
							            return 1;
							        }
							        new price;
							        price = strval(tmp);
			        				if(price < 1 || price > 1500000)
				           			{
	       	 							SendClientMessage(playerid, COLOR_GREY, "  ≥ˆ €º€∏Ò≤ªµÕ”⁄1≤ª∏ﬂ”⁄1500000. ");
	                					return 1;
				         			}
							        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							       	format(string, sizeof(string), "* ƒ„Ω´≥µ≥ˆ €∏¯ %s ≥ˆ €º€∏Ò: $%d .", giveplayer, price);
					        		SendClientMessage(playerid, COLOR_WHITE, string);
					        		format(string, sizeof(string), "* ≥µ÷˜ %s “‘ $%d µƒº€∏Ò≥ˆ €À˚µƒ≥µ (º¸»Î /accept ownablecar) π∫¬Ú.", playername, price);
					        		SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        		OwnableCarOffer[giveplayerid] = playerid;
					        		OwnableCarID[giveplayerid] = ownvehkey;
					        		OwnableCarPrice[giveplayerid] = price;
					        		return 1;
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ ! ");
							        return 1;
							    }
							}
						}
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "  ’‚≤ª «ƒ„µƒ≥µ");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "  ƒ„±ÿ–Î◊¯‘⁄ƒ„◊‘º∫µƒ≥µ…œ≤≈ø…“‘∞—À¸¬ÙµÙ");
				    return 1;
				}
	        }
	        else if(strcmp(x_nr,"park",true) == 0)
	        {
	            new Float:x,Float:y,Float:z;
				new Float:a;
				new carid;
				new getcarid;
				if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { carid = PlayerInfo[playerid][pPcarkey]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { carid = PlayerInfo[playerid][pPcarkey2]; }
				else { return 1; }
				getcarid = GetPlayerVehicleID(playerid);
				GetPlayerName(playerid, playername, sizeof(playername));
				GetVehiclePos(carid, x, y, z);
				//GetPlayerFacingAngle(playerid, a);
				GetVehicleZAngle(carid, a);
				if(IsPlayerInVehicle(playerid,carid) && CarInfo[carid][cOwned] == 1)
				{
			   		if(PlayerInfo[playerid][pPcarkey] == 9999  && PlayerInfo[playerid][pPcarkey2] == 9999)
					{
						SendClientMessage(playerid, COLOR_GREY, "You don't own a car.");
						return 1;
					}
					if(getcarid == carid)
					{
						CarInfo[carid][cLocationx] = x;
						CarInfo[carid][cLocationy] = y;
						CarInfo[carid][cLocationz] = z;
						CarInfo[carid][cAngle] = a;
						new area[35];
						GetPlayer2DZone(playerid, area, sizeof(area));
						format(string, sizeof(string), "~w~You have parked your vehicle in this location ~n~~n~~b~(%s).",area);
						GameTextForPlayer(playerid, "You have parked your vehicle in this position. It will respawn here.", 10000, 3);
						format(string, sizeof(string), "ƒ„Ω´ƒ„µƒ≥µÕ£‘⁄¡À %f.01, %f.01, %f.01 (%s), º«◊°’‚∏ˆŒª÷√,≥µ¡æœ¬¥Œ÷ÿ…˙Ω´‘⁄’‚¿Ô!",x,y,z,area);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						OnPropUpdate(4,carid);
						OnPlayerUpdateEx(playerid);
						DestroyVehicle(carid);
						ownedcar[carid] = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz]+1.0,CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],60000);
                        if(CarInfo[carid][cPaintjob] != 999)
						{
							ChangeVehiclePaintjob(carid, CarInfo[carid][cPaintjob]);
						}
						SetVehicleVirtualWorld(carid, CarInfo[carid][cVirWorld]);
						SetVehicleModifications(carid);
						TogglePlayerControllable(playerid, 1);
						PutPlayerInVehicle(playerid, carid, 0);
						return 1;
   					}
				}
	        }
	        else if(strcmp(x_nr,"setcode",true) == 0)
	        {
	            new carid;
				if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { carid = PlayerInfo[playerid][pPcarkey]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { carid = PlayerInfo[playerid][pPcarkey2]; }
				else { return 1; }
				if(IsPlayerInVehicle(playerid,carid) && CarInfo[carid][cOwned] == 1)
				{
			   		tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /v setcode [÷µ]");
						SendClientMessage(playerid, COLOR_WHITE, "1~2Œª, √ø∏ˆ ˝◊÷ª·ª®ƒ„ 3000$");
						SendClientMessage(playerid, COLOR_WHITE, "3~4Œª, √ø∏ˆ ˝◊÷ª·ª®ƒ„ 6000$");
						SendClientMessage(playerid, COLOR_WHITE, "5~7Œª, √ø∏ˆ ˝◊÷ª·ª®ƒ„ 8000$");
						SendClientMessage(playerid, COLOR_WHITE, "8Œª,√ø∏ˆ ˝◊÷ª·ª®ƒ„ 80000$");
						return 1;
					}
					new price;
					price = strval(tmp);
					
					Digits = GetDigits(strval(tmp));
					
					if(Digits <= 0 && Digits >= 11) return SendClientMessage(playerid,COLOR_GREY,"* ∞≤»´¬Î±ÿ–Î «1~12∏ˆ ˝◊÷÷Æº‰");
					
					new FinalPrice;
					if(Digits >= 1 && Digits <= 2)
					{
					    FinalPrice = 3000*Digits;
					}
					else if(Digits >= 3 && Digits <= 4)
					{
					    FinalPrice = 6000*Digits;
					}
					else if(Digits >= 5 && Digits <= 7)
					{
					    FinalPrice = 8000*Digits;
					}
					else if(Digits == 8)
					{
					    FinalPrice = 10000*Digits;
					}
					if(GetPlayerMoney(playerid) < FinalPrice)
					{
						format(string, sizeof(string),"ƒ„÷ß∏∂≤ª∆ ($%d)!",FinalPrice);
					    SendClientMessage(playerid, COLOR_GREY,string);
					    return 1;
					}
					
					SafeGivePlayerMoney(playerid, -FinalPrice);
					CarInfo[carid][cCode] = price;
					
					OnPropUpdate(4,carid);
					
					format(string, sizeof(string),"* –¬µƒ≥µ∞≤»´¬Î « %d, π≤ª®∑—ƒ„ $%d!!", price, FinalPrice);
					SendClientMessage(playerid, COLOR_GREY, string);
				}
	        }
	        else if(strcmp(x_nr,"lock",true) == 0)
	        {
                new keycar = PlayerInfo[playerid][pPcarkey];
                if(keycar != 9999)
                {
                    new Float:X,Float:Y,Float:Z;
                    GetVehiclePos(keycar,X,Y,Z);
					if(IsPlayerInRangeOfPoint(playerid, 25,X,Y,Z))
					{
	                    new locked[128];
	                    locked = strtok(cmdtext, idx);
	                    if(CarInfo[keycar][cLock] == 1)
	                    {
							format(string, sizeof(string), "~w~Vehicle~n~~g~Unlocked");
							GameTextForPlayer(playerid, string, 4000, 3);
							CarInfo[keycar][cLock] = 0;
							OnPropUpdate(4,keycar);
							return 1;
						}
						else if(CarInfo[keycar][cLock] == 0)
						{
							format(string, sizeof(string), "~w~Vehicle~n~~r~Locked");
							GameTextForPlayer(playerid, string, 4000, 3);
							CarInfo[keycar][cLock] = 1;
							OnPropUpdate(4,keycar);
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„±ÿ–Î‘⁄ƒ„µƒ≥µ∏ΩΩ¸≤≈ø…“‘∏¯À˚…œÀ¯!");
					    return 1;
					}
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "* ƒ„ªπ√ª”– 1∫≈≥µ");
                    return 1;
                }
	        }
	        else if(strcmp(x_nr,"lock2",true) == 0)
	        {
                new keycar = PlayerInfo[playerid][pPcarkey2];
                if(keycar != 9999)
                {
                    new Float:X,Float:Y,Float:Z;
                    GetVehiclePos(keycar,X,Y,Z);
					if(IsPlayerInRangeOfPoint(playerid, 25,X,Y,Z))
					{
	                    new locked[128];
	                    locked = strtok(cmdtext, idx);
	                    if(CarInfo[keycar][cLock] == 1)
	                    {
							format(string, sizeof(string), "~w~Vehicle~n~~g~Unlocked");
							GameTextForPlayer(playerid, string, 4000, 3);
							CarInfo[keycar][cLock] = 0;
							OnPropUpdate(4,keycar);
							return 1;
						}
						else if(CarInfo[keycar][cLock] == 0)
						{
							format(string, sizeof(string), "~w~Vehicle~n~~r~Locked");
							GameTextForPlayer(playerid, string, 4000, 3);
							CarInfo[keycar][cLock] = 1;
							OnPropUpdate(4,keycar);
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ƒ„±ÿ–Î‘⁄ƒ„µƒ≥µ∏ΩΩ¸≤≈ø…“‘∏¯À˚…œÀ¯!");
					    return 1;
					}
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "  ƒ„ªπ√ª”– 2∫≈≥µ");
                    return 1;
                }
	        }
	        else if(strcmp(x_nr,"color",true) == 0)
	        {
	            if(PlayerInfo[playerid][pPcarkey] == 9999 && PlayerInfo[playerid][pPcarkey2] == 9999)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"* ƒ„ªπ√ª”–“ª¡æ Ù”⁄◊‘º∫µƒ≥µ.");
	            	return 1;
	        	}
				if(!IsAtDealership(playerid) && !IsAtPaySpray(playerid))
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„±ÿ–Î‘⁄≥µ¡ææ≠œ˙µ„ªÚ–ﬁ≥µµ„≤≈ø…“‘∏ƒ±‰≥µµƒ—’…´!");
				    return 1;
				}
	        	if(GetPlayerMoney(playerid) < 1000)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–◊„πªµƒ«Æ∏¯≥µ≈Á–¬∆·.");
	            	return 1;
	        	}
	        	tmp = strtok(cmdtext, idx);
	        	if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /v color [—’…´1±‡∫≈] [—’…´2±‡∫≈]");
					return 1;
				}
				new color1;
				color1 = strval(tmp);
				if(color1 < 0 && color1 > 126)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   √ª”–’‚∏ˆ—’…´±‡∫≈!");
			    	return 1;
				}
				tmp = strtok(cmdtext, idx);
	        	if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /v color [—’…´1±‡∫≈] [—’…´2±‡∫≈]");
					return 1;
				}
				new color2;
				color2 = strval(tmp);
				if(color2 < 0 && color2 > 126)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   √ª”–’‚∏ˆ—’…´±‡∫≈!");
			    	return 1;
				}

				new vehid;
				if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { vehid = PlayerInfo[playerid][pPcarkey]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { vehid = PlayerInfo[playerid][pPcarkey2]; }
				else { return 1; }
	        	if(IsPlayerInVehicle(playerid, vehid))
	        	{
         			CarInfo[vehid][cColorOne] = color1;
	                CarInfo[vehid][cColorTwo] = color2;
	                new Float:x,Float:y,Float:z;
	                GetPlayerPos(playerid, x,y,z);
	                ChangeVehicleColor(vehid, color1, color2);
	                SafeGivePlayerMoney(playerid, -1000);
	                GameTextForPlayer(playerid, "~w~Bill for a Paint Respray~n~~r~-$1000", 5000, 1);
	                ChangeVehicleColor(vehid, color1, color2);
	                OnPropUpdate(4,vehid);
					OnPlayerUpdateEx(playerid);
					return 1;
    			}
	        	else
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"   ƒ„‘⁄≤ª‘⁄ƒ„µƒ≥µ¿Ô.");
	            	return 1;
	        	}
	        }
	        else if(strcmp(x_nr,"buy",true) == 0)
	        {
	            new car = 1;
	            new model = GetVehicleModel(idcar);
	            if(IsASalesVehicle(idcar))
	            {
	                if(PlayerInfo[playerid][pLevel] < 2)
			    	{
                    	SendClientMessage(playerid, COLOR_GREY, "ƒ„–Ë“™µ»º∂Œ™2≤≈ø…“‘¬Ú≥µ!");
                    	return 1;
			    	}
			    	if(PlayerInfo[playerid][pPcarkey] == 9999 || PlayerInfo[playerid][pPcarkey2] == 9999) { }
			    	else return SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—Ω¸”µ”–2¡æ≥µ¡À!");
					if(GetPlayerMoney(playerid) >= GetVehiclePrice(idcar))
					{
					    if(PlayerInfo[playerid][pCarLic] == 1)
					    {
							for(new h = 1; h < sizeof(CarInfo); h++)
							{
								if(CarInfo[h][cOwned] == 0)
								{
									car = h;
									h = 9999;
								}
							}
							format(string, sizeof(string),"LARP/Vehicles/%d.ini",car)
							dini_Create(string);
							
							if(PlayerInfo[playerid][pPcarkey] != 9999) { PlayerInfo[playerid][pPcarkey2] = car; }
							else { PlayerInfo[playerid][pPcarkey] = car; }
							CarInfo[car][cOwned] = 1;
							strmid(CarInfo[car][cOwner], sendername, 0, strlen(sendername), 999);
							SafeGivePlayerMoney(playerid,-GetVehiclePrice(idcar));
							if(IsModelAPlane(idcar) || IsModelAHeli(idcar))
							{
								CarInfo[car][cLocationx] = 1432.6451;
								CarInfo[car][cLocationy] = 1378.7216;
								CarInfo[car][cLocationz] = 11.5507;
								CarInfo[car][cAngle] = 359.2072;
								SendClientMessage(playerid, COLOR_YELLOW2, "{FFFFF0}ƒ„µƒ∑…ª˙“—±ªÀÕÕ˘{F0F0FF}LVª˙≥°{FFFFF0},ƒ„ø…“‘»•ƒƒ¿Ô’“µΩƒ„µƒ∑…ª˙!(/findcar’“≥µ)");
								//SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„µƒ–¬ΩªÕ®π§æﬂ,√ª”–…œÀ¯,ƒ„ø…“‘≥ˆ«Æ’“»À∞Ôƒ„ø™µΩ–¬µƒµÿ∑Ω!");
								SendClientMessage(playerid, COLOR_NICERED, "æØ∏Ê:{FFFFF0} ƒ„µƒ≥µ¡æ≥§ ±º‰¡Ù‘⁄≥µ¡æΩª∏∂µ„ø…ƒ‹ª·±ªπ‹¿Ì‘±¥¶¿Ì◊ﬂ,«Îƒ„Ω¸∆⁄ƒ⁄¬Ì…œø™◊ﬂ!");
								GameTextForPlayer(playerid, "~p~Congratulations~n~~w~Don't forget to pickup your car at the ~b~Las Venturas Airport!", 5000, 3);
							}
							else if(IsModelABoat(idcar))
							{
							    CarInfo[car][cLocationx] = -1568.9614;
								CarInfo[car][cLocationy] = 169.0118;
								CarInfo[car][cLocationz] = -0.6016;
								CarInfo[car][cAngle] = 208.7506;
								SendClientMessage(playerid, COLOR_YELLOW2, "{FFFFF0}ƒ„µƒ–¬¥¨“—±ªÀÕÕ˘{F0F0FF}SF¬ÎÕ∑{FFFFF0},ƒ„ø…“‘»•ƒƒ¿Ô’“µΩƒ„µƒ–¬¥¨!(/findcar’“≥µ)");
								//SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„µƒ–¬ΩªÕ®π§æﬂ,√ª”–…œÀ¯,ƒ„ø…“‘≥ˆ«Æ’“»À∞Ôƒ„ø™µΩ–¬µƒµÿ∑Ω!");
								SendClientMessage(playerid, COLOR_NICERED, "æØ∏Ê:{FFFFF0} ƒ„µƒ≥µ¡æ≥§ ±º‰¡Ù‘⁄≥µ¡æΩª∏∂µ„ø…ƒ‹ª·±ªπ‹¿Ì‘±¥¶¿Ì◊ﬂ,«Îƒ„Ω¸∆⁄ƒ⁄¬Ì…œø™◊ﬂ!");
								GameTextForPlayer(playerid, "~p~Congratulations~n~~w~Don't forget to pickup your car at the ~b~San Fierro Docks!", 5000, 3);
							}
							else
							{
                                CarInfo[car][cLocationx] = -1589.2644;
								CarInfo[car][cLocationy] = 106.9119;
								CarInfo[car][cLocationz] = 3.5495;
								CarInfo[car][cAngle] = 317.1649;
								SendClientMessage(playerid, COLOR_YELLOW2, "{FFFFF0}ƒ„µƒ–¬≥µ“—±ªÀÕÕ˘{F0F0FF}SF¬ÎÕ∑{FFFFF0},ƒ„ø…“‘»•ƒƒ¿Ô’“µΩƒ„µƒ–¬≥µ!(/findcar’“≥µ)");
								//SendClientMessage(playerid, COLOR_YELLOW2, "ƒ„µƒ–¬ΩªÕ®π§æﬂ,√ª”–…œÀ¯,ƒ„ø…“‘≥ˆ«Æ’“»À∞Ôƒ„ø™µΩ–¬µƒµÿ∑Ω!");
								SendClientMessage(playerid, COLOR_NICERED, "æØ∏Ê:{FFFFF0} ƒ„µƒ≥µ¡æ≥§ ±º‰¡Ù‘⁄≥µ¡æΩª∏∂µ„ø…ƒ‹ª·±ªπ‹¿Ì‘±¥¶¿Ì◊ﬂ,«Îƒ„Ω¸∆⁄ƒ⁄¬Ì…œø™◊ﬂ!");
								GameTextForPlayer(playerid, "~p~Congratulations~n~~w~Don't forget to pickup your car at the ~b~San Fierro Docks!", 5000, 3);
							}
							CarInfo[car][cModel] = model;
							CarInfo[car][cVirWorld] = 0;
							CarInfo[car][cPaintjob] = 999;
							
							CarInfo[car][cColorOne] = 1;
							CarInfo[car][cColorTwo] = 1;
							
							CarInfo[car][cComponent0] = 0;
							CarInfo[car][cComponent1] = 0;
							CarInfo[car][cComponent2] = 0;
							CarInfo[car][cComponent3] = 0;
							CarInfo[car][cComponent4] = 0;
							CarInfo[car][cComponent5] = 0;
							CarInfo[car][cComponent6] = 0;
							CarInfo[car][cComponent7] = 0;
							CarInfo[car][cComponent8] = 0;
							CarInfo[car][cComponent9] = 0;
							CarInfo[car][cComponent10] = 0;
							CarInfo[car][cComponent11] = 0;
							CarInfo[car][cComponent12] = 0;
							CarInfo[car][cComponent13] = 0;
							
							DestroyVehicle(car);
							ownedcar[car] = CreateVehicle(CarInfo[car][cModel],CarInfo[car][cLocationx],CarInfo[car][cLocationy],CarInfo[car][cLocationz],90.0,1,1,30000);
							PlayerPlayMusic(playerid);
							SendClientMessage(playerid, COLOR_GRAD2, "πßœ≤ƒ„!");
							SendClientMessage(playerid, COLOR_GRAD2, " π”√/vehiclehelp ≤Èø¥∆˚≥µ π”√ ÷≤·!");
							gEngine[playerid] = 0;
							engineOn[GetPlayerVehicleID(playerid)] = false;
							SendClientMessage(playerid, COLOR_GREY, "≤ª“™Õ¸º«…Ë÷√–¬µƒ≥µ¡æ√‹¬Î!");
							new pass[24];
							format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
							CarInfo[car][cCode] = strval(pass);
							OnPropUpdate(4,car);
							OnPlayerUpdateEx(playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "* ≥ˆ”⁄∞≤»´‘≠“Ú,ƒ„–Ë“™“ª∏ˆº›’’≤≈ø…“‘π∫¬Ú∆˚≥µ!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "  ƒ„√ª”–◊„πªµƒœ÷Ω ! ");
					    return 1;
					}
	            }
	        }
	        else if(strcmp(x_nr,"paintjob",true) == 0)
	        {
	            if(PlayerInfo[playerid][pPcarkey] == 9999 || PlayerInfo[playerid][pPcarkey2] == 9999)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"   ƒ„ªπ√ª”–“ª¡æ Ù”⁄◊‘º∫µƒ≥µ.");
	            	return 1;
	        	}
	        	if(!IsAtDealership(playerid) && !IsAtPaySpray(playerid))
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„±ÿ–Î‘⁄≥µ¡ææ≠œ˙µ„ªÚ–ﬁ≥µµ„≤≈ø…“‘∏ƒ±‰≥µµƒ—’…´!");
				    return 1;
				}
	        	if(GetPlayerMoney(playerid) < 5000)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"   ƒ„√ª”–◊„πªµƒ«Æ∏¯≥µ≈Á–¬∆·.");
	            	return 1;
	        	}
	        	tmp = strtok(cmdtext, idx);
	        	if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /v paintjob [paintjob(0-3)]");
					return 1;
				}
				new color1;
				color1 = strval(tmp);
				if(color1 < 0 && color1 > 3)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   √ª”–’‚∏ˆ—’…´±‡∫≈!");
			    	return 1;
				}
				new vehid;
				if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { vehid = PlayerInfo[playerid][pPcarkey]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { vehid = PlayerInfo[playerid][pPcarkey2]; }
				else { return 1; }
	        	if(IsPlayerInVehicle(playerid, vehid))
	        	{
         			CarInfo[vehid][cPaintjob] = color1;
	                SafeGivePlayerMoney(playerid, -5000);
	                GameTextForPlayer(playerid, "~w~Bill for a Paint Respray~n~~r~-$5000", 5000, 1);
	                ChangeVehiclePaintjob(vehid, color1);
	                OnPropUpdate(4,vehid);
					OnPlayerUpdateEx(playerid);
					return 1;
    			}
	        	else
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"   ƒ„‘⁄≤ª‘⁄ƒ„µƒ≥µ¿Ô.");
	            	return 1;
	        	}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: (/v)ehicle [ø…”√√˚≥∆]");
	            SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: park*…Ë÷√≥µ¡æ≥ˆ…˙µ„*, lock*≥µÀ¯*, sell*≥ˆ €*, sellto*≥ˆ €∏¯∆‰À˚»À*, color*≈Á–¬∆·*,paintjob,setcode*…Ë÷√≥µ¡æ√‹¬Î*");
	            return 1;
	        }
	        
	    }
	    return 1;
	}

	if(strcmp(cmd, "/trunk", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /trunk [ø…”√√˚≥∆]");
			    SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: info*∫Û±∏œ‰–≈œ¢*, putgun*¥Ê∑≈Œ‰∆˜*, takegun*»•≥˝Œ‰∆˜*, putarmour*¥Ê∑≈∑¿µØ“¬*, takearmour*»°≥ˆ∑¿µØ“¬*");
			    if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "ƒ„◊˜Œ™“ª∏ˆæØ≤Ïƒ„ø…“‘À—∫Û±∏œ‰/trunk");
			    }
			    return 1;
			}
			if(strcmp(x_nr,"info",true) == 0)
			{
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ƒ„∏ΩΩ¸√ª”–∆˚≥µ∫Û±∏œ‰");
			        }

			        case 1:
			        {
			            if(IsAnOwnableCar(result))
               			{
               			    if(PlayerInfo[playerid][pPcarkey] == result) { }
               			    else if(PlayerInfo[playerid][pPcarkey2] == result) { }
               			    else
               			    {
			                	SendClientMessage(playerid, COLOR_GREY, "  ∫Û±∏œ‰…œÀ¯ !");
			            		return 1;
							}
			            }
			            if(IsPlayerInAnyVehicle(playerid))
      					{
			                SendClientMessage(playerid, COLOR_GREY, "  ƒ„‘⁄≥µ…œµƒ ±∫Ú,ƒ„≤ªƒ‹¥Úø™≥µµƒ∫Û±∏œ‰");
			            	return 1;
               			}
               			if(IsAPlane(result) || IsABike(result) || IsAOBike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >=78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
               			{
               			    SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µ√ª”–∫Û±∏œ‰ !");
               			    return 1;
               			}

						SendClientMessage(playerid, COLOR_LIGHT_BLUE, "|_______ ≥µ¡æ∫Û±∏œ‰ _______|");
						for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
						{
						    new gunname[24];
						    if(vehTrunk[result][slot] != 0)
						    {
						        GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
						        format(string, sizeof(string), "| ≤Â≤€ %i: %s (µØ“©: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						    }
						    else
						    {
						        format(string, sizeof(string), "| ≤Â≤€ %i: ø’ (µØ“©: N/A)", slot);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						    }
						}
						format(string, sizeof(string), "| ∑¿µØ±≥–ƒ: %f%", vehTrunkArmour[result]);
						SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* %s ¥Úø™¡À∫Û±∏œ‰≤¢«“≤Èø¥◊≈ ≤√¥.", sendername);
                  		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						return 1;
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆ∑∂Œßƒ⁄”–∂‡¡æ≥µµƒ∫Û±∏œ‰");
			            return 1;
			        }
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"putgun",true) == 0)
			{
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ƒ„∏ΩΩ¸√ª”–∆˚≥µ∫Û±∏œ‰");
			        }

			        case 1:
			        {
			            if(vehTrunkCounter[result] != (MAX_TRUNK_SLOTS-1))
			            {
			                if(IsAnOwnableCar(result))
               				{
               			    	if(PlayerInfo[playerid][pPcarkey] == result) { }
               			    	else if(PlayerInfo[playerid][pPcarkey2] == result) { }
               			    	else
               			    	{
			                		SendClientMessage(playerid, COLOR_GREY, "  ∫Û±∏œ‰À¯◊°¡À !");
			            			return 1;
								}
			            	}
			            	if(ReduceTime[playerid] == 1)
			            	{
			            	    SendClientMessage(playerid, COLOR_GREY, "   ƒ„–Ë“™µ»¥˝ 3√Î ≤≈ø…“‘ π”√¥À√¸¡Ó !");
			            	    return 1;
			            	}
			                if(IsPlayerInAnyVehicle(playerid))
			                {
			                    SendClientMessage(playerid, COLOR_GREY, "  ƒ„‘⁄≥µ…œµƒ ±∫Ú,ƒ„≤ªƒ‹¥Úø™≥µµƒ∫Û±∏œ‰");
			                    return 1;
			                }
			                if(IsAPlane(result) || IsABike(result) || IsAOBike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >=78 && result <= 83|| GetVehicleModel(GetPlayerVehicleID(result)) == 523)
               				{
               			    	SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µ√ª”–∫Û±∏œ‰ !");
               			    	return 1;
               				}
                            new buffer[128];
                            new gunname[24];
                            new gunID = GetPlayerWeapon(playerid);
                            new gunAmmo = GetPlayerAmmo(playerid);

                            if(gunID != 0 && gunAmmo != 0)
                            {
                                ReduceTime[playerid] = 1;
                				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
                                GetWeaponName(gunID, gunname, sizeof(gunname));
                                vehTrunkCounter[result]++;
                                vehTrunk[result][vehTrunkCounter[result]] = gunID;
                                vehTrunkAmmo[result][vehTrunkCounter[result]] = gunAmmo;
                                format(buffer, sizeof(buffer), "ƒ„∑≈»Î¡À“ª∞—%s (µØ“©: %i) µΩ∫Û±∏œ‰.", gunname, gunAmmo);
                                SendClientMessage(playerid, COLOR_WHITE, buffer);
                                RemovePlayerWeapon(playerid, gunID);
                                format(string, sizeof(string), "* %s ¥Úø™¡À∫Û±∏œ‰≤¢«“∑≈»Î¡À“ª∞—Œ‰∆˜.", sendername);
                                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
                                SaveTrunk();
                                return 1;
                            }
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, " ∫Û±∏œ‰¬˙¡À");
			                return 1;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆ∑∂Œßƒ⁄”–∂‡¡æ≥µµƒ∫Û±∏œ‰");
			            return 1;
			        }
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"takegun",true) == 0)
			{
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }

			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ƒ„∏ΩΩ¸√ª”–∆˚≥µ∫Û±∏œ‰");
			            return 1;
			        }

			        case 1:
			        {
			            if(IsPlayerInAnyVehicle(playerid))
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ƒ„‘⁄≥µ…œµƒ ±∫Ú,ƒ„≤ªƒ‹¥Úø™≥µµƒ∫Û±∏œ‰");
			                return 1;
			            }
			            if(ReduceTime[playerid] == 1)
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ƒ„–Ë“™µ»¥˝ 3√Î ≤≈ø…“‘ π”√¥À√¸¡Ó !");
			                return 1;
		            	}
			            if(IsAnOwnableCar(result))
               			{
               			   	if(PlayerInfo[playerid][pPcarkey] == result) { }
               			   	else if(PlayerInfo[playerid][pPcarkey2] == result) { }
               			  	else
               			   	{
			               		SendClientMessage(playerid, COLOR_GREY, "  ∫Û±∏œ‰À¯◊°¡À !");
			            		return 1;
							}
       					}
			            if(IsAPlane(result) || IsABike(result) || IsAOBike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >=78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
               			{
               			    SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µ√ª”–∫Û±∏œ‰ !");
               			    return 1;
               			}
			            if(vehTrunkCounter[result] != 0)
			            {
			                ReduceTime[playerid] = 1;
               				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			                new buffer[128];
			                new gunName[100];

			                SafeGivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunName, sizeof(gunName));
			                format(buffer, sizeof(buffer), "ƒ„¥”∫Û±∏œ‰»°≥ˆ¡À“ª∞— %s(µØ“©: %i).", gunName, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                SendClientMessage(playerid, COLOR_WHITE, buffer);
			                vehTrunk[result][vehTrunkCounter[result]] = '\0';
			                vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
			                vehTrunkCounter[result]--;
			                format(string, sizeof(string), "* %s ¥Úø™¡À∫Û±∏œ‰≤¢»°¡À“ª∞—Œ‰∆˜.", sendername);
			                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			                SaveTrunk();
			                return 1;
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ∫Û±∏œ‰ «ø’µƒ ! ");
			                return 1;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆ∑∂Œßƒ⁄”–∂‡¡æ≥µµƒ∫Û±∏œ‰");
			            return 1;
			        }
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"putarmour",true) == 0)
			{
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ƒ„∏ΩΩ¸√ª”–∆˚≥µ∫Û±∏œ‰");
			            return 1;
			        }

			        case 1:
			        {
			            if(IsPlayerInAnyVehicle(playerid))
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ƒ„‘⁄≥µ…œµƒ ±∫Ú,ƒ„≤ªƒ‹¥Úø™≥µµƒ∫Û±∏œ‰");
			                return 1;
			            }
			            if(IsAnOwnableCar(result))
               			{
               			   	if(PlayerInfo[playerid][pPcarkey] == result) { }
               			   	else if(PlayerInfo[playerid][pPcarkey2] == result) { }
               			   	else
               			   	{
			               		SendClientMessage(playerid, COLOR_GREY, "  ∫Û±∏œ‰À¯◊°¡À !");
			            		return 1;
							}
       					}
			            if(IsAPlane(result) || IsABike(result) || IsAOBike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >=78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
               			{
               			    SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µ√ª”–∫Û±∏œ‰ !");
               			    return 1;
               			}

			            new Float:plyArmour;
			            GetPlayerArmour(playerid, plyArmour);

                        if(plyArmour != 0)
			            {
			                SafeSetPlayerArmour(playerid, 0);
			                vehTrunkArmour[result] = plyArmour;

			                format(string, sizeof(string), "* %s Õ—œ¬À˚µƒ∑¿µØ±≥–ƒ∑≈µΩ¡À∫Û±∏œ‰.", sendername);
			                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			                SaveTrunk();
			                return 1;
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–¥©∑¿µØ±≥–ƒ ");
			                return 1;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆ∑∂Œßƒ⁄”–∂‡¡æ≥µµƒ∫Û±∏œ‰");
			            return 1;
			        }
				}
			    return 1;
			}
			else if(strcmp(x_nr,"takearmour",true) == 0)
			{
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ƒ„∏ΩΩ¸√ª”–∆˚≥µ∫Û±∏œ‰");
			            return 1;
			        }

			        case 1:
			        {
			            if(IsPlayerInAnyVehicle(playerid))
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ƒ„‘⁄≥µ…œµƒ ±∫Ú,ƒ„≤ªƒ‹¥Úø™≥µµƒ∫Û±∏œ‰");
			                return 1;
			            }
			            if(IsAnOwnableCar(result))
               			{
               			   	if(PlayerInfo[playerid][pPcarkey] == result) { }
               			   	else if(PlayerInfo[playerid][pPcarkey2] == result) { }
               			   	else
               			   	{
			               		SendClientMessage(playerid, COLOR_GREY, "  ∫Û±∏œ‰À¯◊°¡À !");
			            		return 1;
							}
       					}
			            if(IsAPlane(result) || IsABike(result) || IsAOBike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >=78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
               			{
               			    SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µ√ª”–∫Û±∏œ‰ !");
               			    return 1;
               			}
			            if(vehTrunkArmour[result] != 0)
			            {
			                SafeSetPlayerArmour(playerid, vehTrunkArmour[result]);
			                vehTrunkArmour[result] = 0;

			                format(string, sizeof(string), "* %s ¥”∫Û±∏œ‰»°≥ˆ¡À∑¿µØ±≥–ƒ¥©…œ¡À.", sendername);
			                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			                SaveTrunk();
			                return 1;
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   ∫Û±∏œ‰¿Ô√ª”–∑¿µØ±≥–ƒ ! ");
			                return 1;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆ∑∂Œßƒ⁄”–∂‡¡æ≥µµƒ∫Û±∏œ‰");
			            return 1;
			        }
				}
				return 1;
			}
			else if(strcmp(x_nr,"frisk",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			    {
			    	new counter = 0;
			    	new result;
			    	new plyName[MAX_PLAYER_NAME];

				    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				    for(new i; i != MAX_VEHICLES; i++)
				    {
				        new dist = CheckPlayerDistanceToVehicle(3.5, playerid, i);
			    	    if(dist)
			        	{
			           		result = i;
			            	counter++;
			        	}
			    	}
			    	switch(counter)
			    	{
			        	case 0:
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "   ƒ„∏ΩΩ¸√ª”–∆˚≥µ∫Û±∏œ‰");
			        	}

			        	case 1:
			        	{
			            	if(IsPlayerInAnyVehicle(playerid))
      						{
			                	SendClientMessage(playerid, COLOR_GREY, "  ƒ„‘⁄≥µ…œµƒ ±∫Ú,ƒ„≤ªƒ‹¥Úø™≥µµƒ∫Û±∏œ‰");
			            		return 1;
               				}
               				if(IsAPlane(result) || IsABike(result) || IsAOBike(result) || IsABoat(result) || IsAPizzabike(result) || IsABus(result) || IsATowcar(result) || IsAHarvest(result) || IsADrugHarvest(result) || IsASweeper(result) || result >=78 && result <= 83 || GetVehicleModel(GetPlayerVehicleID(result)) == 523)
               				{
               			    	SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µ√ª”–∫Û±∏œ‰ !");
               			    	return 1;
               				}

							SendClientMessage(playerid, COLOR_LIGHT_BLUE, "|_______ ≥µ¡æ∫Û±∏œ‰ _______|");
							for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
							{
							    new gunname[100];
							    if(vehTrunk[result][slot] != 0)
							    {
							        GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
						    	    format(string, sizeof(string), "| ≤Â≤€ %i: %s (µØ“©: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
						        	SendClientMessage(playerid, COLOR_WHITE, string);
						    	}
						    	else
						    	{
						        	format(string, sizeof(string), "| ≤Â≤€ %i: ø’ (µØ“©: N/A)", slot);
						        	SendClientMessage(playerid, COLOR_WHITE, string);
						    	}
							}
							format(string, sizeof(string), "| ∑¿µØ±≥–ƒ: %f%", vehTrunkArmour[result]);
							SendClientMessage(playerid, COLOR_WHITE, string);
    	                    format(string, sizeof(string), "* %s ¥Úø™¡À∫Û±∏œ‰≤¢«“≤Èø¥◊≈ ≤√¥.", sendername);
        	          		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							return 1;
			        	}

				        default:
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆ∑∂Œßƒ⁄”–∂‡¡æ≥µµƒ∫Û±∏œ‰");
				            return 1;
			    	    }
			    	}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤¢≤ª «cop ! ");
					return 1;
				}
			    return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /trunk [ø…”√√˚≥∆]");
			    SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: info*∫Û±∏œ‰–≈œ¢*, putgun*¥Ê∑≈Œ‰∆˜*, takegun*»•≥˝Œ‰∆˜*, putarmour*¥Ê∑≈∑¿µØ“¬*, takearmour*»°≥ˆ∑¿µØ“¬*");
			    if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 2)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "ƒ„◊˜Œ™“ª∏ˆæØ≤Ïƒ„ø…“‘À—∫Û±∏œ‰/trunk");
			    }
			    return 1;
			}
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/windows", true) || !strcmp(cmdtext, "/wi", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "  «Îƒ„œ»µ«¬º ! ");
	            return 1;
	        }
	        new playercar = GetPlayerVehicleID(playerid);
	        if(IsPlayerInAnyVehicle(playerid))
	        {
				if(IsModelAPlane(playercar) || IsModelABike(playercar) || IsModelAHeli(playercar) || IsModelABoat(playercar) || IsModelASpecial(playercar))
				{
				    SendClientMessage(playerid, COLOR_GREY, "  ’‚∏ˆ≥µµƒ≥µ¥∞≤ªø…“°∂Ø");
				    return 1;
				}
	            if(VehicleWindows[playercar] == 0)
	            {
	            	VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
      				format(string, sizeof(string), "* %s “°œ¬¡À≥µ¥∞.", sendername);
      				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      				return 1;
				}
				else if(VehicleWindows[playercar] == 1)
				{
				    VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
      				format(string, sizeof(string), "* %s “°…œ¡À≥µ¥∞.", sendername);
      				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      				return 1;
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /windows",d,m,y,h,mi,s,sendername);
				CommandLog(string);
				return 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„–Ë“™‘⁄≥µ¿Ô≤≈ø…“‘ π”√’‚∏ˆπ¶ƒ‹ !");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/adminduty", true) || !strcmp(cmdtext, "/aduty", true)) // Original by LordMan, Modded 99% By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
				return 1;
		    }
		    if(PlayerInfo[playerid][pAdmin] >= 1)
		    {
          		if(PlayerInfo[playerid][pAdminDuty] == 0)
		        {
		            PlayerInfo[playerid][pAdminDuty] = 1;
					SetPlayerColor(playerid,0xFF66FF00);
					format(string, sizeof(string),"[π‹¿Ì]: %s Ω¯»Î¡Àπ‹¿Ì÷µ∞‡◊¥Ã¨", sendername);
					ABroadCast(COLOR_LIGHTRED, string, 1);
					DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡π‹¿Ì \n «ÎŒπ•ª˜!",0xFF000099,0,0,0,50,-1,1);
					Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
					if(PlayerInfo[playerid][pAdmin] >= 5)
					{
					    for(new i = 0; i < sizeof(CarInfo); i++)
						{
							SetVehicleParamsForPlayer(i,playerid,0,0);
                        }
					}

					if(PlayerInfo[playerid][pAdmin] >= 3)
					{
						SetPlayerColor(playerid,0xFF000000); // Senior Admin Colour (Dark Red)
						new Float:AX,Float:AY,Float:AZ;
						GetPlayerPos(playerid, AX,AY,AZ);
						SafeSetPlayerPos(playerid, AX,AY,AZ+1);
						UpdatePlayerPosition(playerid);
						SetPlayerHealth(playerid, 99999);
						SetPlayerArmour(playerid, 99999);
					}
					if(PlayerInfo[playerid][pAdmin] >= 6)
					{
						SaveGuns(playerid);
						SafeResetPlayerWeapons(playerid);
						//SafeGivePlayerWeapon(playerid, 42, 10000);
						//SafeGivePlayerWeapon(playerid, 39, 10000);
						//SafeGivePlayerWeapon(playerid, 38, 10000);
						SafeGivePlayerWeapon(playerid, 34, 10000);
						SafeGivePlayerWeapon(playerid, 31, 10000);
						SafeGivePlayerWeapon(playerid, 29, 10000);
						SafeGivePlayerWeapon(playerid, 27, 10000);
						SafeGivePlayerWeapon(playerid, 24, 10000);
						SafeGivePlayerWeapon(playerid, 40, 1);
						SafeGivePlayerWeapon(playerid, 10, 1);
						SafeGivePlayerWeapon(playerid, 9, 1);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1000);
						SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1000);
					}
					return 1;
		        }
		        else if(PlayerInfo[playerid][pAdminDuty] == 1)
		        {
		            if(PlayerInfo[playerid][pAdmin] >= 6)
					{
         				if(Spectate[playerid] == 255)
					    {
						    SafeResetPlayerWeapons(playerid);
						    SetPlayerWeapons(playerid);
						}
					    SetPlayerSkills(playerid);
    				 	SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
					    SafeSetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
					}
					Delete3DTextLabel(DutyLabel[playerid]);

					//new originalskin = PlayerInfo[playerid][pChar];
					//SetPlayerSkin(playerid, originalskin);
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid, X,Y,Z);
					SafeSetPlayerPos(playerid, X,Y,Z+1);
					SetPlayerToTeamColor(playerid);
					format(string, sizeof(string),"[π‹¿Ì]: %s Ω¯»Î¡Àœ¬∞‡π‹¿Ì◊¥Ã¨", sendername);
					ABroadCast(COLOR_LIGHTRED, string, 1);
		            PlayerInfo[playerid][pAdminDuty] = 0;
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /adminduty",d,m,y,h,mi,s,sendername);
					AdminLog(string);
					return 1;
		        }
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «π‹¿Ì‘± !");
		        return 1;
		    }
		}
	    return 1;
	}

	if(!strcmp(cmdtext, "/testerduty", true) || !strcmp(cmdtext, "/tduty", true)) // Original by LordMan, Modded 99% By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
				return 1;
		    }
		    if(PlayerInfo[playerid][pTester] >= 1)
		    {
          		if(PlayerInfo[playerid][pTesterDuty] == 0)
		        {
		            PlayerInfo[playerid][pTesterDuty] = 1;
					SetPlayerColor(playerid,0x00660000);
					format(string, sizeof(string),"[π‹¿Ì]: %s Ω¯»Î¡À≤‚ ‘◊¥Ã¨", sendername);
					SendTesterAdminMessage(COLOR_LIGHTRED, string);
					DutyLabel[playerid] = Create3DTextLabel("÷µ∞‡≤‚ ‘ \n «ÎŒπ•ª˜!",0x00AA0099,0,0,0,50,-1,1);
					Attach3DTextLabelToPlayer(DutyLabel[playerid], playerid, 0,0,0);
					if(PlayerInfo[playerid][pTester] == 2)
					{
					    for(new i = 0; i < sizeof(CarInfo); i++)
						{
							SetVehicleParamsForPlayer(i,playerid,0,0);
                        }
					}
					if(PlayerInfo[playerid][pTester] == 2)
					{
						SetPlayerColor(playerid,0x00880000); // Senior Tester Colour (Dark Red)

					}
					if(PlayerInfo[playerid][pTester] == 3)
					{
						SetPlayerColor(playerid,0x00AA0000); // Dark Green
					}
					return 1;
		        }
		        else if(PlayerInfo[playerid][pTesterDuty] == 1)
		        {
		            Delete3DTextLabel(DutyLabel[playerid]);
		            PlayerInfo[playerid][pTesterDuty] = 0;
		            SetPlayerToTeamColor(playerid);
					format(string, sizeof(string),"[π‹¿Ì]: %s »°œ˚¡À≤‚ ‘◊¥Ã¨", sendername);
					SendTesterAdminMessage(COLOR_LIGHTRED, string);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /testerduty",d,m,y,h,mi,s,sendername);
					AdminLog(string);
					return 1;
		        }
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «≤‚ ‘‘± !");
		        return 1;
		    }
		}
	    return 1;
	}

	if(strcmp(cmd, "/searchwallet", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /searchwallet [ÕÊº“ID/ÕÊº“√˚◊÷]");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerTied[giveplayerid] != 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ÕÊº“±ÿ–Î±ª∞Û◊°≤≈ø…“‘À—À˜À˚µƒ«Æ∞¸ ! ");
			            return 1;
			        }
			        if(ProxDetectorS(5.0, playerid, giveplayerid))
			        {
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "%s ”– %d$ ‘⁄À˚µƒ«Æ∞¸.", giveplayer, GetPlayerMoney(giveplayerid));
			            SendClientMessage(playerid, COLOR_WHITE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /searchwallet %s",d,m,y,h,mi,s,sendername,giveplayer);
						CommandLog(string);
			            return 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
			            return 1;
			        }
			    }
			}
	    }
	    return 1;
	}
	
	if(!strcmp(cmdtext, "/gotohospital", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] > 1)
	        {
	        	SafeSetPlayerPos(playerid, 1173.2563,-1323.3102,15.3943);
  				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
			    return 1;
			}
	    }
	    return 1;
	}

	if(strcmp(cmd, "/sid", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /sid [ÕÊº“ID/ÕÊº“√˚◊÷]");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
			        {
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "   ƒ„≥ˆ æƒ„µƒ…Ì∑›÷§∏¯ %s.", giveplayer);
	            		SendClientMessage(playerid, COLOR_WHITE, string);
	            		SendClientMessage(giveplayerid, COLOR_GREEN, "_______________________");
	            		format(string, sizeof(string), "   √˚◊÷: %s   ƒÍ¡‰: %d", sendername, PlayerInfo[playerid][pAge]);
	            		SendClientMessage(giveplayerid, COLOR_WHITE, string);
	            		format(string, sizeof(string), "   µÁª∞: %d  ª§’’: %d", PlayerInfo[playerid][pPnumber],PlayerInfo[playerid][pPassport]);
	            		SendClientMessage(giveplayerid, COLOR_WHITE, string);
	            		SendClientMessage(giveplayerid, COLOR_GREEN, "_______________________");
	            		format(string, sizeof(string), "   %s œÚƒ„’π æ¡ÀÀ˚µƒ…Ì∑›÷§.", sendername);
	            		SendClientMessage(giveplayerid, COLOR_WHITE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /sid %s",d,m,y,h,mi,s,sendername,giveplayer);
						CommandLog(string);
	            		return 1;
			        }
			    }
			}
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/tracelastcall", true) || !strcmp(cmdtext, "/tlc", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º ");
	            return 1;
	        }
	        if(IsACop(playerid))
	        {
	            if(pdtrace == 0 || pdtrace_x == 0 || pdtrace_y == 0 || pdtrace_z == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** ∂®Œª∫ÙΩ–’ﬂ¥ÌŒÛ ");
	                return 1;
	            }
 				if(PlayerInfo[playerid][pDBanned] == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				    return 1;
				}
	            SendClientMessage(playerid, COLOR_WHITE, "∫ÙΩ–’ﬂµƒŒª÷√±Í‘⁄µÿÕº…œ∫Ï…´µƒµ„");
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /removegps…æ≥˝±Íº«");
				SetPlayerCheckpoint(playerid,pdtrace_x,pdtrace_y,pdtrace_z,8.0);
	            return 1;
	        }
	        else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	        {
	            if(emdtrace == 0 || emdtrace_x == 0 || emdtrace_y == 0 || emdtrace_z == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ∂®Œª∫ÙΩ–’ﬂ¥ÌŒÛ ");
	                return 1;
	            }
	            SendClientMessage(playerid, COLOR_WHITE, "∫ÙΩ–’ﬂµƒŒª÷√±Í‘⁄µÿÕº…œ∫Ï…´µƒµ„");
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /removegps…æ≥˝±Íº«");
				SetPlayerCheckpoint(playerid,emdtrace_x,emdtrace_y,emdtrace_z,8.0);
	            return 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤¢≤ª «æØ≤Ï ! ");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(strcmp(cmd, "/acceptreport", true) == 0 || strcmp(cmd, "/ar", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pAdmin] > 0)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
			    	SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /acceptreport (/ar) [ÕÊº“ID/ÕÊº“√˚◊÷]");
			    	return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerNeedsHelp[giveplayerid] == 1)
				        {
				            PlayerNeedsHelp[giveplayerid] = 0;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "[π‹¿Ì]: %s Ω” ‹¡À %s (%d)µƒ±®∏Ê", sendername, giveplayer, giveplayerid);
							SendAdminMessage(COLOR_LIGHTRED, string);
							format(string, sizeof(string), "** π‹¿Ì‘± %s “—Ω” ‹ƒ˙µƒ±®∏Ê,œ÷‘⁄“—æ≠◊º±∏∫√Œ™ƒ˙Ã·π©∞Ô÷˙!«ÎƒÕ–ƒµ»¥˝!.", sendername);
							SendClientMessage(giveplayerid, 0x4D903DAA, string);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /acceptreport %s",d,m,y,h,mi,s,sendername,giveplayer);
							AdminLog(string);
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“√ª”–∑¢ÀÕ±®∏ÊªÚ’ﬂ±®∏Êπ˝∆⁄¡À !");
				            return 1;
				        }
				    }
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó ! ");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(strcmp(cmd, "/trashreport", true) == 0 || strcmp(cmd, "/tr", true) == 0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pAdmin] > 0)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
			    	SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /trashreport (/tr) [ÕÊº“ID/ÕÊº“√˚◊÷]");
			    	return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerNeedsHelp[giveplayerid] == 1)
				        {
				            PlayerNeedsHelp[giveplayerid] = 0;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "[π‹¿Ì]: %s æ‹æ¯¡À %s (%d)µƒ±®∏Ê.", sendername, giveplayer,giveplayerid);
							SendAdminMessage(COLOR_LIGHTRED, string);
							format(string, sizeof(string), "** π‹¿Ì‘± %s æ‹æ¯¡Àƒ„µƒ±®∏Ê,»Ùªπ–Ë“™∞Ô÷˙ƒ„ø…“‘PM+‘≠“Ú∏ÊÀﬂÀ˚ !", sendername);
							SendClientMessage(giveplayerid, 0xB35959AA, string);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /trashreport %s",d,m,y,h,mi,s,sendername,giveplayer);
							AdminLog(string);
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“√ª”–∑¢ÀÕ±®∏ÊªÚ’ﬂ±®∏Êπ˝∆⁄¡À !");
				            return 1;
				        }
				    }
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó ! ");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/asellcar", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "* «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pAdmin] >= 5)
	        {
	            new vehid = GetPlayerVehicleID(playerid);
         		CarInfo[vehid][cOwned] = 0;
         		
         		new ye,m,d;
				new h,mi,s;
				getdate(ye,m,d);
				gettime(h,mi,s);
         		
         		for(new i = 0; i < MAX_PLAYERS; i ++)
			    {
			        if(IsPlayerConnected(i))
			        {
						if(PlayerInfo[i][pPcarkey] == vehid || PlayerInfo[i][pPcarkey2] == vehid)
			            {
			                if(PlayerInfo[i][pPcarkey] == vehid) PlayerInfo[i][pPcarkey] = 9999;
			                else if(PlayerInfo[i][pPcarkey2] == vehid) PlayerInfo[i][pPcarkey2] = 9999;
			            
			                SafeGivePlayerMoney(i, GetVehiclePrice(vehid) / 2);
						}
						else
						{
						    format(string, sizeof(string),"LARP/Users/%s.ini",CarInfo[vehid][cOwner]);
			         		new totalcash = dini_Int(string,"Money") + GetVehiclePrice(vehid);
			         		dini_IntSet(string,"Money",totalcash);

			         		if(dini_Int(string,"Car") == vehid)
			         		{
			         		    dini_IntSet(string,"Car",9999);
							}
							else if(dini_Int(string,"Car2") == vehid)
			         		{
			         		    dini_IntSet(string,"Car2",9999);
							}
						}
					}
				}
         		
         		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
         		GameTextForPlayer(playerid, "~w~You have admin sold the vehicle", 10000, 3);
         		format(string, sizeof(string), "[π‹¿Ì]: %s π‹¿Ì‘±≥ˆ €¡À±‡∫≈Œ™: [%d]≥µ¡æ.",sendername, vehid);
         		ABroadCast(COLOR_LIGHTRED,string, 5);
         		
         		SafeRemovePlayerFromVehicle(playerid);
         		TogglePlayerControllable(playerid, 1);
         		
         		DestroyVehicle(vehid);
         		
         		format(string, sizeof(string),"LARP/Vehicles/%d.ini",vehid);
         		fremove(string);
         		
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Admin Sold the Vehicle: [%d]",d,m,ye,h,mi,s,sendername,vehid);
				AdminLog(string);
	            return 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√’‚∏ˆ√¸¡Ó !");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(!strcmp(cmdtext, "/smoke", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(IsSmoking[playerid] == 0)
	        {
	            if(PlayerInfo[playerid][pLighter] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–“ª∏ˆ¥Úªª˙¿¥µ„—Ã ! ");
	                return 1;
	            }
	            if(PlayerInfo[playerid][pCigarettes] == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–“ª÷ßœ„—Ã ! ");
	                return 1;
	            }
	            new randsmoke = random(2)+1;
				if(randsmoke == 1)
				{
				    PlayerInfo[playerid][pLighter] -= 1;
				    PlayerInfo[playerid][pCigarettes] -= 1;
				    if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À¥Úªª˙µ„»º¡À“ª÷ß—Ã.", sendername); }
					else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À¥Úªª˙µ„»º¡À“ª÷ß—Ã.", sendername); }
				    ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				    IsSmoking[playerid] = 60;
                    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ‘⁄10ø⁄—Ã∫Ûƒ„µƒœ„—ÃæÕ≥ÈÕÍ¡À, ƒ„ø…“‘∞¥œ¬ 'F' ªÚ 'Enter' ¿¥Ω¯––≥È—Ã!");
				    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ƒ„ªπø…“‘/smokeanim Ω¯––≥È—Ã∂Ø◊˜.");
				    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY)
				    return 1;
				}
				else
				{
				    PlayerInfo[playerid][pLighter] -= 1;
				    if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À¥Úªª˙≥¢ ‘µ„◊≈œ„—Ã,µ´ «√ªµ„◊≈.", sendername); }
					else { format(string, sizeof(string), "* %s ƒ√≥ˆ¡À¥Úªª˙≥¢ ‘µ„◊≈œ„—Ã,µ´ «√ªµ„◊≈.", sendername); }
      				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„◊Ï¿Ô≤ªƒ‹µ2÷ß—Ã∞… ! ");
			    return 1;
			}
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/dropcigarette", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(IsSmoking[playerid] > 0)
	        {
	            IsSmoking[playerid] = 0;
	            if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s ¥”À˚µƒ◊Ï¿Ô»°≥ˆ¡Àœ„—Ã≤¢∂™µΩ¡Àµÿ…œ.", sendername); }
	            else { format(string, sizeof(string), "* %s ¥”À˚µƒ◊Ï¿Ô»°≥ˆ¡Àœ„—Ã≤¢∂™µΩ¡Àµÿ…œ.", sendername); }
	            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
	            if(UsingSmokeAnim[playerid] == 1)
	            {
	                ClearAnimations(playerid);
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–‘⁄≥È—Ã ! ");
	            return 1;
	        }
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/smokeanim", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   µ±ƒ„‘⁄ƒ„µƒΩ≈œ¬ƒ„ø…“‘ π”√/smokeanim!");
	            return 1;
	        }
	        if(IsSmoking[playerid] != 0)
	        {
	            UsingSmokeAnim[playerid] = 1;
	            ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	            return 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„–Ë“™‘⁄/smoke≥È—Ã ±≤≈ø…“‘ π”√’‚∏ˆ√¸¡Ó ! ");
	            return 1;
	        }
		}
		return 1;
	 }
	 
	if(!strcmp(cmdtext, "/smugglemats", true)) // By LordMan
	{
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pJob] == 22)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 3,248.4994,-33.1366,1.5781))
	            {
	                if(GetPlayerMoney(playerid) < 199)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–◊„πªµƒ«Æ (÷¡…Ÿ–Ë“™200$)");
	                    return 1;
	                }
	                if(MatsHolding[playerid] != 0)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   ƒ„“—æ≠‘⁄◊ﬂÀΩ≤ƒ¡œ¡À.");
	                    return 1;
	                }
	                SafeGivePlayerMoney(playerid, - 200);
	                MatsHolding[playerid] = 25;
	                SendClientMessage(playerid, COLOR_WHITE, "ƒ„±ÿ–ÎΩ´≤ƒ¡œ∞¸ƒ√µΩ≤ƒ¡œ“¯––(–°µÿÕº∫Ï…´±Íº«µ„)");
	                GameTextForPlayer(playerid, "~w~Materials loaded", 5000, 1);
	                SetPlayerCheckpoint(playerid,2230.3579,-2286.2107,14.3751,1.0);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /smugglemats",d,m,y,h,mi,s,sendername);
					CommandLog(string);
	                return 1;
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ƒ„ «≤ª «‘⁄¿∂›Æ≤ƒ¡œ≥ß ! ")
	                return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚≤ƒ¡œ◊ﬂÀΩ∑∑ !");
	            return 1;
	        }
		}
		return 1;
	 }


	if(strcmp(cmd,"/buymats",true)==0) // By LordMan
	{
		if(IsPlayerConnected(playerid))
		{
			if(gPlayerLogged[playerid] == 0)
			{
			SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„œ»µ«¬º !");
			return 1;
			}
			if(PlayerInfo[playerid][pJob] != 23)
			{
			SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚Œ‰∆˜÷∆‘Ï…Ã. ");
			return 1;
			}
			if(!IsPlayerInRangeOfPoint(playerid, 2, 2230.3579,-2286.2107,14.3751))
			{
			SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª‘⁄≤ƒ¡œ“¯–– !");
			return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /buymats [ ˝¡ø]");
			return 1;
			}
			new mammount;
			mammount = strval(tmp);
			if(mammount > matssys[MatsAmmount])
			{
			SendClientMessage(playerid, COLOR_GREY, "   À˚√«√ª”–◊„πªµƒ≤ƒ¡œ ! ");
			return 1;
			}
			if(GetPlayerMoney(playerid) < mammount * 15 - 1)
			{
			SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–◊„πªµƒ«Æ ! ");
			return 1;
			}
			if (GetPlayerMoney(playerid) > ScriptMoney[playerid])
			{
			    format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ « π”√¡À À¢«Æ∫⁄øÕ; «ÎºÏ≤ÈÀ˚/À˝!!", sendername,playerid);
				SendAdminMessage(COLOR_YELLOW, string);
				PlayerSuspicious[playerid] = 1;
				PlayerMoneyHacking[playerid] = 1;
				PlayerSuspiciousMoney[playerid] = (GetPlayerMoney(playerid) - ScriptMoney[playerid]);
				PlayerGotSpottedRecently[playerid] = 1;
				SetTimerEx("ResetAcWarn", 300000, 0, "i", playerid);
     			SendClientMessage(playerid, COLOR_CREAM, "* Ωª“◊‘›Õ£,ƒ„œ÷‘⁄µƒœ÷Ω≤ª’˝≥£,«Î¡™œµπ‹¿Ì‘±.");
			    return 1;
			}
			matssys[MatsAmmount] -= mammount;
			PlayerInfo[playerid][pMats] += mammount;
			SafeGivePlayerMoney(playerid, - mammount * 15);
			format(string, sizeof(string), "   ƒ„π∫¬Ú¡À %d ª®∑—¡À %d$ !", mammount, mammount * 15);
			SendClientMessage(playerid, COLOR_GREY, string);
			SaveMatsSystem();
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buymats %d ($%d)",d,m,y,h,mi,s,sendername, mammount, mammount * 15);
			CommandLog(string);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/opendd", true) == 0) // By CuervO_NegrO
	{
		if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pDM] == 1)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1,1102.3132, 1703.7775, 10.8203))
			{
		    	MoveDynamicObject(DD_GATE,1104.1,1701.04,2.1437,1.5);
		    	SetTimer("GateCloseDD", 15000, 0);
		    	SendClientMessage(playerid, COLOR_BLUE,"DDÃÂ”˝≥°¥Û√≈¥Úø™,À¸Ω´‘⁄15√Î∫Ûπÿ±’.");
      			format(string, sizeof(string), "* %s ¥Úø™¡À DDÃÂ”˝≥° µƒ√≈.", sendername);
      			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /opendd",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			return 1;
		}
	}

	if(strcmp(cmd, "/opendev", true) == 0) // By CuervO_NegrO
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			if(IsPlayerInRangeOfPoint(playerid, 15,2515.6912,2472.2561,11.8288))
			{
		    	MoveDynamicObject(devs_gate,2515.6912,2472.2561,15.8288,2.5);
		    	SetTimer("GateCloseDevs", 8000, 0);
		    	SendClientMessage(playerid, COLOR_BLUE,"ª∂”≠¿¥µΩ Devs Place,√≈‘⁄8√Î∫Ûπÿ±’.");
      			format(string, sizeof(string), "* %s ¥Úø™¡ÀPlace's¥Û√≈.", sendername);
      			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /opendev",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
			return 1;
		}
	}

	if(strcmp(cmd, "/gateopen", true) == 0 || strcmp(cmd, "/opengate", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid,COLOR_LIGHTRED,"  π”√ /go ¥Úø™√≈!");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /gateopen",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/go", true)) // By CuervO_NegrO
	{
	    if(IsAPDMember(playerid) || IsAFreecop(playerid))
		{
		   	if (IsPlayerInRangeOfPoint(playerid, 15,1589.053344,-1638.123168,14.122960))
			{
				if(lspdg == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		  		MoveDynamicObject(pdgate1,1599.053344,-1638.123168,14.122960, 0.8);
		      	SetTimer("GateClose", 12000, 0);
		     	SendClientMessage(playerid, COLOR_BLUE,"≥µø‚¥Û√≈ ¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
		   		format(string, sizeof(string), "* %s ¥Úø™¡À ≥µø‚¥Û√≈.", sendername);
		   		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		   		PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
		     	lspdg = 1;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 15,1544.700317,-1630.735717,13.096980))
			{
			    if(lspdg2 == 1) { SendClientMessage(playerid, COLOR_GREY, "** ¬∑’œ“—æ≠¥Úø™"); return 1; }
		   		DestroyDynamicObject( pdgate2 );
	     		pdgate3 = CreateDynamicObject(968,1544.700317,-1630.735717,12.924660,0.000000,0.000000,270.972869);
	     		SetTimer("GateClose5", 6000, 0);
		   		SendClientMessage(playerid, COLOR_BLUE,"√≈±ª¥Úø™¡À,Ω´‘⁄6√Î∫Û◊‘∂Øπÿ±’.");
		 		format(string, sizeof(string), "* %s ¥Úø™¡À¥Û√≈.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				lspdg2 = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„∏ΩΩ¸√ª”–ø…“‘¥Úø™µƒ√≈.");
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			if (IsPlayerInRangeOfPoint(playerid, 15,2720.3772,-2409.7523,12.6))
			{
			    if(armyg == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
			   	MoveDynamicObject(armygate1,2720.3772, -2401.2523, 12.6, 3.5);
			   	SetTimer("GateClose2", 7000, 0);
		    	SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈Nr. 1 ¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
		     	GetPlayerName(playerid, sendername, sizeof(sendername));
		     	format(string, sizeof(string), "* %s ¥Úø™¡Àæ¸∂”¥Û√≈#1.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	armyg = 1;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 15,2720.3772,-2508.3069,12.6))
			{
				if(armyg2 == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		      	MoveDynamicObject(armygate2,2720.3772, -2499.8069, 12.6, 3.5);
		      	SetTimer("GateClose2", 7000, 0);
		      	SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈Nr. 2 ¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
		      	format(string, sizeof(string), "* %s ¥Úø™¡Àæ¸∂”¥Û√≈#2.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	armyg2 = 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10, 2773.2056,-2494.8267,13.6681))
	  		{
	  		    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	  		    {
		    		if(PlayerInfo[playerid][pRank] >= 5)
					{
						MoveDynamicObject(armygate3, 2774.4670,-2494.5842,8.2665, 2.5);
						SetTimer("GateClose2", 7000, 0);
						SendClientMessage(playerid, COLOR_BLUE,"¥Û√≈¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");

			        	format(string, sizeof(string), "* %s ¥Úø™¡À Rhino¥Û√≈.", sendername);
		      			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„∏ΩΩ¸√ª”–ø…“‘¥Úø™µƒ√≈.");
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
	 		if (IsPlayerInRangeOfPoint(playerid, 15,1473.0992,-1496.9677,15.3232))
			{
				if(fbig2 == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		      	MoveDynamicObject(fbigate2,1473.0992,-1496.9677,5.3232, 1.5);
		      	SetTimer("GateClose3", 7000, 0);
		      	SendClientMessage(playerid, COLOR_BLUE,"FBI¥Û√≈¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");

		      	format(string, sizeof(string), "* %s ¥Úø™¡À fbi¥Û√≈.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	fbig2 = 1;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 15,1534.9020,-1451.5979,14.4882))
			{
				if(fbig == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		      	MoveDynamicObject(fbigate,1534.9020,-1451.5979,5.4882, 1.5);
		      	SetTimer("GateClose3", 7000, 0);
		      	SendClientMessage(playerid, COLOR_BLUE,"FBI¥Û√≈¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");

		      	format(string, sizeof(string), "* %s ¥Úø™¡À fbi¥Û√≈.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	fbig = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„∏ΩΩ¸√ª”–ø…“‘¥Úø™µƒ√≈.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–ø™√≈µƒ“£øÿ∆˜.");
		}
		return 1;
	}

	if(!strcmp(cmdtext, "/opendoor", true)) // By CuervO_NegrO
	{
  		if(IsAnNg(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 4,238.9703,112.8155,1003.2188))
			{
			    if(armyw1 == 0)
			    {
		      		MoveDynamicObject(armywindows1, 239.774,111.511,1000.61, 1.7500);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		armyw1 = 1;
				}
				else
				{
		      		MoveDynamicObject(armywindows1, 239.774,111.511,1002.31, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		armyw1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,253.8096,117.3113,1003.2188))
			{
			    if(armyw2 == 0)
			    {
		      		MoveDynamicObject(armywindows2, 253.050,116.195,1000.61, 1.7500);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		armyw2 = 1;
				}
				else
				{
				    MoveDynamicObject(armywindows2, 253.050,116.195,1002.31, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      		        armyw2 = 0;
				}
			}
		}
		if(IsAPDMember(playerid) || PlayerInfo[playerid][pAdmin] >= 6 || IsAFreecop(playerid))
		{
		    if(IsPlayerInRangeOfPoint(playerid, 4,251.2575,67.6536,1003.6406))
			{
			    if(lspdw == 0)
			    {
		      		MoveDynamicObject(lspdwindows, 250.524,67.650,1001.08, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ï ¥∞ø⁄“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					lspdw = 1;
				}
				else
				{
				    MoveDynamicObject(lspdwindows, 250.524,67.650,1002.58, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥∞ø⁄“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					lspdw = 0;
				}
			}
		}
   		if(IsAPDMember(playerid) || IsAFreecop(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 2,250.611,63.2995,1003.18))
			{
			    if(lspd1 == 0)
			    {
		      		MoveDynamicObject(lspddoor1, 250.611,63.2995,1000.64, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd1 = 1;
				}
				else
				{
		      		MoveDynamicObject(lspddoor1, 250.611,63.2995,1003.04, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,246.228,72.4962,1003.04))
			{
			    if(lspd2 == 0)
			    {
		      		MoveDynamicObject(lspddoor2, 246.228,72.4962,1000.63, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd2 = 1;
				}
	      		else
				{
				    MoveDynamicObject(lspddoor2, 246.228,72.4962,1003.18, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷π‹¿Ì¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd2 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,1582.6205,-1638.0587,12.3776))
			{
			    if(lspd3 == 0)
			    {
		      		MoveDynamicObject(pdgate4, 1582.6205,-1638.0587,7.3776, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷≥µø‚¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd3 = 1;
				}
	      		else
				{
				    MoveDynamicObject(pdgate4, 1582.6205,-1638.0587,12.3776, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷≥µø‚¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd3 = 0;
				}
			}
		}
		if(IsAnNg(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
		{
		 	if(IsPlayerInRangeOfPoint(playerid, 2,239.5503,117.5205,1003.2188))
			{
				if(army1 == 0)
				{
		      		MoveDynamicObject(armydoor1, 239.591,118.098,1000.21, 4.0);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army1 = 1;
				}
				else
				{
		      		MoveDynamicObject(armydoor1, 239.591,118.098,1003.01, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,239.5794,125.0337,1003.2188))
			{
				if(army2 == 0)
				{
		      		MoveDynamicObject(armydoor2, 239.635,125.544,1000.21, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army2 = 1;
				}
				else
				{
				    MoveDynamicObject(armydoor2, 239.635,125.544,1003.21, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		     		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army2 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,253.1278,109.1392,1003.2188))
			{
			    if(army3 == 0)
			    {
		      		MoveDynamicObject(armydoor3, 253.146,108.902,1000.21, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army3 = 1;
				}
				else
				{
				    MoveDynamicObject(armydoor3, 253.146,108.902,1003.01, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army3 = 0;
				}
			}
		}
		if(IsAnFbi(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
		{
		 	if(IsPlayerInRangeOfPoint(playerid, 3,228.250,151.334,1002.67))
			{
			    if(fbi1 == 0)
			    {
		      		MoveDynamicObject(fbidoor1, 228.250,151.334,1000.02, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi1 = 1;
				}
				else
				{
		      		MoveDynamicObject(fbidoor1, 228.250,151.334,1002.67, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3,271.140,191.185,1008.97))
			{
			    if(fbi2 == 0)
				{
		      		MoveDynamicObject(fbidoor2, 271.140,191.185,1005.17, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi2 = 1;
				}
				else
				{
		      		MoveDynamicObject(fbidoor2, 271.140,191.185,1008.97, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi2 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3,238.784,193.768,1008.97))
			{
			    if(fbi3 == 0)
			    {
			   		MoveDynamicObject(fbidoor3, 238.784,193.768,1005.17, 4.5);
			   		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
			   		GetPlayerName(playerid, sendername, sizeof(sendername));
			  		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
			   		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			   		fbi3 = 1;
				}
				else
				{
			   		MoveDynamicObject(fbidoor3, 238.784,193.768,1008.97, 4.5);
			   		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
			   		GetPlayerName(playerid, sendername, sizeof(sendername));
			   		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
			   		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			   		fbi3 = 0;
				}
			}
		}
		return 1;
	}
	

//------------BusDriverStartWest---------------
// By LordMan
	if(strcmp(cmd, "/startwest", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] == 14)
			{
				if (BusrouteWest[playerid][0] == 12 || BusrouteEast[playerid][0] == 12)
				{
					BusrouteWest[playerid][0] = 0;
					BusrouteEast[playerid][0] = 0;
				}
				if(BusrouteWest[playerid][0] == 0 && BusrouteEast[playerid][0] == 0)
				{
					new playervehicleid = GetPlayerVehicleID(playerid);
					if(IsABus(playervehicleid))
					{
						TogglePlayerControllable(playerid, 1);
						GameTextForPlayer(playerid, "~g~Bus Route Started", 5000, 3);
						SendClientMessage(playerid, COLOR_LIGHTRED, "---------Œ˜¬Â…ºÌ∂…£Õ–Àππ´Ωªœﬂ¬∑-----------");
						SendBusRoute(playerid, 1);
						SendClientMessage(playerid, COLOR_RED, " ");
						SendClientMessage(playerid, COLOR_GREEN, "«Î—ÿ◊≈µÿÕº∫Ï…´±Íº«–– ª.");
						SendClientMessage(playerid, COLOR_GREEN, "ƒ„µƒ∑˛ŒÒΩ´◊‘∂Ø∏ÊÀﬂ√ø’æ∏ΩΩ¸µƒÕÊº“.");
						BusrouteWest[playerid][0] = 1;
						BusrouteWest[playerid][1] = playervehicleid;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /startwest",d,m,y,h,mi,s,sendername);
						CommandLog(string);
						//BusrouteWest[playerid][2] = 0;
	/*					for (new i=0; i<=MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i) && GetPlayerVehicleID(i) == playervehicleid) BusrouteWest[playerid][2] ++;
						}*/
						OnPlayerEnterCheckpoint(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª‘⁄“ª¡æπ´Ωª≥µ¿Ô!");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠‘⁄–– ª“ªÃı¬∑œﬂ¡À!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª «“ª√˚π´≥µÀæª˙!");
			}
		}
		return 1;
	}

	//------------BusDriverStartEast---------------
	// By LordMan
	if(strcmp(cmd, "/starteast", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] == 14)
			{
				if (BusrouteWest[playerid][0] == 12 || BusrouteEast[playerid][0] == 12)
				{
					BusrouteWest[playerid][0] = 0;
					BusrouteEast[playerid][0] = 0;
				}
			    if(BusrouteWest[playerid][0] == 0 && BusrouteEast[playerid][0] == 0)
			    {
					new playervehicleid = GetPlayerVehicleID(playerid);
					if(IsABus(playervehicleid))
					{
						TogglePlayerControllable(playerid, 1);
						GameTextForPlayer(playerid, "~g~Bus Route Started", 5000, 3);
						SendClientMessage(playerid, COLOR_LIGHTRED, "---------∂´¬Â…ºÌ∂…£Õ–Àππ´Ωª¬∑œﬂ-----------");
						SendBusRoute(playerid, 0);
						SendClientMessage(playerid, COLOR_RED, " ");
						SendClientMessage(playerid, COLOR_GREEN, "«Î—ÿ◊≈µÿÕº∫Ï…´±Íº«–– ª.");
						SendClientMessage(playerid, COLOR_GREEN, "ƒ„µƒ∑˛ŒÒΩ´◊‘∂Ø∏ÊÀﬂ√ø’æ∏ΩΩ¸µƒÕÊº“.");
						BusrouteEast[playerid][0] = 1;
						BusrouteEast[playerid][1] = playervehicleid;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /starteast",d,m,y,h,mi,s,sendername);
						CommandLog(string);
						//BusrouteEast[playerid][2] = 0;
	/*					for (new i=0; i<=MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i) && GetPlayerVehicleID(i) == playervehicleid) BusrouteEast[playerid][2] ++;
						}*/
						OnPlayerEnterCheckpoint(playerid);
						return 1;
					}
				    else
				    {
					    SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª‘⁄“ª¡æπ´Ωª≥µ¿Ô!");
				    }
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠‘⁄–– ª“ªÃı¬∑œﬂ¡À!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª «“ª√˚π´≥µÀæª˙!");
			}
		}
		return 1;
	}
//----------------------------------[◊¢≤·µ«¬º]------------------------------------------
	if(strcmp(cmd, "/login", true) == 0 || strcmp(cmd, "/register", true) == 0) // By nill
	{
 		if(gPlayerLogged[playerid] == 1)
 		{
   			SendClientMessage(playerid, COLOR_GREY, "ƒ„“—æ≠µ«¬º¡À!");
 		}else if (gPlayerAccount[playerid] != 0)
		{
			ShowPlayerDialog(playerid, 1245, DIALOG_STYLE_INPUT,"ª∂”≠π‚¡Ÿ,«Îœ»µ«¬º","«Î‘⁄œ¬√Ê ‰»Îƒ„µƒ√‹¬Î£∫","µ«¬º","ÕÀ≥ˆ");
		}
		else
		{
			ShowPlayerDialog(playerid, 1246, DIALOG_STYLE_INPUT,"ª∂”≠π‚¡Ÿ,«Îœ»◊¢≤·","«Î‘⁄œ¬√Ê ‰»Îƒ„“™◊¢≤·µƒ√‹¬Î£∫","◊¢≤·","ÕÀ≥ˆ");
		}
		return 1;
	}
//----------------------------------[ooc]-----------------------------------------------
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
			if ((noooc) && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "** OOC∆µµ¿“—±ªπ‹¿Ì‘±Ω˚÷π !");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/o)oc [OOC¡ƒÃÏƒ⁄»›]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] == 0)
			{
				format(string, sizeof(string), "(( %s ))", (result));
			}
			else
			{
			    format(string, sizeof(string), "[[ %s ]]", (result));
			}
   			SendPlayerMessageToAll(playerid, string);
			new year,month,day;
			getdate(year, month, day);
			new hour, minute, second;
			gettime(hour,minute,second);
			format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (OOC): (%s)",day,month,year,hour,minute,second, sendername, result);
			PublicLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/noooc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2 && (!noooc))
			{
				noooc = 1;
				BroadCast(COLOR_NICERED, "** OOC∆µµ¿“—±ªπ‹¿Ì‘±Ω˚”√ !");
				format(string, sizeof(string), "[π‹¿Ì]: %s Ω˚”√¡ÀOOC∆µµ¿", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 2 && (noooc))
			{
				noooc = 0;
				BroadCast(TEAM_GROVE_COLOR, "** OOC∆µµ¿“—±ªπ‹¿Ì‘±∆Ù”√ !");
				format(string, sizeof(string), "[π‹¿Ì]: %s ∆Ù”√¡ÀOOC∆µµ¿", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/nonewbie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2 && (!nonewbie))
			{
				nonewbie = 1;
				BroadCast(COLOR_NICERED, "** –¬ ÷∆µµ¿“—±ªπ‹¿Ì‘±Ω˚”√ !");
				format(string, sizeof(string), "[π‹¿Ì]: %s Ω˚”√¡À–¬ ÷∆µµ¿", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 2 && (nonewbie))
			{
				nonewbie = 0;
				BroadCast(TEAM_GROVE_COLOR, "** –¬ ÷∆µµ¿“—±ªπ‹¿Ì‘±∆Ù”√ !");
				format(string, sizeof(string), "[π‹¿Ì]: %s ∆Ù”√¡À–¬ ÷∆µµ¿", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	//--------------------------------=Police Backup=----------------------------------------------------------------
	//===Needs Radar Clear
	if(strcmp(cmd,"/backup",true)==0 || strcmp(cmd,"/bk",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(IsACop(playerid) || IsAFreecop(playerid))
			{
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				    return 1;
				}
				if(PlayerInfo[playerid][pDuty] == 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–…œ∞‡!");
				    return 1;
				}
				if (PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					format(string, sizeof(string), "À˘”–µ•Œª◊¢“‚: %s «Î«Û∞Ô÷˙,Œª÷√“—±ª”√∫Ïµ„±ÍµΩ–°µÿÕº.", sendername);
					PlayerInfo[playerid][pRequestingBackup] = 1;
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsACop(i) || IsAFreecop(i))
							{
							    if(PlayerInfo[i][pDuty] == 1)
							    {
									SetPlayerMarkerForPlayer(i, playerid, COLOR_YELLOW);
									SendClientMessage(i, TEAM_BLUE_COLOR, string);
								}
							}
						}
					}
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "º¸»Î /bkc œ˚≥˝÷ß‘Æ«Î«Û.");
					SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /backup",d,m,y,h,mi,s,sendername);
					CommandLog(string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "ƒ„Ω¯‘ŸΩ¯––“ª∏ˆ÷ß‘Æ¡À!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª «æØ≤Ï!");
			}
		}
		return 1;
	}

	//-----------------=Radar Clear=-----------------
	//======Goes with Police Backup
	if(strcmp(cmd,"/backupclear",true)==0 || strcmp(cmd,"/bkc",true)==0)
	{
        if(PlayerInfo[playerid][pDBanned] == 1)
		{
  			SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
  			return 1;
		}
		BackupClear(playerid, 0);
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /backupclear",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}

//--------------------------------=[Roadblock]=-----------------------------------
    if(strcmp(cmd, "/crb", true) == 0 || strcmp(cmd, "/createroadblock", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && IsACop(playerid) || IsPlayerAdmin(playerid))
     	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /crb [¬∑’œ±‡∫≈]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "ø…”√¬∑’œ:");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: –°¬∑’œ | 2: ÷––Õ¬∑’œ |");
				SendClientMessage(playerid, COLOR_GRAD1, "| 3: ¥Û–Õ¬∑’œ | 4: ΩªÕ®◊∂ | 5: »∆––±Í÷æ |");
				SendClientMessage(playerid, COLOR_GRAD1, "| 6: Ω˚÷πÕ®––µƒ±Í÷æ | 7: πÿ±’±Í÷æœﬂ |");
				return 1;
			}
            new rb = strval(tmp);
            if (rb == 1)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(1459,plocx,plocy,plocz,ploca);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡À¬∑’œ(1), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Roadblock ~b~Placed!",3000,1);
				return 1;
			}
			else if (rb == 2)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(978,plocx,plocy,plocz+0.6,ploca);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡À¬∑’œ(2), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Roadblock ~b~Placed!",3000,1);
				return 1;
			}
			else if (rb == 3)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(981,plocx,plocy,plocz+0.9,ploca+180);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡À¬∑’œ(3), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Roadblock ~g~Placed!",3000,1);
		        SafeSetPlayerPos(playerid, plocx, plocy+1.3, plocz);
				return 1;
			}
			else if (rb == 4)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(1238,plocx,plocy,plocz+0.2,ploca);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡ÀΩªÕ®◊∂ÃÂ(1), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Cone ~g~Placed!",3000,1);
				return 1;
			}
			else if (rb == 5)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(1425,plocx,plocy,plocz+0.6,ploca);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡À»∆––¬∑’œ(4), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Sign ~g~Placed!",3000,1);
				return 1;
			}
			else if (rb == 6)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(3265,plocx,plocy,plocz-0.5,ploca);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡ÀΩ˚÷πÕ®––µƒ±Í÷æ(5), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Sign ~g~Placed!",3000,1);
				return 1;
			}
			else if (rb == 7)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
		        GetPlayerPos(playerid, plocx, plocy, plocz);
		        GetPlayerFacingAngle(playerid,ploca);
		        CreateRoadblock(3091,plocx,plocy,plocz+0.5,ploca+180);
		        format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s ‘⁄À˚µƒŒª÷√∑≈÷√¡Àπÿ±’±Í÷æœﬂ(6), ÕÍ±œ.",sendername);
		        SendRadioMessage(1,COLOR_BLUE,string);
		        GameTextForPlayer(playerid,"~w~Sign ~g~Placed!",3000,1);
				return 1;
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /createroadblock %d",d,m,y,h,mi,s,sendername, rb);
			CommandLog(string);
		}
	    return 1;
	}
	
	if (strcmp(cmd,"/rub",true) == 0 || strcmp(cmd, "/removeroadblock", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 2)
     	{
        	DeleteClosestRoadblock(playerid);
        	format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s œ˚≥˝¡À“ª∏ˆ¬∑’œ, ÕÍ±œ.",sendername);
	        SendRadioMessage(1,COLOR_BLUE,string);
	        GameTextForPlayer(playerid,"~w~Roadblock ~r~Removed!",3000,1);
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /removeroadblock",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
	    return 1;
	}
	
	if (strcmp(cmd,"/rrball",true) == 0 || strcmp(cmd, "/removeroadblockall", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && IsACop(playerid)  || PlayerInfo[playerid][pAdmin] >= 2)
     	{
			if(PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pAdmin] >= 2) // This being the default Chief rank in LA-RP change if neccesary.
			{
        		DeleteAllRoadblocks(playerid);
        		format(string,sizeof(string),"[◊‹≤ø]: »À‘±%s œ˚≥˝¡ÀÀ˘”–¬∑’œ, ÕÍ±œ.",sendername);
	        	SendRadioMessage(1,COLOR_BLUE,string);
	        	GameTextForPlayer(playerid,"~b~All ~w~Roadblocks ~r~Removed!",3000,1);
	        	new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /removeroadblockall",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
		}
	    return 1;
	}
//



//-------------------------------[Pay]--------------------------------------------------------------------------
    if(strcmp(cmd, "/pay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /pay [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
				return 1;
			}
			//giveplayerid = strval(tmp);
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /pay [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
				return 1;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "’‚¿Ô≤ª»›–Ì π”√’‚∏ˆ√¸¡Ó");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªƒ‹∏¯◊‘º∫÷ß∏∂ !");
					        return 1;
					    }
					    new y,m,d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						playermoney = GetPlayerMoney(playerid);
						if (moneys > 0 && playermoney >= moneys)
						{
						    if (playermoney > ScriptMoney[playerid])
							{
							    if(admins == 0 || afkadmins == admins)
								{
							  		format(string, sizeof(string), "%s (%d), ±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜ ∑¥Õ‚π“ºÏ≤‚ ø…ƒ‹ π”√¡ÀÀ¢«Æ∫⁄øÕ.", sendername, playerid);
									SendClientMessageToAll(COLOR_NICERED, string);
									format(string, sizeof(string), "ƒ„±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜ ∑¥Õ‚π“ºÏ≤‚ ø…ƒ‹ π”√¡ÀÀ¢«Æ∫⁄øÕ ($%d)",(GetPlayerMoney(playerid) - ScriptMoney[playerid]));
									SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Banned %s for: Money Hacking",d,m,y,h,mi,s,sendername);
									BanLog(string);
									ScriptBan(playerid,999,"Money Hacks");
								}
								format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ « π”√¡À À¢«Æ∫⁄øÕ; «ÎºÏ≤ÈÀ˚/À˝!!", sendername,playerid);
								SendAdminMessage(COLOR_YELLOW, string);
								PlayerSuspicious[playerid] = 1;
								PlayerMoneyHacking[playerid] = 1;
								PlayerSuspiciousMoney[playerid] = (GetPlayerMoney(playerid) - ScriptMoney[playerid]);
								PlayerGotSpottedRecently[playerid] = 1;
								SetTimerEx("ResetAcWarn", 90000, 0, "i", playerid);
								SendClientMessage(playerid, COLOR_CREAM, "* Ωª“◊÷’÷π,ƒ„µƒ«Æ ˝≤ª’˝≥£,«Î¡™œµπ‹¿Ì‘±Ω‚æˆ.");
								return 1;
							}
							SafeGivePlayerMoney(playerid, (0 - moneys));
							SafeGivePlayerMoney(giveplayerid, moneys);
							format(string, sizeof(string), "** ƒ„∑¢ÀÕ∏¯ %s(±‡∫≈: %d), $%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "** ƒ„ ’µΩ $%d ¿¥◊‘ %s(±‡∫≈: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has paid $%d to %s",d,m,y,h,mi,s, sendername, moneys, giveplayer);
							PayLog(string);
							if(moneys >= 1000000)
							{
							    format(string, sizeof(string),"[PETER]: %s (%d) ÷ß∏∂¡À $%d ∏¯ %s (%d).", sendername, playerid, moneys, giveplayer, giveplayerid);
								SendAdminMessage(COLOR_YELLOW,string);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s ƒ√≥ˆ¡À“ª–©œ÷Ω≤¢µ›∏¯¡À %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							ApplyAnimation(playerid,"DEALER","shop_pay",4.1,0,0,0,0,0);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   Ωª“◊Ω∂Ó≤ª’˝»∑.");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„¿ÎµƒÃ´‘∂¡À.");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/charity", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /charity [ ˝¡ø]");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] == 106)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "’‚¿Ô≤ª»›–Ì π”√’‚∏ˆ√¸¡Ó");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ã´…Ÿ¡À≤ªπª.");
				return 1;
			}
			if(GetPlayerMoney(playerid) < moneys)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "ƒ„√ª”–ƒ«√¥∂‡œ÷Ω.");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -moneys);
			format(string, sizeof(string), "%s ∏––ªƒ„æË‘˘, $%d.",sendername, moneys);
			printf("%s", string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /charity ($%d)",d,m,y,h,mi,s,sendername,moneys);
			PayLog(string);
		}
		return 1;
	}

// ----------------------------------------[Map-Icons]------------------------------------------------------------------
	SetPlayerMapIcon(playerid, 0, 1612.324, -2330.167, 13.5469, 38, COLOR_YELLOW);  // Spawn Point
	SetPlayerMapIcon(playerid, 1, 2048.352, -1900.153, 13.5538, 55, COLOR_YELLOW);  // Driving School
	SetPlayerMapIcon(playerid, 2, 396.2429, -2074.728, 7.835938, 9, COLOR_YELLOW);  // Fishing School
    SetPlayerMapIcon(playerid, 3, 1528.779, -1678.113, 5.890625, 30, COLOR_YELLOW);  // Police Station
    SetPlayerMapIcon(playerid, 4, 1462.5778,-1013.2362,26.8438, 52, COLOR_YELLOW);  // Bank
    SetPlayerMapIcon(playerid, 5, 1518.5179,-1452.9224,14.2031, 30, COLOR_YELLOW);  // FBI
    SetPlayerMapIcon(playerid, 6, 1178.03, -1323.41, 14.10, 22, COLOR_YELLOW);  // Hospital
    SetPlayerMapIcon(playerid, 7, 1480.9323,-1767.7324,18.7958, 56, COLOR_YELLOW);	//  –’˛Ã¸
    SetPlayerMapIcon(playerid, 8, 2468.4919,-2092.9902,13.5469, 51, COLOR_YELLOW);	// Truck Place
    SetPlayerMapIcon(playerid, 9, 2236.6321,-2280.0920,13.5469, 23, COLOR_YELLOW);	// Materials Bank
	SetPlayerMapIcon(playerid, 10, 2084.8298,-2011.9526,13.5469, 27, COLOR_YELLOW);	// Mechanic Place
	SetPlayerMapIcon(playerid, 11, 1788.7747,-1294.7137,13.5037, 44, COLOR_YELLOW);	// A.B.C News Place
	SetPlayerMapIcon(playerid, 12, 478.0687,-1498.9708,20.4831, 58, COLOR_YELLOW); // RPC Club
	SetPlayerMapIcon(playerid, 13, -1421.7410,-287.9273,14.1484, 5, COLOR_YELLOW); // SF Airport
	SetPlayerMapIcon(playerid, 14, 1675.3717,1447.8632,10.7876, 5, COLOR_YELLOW); // LV Airport
	SetPlayerMapIcon(playerid, 15, 1685.9310,-2239.2971,-2.7028, 5, COLOR_YELLOW); // LS Airport
	SetPlayerMapIcon(playerid, 16, 2072.5486,-1582.8029,13.4741, 43, COLOR_YELLOW); // ∂æ∑∑ job.
	SetPlayerMapIcon(playerid, 17, 213.8549,-230.5761,1.7786, 43, COLOR_YELLOW); // mats smuggler job
	SetPlayerMapIcon(playerid, 18, 2022.1492,-1108.7837,26.2031, 43, COLOR_YELLOW); // ∂æ∆∑◊ﬂÀΩ∑∑
	SetPlayerMapIcon(playerid, 19, -86.1251,2.6412,3.1172, 43, COLOR_YELLOW); // ∂æ∆∑÷÷÷≤…Ã
	SetPlayerMapIcon(playerid, 20, 2137.6624,-2282.3455,20.6719, 43, COLOR_YELLOW); // Gun Creator
	SetPlayerMapIcon(playerid, 21, 523.6057,-1812.9794,6.5713, 23, COLOR_YELLOW);	// Drugs Bank SMB
	SetPlayerMapIcon(playerid, 22, 1424.1729,-1317.9955,13.5547, 23, COLOR_YELLOW);	// Materials Bank Commerce
	SetPlayerMapIcon(playerid, 23, 1828.1594,-1980.4380,13.5469, 58, COLOR_YELLOW); // »˝∫œª· HQ
	SetPlayerMapIcon(playerid, 24, 1122.7406,-2037.0421,69.8942, 25, COLOR_YELLOW); // ¥Û»¶∞Ô HQ
	SetPlayerMapIcon(playerid, 25, 168.2048,-1769.3395,4.4728, 61, COLOR_YELLOW); // ¿≠∏± HQ
	SetPlayerMapIcon(playerid, 26, 1298.7075,-798.5981,84.1406, 60, COLOR_YELLOW);	// Signatra HQ
	SetPlayerMapIcon(playerid, 27, 691.5770,-1276.0026,13.5607, 59, COLOR_YELLOW);	// …Ωø⁄◊È◊‹≤ø
	SetPlayerMapIcon(playerid, 28, 1555.3328,-1610.7543,12.4250, 11, COLOR_YELLOW);	// Helipad LSPD
	SetPlayerMapIcon(playerid, 29, 2789.7092,-2531.5193,12.6450, 11, COLOR_YELLOW);	// Helipad Army
	SetPlayerMapIcon(playerid, 30, 616.7385,-1542.1398,15.3345, 20, COLOR_YELLOW);	// œ˚∑¿¥Û∂”
	SetPlayerMapIcon(playerid, 31, 2730.4297,-2451.5000,17.5937, 30, COLOR_YELLOW);	// æ¸∂”Barracks
	SetPlayerMapIcon(playerid, 32, -38.8664,56.3031,3.1172, 53, COLOR_YELLOW); // Drug Farm
	SetPlayerMapIcon(playerid, 33, 2128.0864,-1135.3912,25.5855, 53, COLOR_YELLOW); // Dealership
	SetPlayerMapIcon(playerid, 34, 537.3366,-1293.2140,17.2422, 53, COLOR_YELLOW); // Dealership
	SetPlayerMapIcon(playerid, 35, 299.1723,-1518.6627,24.6007, 53, COLOR_YELLOW); // Dealership
	SetPlayerMapIcon(playerid, 36, 2781.0132,-1613.7152,10.9219, 53, COLOR_YELLOW); // Dealership
	SetPlayerMapIcon(playerid, 37, 1756.2378,-2546.2749,13.5469, 53, COLOR_YELLOW); // Dealership
    SetPlayerMapIcon(playerid, 38, 681.6054,-473.7628,16.5363, 19, COLOR_YELLOW); // √¿π˙”ÃÃ´∞Ô HQ
//-------------------------------[License]--------------------------------------------------------------------------



	if(strcmp(cmd, "/buyfishing", true) == 0)
	{
		if(IsPlayerConnected(playerid))
       	{
       	    if(PlayerInfo[playerid][pPassport] == 0) return SendClientMessage(playerid, COLOR_GREY,"*  ◊œ»ƒ„–Ë“™“ª±æª§’’≤≈ø…“‘∞Ï¿Ì≤∂”„–Ìø…÷§{FFFFF0}ª§’’‘⁄ –’˛Ã¸µƒª§’’øº ‘µ„øº»°!!");
			if(IsPlayerInRangeOfPoint(playerid, 3,396.2429,-2074.728,7.835938))
          	{
            	if(PlayerInfo[playerid][pFishLic] == 0)
				{
				    if(GetPlayerMoney(playerid) < 5000)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ∞Ï¿Ì≤∂”„–Ìø…÷§");
				        return 1;
				    }
				    else
				    {
             			SendClientMessage(playerid, COLOR_LIGHTBLUE, "ƒ„∞Ï¿Ì,≤∂”„–Ìø…÷§ª®∑— $5, 000");
             			SafeGivePlayerMoney(playerid, - 5000);
             			PlayerInfo[playerid][pFishLic] = 1;
             			OnPlayerUpdateEx(playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buyfishing",d,m,y,h,mi,s,sendername);
						CommandLog(string);
             		}
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " ƒ„“—æ≠”–“ª±æ≤∂”„–Ìø…÷§¡À");
					return 1;
				}
			}
		}
  		return 1;
	}
	
	if (strcmp(cmd, "/afk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(AFK[playerid] == 0)
			    {
                    if(!IsPlayerInAnyVehicle(playerid))
					{
						 GetPlayerPos(playerid,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						 SafeSetPlayerPos(playerid, 0,0,2500);
					}
                    else
					{
						GetVehiclePos(idcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						SetVehiclePos(GetPlayerVehicleID(playerid), 0,0,2500);
					}
					afkadmins ++;
			 		AFK[playerid] = 1;
			 		TogglePlayerControllable(playerid, 0);
			 		TextDrawShowForPlayer(playerid, Textdraw5);
					TextDrawShowForPlayer(playerid, Textdraw50);
		    		TextDrawHideForPlayer(playerid, Textdraw44);
		    		TextDrawHideForPlayer(playerid, Textdraw45);
		    		TextDrawHideForPlayer(playerid, Textdraw55);
		    		TextDrawHideForPlayer(playerid, Textdraw49[playerid]);
		    		TextDrawHideForPlayer(playerid, Textdraw51[playerid]);
		    		if(PlayerInfo[playerid][pWatch] == 1)
					{
						TextDrawHideForPlayer(playerid, Textdraw56);
						TextDrawHideForPlayer(playerid, Textdraw57);
						TextDrawHideForPlayer(playerid, Textdraw58);
					}
				}
				else
				{
				    if(!IsPlayerInAnyVehicle(playerid)) SafeSetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                    else SetVehiclePos(idcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			 		afkadmins --;
			 		AFK[playerid] = 0;
			 		TogglePlayerControllable(playerid, 1);
			 		TextDrawHideForPlayer(playerid, Textdraw5);
					TextDrawHideForPlayer(playerid, Textdraw50);
		    		TextDrawShowForPlayer(playerid, Textdraw44);
		    		TextDrawShowForPlayer(playerid, Textdraw45);
		    		TextDrawShowForPlayer(playerid, Textdraw49[playerid]);
		    		TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
		    		TextDrawShowForPlayer(playerid, Textdraw55);
		    		if(PlayerInfo[playerid][pWatch] == 1)
					{
						TextDrawShowForPlayer(playerid, Textdraw56);
						TextDrawShowForPlayer(playerid, Textdraw57);
						TextDrawShowForPlayer(playerid, Textdraw58);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ∑√Œ ±ªæ‹æ¯.");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/update", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 4)
		{
		    ShowPlayerDialog(playerid,19990,DIALOG_STYLE_LIST,"—°‘Òƒ„œÎ÷ÿ–¬º”‘ÿµƒŒƒº˛","1\t≥µ¡æŒƒº˛\n2\t∑ø◊”Œƒº˛\n3\tBizzŒƒº˛\n4\tSBizzŒƒº˛","—°‘Ò","»°œ˚");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY,"* ƒ„Œﬁ»® π”√¥À√¸¡Ó!");
		    return 1;
		}
		return 1;
	}
//-------------------------------[Stats]--------------------------------------------------------------------------
	if (strcmp(cmd, "/stats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stats",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„ªπ√ª”–µ«¬º«Îœ»µ«¬º!");
				return 1;
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/checkcode", true) == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
			new carid = GetPlayerVehicleID(playerid)
			new vname[24]; GetVehicleName(carid, vname, sizeof(vname));
			if(IsACopCar(carid) && ((PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1) && PlayerInfo[playerid][pDuty] == 1))
			{
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAnFbiCar(carid) && ((PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2) && PlayerInfo[playerid][pDuty] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsNgCar(carid) && ((PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3) && PlayerInfo[playerid][pDuty] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsASwatCar(carid) && ((PlayerInfo[playerid][pSwat] >= 1 || PlayerInfo[playerid][pLeader] == 1) && PlayerInfo[playerid][pDuty] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsATacticalCar(carid) && ((PlayerInfo[playerid][pTactical] >= 1 || PlayerInfo[playerid][pLeader] == 2) && PlayerInfo[playerid][pDuty] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsASpecialFCar(carid) && ((PlayerInfo[playerid][pSpecialF] >= 1 || PlayerInfo[playerid][pLeader] == 3) && PlayerInfo[playerid][pDuty] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar(carid) && (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar2(carid) && (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar3(carid) && (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar4(carid) && (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar5(carid) && (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar6(carid) && (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAGangCar7(carid) && (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAnAmbulance(carid) && ((PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) && JobDuty[playerid] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
			else if(IsAFiremenCar(carid) && ((PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12) && JobDuty[playerid] == 1))
            {
			    format(string, sizeof(string),"%s (%d) ∞≤»´√‹¬Î « %d",vname,carid,VehiclePass[carid]);
			    SendClientMessage(playerid, COLOR_ORANGE,string);
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/decode", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
	            if(IsACop(playerid) && PlayerInfo[playerid][pDuty] == 1)
	                return SendClientMessage(playerid, COLOR_GREY,"* …œ∞‡ ±ƒ„≤ªƒ‹ π”√!");
	                
	            if(IsPlayerInVehicle(playerid, PlayerInfo[playerid][pPcarkey]) || IsPlayerInVehicle(playerid, PlayerInfo[playerid][pPcarkey2]))
	                return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªø…“‘∏¯ƒ„◊‘º∫µƒ≥µΩ‚¬Î");
	                
             	if(PlayerInfo[playerid][pDecoder] == 0)
	               	return SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–Ω‚¬Î∆˜,»•∫⁄ – π”√/getdecoderπ∫¬Ú!");
	               	
				if(!IsAnOwnableCar(idcar))
				{
					if(VehiclePass[idcar] == 0)
						return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªø…“‘∏¯’‚¡æ≥µΩ‚¬Î!");
				}
	                
				ShowPlayerDialog(playerid, 20000, DIALOG_STYLE_LIST,"—°œÓ","1\tø™ ºΩ‚¬Î\n2\tÕÀ≥ˆ∆˚≥µ","—°‘Ò","»°œ˚");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/getdecoder", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„÷ª”–‘⁄∫⁄ –≤≈ø…“‘π∫¬Ú !");
				return 1;
			}
			if(GetPlayerMoney(playerid) < 25000)
				return SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–$ 25000!");

			PlayerInfo[playerid][pDecoder] = 1;
			SendClientMessage(playerid, COLOR_GREY,"* ƒ„¬Ú¡ÀΩ‚¬Î∆˜ª®∑—¡À 25000$!");
			SafeGivePlayerMoney(playerid, -25000);
		}
	}
	
	if (strcmp(cmd, "/security", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„÷ªƒ‹‘⁄∫⁄ – π”√ !");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 5)
			{
			    if(SurenosSecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(SurenosSecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(SurenosSecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 6)
			{
			    if(SignatraSecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(SignatraSecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(SignatraSecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 14)
			{
			    if(YamaguchiSecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(YamaguchiSecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(YamaguchiSecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 15)
			{
			    if(BratvaSecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(BratvaSecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(BratvaSecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 16)
			{
			    if(ViceSecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(ViceSecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(ViceSecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 13)
			{
			    if(AnarchySecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(AnarchySecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(AnarchySecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
			else if(PlayerInfo[playerid][pLeader] == 8)
			{
			    if(HitmanSecurity == 1)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (-$100000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(HitmanSecurity == 2)
			    {
			        new text[] = "1\tÃ·∏ﬂ∆˚≥µ∞≤»´–‘µΩ10Œª ˝ (-$250000)\n2\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ5Œª ˝ (+$75000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
				else if(HitmanSecurity == 3)
			    {
			        new text[] = "1\tΩµµÕ∆˚≥µ∞≤»´–‘µΩ7Œª ˝ (+$200000)";
			        ShowPlayerDialog(playerid,19999,DIALOG_STYLE_LIST,"—°‘ÒœÓƒø",text,"—°‘Ò","»°œ˚");
				}
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/attachweapon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(UsingDrugs[playerid] == 1)
		        return SendClientMessage(playerid, COLOR_GREY,"* µ»¥˝∂æ∆∑–ßπ˚π˝»•");

			new gun = GetPlayerWeapon(playerid);
			if(gun == 0 || gun == 1 || gun == 6 || gun == 9 || gun == 14 || gun == 36 || gun == 37 || gun == 38 || gun == 39 || gun == 43 || gun == 46 || gun == 40)
			{
			    SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªø…“‘¥¯…œ’‚∏ˆŒ‰∆˜!");
				return 1;
			}
			/*else
			{
				AttachWeaponCorrectly(playerid, gun);
			}*/
		}
		return 1;
	}
	
	if (strcmp(cmd, "/deattachweapon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(UsingDrugs[playerid] == 1)
		        return SendClientMessage(playerid, COLOR_GREY,"* µ»¥˝∂æ∆∑–ßπ˚π˝»•");
		        
			//AttachWeaponCorrectly(playerid, 99);
		}
		return 1;
	}
	
	if (strcmp(cmd, "/calendar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (Calendar[playerid] == 0)
			{
				ShowCalendar(playerid);
				Calendar[playerid] = 1;
				TextDrawHideForPlayer(playerid, Textdraw44);
			    TextDrawHideForPlayer(playerid, Textdraw45);
			    TextDrawHideForPlayer(playerid, Textdraw55);
			    TextDrawHideForPlayer(playerid, Textdraw51[playerid]);
			    if(PlayerInfo[playerid][pWatch] == 1)
				{
					TextDrawHideForPlayer(playerid, Textdraw56);
					TextDrawHideForPlayer(playerid, Textdraw57);
					TextDrawHideForPlayer(playerid, Textdraw58);
				}
			}
			else
			{
			    HideCalendar(playerid);
			    Calendar[playerid] = 0;
			    TextDrawShowForPlayer(playerid, Textdraw44);
			    TextDrawShowForPlayer(playerid, Textdraw45);
			    TextDrawShowForPlayer(playerid, Textdraw55);
			    TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
			    if(PlayerInfo[playerid][pWatch] == 1)
				{
					TextDrawShowForPlayer(playerid, Textdraw56);
					TextDrawShowForPlayer(playerid, Textdraw57);
					TextDrawShowForPlayer(playerid, Textdraw58);
				}
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/blackjesus", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			First = 1;
		}
		return 1;
	}
	
	if (strcmp(cmd, "/scratchcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stats",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„ªπ√ª”–µ«¬º«Îœ»µ«¬º!");
				return 1;
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/quitfaction", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (CanLeaveFaction[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY,"* ƒ„–Ë“™ ⁄»®ÕÀ≥ˆ∞Ô≈…, π”√/account!");
	            return 1;
			}
			if (PlayerInfo[playerid][pLeader] != 0 || PlayerInfo[playerid][pMember] != 0)
			{
				if(PlayerInfo[playerid][pLeader] >= 1)
				{
				    format(string,sizeof(string),"* ƒ„¿Îø™¡Àƒ„µƒ∞Ô≈… %d",PlayerInfo[playerid][pLeader]);
				    SendClientMessage(playerid, COLOR_GREY,string);
				    format(string, sizeof(string),"* ±æ∞Ô≈…µƒ, %s,ÕÀ≥ˆ¡À∞Ô≈…!",sendername);
				    SendRadioMessage(PlayerInfo[playerid][pLeader],TEAM_RADIO_COLOR,string);
				    PlayerInfo[playerid][pLeader] = 0;
				}
				else if(PlayerInfo[playerid][pMember] >= 1)
				{
				    format(string,sizeof(string),"* ƒ„¿Îø™¡Àƒ„µƒ∞Ô≈… %d",PlayerInfo[playerid][pMember]);
				    SendClientMessage(playerid, COLOR_GREY,string);
				    format(string, sizeof(string),"* ±æ∞Ô≈…µƒ, %s,ÕÀ≥ˆ¡À∞Ô≈…!",sendername);
				    SendRadioMessage(PlayerInfo[playerid][pMember],TEAM_RADIO_COLOR,string);
				    PlayerInfo[playerid][pMember] = 0;
				}
				PlayerInfo[playerid][pFMember] = 255;
				PlayerInfo[playerid][pRank] = 0;
				PlayerInfo[playerid][pChar] = 0;
				SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤¢≤ª‘⁄“ª∏ˆ∞Ô≈…¿Ô!");
				return 1;
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/cancelcountdown", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				KillTimer(CountdownTimer);
			    TextDrawHideForAll(Textdraw46);
			    CountdownRunning = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /cancelcountdown",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„≤ª «π‹¿Ì‘±!");
				return 1;
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/checksafe", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new house = PlayerInfo[playerid][pPhousekey];
			new gunname[24];
			new gunname1[24];
			new gunname2[24];
			new gunname3[24];
			new gunname4[24];
			new gunname5[24];
	        GetWeaponName(HouseInfo[house][hWeapon1],gunname, sizeof(gunname));
	        GetWeaponName(HouseInfo[house][hWeapon2],gunname1, sizeof(gunname1));
	        GetWeaponName(HouseInfo[house][hWeapon3],gunname2, sizeof(gunname2));
	        GetWeaponName(HouseInfo[house][hWeapon4],gunname3, sizeof(gunname3));
	        GetWeaponName(HouseInfo[house][hWeapon5],gunname4, sizeof(gunname4));
	        GetWeaponName(HouseInfo[house][hWeapon6],gunname5, sizeof(gunname5));
			if(IsPlayerInRangeOfPoint(playerid, 15, HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]))
			{
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- ƒ„”– %d ∂æ∆∑∫Õ %d ≤ƒ¡œ.",HouseInfo[house][hDrugs],HouseInfo[house][hMaterials]);
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- Œ‰∆˜ 1 - %s µØ“©: %d.",gunname,HouseInfo[house][hAmmo1]);
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- Œ‰∆˜ 2 - %s µØ“©: %d.",gunname1,HouseInfo[house][hAmmo2]);
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- Œ‰∆˜ 3 - %s µØ“©: %d.",gunname2,HouseInfo[house][hAmmo3]);
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- Œ‰∆˜ 4 - %s µØ“©: %d.",gunname3,HouseInfo[house][hAmmo4]);
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- Œ‰∆˜ 5 - %s µØ“©: %d.",gunname4,HouseInfo[house][hAmmo5]);
				SendClientMessage(playerid, COLOR_GREY,string);
				format(string, sizeof(string),"-∑øŒ›¥¢≤ÿ “- Œ‰∆˜ 6 - %s µØ“©: %d.",gunname5,HouseInfo[house][hAmmo6]);
				SendClientMessage(playerid, COLOR_GREY,string);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /checksafe",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„ªπ√ª”–µ«¬º«Îœ»µ«¬º!");
				return 1;
			}
		}
		return 1;
	}
	

	
	if (strcmp(cmd, "/taketest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsPlayerInRangeOfPoint(playerid, 2.0, 358.2374,161.3243,1008.3828))
			{
                if(OnPassportTest[playerid] == 0)
                {
                    if(PlayerInfo[playerid][pPassport] == 0)
                    {
                        if(PlayerInfo[playerid][pPassportTime] == 0)
                        {
			                ClearChatbox(playerid, 10);
			                TestStep[playerid] = 1;
						    SendClientMessage(playerid, COLOR_YELLOW,"1 - Ω«…´∞Á—›¥˙±Ì ≤√¥ƒÿ?");
						    ClearChatbox(playerid, 4);
						    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
						    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
						    SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ““™œÒ“ª∏ˆ∫œ∑®µƒπ´√Ò,◊Ò ÿ’‚¿ÔµƒπÊ‘Ú.");
						    SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
						    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
						    OnPassportTest[playerid] = 1;
						    GameTextForPlayer(playerid, "~w~Type ~y~/canceltest ~w~if you wish to finish the test ~g~(No Fees)",10000,4);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /taketest",d,m,y,h,mi,s,sendername);
							CommandLog(string);
						}
						else
						{
						    format(string, sizeof(string),"* ƒ„–Ë“™µ»¥˝ %d ∑÷÷”,‘Ÿø™ º–¬µƒ≤‚ ‘...",(PlayerInfo[playerid][pPassportTime] / 60))
							SendClientMessage(playerid, COLOR_GRAD1, string);
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„“—æ≠”–“ª∏ˆª§’’¡À,≤ª”√‘Ÿ¥Œøº»°¡À...");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„œ÷‘⁄≤ª‘⁄ –’˛Ã¸!");
				return 1;
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/savecar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new car;
	        if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey]) { car = PlayerInfo[playerid][pPcarkey]; }
			else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pPcarkey2]) { car = PlayerInfo[playerid][pPcarkey2]; }
			if (car != 9999)
			{
				if(IsPlayerInVehicle(playerid, car))
				{
				    new info[] = "±£¥Ê∆˚≥µŒª÷√ \n ±£¥Ê≥µƒ£–Õ \n ±£¥ÊÀ˘”–≥µƒ£–Õ \n «Â≥˝≥µƒ£–Õ\n «Â≥˝À˘”–≥µƒ£–Õ ";
					ShowPlayerDialog(playerid, 1300, DIALOG_STYLE_LIST,"—°‘Ò—°œÓ",info,"»∑∂®","»°œ˚");
					SendClientMessage(playerid, COLOR_PINK,"* “™±£¥Ê≥µµƒ—’…´ π”√/v paintjob ∫Õ /v color");
					SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„ «≤ª «‘⁄“ª∏ˆsetted≥µ¿Ô.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„‘⁄≤ª‘⁄ƒ„µƒ≥µ¿Ô!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„√ª”–“ª¡æ◊‘º∫µƒ≥µ!");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/nocp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
			    if(IsOnTutorial[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„‘⁄“ª∏ˆΩÃ≥Ã÷–ƒ„»Áπ˚œÎ»°œ˚À¸«Î π”√ /canceltutorial");
				}
				else
				{
			        SendClientMessage(playerid, COLOR_GREY, "ƒ„»°œ˚¡Àƒ„µƒΩÃ≥Ã!");
			        DisablePlayerCheckpoint(playerid);
			        new Float:X,Float:Y,Float:Z;
					PlayerPlaySound(playerid, 1057, X,Y,Z);
					new d,m,y;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Typed '/nocp'",d,m,y,h,mi,s,sendername);
					CommandLog(string);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "ƒ„ªπ√ª”–µ«¬º«Îœ»µ«¬º!");
			    return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/down", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
   				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly,slz-2);
				}
				else
				{
					SafeSetPlayerPos(playerid, slx, sly, slz-2);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /down",d,m,y,h,mi,s,sendername);
				MovesLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly,slz+2);
				}
				else
				{
					SafeSetPlayerPos(playerid, slx, sly, slz+2);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /up",d,m,y,h,mi,s,sendername);
				MovesLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/fly", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				GetPlayerPos(playerid, px, py, pz);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
				    if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px,py+30,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px, py+30, pz+5);
					}
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px,py+30,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px, py+30, pz+5);
					}
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px-15,py+15,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px-15, py+15, pz+5);
					}
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px-30,py,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px-30, py, pz+5);
					}
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px-15,py-15,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px-15, py-15, pz+5);
					}
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px,py-30,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px, py-30, pz+5);
					}
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px+15,py-15,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px+15, py-15, pz+5);
					}
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px+30,py,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px+30, py, pz+5);
					}
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					if(IsPlayerInAnyVehicle(playerid))
				    {
				        SetVehiclePos(GetPlayerVehicleID(playerid),px+15,py+15,pz+5);
					}
					else
					{
						SafeSetPlayerPos(playerid, px+15, py+15, pz+5);
					}
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /fly",d,m,y,h,mi,s,sendername);
				MovesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/left", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly+2,slz);
				}
				else
				{
					SafeSetPlayerPos(playerid, slx, sly+2, slz);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /left",d,m,y,h,mi,s,sendername);
				MovesLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/right", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),slx,sly-2,slz);
				}
				else
				{
					SafeSetPlayerPos(playerid, slx, sly-2, slz);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /right",d,m,y,h,mi,s,sendername);
				MovesLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/forw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),slx+2,sly,slz);
				}
				else
				{
					SafeSetPlayerPos(playerid, slx+2,sly, slz);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /forw",d,m,y,h,mi,s,sendername);
				MovesLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/back", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),slx-2,sly,slz);
				}
				else
				{
					SafeSetPlayerPos(playerid, slx-2, sly, slz);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /back",d,m,y,h,mi,s,sendername);
				MovesLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘± !");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/checkspeed", true) == 0 || strcmp(cmd, "/cs", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsACop(playerid) || IsAFreecop(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /checkspeed [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new speed = GetPlayerSpeed(giveplayerid, true);
						if(ViewingSpeed[playerid] == 0)
						{
						    if(speed == 0)
			    			{
    							TextDrawSetString(Textdraw41[playerid], "~l~...");
							}
						    else if(speed <= 80)
						    {
						        TextDrawSetString(Textdraw41[playerid], "~g~~h~...");
							}
							else if(speed >= 81 && speed <= 120)
							{
							    TextDrawSetString(Textdraw41[playerid], "~y~~h~...");
							}
							else if(speed >= 121)
							{
							    TextDrawSetString(Textdraw41[playerid], "~r~~h~...");
							}
							format(string, sizeof(string),"%s (%d)'s Speed is %d KM/h.",giveplayer,giveplayerid,speed);
						    TextDrawSetString(Textdraw42[playerid],string);
						    ShowSpeedGun(playerid);
						    HideSpeed = SetTimerEx("HideSpeedGun",5000,0,"i",playerid);
						}
						else if(ViewingSpeed[playerid] == 1)
						{
						    KillTimer(HideSpeed);
						    HideSpeedGun(playerid);
						    if(speed == 0)
			    			{
			       				TextDrawSetString(Textdraw41[playerid], "~l~...");
							}
						    else if(speed <= 80)
						    {
						        TextDrawSetString(Textdraw41[playerid], "~g~~h~...");
							}
							else if(speed >= 81 && speed <= 120)
							{
							    TextDrawSetString(Textdraw41[playerid], "~y~~h~...");
							}
							else if(speed >= 121)
							{
							    TextDrawSetString(Textdraw41[playerid], "~r~~h~...");
							}
							format(string, sizeof(string),"%s (%d)'s Speed is %d KM/h.",giveplayer,giveplayerid,speed);
						    TextDrawSetString(Textdraw42[playerid],string);
						    ShowSpeedGun(playerid);
						    HideSpeed = SetTimerEx("HideSpeedGun",5000,0,"i",playerid);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %sSpeed",d,m,y,h,mi,s,sendername,giveplayer);
						CommandLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/area", true) == 0 || strcmp(cmd, "/area", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /area [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
 		  	giveplayerid = ReturnUser(tmp);
 		  	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(UsedAreaRecently[playerid] == 0)
			        {
	                    new zone[MAX_ZONE_NAME];
	                    GetPlayer2DZone(giveplayerid, zone, MAX_ZONE_NAME);
	                    if(PlayerInfo[giveplayerid][pInteriorNr] == 0)
						{
					        format(string,sizeof(string),"%s (%d)  «‘⁄ %s",giveplayer,giveplayerid, zone);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 1)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ¬Â…ºÌ∂…£Õ–ÀπæØ≤Ïæ÷,  –÷––ƒπ„≥°, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 2)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄   –’˛Ã¸, …Ã“µ, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 3)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ “¯––, ¬Â…ºÌ∂…£Õ–Àπ –÷––ƒ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 4)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ¡™∞Óµ˜≤Èæ÷◊‹≤ø, …Ã“µ, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 5)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ æ¸∂””™∑ø, ∫£—Û¬ÎÕ∑, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 6)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ …Ωø⁄◊È◊‹≤ø, Vinewood, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 7)
						{
						    format(string,sizeof(string),"%s (%d) ‘⁄ ¿≠∏±◊‹≤ø,  •¬Ì¿Ôƒ…∫£Ã≤, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 8)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ¥Û»¶∞Ô ∫⁄∞Ô ◊‹≤ø, Œ§∂˚∑ÚÀπ, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 9)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ »˝∫œª· ◊‹≤ø, El Corona, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 10)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ≥£øÕ–›œ¢ “, Rodeo, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 11)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ DMW, Little Mexico, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 23)
						{
						    format(string,sizeof(string),"%s (%d) ‘⁄ œ˚∑¿¥Û∂”, Rodeo, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 24)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ Hitmen Headquarters, Beacon Hill, Red County.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 25)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ DDÃÂ”˝≥°, Rockshore East, ¿≠ÀπŒ¨º”Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 28)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ∫Ωø’π´Àæ",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 29)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ Hospital, Market, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 31)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ¬Ûµ¬¡÷∞Ô ◊‹≤ø, Mullholland, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 32)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ π„≤•π´Àæ, ∏Ò¬◊π´‘∞, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 33)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ ≥ˆ◊‚≥µπ´Àæ ◊‹≤ø, El Corona, ¬Â…ºÌ∂…£Õ–Àπ.",giveplayer,giveplayerid);
						}
						else if(PlayerInfo[giveplayerid][pInteriorNr] == 40)
						{
					        format(string,sizeof(string),"%s (%d) ‘⁄ √¿π˙”ÃÃ´∞Ô ◊‹≤ø, Dillimore, Red County.",giveplayer,giveplayerid);
						}
						else
						{
							if(HouseEntered[playerid] < 9999)
							{
							    new housezone[24];
	 		  					GetHouse2DZone2(HouseEntered[giveplayerid],housezone,sizeof(housezone));
						        format(string,sizeof(string),"%s (%d) ‘⁄ %s (%d), %s.",giveplayer,giveplayerid,HouseInfo[HouseEntered[playerid]][hMessage], HouseEntered[giveplayerid], housezone);
							}
							if(BizzEntered[playerid] < 9999)
							{
							    new housezone[24];
	 		  					GetBizz2DZone2(HouseEntered[giveplayerid],housezone,sizeof(housezone));
						        format(string,sizeof(string),"%s (%d) ‘⁄ %s (%d), %s.",giveplayer,giveplayerid, BizzInfo[BizzEntered[playerid]][bMessage], BizzEntered[giveplayerid], housezone);
							}
						}
	                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                    UsedAreaRecently[playerid] = 1;
	                    SetTimerEx("ResetArea",5000,false, "i",playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %sArea",d,m,y,h,mi,s,sendername,giveplayer);
						CommandLog(string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„∏’ π”√¡À’‚∏ˆ√¸¡Ó,«Îµ»¥˝5√Î∫Û π”√!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/showrules", true) == 0 || strcmp(cmd, "/sr", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /showrules [ÕÊº“ID/ÕÊº“√˚◊÷] ªÚ /sr [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(ViewingRules[giveplayerid] == 0)
				        {
							ShowRules(giveplayerid);
							ViewingRules[giveplayerid] = 1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "[π‹¿Ì]: %s œ‘ æπÊ‘Ú∏¯ %s (%d).", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %sStats",d,m,y,h,mi,s,sendername,giveplayer);
							AdminLog(string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "* ÕÊº““—æ≠‘⁄≤Èø¥πÊ‘Ú¡À.");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
				return 1;
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/changename", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(CanChangeName[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "* Œ™¡Àƒ„µƒ’ ªß∞≤»´ ◊œ»–Ë“™ ⁄»®∏¸∏ƒ! (/account)");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /changename [–¬µƒ√˚◊÷]");
				return 1;
			}
			if(PlayerInfo[playerid][pShiftName] == 0 && GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒ«Æ≤ªπª!");
			if(ChangedName[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„œ÷‘⁄∏ƒ±‰¡Àƒ„µƒ√˚◊÷,»ÙœÎ÷ÿ–¬∏¸∏ƒ«Î‘Ÿ¥Œ ‰»Î∏¸∏ƒ");
			if(!IsPlayerInRangeOfPoint(playerid, 3, 358.3578,167.7956,1008.3828) && PlayerInfo[playerid][pShiftName] == 0) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄ –’˛Ã¸,∏¸∏ƒ√˚◊÷µƒµÿ∑Ω!");
			format(string, sizeof(string), "LARP/Users/%s.ini", tmp);
			if(!dini_Exists(string))
			{
			    SetPlayerName(playerid, tmp);
				format(string, sizeof(string),"** √˚◊÷∏¸∏ƒ≥…π¶!ƒ„µƒ–¬√˚◊÷ « %s", tmp);
				SendClientMessage(playerid, COLOR_SEA, string);
				new housekey = PlayerInfo[playerid][pPhousekey];
				new bizzkey = PlayerInfo[playerid][pPbiskey];
				new carkey1 = PlayerInfo[playerid][pPcarkey];
				new carkey2 = PlayerInfo[playerid][pPcarkey2];
				if(PlayerInfo[playerid][pShiftName] == 0)
				{
					SafeGivePlayerMoney(playerid, -10000);
				}
				format(string, sizeof(string),"%s",tmp);
				if(PlayerInfo[playerid][pPhousekey] != 9999)
				{
				    strmid(HouseInfo[housekey][hOwner],string,0,strlen(string),255);
				    OnPropUpdate(1,housekey);
				    OnPropTextdrawUpdate(1, housekey);
				    SendClientMessage(playerid, TEAM_GROVE_COLOR,"* ∑ø≤˙πÈ Ù∏ƒ±‰≥…π¶!!");
				}
				if(PlayerInfo[playerid][pPbiskey] != 9999)
				{
				    strmid(BizzInfo[bizzkey][bOwner],string,0,strlen(string),255);
				    OnPropUpdate(2,bizzkey);
				    OnPropTextdrawUpdate(2, bizzkey);
				    SendClientMessage(playerid, TEAM_GROVE_COLOR,"* ≤˙“µπÈ Ù∏ƒ±‰≥…π¶!!");
				}
				if(PlayerInfo[playerid][pPcarkey] != 9999)
				{
				    strmid(CarInfo[carkey1][cOwner],string,0,strlen(string),255);
				    OnPropUpdate(4,carkey1);
				    SendClientMessage(playerid, TEAM_GROVE_COLOR,"* µ⁄“ª¡æ≥µπÈ Ù∏ƒ±‰≥…π¶!!");
				}
				if(PlayerInfo[playerid][pPcarkey2] != 9999)
				{
				    strmid(CarInfo[carkey2][cOwner],string,0,strlen(string),255);
				    OnPropUpdate(4,carkey2);
				    OnPropTextdrawUpdate(1, housekey);
				    SendClientMessage(playerid, TEAM_GROVE_COLOR,"* µ⁄∂˛¡æ≥µπÈ Ù∏ƒ±‰≥…π¶!!");
				}
				format(string, sizeof(string), "LARP/Users/%s.ini", sendername);
				fremove(string);
				format(string, sizeof(string), "LARP/Users/%s.ini", tmp);
				dini_Create(string);
				OnPlayerUpdateEx(playerid);
				ChangeNameTimer = SetTimerEx("ChangeYourName", 1500, true, "i", playerid);
				ChangedName[playerid] = 1;
				if(PlayerInfo[playerid][pShiftName] == 1) { PlayerInfo[playerid][pShiftName] = 0; SendClientMessage(playerid, COLOR_GREY, "* You used your Shiftname Rights!"); }
			}
			else return SendClientMessage(playerid, COLOR_GREY,"* ’‚∏ˆ√˚◊÷“—±ª≤…”√!");
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has changed his name to %s",d,m,y,h,mi,s,sendername,tmp);
			AdminLog(string);
			LoginLog(string);
		}
		return 1;
	}


	if (strcmp(cmd, "/shiftname", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /shiftname [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerInfo[giveplayerid][pShiftName] == 0)
				        {
							PlayerInfo[giveplayerid][pShiftName] = 1;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "[π‹¿Ì]: %s √‚∑—∑¢∑≈¡À“ª∏ˆ∏ƒ√˚»®œﬁ∏¯ %s (%d).", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							GameTextForPlayer(giveplayerid, "~r~Shift Name Rights ~n~~w~Administration has Granted you a free Changename",10000,4);
							SendClientMessage(giveplayerid, TEAM_GROVE_COLOR,"** π‹¿Ì‘±√‚∑—∑¢∑≈¡À“ª∏ˆ∏ƒ√˚»®œﬁ/changename!");
						}
						else
						{
						    PlayerInfo[giveplayerid][pShiftName] = 0;
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "[π‹¿Ì]: %s »°œ˚¡À %s (%d)√‚∑—∏ƒ√˚»®œﬁ.", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							GameTextForPlayer(giveplayerid, "~r~Shift Name Rights ~n~~w~Administration has Removed you a free Changename",10000,4);
							SendClientMessage(giveplayerid, COLOR_GREY,"** π‹¿Ì‘±»°œ˚¡À√‚∑—∏ƒ√˚»®œﬁ/changename!");
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave/Remove a shiftname to %s",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "** √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/disarm", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /disarm [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						SafeResetPlayerWeapons(giveplayerid);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s Ω‚≥˝¡À %s (%d)Œ‰◊∞.", sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Disarmed %s",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/NotChecked", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /NotChecked [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
      					Checked[giveplayerid] = 0;
      					PlayerGotSpottedRecently[giveplayerid] = 0;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s “—…Ë÷√ %s (%d) ≤ª±ªºÏ≤È.", sendername, giveplayer, giveplayerid);
						SendAdminMessage(COLOR_LIGHTRED, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s as Non Checked",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/Checked", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /Checked [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
      					Checked[giveplayerid] = 1;
      					PlayerGotSpottedRecently[giveplayerid] = 1;
						PlayerMoneyHacking[giveplayerid] = 0;
						PlayerSpeedHacking[giveplayerid] = 0;
						PlayerInteriorHacking[giveplayerid] = 0;
						PlayerBunnyJumping[giveplayerid] = 0;
						PlayerOnCashInbalance[giveplayerid] = 0;
						PlayerFailedToLogin[giveplayerid] = 0;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s …Ë÷√ %s (%d) ±ªºÏ≤È.", sendername, giveplayer, giveplayerid);
						SendAdminMessage(COLOR_LIGHTRED, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s as Checked",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

//-------------------------------[Check]--------------------------------------------------------------------------


	if (strcmp(cmd, "/whyleft", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /whyleft [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
	            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string),"* %s (%d) ◊Ó∫Û¿Îø™µƒ‘≠“Ú: %s ",giveplayer,giveplayerid,PlayerInfo[playerid][pWhyLeft]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À %s (%d) Leaving Reason.", sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %sLeaving Reason",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/spec", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /spec [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
	            giveplayerid = ReturnUser(tmp);
	            new Float:Health, Float:Armour;
	            new World = GetPlayerVirtualWorld(playerid);
	            new PlInterior = GetPlayerInterior(playerid);
	            new weaponid, ammo;
	            GetPlayerHealth(playerid, Health);
	            GetPlayerArmour(playerid, Armour);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(Spectate[playerid] == 255)
						{
						    GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                            if(PlayerInfo[playerid][pAdmin] >= 6)
							{
							    if(PlayerInfo[playerid][pAdminDuty] == 1)
								{
								    for (new i=0; i<13; i++)
									{
										GetPlayerWeaponData(playerid, i, weaponid, ammo);
                                        OtherWeapons[playerid][i] = weaponid;
										OtherAmmo[playerid][i] = ammo;
									}
									SpHealth[playerid] = Health;
									SpArmour[playerid] = Armour;
								}
								else
								{
								    SaveGuns(playerid);
								    PlayerInfo[playerid][pHealth] = Health;
								    PlayerInfo[playerid][pArmour] = Armour;
								}
							}
							else
							{
							    SaveGuns(playerid);
							    PlayerInfo[playerid][pHealth] = Health;
								PlayerInfo[playerid][pArmour] = Armour;
							}
						}
						Interior[playerid] = PlInterior;
						VirWorld[playerid] = World;
						TogglePlayerSpectating(playerid, 1);
				        if(IsPlayerInAnyVehicle(giveplayerid)) { PlayerSpectateVehicle(playerid, GetPlayerVehicleID(giveplayerid)); }
				        else { PlayerSpectatePlayer(playerid, giveplayerid); }
				        Spectate[playerid] = giveplayerid;
				        SafeSetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s ≈‘π€ %s (%d).", sendername, giveplayer, giveplayerid);
						SendAdminMessage(COLOR_LIGHTRED,string);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ƒ„œ÷‘⁄‘⁄≈‘π€’‚∏ˆÕÊº“.  π”√ /endspec <ÕÊº“ID>«–ªªπ€ø¥¡Ì“ª∏ˆÕÊº“");
                        TextDrawHideForPlayer(playerid, Textdraw44);
			    		TextDrawHideForPlayer(playerid, Textdraw45);
			    		TextDrawHideForPlayer(playerid, Textdraw55);
			    		TextDrawHideForPlayer(playerid, Textdraw51[playerid]);
			    		TextDrawShowForPlayer(playerid, Textdraw54[playerid]);
			    		if(PlayerInfo[playerid][pWatch] == 1)
						{
							TextDrawHideForPlayer(playerid, Textdraw56);
							TextDrawHideForPlayer(playerid, Textdraw57);
							TextDrawHideForPlayer(playerid, Textdraw58);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s is speccing %s's",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/endspec", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /endspec [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        TogglePlayerSpectating(playerid, 0);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s Ω· ¯¡À≈‘π€ÕÊº“ %s (%d).", sendername, giveplayer, giveplayerid);
						SendAdminMessage(COLOR_LIGHTRED,string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s is speccing %s's",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

    if (strcmp(cmd, "/aeject", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /aeject [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        SafeRemovePlayerFromVehicle(giveplayerid);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s Ω´ÕÊº“ %s (%d) ¥”À˚µƒ≥µ¿ÔµØ…‰≥ˆ¿¥.", sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Ejected %sfrom his car",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "* √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/votekick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /votekick [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
            giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(votationrecently == 0)
			        {
						votation = 1;
						votationrecently = 1;
						votetype = 1;
						beingvoted = giveplayerid;
						KillTimer(votetimer1);
						votetimer1 = SetTimer("ResetVotation",600000,false);
						votetimer2 = SetTimer("FinishVotation",60000,false);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string,sizeof(string),"* %s (%d) ø™ º¡ÀÕ∂∆±Ãﬂ≥ˆ %s, Õ¨“‚ ‰»Î/yes ≤ªÕ¨“‚ ‰»Î  /no ",sendername,playerid,giveplayer);
						SendClientMessageToAll(TEAM_GROVE_COLOR,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s ø™ º¡ÀÕ∂∆±Ãﬂ≥ˆÕÊº“ %s (%d).", sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Started Votation to kick %s's",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ”–“ª∏ˆÕ∂∆±‘⁄Ω¯––¡À«Îµ»¥˝À¸Ω· ¯!");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* √ª”–’‚∏ˆÕÊº“");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/voteban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /voteban [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
            giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(votationrecently == 0)
			        {
			            if(PlayerInfo[playerid][pRegularRank] >= 2)
			            {
							votation = 1;
							votationrecently = 1;
							votetype = 2;
							beingvoted = giveplayerid;
							KillTimer(votetimer1);
							votetimer1 = SetTimer("ResetVotation",600000,false);
							votetimer2 = SetTimer("FinishVotation",60000,false);
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							format(string,sizeof(string),"* %s (%d) ø™ ºÕ∂∆±∂‘ÕÊº“ %s Ω¯––∑‚∫≈, Õ¨“‚ ‰»Î/yes ≤ªÕ¨“‚ ‰»Î  /no",sendername,playerid,giveplayer);
							SendClientMessageToAll(TEAM_GROVE_COLOR,string);
							format(string, sizeof(string), "[π‹¿Ì]: %s ø™ ºÕ∂∆±∂‘ÕÊº“%s (%d) Ω¯––∑‚∫≈.", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Started Votation to ban %s's",d,m,y,h,mi,s,sendername,giveplayer);
							AdminLog(string);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY,"* ≥£øÕµ»º∂Œ™2µƒΩ˚÷π∑‚∫≈!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY,"* ”–“ª∏ˆÕ∂∆±‘⁄Ω¯––¡À«Îµ»¥˝À¸Ω· ¯!");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* √ª”–’‚∏ˆÕÊº“");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/yes", true) == 0)
	{
	    if(votation == 1)
	    {
		    if(votedrecently[playerid] == 0)
		    {
		        voteyes ++;
		        votedrecently[playerid] = 1;
		        new GivePlayer[MAX_PLAYER_NAME];
				GetPlayerName(beingvoted, GivePlayer,sizeof(GivePlayer));
		        SendClientMessage(playerid, COLOR_GREY,"* ƒ„‘ﬁ≥…¡ÀÕ∂∆±");
		        format(string,sizeof(string),"[Õ∂∆±œµÕ≥]: (%s) Õ¨“‚ %d -- ≤ªÕ¨“‚ %d",GivePlayer,voteyes,voteno);
		        SendClientMessageToAll(TEAM_GROVE_COLOR,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—æ≠Õ∂π˝∆±¡À!");
				return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY,"* µ±«∞√ª”–Õ∂∆±Ω¯––!");
		    return 1;
		}
		return 1;
	}
	
	if (strcmp(cmd, "/cancelvote", true) == 0)
	{
	    if(votation == 1)
	    {
		    if(PlayerInfo[playerid][pAdmin] >= 2)
		    {
		        voteyes = 0;
		        voteno = 0;
		        votation = 0;
		        votetype = 0;
		        votationrecently = 0;
		        beingvoted = 255;
		        for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        votedrecently[i] = 0;
					}
				}
		        KillTimer(votetimer1);
		        KillTimer(votetimer2);
		        format(string,sizeof(string),"[Õ∂∆±œµÕ≥]: π‹¿Ì‘± %s »°œ˚¡À’‚¥ŒÕ∂∆±",sendername);
		        SendClientMessageToAll(TEAM_GROVE_COLOR,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—Ω¸Õ∂π˝∆±¡À!");
				return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY,"* µ±«∞√ª”–Õ∂∆±Ω¯––!");
		    return 1;
		}
		return 1;
	}

    if (strcmp(cmd, "/no", true) == 0)
	{
	    if(votedrecently[playerid] == 0)
	    {
	        if(votation == 1)
	        {
		        voteno ++;
			    votedrecently[playerid] = 1;
			    new giveplayer2[MAX_PLAYER_NAME];
				GetPlayerName(beingvoted, giveplayer2,sizeof(giveplayer2));
		        SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªÕ¨“‚’‚¥ŒÕ∂∆±");
		        format(string,sizeof(string),"[Õ∂∆±œµÕ≥]: (%s) Õ¨“‚ %d -- ≤ªÕ¨“‚ %d",giveplayer2,voteyes,voteno);
		        SendClientMessageToAll(TEAM_GROVE_COLOR,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* µ±«∞√ª”–Õ∂∆±Ω¯––!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY,"* ƒ„“—Ω¸Õ∂π˝∆±¡À!");
			return 1;
		}
		return 1;
	}
	
	if (strcmp(cmd, "/checkhouse", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /check [∑øŒ›±‡∫≈]");
					return 1;
				}
				new houseid = strval(tmp);
				new zone[24];
				GetHouse2DZone(houseid, zone, sizeof(zone));
				format(string, sizeof(string),"∑ø≤˙±‡∫≈ %d  «‘⁄ %s",houseid, zone);
				SendClientMessage(playerid, COLOR_GREY,string);
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/check", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /check [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À %s (%d) Õ≥º∆◊ ¡œ.", sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À %sStats",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/fixmoney", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /fixmoney [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s ª÷∏¥¡À %s (%d) œ÷Ω. ($%d)", sendername, giveplayer, giveplayerid, (GetPlayerMoney(giveplayerid) - ScriptMoney[giveplayerid]));
						SendAdminMessage(COLOR_LIGHTRED, string);
						SetRealMoney(giveplayerid, ScriptMoney[giveplayerid]);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Fixed %sCash",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, " √ª”–’‚∏ˆÕÊº“");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/number", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /number [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerInfo[giveplayerid][pHideNumber] == 1)
				        {
							GetPlayerName(giveplayerid, sendername, sizeof(sendername));
							format(string, 256, "√˚◊÷: %s, µÁª∞: “˛≤ÿ",sendername);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						else
						{
						    GetPlayerName(giveplayerid, sendername, sizeof(sendername));
							format(string, 256, "√˚◊÷: %s, µÁª∞: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /number %s",d,m,y,h,mi,s,sendername,giveplayer);
						CommandLog(string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   √ª”–’‚∏ˆÕÊº“ !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„ªπ√ª”–µÁª∞≤æ !");
			}
		}
		return 1;
	}
//-------------------------------[LevelUp]--------------------------------------------------------------------------
	if (strcmp(cmd, "/levelup", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				/*PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);*/
				if(PlayerInfo[playerid][pLevel] >= 0)
				{
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					/*new costlevel = nxtlevel*levelcost;//10k for testing purposes*/
					new expamount = nxtlevel*levelexp;
					new infostring[128];
					/*if(GetPlayerMoney(playerid) < costlevel)
					{
						format(infostring, 256, "   You do not have enough Cash ($%d)!",costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						return 1;
					}*/
					if (PlayerInfo[playerid][pExp] < expamount)
					{
						format(infostring, 256, "** ƒ„–Ë“™ %d ◊÷ÿµ„, ƒ„ƒø«∞”– [%d] !",expamount,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						return 1;
					}
					else
					{
						format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						/*SafeGivePlayerMoney(playerid, (-costlevel));*/
						PlayerInfo[playerid][pLevel]++;
						if(PlayerInfo[playerid][pRegularRank] > 0)
						{
						    PlayerInfo[playerid][pExp] -= expamount;
						    new total = PlayerInfo[playerid][pExp];
						    if(total > 0)
						    {
						        PlayerInfo[playerid][pExp] = total;
						    }
						    else
						    {
						        PlayerInfo[playerid][pExp] = 0;
						    }
						}
						else
						{
							PlayerInfo[playerid][pExp] = 0;
						}
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
						GameTextForPlayer(playerid, string, 5000, 1);
						format(infostring, 256, "   ƒ„¬Ú¡Àµ»º∂ %d  π”√/upgrade", nxtlevel);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						format(infostring, 256, "   ƒ„”– %d Œ¥”√µƒª˝∑÷…˝º∂µ„",PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_GRAD2, infostring);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /levelup (%d)",d,m,y,h,mi,s,sendername,nxtlevel);
						CommandLog(string);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„ªπ√ª”–µ«¬º«Îœ»µ«¬º !");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/buyarmour", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–ƒ«√¥∂‡µƒ«Æ !");
			    return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 3,314.2548,-133.6627,999.6016) || IsPlayerInRangeOfPoint(playerid,10,311.9589,-166.1407,999.6010))
			{
	   			SafeGivePlayerMoney(playerid, -1250);
				SafeSetPlayerArmour(playerid, 100);
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„¬Ú¡Àª§º◊ª®∑— $1250!");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buyarmour",d,m,y,h,mi,s,sendername);
				PayLog(string);
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/buyspray", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–ƒ«√¥∂‡µƒ«Æ !");
			    return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 10,314.2548,-133.6627,999.6016) || IsPlayerInRangeOfPoint(playerid, 10,311.9589,-166.1407,999.6010))
			{
	   			SafeGivePlayerMoney(playerid, -500);
				SafeGivePlayerWeapon(playerid, 41, 350);
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„¬Ú¡À≈Á∆·πﬁª®∑— $500!");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buyspray",d,m,y,h,mi,s,sendername);
				PayLog(string);
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/buygun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–ƒ«√¥∂‡µƒ«Æ !");
			    return 1;
			}
			if(PlayerInfo[playerid][pGunLic] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–Œ‰∆˜–Ìø…÷§!");
			    return 1;
			}
			if(IsACop(playerid) && PlayerInfo[playerid][pDuty] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY,"* …œ∞‡ ±≤ªø…“‘π∫¬ÚŒ‰∆˜!");
				return 1;
			}
			new gun;
			new gunid[16];
			new melee[128];
			new pistols[128];
			new shotguns[128];
			new rifles[128];
			new assault[128];
			new submachine[128];
			new infostring[128];
			new guncharge;
			new ammocharge;
			if(IsPlayerInRangeOfPoint(playerid, 10, 314.2548,-133.6627,999.6016) || IsPlayerInRangeOfPoint(playerid, 3,311.9589,-166.1407,999.6010))
			{
				new mod2 = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "”√∑®: /buygun [Œ‰∆˜√˚≥µ] [◊”µØ ˝¡ø]");
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COLOR_WHITE,"*** Œ‰∆˜∫ÕµØ“© ***");
					SendClientMessage(playerid, TEAM_GROVE_COLOR,string);
     				format(melee, 256, "»‚≤´: parachute ($%d)*Ωµ¬‰…°* golfclub ($%d)*∏ﬂ∂˚∑Ú«Ú∞Ù* nightstick ($%d)*æØπ˜* baseballbat ($%d)*∞Ù«Ú∞Ù* shovel ($%d)*Ã˙≤˘* poolcue ($%d)*Ã®«Ú∏À◊”*",
					GunPrice[0][0]/100*mod2,GunPrice[1][0]/100*mod2,GunPrice[2][0]/100*mod2,GunPrice[3][0]/100*mod2,GunPrice[4][0]/100*mod2,GunPrice[5][0]/100*mod2,GunPrice[6][0]/100*mod2);
					SendClientMessage(playerid, COLOR_WHITE, melee);
					format(pistols, 256, " ÷«π: silenced ($%d)*œ˚…˘ ÷«π* deagle ($%d)*…≥”•* colt ($%d)* ÷«π*",
					GunPrice[13][0]/100*mod2,GunPrice[15][0]/100*mod2,GunPrice[14][0]/100*mod2);
					SendClientMessage(playerid, COLOR_GREEN, pistols);
					format(shotguns, 256, "ª¨Ã≈«π: shotgun ($%d)*¡‘«π* combat ($%d)*∂Ã≈È* sawnoff ($%d)*∂Ãπ‹…¢µØ«π*",
					GunPrice[19][0]/100*mod2, GunPrice[20][0]/100*mod2,GunPrice[21][0]/100*mod2);
                    SendClientMessage(playerid, COLOR_WHITE, shotguns);
					format(submachine, 256, "Œ¢≥Âœµ¡–: mp5 ($%d) MAC-10 ($%d) TEC-9 ($%d)",
					GunPrice[18][0]/100*mod2,GunPrice[16][0]/100*mod2,GunPrice[17][0]/100*mod2);
					SendClientMessage(playerid, COLOR_GREEN, submachine);
					format(assault, 256, "∏ﬂº∂Œ‰∆˜: ak47 ($%d) m4 ($%d)",
					GunPrice[22][0]/100*mod2,GunPrice[23][0]/100*mod2);
					SendClientMessage(playerid, COLOR_WHITE, assault);
					format(rifles, 256, "≤Ω«πœµ¡–: country ($%d) sniper ($%d)*◊Ëª˜«π*",
					GunPrice[24][0]/100*mod2,GunPrice[25][0]/100*mod2);
					SendClientMessage(playerid, COLOR_GREEN, rifles);
					SendClientMessage(playerid, COLOR_WHITE, "∆‰À˚: /buyarmour ($1250)*ª§º◊* || /buyspray ($500)*≈Á∆·πﬁ◊”*");
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "”√∑®: /buygun [Œ‰∆˜√˚≥µ] [◊”µØ ˝¡ø]");
					return 1;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 1500)
				{
					SendClientMessage(playerid, COLOR_GREY, "** µØ“© ˝¡ø≤ªµÕ”⁄ 1 ≤ª∏ﬂ”⁄ 1500 !");
					return 1;
				}
				else if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
				{
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
				{
					gun = 2;
					guncharge = GunPrice[1][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
				{
					gun = 3;
					guncharge = GunPrice[2][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
				{
					gun = 5;
					guncharge = GunPrice[4][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
				{
					gun = 6;
					guncharge = GunPrice[5][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
				{
					gun = 7;
					guncharge = GunPrice[6][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
				{
					gun = 10;
					guncharge = GunPrice[7][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
				{
					gun = 11;
					guncharge = GunPrice[8][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
				{
					gun = 12;
					guncharge = GunPrice[9][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
				{
					gun = 13;
					guncharge = GunPrice[10][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
				{
					gun = 14;
					guncharge = GunPrice[11][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
				{
					gun = 15;
					guncharge = GunPrice[12][0]/100*mod2;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "silenced", true, strlen(gunid)) == 0)
				{
					gun = 23;
					guncharge = GunPrice[13][0]/100*mod2;
					ammocharge = GunPrice[31][0]*ammo;
				}
				else if (strcmp(gunid, "deagle", true, strlen(gunid)) == 0)
				{
					gun = 24;
					guncharge = GunPrice[15][0]/100*mod2;
					ammocharge = GunPrice[32][0]*ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29;
					guncharge = GunPrice[18][0]/100*mod2;
					ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25;
					guncharge = GunPrice[19][0]/100*mod2;
					ammocharge = GunPrice[27][0]*ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30;
					guncharge = GunPrice[22][0]/100*mod2;
					ammocharge = GunPrice[29][0]*ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31;
					guncharge = GunPrice[23][0]/100*mod2;
					ammocharge = GunPrice[29][0]*ammo;
				}
				else if (strcmp(gunid, "country", true, strlen(gunid)) == 0)
				{
					gun = 33;
					guncharge = GunPrice[24][0]/100*mod2;
					ammocharge = GunPrice[30][0]*ammo;
				}
				else if (strcmp(gunid, "sniper", true, strlen(gunid)) == 0)
				{
					gun = 34;
					guncharge = GunPrice[25][0]/100*mod2;
					ammocharge = GunPrice[36][0]*ammo;
				}
				else if (strcmp(gunid, "TEC-9", true, strlen(gunid)) == 0)
				{
					gun = 32;
					guncharge = GunPrice[16][0]/100*mod2;
					ammocharge = GunPrice[35][0]*ammo;
				}
				else if (strcmp(gunid, "MAC-10", true, strlen(gunid)) == 0)
				{
					gun = 28;
					guncharge = GunPrice[17][0]/100*mod2;
					ammocharge = GunPrice[35][0]*ammo;
				}
				else if (strcmp(gunid, "combat", true, strlen(gunid)) == 0)
				{
					gun = 27;
					guncharge = GunPrice[20][0]/100*mod2;
					ammocharge = GunPrice[34][0]*ammo;
				}
				else if (strcmp(gunid, "sawnoff", true, strlen(gunid)) == 0)
				{
					gun = 26;
					guncharge = GunPrice[21][0]/100*mod2;
					ammocharge = GunPrice[33][0]*ammo;
				}
				else if (strcmp(gunid, "colt", true, strlen(gunid)) == 0)
				{
					gun = 22;
					guncharge = GunPrice[14][0]/100*mod2;
					ammocharge = GunPrice[26][0]*ammo;
				}
				else { SendClientMessage(playerid, COLOR_WHITE, "µÍ÷˜: ∂‘≤ª∆Œ“√«’‚¿Ô√ª”–’‚÷÷Œ‰∆˜"); }
				if((guncharge+ammocharge) > GetPlayerMoney(playerid))
				{
					format(infostring, 256, "** ƒ„√ª”– $%d !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, infostring);
					return 1;
				}
				if(GetPlayerMoney(playerid) < (guncharge+ammocharge))
				{
				    SendClientMessage(playerid, COLOR_GREY, "** Can't afford that !");
				    return 1;
				}
    			if (GetPlayerMoney(playerid) > ScriptMoney[playerid])
				{
				    format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ « π”√¡À À¢«Æ∫⁄øÕ; «ÎºÏ≤ÈÀ˚/À˝!!", sendername,playerid);
					SendAdminMessage(COLOR_YELLOW, string);
					PlayerSuspicious[playerid] = 1;
					PlayerMoneyHacking[playerid] = 1;
					PlayerSuspiciousMoney[playerid] = (GetPlayerMoney(playerid) - ScriptMoney[playerid]);
					PlayerGotSpottedRecently[playerid] = 1;
					SetTimerEx("ResetAcWarn", 300000, 0, "i", playerid);
     				SendClientMessage(playerid, COLOR_CREAM, "* Ωª“◊÷’÷π,ƒ„µƒ«Æ ˝≤ª’˝≥£,«Î¡™œµπ‹¿Ì‘±Ω‚æˆ.");
				    return 1;
				}
				new payout = guncharge + ammocharge;
				format(infostring, 256, "** ƒ„π∫¬Ú¡À“ª∞— %s µØ“© ˝¡ø %d ª®∑—¡À $%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, infostring);
				SafeGivePlayerMoney(playerid, - payout);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SafeGivePlayerWeapon(playerid, gun, ammo);
				BizzInfo[BizzEntered[playerid]][bTill] += payout / 2;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buygun %s %d ($%d)",d,m,y,h,mi,s,sendername, gunid, ammo, payout);
				PayLog(string);
				if (PlayerInfo[playerid][pAchievement14] == 0)
				{
				    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Illegal Weapons (14) ~n~~n~~w~you won ~g~$200");
	    			ShowAchievement(playerid);
					SafeGivePlayerMoney(playerid, 200);
					PlayerInfo[playerid][pAchievement14] = 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ª‘⁄Œ‰∆˜µÍ∞°.");
				return 1;
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/upgrade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(CanUseUpgrade[playerid] == 1)
	        {
				new gunid[16];
				new infostring[128];
				new upgradepoints = PlayerInfo[playerid][gPupgrade] - 1;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "”√∑®: /upgrade […˝º∂√˚≥∆] (ƒ„”– %d …˝º∂µ„)",upgradepoints);
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COLOR_WHITE,"*** …˝º∂ ***");
					SendClientMessage(playerid, COLOR_GRAD2,string);
					if(PlayerInfo[playerid][pLevel] == 2)
					{
						SendClientMessage(playerid, COLOR_GRAD3, "Level 2 Perks: Alcoholic, DrugAddict");
					}
					else if(PlayerInfo[playerid][pLevel] == 3)
					{
						SendClientMessage(playerid, COLOR_GRAD3, "Level 3 Perks: Alcoholic, DrugAddict, Miser");
					}
					else if(PlayerInfo[playerid][pLevel] == 3)
					{
						SendClientMessage(playerid, COLOR_GRAD3, "Level 4 Perks: Alcoholic, DrugAddict, Miser, Trader");
					}
					else if(PlayerInfo[playerid][pLevel] >= 5)
					{
						SendClientMessage(playerid, COLOR_GRAD3, "Level 5 Perks: Alcoholic, DrugAddict, Miser, Trader, PainKillers");
					}
					SendClientMessage(playerid, COLOR_GRAD5, "‘ˆº”ƒ„µƒΩ°øµ÷µ: health");
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (PlayerInfo[playerid][gPupgrade] > 1)
				{
					if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "health", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pSHealth] < 50)
						{
							PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
							format(infostring, 256, "–¬…˝º∂: ƒ„÷ÿ…˙∫Û %.2f Ω°øµ÷µ(+5)",PlayerInfo[playerid][pSHealth]+50);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD6, "   ƒ„µƒΩ°øµ÷µ“—æ≠◊Ó¥Û¡À");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "alcoholic", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pAlcoholPerk] < 3)
						{
							PlayerInfo[playerid][pAlcoholPerk] += 1;
							format(infostring, 256, "New Perk Upgrade: Your Alcoholic Perk is now Level %d.",PlayerInfo[playerid][pAlcoholPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD6, "   Your Alcoholic Perk is maxed out !");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "drugaddict", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pDrugPerk] < 3)
						{
							PlayerInfo[playerid][pDrugPerk] += 1;
							format(infostring, 256, "New Perk Upgrade: Your Drug Addict Perk is now Level %d.",PlayerInfo[playerid][pDrugPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD6, "   Your Drug Addict Perk is maxed out !");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "miser", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pMiserPerk] < 3)
						{
							PlayerInfo[playerid][pMiserPerk] += 1;
							format(infostring, 256, "New Perk Upgrade: Your Miser Perk is now Level %d.",PlayerInfo[playerid][pMiserPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD6, "   Your Miser Perk is maxed out !");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "trader", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pTraderPerk] < 3)
						{
							PlayerInfo[playerid][pTraderPerk] += 1;
							format(infostring, 256, "New Perk Upgrade: Your Trader Perk is now Level %d.",PlayerInfo[playerid][pTraderPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD6, "   Your Trader Perk is maxed out !");
							return 1;
						}
					}
					else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
					{
						if (PlayerInfo[playerid][pPainPerk] < 3)
						{
							PlayerInfo[playerid][pPainPerk] += 1;
							format(infostring, 256, "New Perk Upgrade: Your Pain Killers Perk is now Level %d.",PlayerInfo[playerid][pPainPerk]);
							PlayerInfo[playerid][gPupgrade]--;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD6, "   Your Pain Killers Perk is maxed out !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Unrecognized Upgrade");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   You Have 0 Upgrade Points");
					return 1;
				}
				SendClientMessage(playerid, COLOR_GRAD6, infostring);
				PlayerInfo[playerid][gPupgrade]--;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /upgrade %s",d,m,y,h,mi,s,sendername, gunid);
				CommandLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY,"* ≥ˆ”⁄’Àªß∞≤»´‘≠“Ú,«Îœ» ⁄»®/account‘Ÿ π”√/Upgrades");
			    return 1;
			}
		}
		return 1;
	}

//----------------------------------[ooc]-----------------------------------------------

	if(strcmp(cmd, "/noooc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2 && (!noooc))
			{
				noooc = 1;
				BroadCast(COLOR_LIGHTRED, "*** OOC∆µµ¿“—±ªπ‹¿Ì‘±Ω˚”√ !");
				format(string, sizeof(string), "[π‹¿Ì]: %s Ω˚”√¡ÀOOC∆µµ¿.",sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s OOC the Public Channel",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 2 && (noooc))
			{
				noooc = 0;
				BroadCast(COLOR_LIGHTRED, "*** OOC∆µµ¿“—±ªπ‹¿Ì‘±∆Ù”√ !");
				format(string, sizeof(string), "[π‹¿Ì]: %s ∆Ù”√¡ÀOOC∆µµ¿.",sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Enables the OOC Channel",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/speedo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pSpeedo] == 1)
			{
				PlayerInfo[playerid][pSpeedo] = 2;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else if(PlayerInfo[playerid][pSpeedo] == 2)
			{
				PlayerInfo[playerid][pSpeedo] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "ƒ„√ª”–ÀŸ∂»±Ì");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /speedo",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/fuel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gGas[playerid] == 0)
			{
				gGas[playerid] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Fuel Info on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else if (gGas[playerid] == 1)
			{
				gGas[playerid] = 0;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Fuel Info off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /fuel",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
//----------------------------------[advertise]-----------------------------------------------
	if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/ad)vertise [π„∏Êƒ⁄»›]");
				return 1;
			}
			if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1))
			{
				format(string, sizeof(string), "** «Îµ»¥˝ %d√Î‘Ÿ ‘ !",  (addtimer/1000));
				SendClientMessage(playerid, COLOR_GRAD2, string);
				return 1;
			}
			SafeGivePlayerMoney(playerid, -50);
 			new pnumber[128];
			if(PlayerInfo[playerid][pPnumber] != 0)
			{
				format(pnumber,sizeof(pnumber), "%d",PlayerInfo[playerid][pPnumber]);
			}
			else
			{
		    	pnumber = "Œﬁ";
			}
			format(string, sizeof(string), "π„∏Ê:{FFFFF0} %s, ¡™œµ»À: %s (µÁª∞: %s)",  result, sendername ,pnumber);
			SendClientMessageToAll(COLOR_ORANGE,string);
			GameTextForPlayer(playerid, "~w~Advertisement ~n~~w~Price:~g~$50", 4321,1);
			if (PlayerInfo[playerid][pAdmin] < 1){SetTimer("AddsOn", addtimer, 0);adds = 0;}
			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (Advertisement): %s",d,m,y,h,mi,s, sendername, result);
			ChatLog(string);
	  	}
		return 1;
	}
//----------------------------------[government]-----------------------------------------------
	if(strcmp(cmd, "/government", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] != 2)
			{
			    if(PlayerInfo[playerid][pLeader] != 7)
			    {
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «“ª√˚æØ≤Ï !");
			    	return 1;
				}
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			if(PlayerInfo[playerid][pRank] < 6)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„–Ë“™µ»º∂6≤≈ø…“‘ π”√ !");
			    return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/gov)ernment [ƒ⁄»›]");
				return 1;
			}
			SendClientMessageToAll(COLOR_WHITE, "|___________ ’˛∏Æπ´∏Ê ___________|");
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "≥§πŸ %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±æ÷≥§ %s: %s", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "∏ﬂº∂∂Ω≤Ï %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_BLUE, string);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (government): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
			}
			else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
				if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ÷≥§ %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±æ÷≥§ %s: %s", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "æ÷≥§÷˙¿Ì. %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GRAD5, string);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (government): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
			}
			else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			{
    			if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "…œΩ´ %s: %s", sendername, result); }
    			if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±…œΩ´ %s: %s", sendername, result); }
    			if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "…œŒæ %s: %s", sendername, result); }
				SendClientMessageToAll(COLOR_GREEN, string);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (government): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
			}
			else if(PlayerInfo[playerid][pLeader] == 7)
			{
				format(string, sizeof(string), " –≥§ %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_GREY, string);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (government): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
			}
		}
		return 1;
	}
//----------------------------------[togpublic]-----------------------------------------------

	if(strcmp(cmd, "/togooc", true) == 0) // Modded by CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gOoc[playerid])
			{
				gOoc[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "* OOC ∆µµ¿±ªΩ˚”√ !");
			}
			else if (gOoc[playerid])
			{
				gOoc[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "* OOC ∆µµ¿±ª∆Ù”√ !");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /togooc",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/tognews", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "* –¬Œ≈∆µµ¿πÿ±’ !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "* –¬Œ≈∆µµ¿¥Úø™ !");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /tognews",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/togfam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "* º“Õ•∆µµ¿πÿ±’ !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "* º“Õ•∆µµ¿¥Úø™ !");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /togfam",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/togpm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!HidePM[playerid])
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "* ¡–±¯ œ˚œ¢¥Úø™ !");
			}
			else if (HidePM[playerid])
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "* ¡–±¯ œ˚œ¢πÿ±’ !");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /togpm",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/togphone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PhoneOnline[playerid])
			{
				PhoneOnline[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "* ƒ„µƒ ÷ª˙πÿª˙¡À !");
			}
			else if (PhoneOnline[playerid])
			{
				PhoneOnline[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "* ƒ„µƒ ÷ª˙ø™ª˙¡À !");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /togphone",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/me", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /me [action]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
   				format(string, sizeof(string), "* π‹¿Ì %s", result);
			}
			if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
			{
			    format(string, sizeof(string), "* ƒ∞…˙»À %s", result);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
				format(string, sizeof(string), "* %s %s", sendername, result);
			}
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] [/ME] %s: %s",d,m,y,h,mi,s,sendername,giveplayer, result);
			ActionLog(string);
		}
		return 1;
	}

//----------------------------------[Try]-----------------------------------------------
	if(strcmp(cmd, "/try", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /try [action]");
				return 1;
			}
			new randa = random(2)+1;
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
   				if(randa == 1) format(string, sizeof(string), "*** π‹¿Ì≥¢ ‘ %s ≥…π¶¡À", result);
				else format(string, sizeof(string), "*** π‹¿Ì≥¢ ‘ %sµ´ « ß∞‹¡À", result);
			}
			if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
			{
			    if(randa == 1) format(string, sizeof(string), "*** ƒ∞…˙»À≥¢ ‘ %s ≥…π¶¡À", result);
				else format(string, sizeof(string), "*** ƒ∞…˙»À≥¢ ‘ %sµ´ « ß∞‹¡À", result);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
				if(randa == 1) format(string, sizeof(string), "*** %s≥¢ ‘ %s ≥…π¶¡À", sendername, result);
				else format(string, sizeof(string), "*** %s≥¢ ‘ %sµ´ « ß∞‹¡À", sendername, result);
			}
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] [/TRY] %s: %s",d,m,y,h,mi,s,sendername,giveplayer, result);
			ActionLog(string);
		}
		return 1;
	}

//----------------------------------[Do]-----------------------------------------------
	if(strcmp(cmd, "/do", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /do [action]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
   				format(string, sizeof(string), "%s (( π‹¿Ì ))", result);
			}
			if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
			{
			    format(string, sizeof(string), "* %s (( ƒ∞…˙»À ))", result);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
				format(string, sizeof(string), "* %s (( %s ))", result, sendername);
			}
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] [/DO] %s: %s",d,m,y,h,mi,s,sendername,giveplayer, result);
			ActionLog(string);
		}
		return 1;
	}
//----------------------------------[Local]-----------------------------------------------
	if(strcmp(cmd, "/local", true) == 0 || strcmp(cmd, "/l", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º!");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			new playercar = GetPlayerVehicleID(playerid);
			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /local [±æµÿ¡ƒÃÏ]");
				return 1;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
   				if(PlayerInfo[playerid][pAdminDuty] == 1)
				{
				    format(string, sizeof(string), "π‹¿ÌÀµ: %s", result);
			    	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                    SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Local): %s",d,m,y,h,mi,s, sendername, result);
					ChatLog(string);
				}
				if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
				{
					format(string, sizeof(string), "ƒ∞…˙»À Àµ: %s", result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
     				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Loca): %s",d,m,y,h,mi,s, sendername, result);
					ChatLog(string);
				}
				if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			    {
		    		format(string, sizeof(string), "%s Àµ: %s", sendername, result);
		    		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		    		SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d,m,y,h,mi,s, sendername, result);
					ChatLog(string);
				}
			}
			else
			{
		    	if(IsModelAPlane(playercar) || IsModelABike(playercar) || IsModelAHeli(playercar) || IsModelABoat(playercar) || IsModelASpecial(playercar))
		    	{
                    if(PlayerInfo[playerid][pAdminDuty] == 1)
					{
			    		format(string, sizeof(string), "π‹¿ÌÀµ: %s", result);
		    			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                        SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Local): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
     				{
						format(string, sizeof(string), "ƒ∞…˙»À Àµ: %s", result);
						ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                        SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Local): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
					{
		    			format(string, sizeof(string), "%s Àµ: %s", sendername, result);
		    			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                        SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
		    	}
		    	else
		    	{
		    		if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
		    		{
       					if(PlayerInfo[playerid][pAdminDuty] == 1)
						{
			    			format(string, sizeof(string), "(¥∞ø⁄πÿ±’)π‹¿ÌÀµ: %s", result);
			    			SetPlayerChatBubble(playerid, string, COLOR_NICERED, 10.0, 8000);
		    				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		    				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Windows Shut): %s",d,m,y,h,mi,s, sendername, result);
							ChatLog(string);
						}
		    			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
						{
							format(string, sizeof(string), "(¥∞ø⁄πÿ±’) ƒ∞…˙»À Àµ: %s", result);
							SetPlayerChatBubble(playerid, string, COLOR_WHITE, 10.0, 8000);
							ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Windows Shut): %s",d,m,y,h,mi,s, sendername, result);
							ChatLog(string);
						}
						if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
						{
		    				format(string, sizeof(string), "(¥∞ø⁄πÿ±’) %s Àµ: %s", sendername, result);
		    				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 1.0, 8000);
		    				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		    				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (¥∞ø⁄πÿ±’): %s",d,m,y,h,mi,s, sendername, result);
							ChatLog(string);
						}
					}
					else
					{
						if(PlayerInfo[playerid][pAdminDuty] == 1)
						{
			    			format(string, sizeof(string), "(¥∞ø⁄¥Úø™)π‹¿ÌÀµ: %s", result);
			    			SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
		    				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                            format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Windows Open): %s",d,m,y,h,mi,s, sendername, result);
							ChatLog(string);
						}

			    		if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
						{
							format(string, sizeof(string), "(¥∞ø⁄¥Úø™) ƒ∞…˙»À Àµ: %s", result);
							SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
							ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Windows Open): %s",d,m,y,h,mi,s, sendername, result);
							ChatLog(string);
						}
						if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
						{
		    				format(string, sizeof(string), "(¥∞ø⁄¥Úø™) %s Àµ: %s", sendername, result);
		    				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
                            format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (¥∞ø⁄¥Úø™): %s",d,m,y,h,mi,s, sendername, result);
							ChatLog(string);
						}
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/b", true) == 0)//local ooc // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /b [µ±µÿOOC¡ƒÃÏ]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
				format(string, sizeof(string), "((π‹¿ÌÀµ: %s ))", result);
				SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local OOC -Admin-): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "(( ƒ∞…˙»À Àµ: %s ))", result);
				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local OOC -Masked-): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
		   		format(string, sizeof(string), "(( %s Àµ: %s ))", sendername, result);
		   		SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local OOC): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/whisper", true) == 0 || strcmp(cmd, "/w", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
///ƒø±ÍÕÍ≥…
			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /(w)hisper [chat text]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
				format(string, sizeof(string), "π‹¿Ì‘±√‹”Ô: %s", result);
				SetPlayerChatBubble(playerid, string, COLOR_NICERED, 3.0, 8000);
				ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Whisper): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "ƒ∞…˙»À√‹”Ô: %s", result);
				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 3.0, 8000);
				ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Whisper): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
		   		format(string, sizeof(string), "%s √‹”Ô: %s", sendername, result);
		   		SetPlayerChatBubble(playerid, string, COLOR_WHITE, 3.0, 8000);
		   		ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Whisper): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/bug", true) == 0 || strcmp(cmd, "/suggestion", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/b)ug [bug±®∏Êƒ⁄»›]");
				return 1;
			}
			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string, sizeof(string),"(%d/%d/%d)[%d:%d:%d] Bug Report of %s: %s",d,m,y,h,mi,s,sendername, (result));
			BugsLog(string);
		}
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/s)hout [±æµÿ¡ƒÃÏ]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
				format(string, sizeof(string), "π‹¿Ì‘±¥Û∫∞: %s !!", result);
				SetPlayerChatBubble(playerid, string, COLOR_NICERED, 30.0, 8000);
				ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Shout): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
			{
				format(string, sizeof(string), "ƒ∞…˙»À¥Û∫∞: %s !!", result);
				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 30.0, 8000);
				ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Shout): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
				format(string, sizeof(string), "%s ¥Û∫∞: %s !!", sendername, result);
				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 30.0, 8000);
				ProxDetector(30.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Shout): %s",d,m,y,h,mi,s, sendername, result);
				ChatLog(string);
			}
			if (PlayerInfo[playerid][pAchievement1] == 0)
			{
			    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~I Can Shout (1) ~n~~n~~w~you won ~g~$100");
	    		ShowAchievement(playerid);
				SafeGivePlayerMoney(playerid,100);
				PlayerInfo[playerid][pAchievement1] = 1;
			}
		}
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new tmpcar = GetPlayerVehicleID(playerid);

            new y,m,d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/m)egaphone [¿©“Ù∆˜¡ƒÃÏ]");
				return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid) || IsAnFbiCar(playerid))
			{
				if(!IsACopCar(tmpcar) || !IsAnFbiCar(tmpcar))
				{
				    if(PlayerInfo[playerid][pDuty] == 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* ƒ„ªπ√ª”–…œ∞‡");
				        return 1;
					}
					if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
					{
					    new currank[64];
    					if(PlayerInfo[playerid][pRank] == 1) { currank = "—ßæØ"; }
						else if(PlayerInfo[playerid][pRank] == 2) { currank = "ΩªæØ"; }
						else if(PlayerInfo[playerid][pRank] == 3) { currank = "—≤æØ"; }
						else if(PlayerInfo[playerid][pRank] == 4) { currank = "æØ≥§"; }
						else if(PlayerInfo[playerid][pRank] == 5) { currank = "∂Ω≤Ï"; }
						else if(PlayerInfo[playerid][pRank] == 6) { currank = "∏ﬂº∂∂Ω≤Ï"; }
						else if(PlayerInfo[playerid][pRank] == 7) { currank = "∏±æ÷≥§"; }
	        			else if(PlayerInfo[playerid][pRank] == 8) { currank = "≥§πŸ"; }
						else { currank = "—ßæØ"; }
						format(string, sizeof(string), "[%s %s:o< %s]", currank, sendername, result);
						ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
                        format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Megaphone): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
					{
	    				new currank[64];
    					if(PlayerInfo[playerid][pRank] == 1) { currank = "—ßæØ"; }
						else if(PlayerInfo[playerid][pRank] == 2) { currank = "Ãÿπ§"; }
						else if(PlayerInfo[playerid][pRank] == 3) { currank = "Ãÿ±ÃΩ‘±"; }
						else if(PlayerInfo[playerid][pRank] == 4) { currank = "Ãÿ±ÃΩ‘±∏∫‘»À"; }
						else if(PlayerInfo[playerid][pRank] == 5) { currank = "ø∆≥§"; }
						else if(PlayerInfo[playerid][pRank] == 6) { currank = "æ÷≥§÷˙¿Ì"; }
						else if(PlayerInfo[playerid][pRank] == 7) { currank = "∏±æ÷≥§"; }
	        			else if(PlayerInfo[playerid][pRank] == 8) { currank = "æ÷≥§"; }
						else { currank = "FBI —ßæØ"; }
						format(string, sizeof(string), "[%s %s:o< %s]", currank, sendername, result);
						ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Megaphone): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
					{
						format(string, sizeof(string), "[ ø±¯ %s:o< %s]", sendername, result);
						ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Megaphone): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					else if(IsAFreecop(playerid))
					{
					    format(string, sizeof(string), "[“ÂŒÒæ¸πŸ %s:o< %s]", sendername, result);
						ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Megaphone): %s",d,m,y,h,mi,s, sendername, result);
						ChatLog(string);
					}
					printf("%s", string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ª‘⁄æØ≥µ…œ!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ª «–°∂”µƒ“ª∑›◊”!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/badge", true) == 0 || strcmp(cmd, "/rank", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /rank [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

			if(IsPlayerConnected(giveplayerid))
			{
				format(string, sizeof(string), "*** ------------------ %s ------------------ ***", giveplayer);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				if(PlayerInfo[giveplayerid][pMember] == 1 || PlayerInfo[giveplayerid][pLeader] == 1)
				{
				    if(PlayerInfo[giveplayerid][pRank] == 8) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «≥§πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 7) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «∏±æ÷≥§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 6) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «…œŒæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 5) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «÷–Œæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 4) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «æ¸ ø.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 3) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «œ¬ ø.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 2) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «æ¸πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 1) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «—ßæØ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				else if(IsAFreecop(playerid))
				{
				    format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «“ÂŒÒæ¸πŸ.",giveplayer);
					SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				}
			 	if(PlayerInfo[giveplayerid][pMember] == 2 || PlayerInfo[giveplayerid][pLeader] == 2)
				{
				    if(PlayerInfo[giveplayerid][pRank] == 8) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «÷˜»Œ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 7) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «∏±æ÷≥§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 6) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «æ÷≥§÷˙¿Ì.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 5) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Àæ¡Ó≤ø≥§πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 4) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Ãÿ±ÃΩ‘±∏∫‘»À.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 3) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Ãÿ±ÃΩ‘±.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 2) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Ãÿπ§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 1) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «—ßæØ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
		 		if(PlayerInfo[giveplayerid][pMember] == 3 || PlayerInfo[giveplayerid][pLeader] == 3)
				{
				    if(PlayerInfo[giveplayerid][pRank] == 8) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «…œΩ´.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[giveplayerid][pRank] == 7) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «∏±…œΩ´.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[giveplayerid][pRank] == 6) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «…œŒæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 5) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «÷–Œæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 4) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «…Ÿ–£.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 3) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «æ¸ ø.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 2) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ « ø±¯.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 1) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «¡–±¯.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[giveplayerid][pMember] == 4 || PlayerInfo[giveplayerid][pLeader] == 4)
				{
				    if(PlayerInfo[giveplayerid][pRank] == 8) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «––’˛≥§πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[giveplayerid][pRank] == 7) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «≥§πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[giveplayerid][pRank] == 6) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «…œŒæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 5) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «÷–Œæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 4) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «Àæª˙.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 3) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «œ˚∑¿‘±.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 2) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ « µœ∞…˙.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 1) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «µ˜≤È‘±.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[giveplayerid][pMember] == 7 || PlayerInfo[giveplayerid][pLeader] == 7)
				{
    				if(PlayerInfo[giveplayerid][pRank] == 6) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 5) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§÷˙¿Ì.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 4) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§µƒ±£Œ¿ø∆≥§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 3) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§÷˜Àæª˙.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 2) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§±£Ô⁄.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 1) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§Àæª˙.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[giveplayerid][pMember] == 12 || PlayerInfo[giveplayerid][pLeader] == 12)
				{
				    if(PlayerInfo[giveplayerid][pRank] == 8) { format(string, sizeof(string), "* %sFDπŸ÷∞ «≥§πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[giveplayerid][pRank] == 7) { format(string, sizeof(string), "* %sFDπŸ÷∞ «‘∫≥§÷˙¿Ì.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[giveplayerid][pRank] == 6) { format(string, sizeof(string), "* %sFDπŸ÷∞ «…œŒæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 5) { format(string, sizeof(string), "* %sFDπŸ÷∞ «÷–Œæ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 4) { format(string, sizeof(string), "* %sFDπŸ÷∞ «Àæª˙.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 3) { format(string, sizeof(string), "* %sFDπŸ÷∞ «œ˚∑¿‘±.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 2) { format(string, sizeof(string), "* %sFDπŸ÷∞ « µœ∞…˙.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pRank] == 1) { format(string, sizeof(string), "* %sFDπŸ÷∞ «µ˜≤È‘±.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[giveplayerid][pSwat] >= 1)
				{
			 		if(PlayerInfo[giveplayerid][pSwat] == 1) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «–ÃæØ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pSwat] == 2) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «∏®µº‘±.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pSwat] == 3) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «∂”≥§÷∏ª”πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pSwat] == 4) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «–°∂”÷∏ª”πŸ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[giveplayerid][pTactical] >= 1)
				{
					if(PlayerInfo[giveplayerid][pTactical] == 1) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ « µœ∞…˙µ•Œª.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pTactical] == 2) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ «◊®º“√‹ÃΩ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pTactical] == 3) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ «æ´”¢√‹ÃΩ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pTactical] == 4) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ «◊‹π‹√‹ÃΩ.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[giveplayerid][pSpecialF] >= 1)
				{
					if(PlayerInfo[giveplayerid][pSpecialF] == 1) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «2∫  ø±¯.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pSpecialF] == 2) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «…˙ªØ’Ω ø.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pSpecialF] == 3) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «∏±∂”≥§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[giveplayerid][pSpecialF] == 4) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «∂”≥§.",giveplayer); SendClientMessage(playerid, TEAM_GROVE_COLOR, string); }
				}
				if(OnDuty[giveplayerid] == 1)
    			{
    			    format(string, sizeof(string), "** %s ’˝‘⁄…œ∞‡.", giveplayer);
				    SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				}
				if(PlayerInfo[giveplayerid][pDBanned] == 1)
				{
        			format(string, sizeof(string), "** %s ±ªΩ˚÷π÷¥––æØ≤Ïµƒ÷∞‘.", giveplayer);
				    SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /badge",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/showbadge", true) == 0 || strcmp(cmd, "/showrank", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /showbadge [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

			if(IsPlayerConnected(giveplayerid))
			{
				format(string, sizeof(string), "** ƒ„ÃÕ≥ˆ◊‘º∫µƒª’’¬ %s", giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "*** %s (%d) œÚƒ„’π æ¡Àª’’¬: ***", sendername, playerid);
				SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string);
				if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «æ÷≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «∏±æ÷≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «∏ﬂº∂∂Ω≤Ï.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «∂Ω≤Ï.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «æØ≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «—≤æØ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «ΩªæØ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %sæØ≤Ïæ÷πŸ÷∞ «—ßæØ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
			 	if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				{
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «÷˜»Œ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «∏±æ÷≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «æ÷≥§÷˙¿Ì.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Àæ¡Ó≤ø≥§πŸ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Ãÿ±ÃΩ‘±∏∫‘»À.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Ãÿ±ÃΩ‘±.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «Ãÿπ§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %sFBIπŸ÷∞ «—ßæØ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
		 		if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
				{
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «…œΩ´.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «∏±…œΩ´.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «…œŒæ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «÷–Œæ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «…Ÿ–£.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «æ¸ ø.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ « ø±¯.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %sæ¸∂”πŸ÷∞ «¡–±¯.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
				{
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «––’˛≥§πŸ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «≥§πŸ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «…œŒæ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «÷–Œæ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «Àæª˙.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «œ˚∑¿‘±.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ « µœ∞…˙.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %sæ»‘Æ“Ω¡∆πŸ÷∞ «µ˜≤È‘±.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§÷˙¿Ì.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§µƒ±£Œ¿ø∆≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§÷˜Àæª˙.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§±£Ô⁄.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %s’˛∏ÆπŸ÷∞ « –≥§Àæª˙.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
				{
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "* %sFDπŸ÷∞ «≥§πŸ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "* %sFDπŸ÷∞ «‘∫≥§÷˙¿Ì.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "* %sFDπŸ÷∞ «…œŒæ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "* %sFDπŸ÷∞ «÷–Œæ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "* %sFDπŸ÷∞ «Àæª˙.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "* %sFDπŸ÷∞ «œ˚∑¿‘±.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "* %sFDπŸ÷∞ « µœ∞…˙.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "* %sFDπŸ÷∞ «µ˜≤È‘±.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pSwat] >= 1)
				{
			 		if(PlayerInfo[playerid][pSwat] == 1) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «–ÃæØ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pSwat] == 2) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «∏®µº‘±.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pSwat] == 3) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «∏±∂”≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pSwat] == 4) { format(string, sizeof(string), "* %sS.W.A.TπŸ÷∞ «∂”≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pTactical] >= 1)
				{
					if(PlayerInfo[playerid][pTactical] == 1) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ « µœ∞…˙µ•Œª.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pTactical] == 2) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ «◊®º“√‹ÃΩ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pTactical] == 3) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ «æ´”¢√‹ÃΩ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pTactical] == 4) { format(string, sizeof(string), "* %sª˙∂Ø≤ø∂”πŸ÷∞ «◊‹π‹√‹ÃΩ.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pSpecialF] >= 1)
				{
					if(PlayerInfo[playerid][pSpecialF] == 1) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «2∫  ø±¯.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pSpecialF] == 2) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «…˙ªØ’Ω ø.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pSpecialF] == 3) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «∏±∂”≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
					else if(PlayerInfo[playerid][pSpecialF] == 4) { format(string, sizeof(string), "* %sÃÿ÷÷≤ø∂”πŸ÷∞ «∂”≥§.",sendername); SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string); }
				}
				if(PlayerInfo[playerid][pDuty] == 1)
				{
	   				format(string, sizeof(string), "** %s ’˝‘⁄…œ∞‡.", sendername);
				    SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string);
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
				    format(string, sizeof(string), "** %s ±ªΩ˚÷π÷¥––æØ≤Ïµƒ÷∞‘.", giveplayer);
				    SendClientMessage(giveplayerid, TEAM_CYAN_COLOR, string);
				}

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /showbadge %s",d,m,y,h,mi,s,sendername, giveplayer);
				CommandLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
			}
		}
		return 1;
	}

//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/r)adio [ŒﬁœﬂµÁ¡ƒÃÏ]");
				return 1;
			}
			if (PlayerInfo[playerid][pAchievement2] == 0)
			{
			    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~For the Team (2) ~n~~n~~w~you won ~g~$200");
	    		ShowAchievement(playerid);
				SafeGivePlayerMoney(playerid,200);
				PlayerInfo[playerid][pAchievement2] = 1;
			}
 	 		if(OnSwatDuty[playerid] == 1)
			{
				if(PlayerInfo[playerid][pSwat] == 4) { format(string, sizeof(string), "÷∏ª”πŸ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSwat] == 3) { format(string, sizeof(string), "–°∂”÷∏ª”πŸ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSwat] == 2) { format(string, sizeof(string), "∏®µº‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSwat] == 1) { format(string, sizeof(string), "–ÃæØ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "%s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
		    }
	     	else if(OnTacticalDuty[playerid] == 1)
			{
				if(PlayerInfo[playerid][pTactical] == 4) { format(string, sizeof(string), "◊‹π‹√‹ÃΩ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pTactical] == 3) { format(string, sizeof(string), "æ´”¢√‹ÃΩ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pTactical] == 2) { format(string, sizeof(string), "◊®º“√‹ÃΩ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pTactical] == 1) { format(string, sizeof(string), " µœ∞…˙µ•Œª %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™]  %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(2, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
		    }
		    else if(OnSpecialFDuty[playerid] == 1)
			{
		 		if(PlayerInfo[playerid][pSpecialF] == 4) { format(string, sizeof(string), "∂”≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSpecialF] == 3) { format(string, sizeof(string), "∏±∂”≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSpecialF] == 2) { format(string, sizeof(string), "…˙ªØ’Ω ø %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSpecialF] == 1) { format(string, sizeof(string), " ø±¯ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
		    }
		    if(IsAFreecop(playerid) && PlayerInfo[playerid][pDuty] == 1)
		    {
				format(string, sizeof(string), "“ÂŒÒ%s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
		    if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pDBanned] == 0 || PlayerInfo[playerid][pLeader] == 1 && PlayerInfo[playerid][pDBanned] == 0)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ÷≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±æ÷≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "∏ﬂº∂∂Ω≤Ï %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "∂Ω≤Ï %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "æØ≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "—≤æØ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.*", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "ΩªæØ%s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "—ßæØ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
		    }
			else if(PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pDBanned] == 0 || PlayerInfo[playerid][pLeader] == 2 && PlayerInfo[playerid][pDBanned] == 0)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ÷≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±æ÷≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "–≠÷˙÷˜»Œ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "ø∆≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Ãÿ±ÃΩ‘±∏∫‘»À %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Ãÿ±ÃΩ‘± %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Ãÿπ§ %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "—ßæØ %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(2, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pDBanned] == 0 || PlayerInfo[playerid][pLeader] == 3 && PlayerInfo[playerid][pDBanned] == 0)
			{
			   	if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "…œΩ´ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			   	else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±…œΩ´ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			   	else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "…œŒæ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "÷–Œæ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "…Ÿ–£ %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "æ¸ ø %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " ø±¯ %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "¡–±¯ %s(ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆––’˛≥§πŸ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆∏±‘∫≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆÷–Œæ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆…œŒæ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "«¿æ»“Ω¡∆∑˛ŒÒ“Ω…˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "ª˘±æ«¿æ»“Ω¡∆“Ω…˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆ µœ∞…˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆ª§¿Ì %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(4, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Corona %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Mano Derecha %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Proscrito %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Miembro %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Asociado %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Forastero %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(5, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(d, m, y);
				gettime(d,mi,y);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Capo Crimini %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Capo Bastone %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Consigleri %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Capo Regime %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Sgarrista %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Piciotto %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Giovoane %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Õ‚»À %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(6, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), " –≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " –≥§÷˙¿Ì %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "±£Œ¿ø∆≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "÷˜Àæª˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "±£Ô⁄ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Àæª˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(7, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "æ÷≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Vice ÷˜»Œ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Ãÿ±ÃΩ‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Agent %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "…Ò«π ÷…± ÷ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "◊‘”……± ÷ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(8, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
   	        }
			else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "√¿π˙π„≤•π´Àæ∂≠ ¬≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "√¿π˙π„≤•π´Àææ≠¿Ì %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Company Secreatary %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "º«’ﬂ◊‹π‹ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "º«’ﬂ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " µœ∞π§◊˜»À‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(9, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Owner %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Supervisor %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "µ˜∂»‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "≥ˆ◊‚≥µÀæª˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "≥ˆ◊‚≥µ–¬ ÷ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " µœ∞…˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(10, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "¿œ∞Â %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "∏±¿œ¥Û %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "æ≠¿Ì %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "∏ﬂº∂∏®µº‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "∏®µº‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " µœ∞…˙ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(11, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==12||PlayerInfo[playerid][pLeader]==12)
			{
				if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "FD ‘∫≥§ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "‘∫≥§÷˙¿Ì %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "FD …œŒæ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "FD ÷–Œæ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Engine %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "œ˚∑¿‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Probationary %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "µ˜≤È‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(12, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==13||PlayerInfo[playerid][pLeader]==13)
			{
		 		if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Father of Anarchy %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Son of Anarchy %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "∏ﬂº∂≥…‘± %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "±©ÕΩ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "¥Ú ÷ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "–°µ‹ %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(13, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Don %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Don's right hand %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "–°Õ∑ƒø %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Shatei %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Wakashu %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Gaij in %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(14, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
			{
			    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Don %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Pakhan %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "∏±¿œ¥Û %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "–°Õ∑ƒø %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Byki %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Patsani %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Shestiorka %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(15, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
			    if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "¿œ∞Â %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "Lower Boss %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "Elite Advisor %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "Loyal Advisor %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "Advisor %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Made Man %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Elite Member %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Loyal Member %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "Member %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(16, TEAM_RADIO_COLOR, string);
				SentMessage[playerid] = 0;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (ŒﬁœﬂµÁ): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/newbie", true) == 0 || strcmp(cmd, "/n", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
		    if(nonewbie == 1)
		    {
                SendClientMessage(playerid, TEAM_CYAN_COLOR, "–¬ ÷∆µµ¿πÿ±’.");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/n)ewbie [–¬ ÷∆µµ¿œÎÀµµƒƒ⁄»›]");
				return 1;
			}
		 	if(PlayerInfo[playerid][pHelper] == 0)
		 	{
			 	format(string, sizeof(string), "[–¬ ÷]: –¬ ÷ %s: %s", sendername, result);
		 	}
	   		else if(PlayerInfo[playerid][pHelper] == 1)
	   		{
			   format(string, sizeof(string), "[–¬ ÷]: ∞Ô ÷ %s: %s", sendername, result);
	   		}
	   		else if(PlayerInfo[playerid][pHelper] == 2)
	   		{
			   format(string, sizeof(string), "[–¬ ÷]: ∏ﬂº∂∞Ô ÷ %s: %s", sendername, result);
	   		}
			else if(PlayerInfo[playerid][pHelper] == 3)
			{
				format(string, sizeof(string), "[–¬ ÷]: π‹¿Ì‘± %s: %s", sendername, result);
			}
			SendClientMessageToAll(0x62B382AA, string);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (newbie): (%s)",d,m,y,h,mi,s, sendername, result);
			ChatLog(string);
		}
		return 1;
	}
//----------------------------------[offduty]-----------------------------------------------
	if(strcmp(cmd, "/duty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pWanted] == 1) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„∑∏◊Ô¡À≤ªø…“‘»•…œ∞‡!");
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 || IsAFreecop(playerid))
			{
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
					return 1;
				}
				if (IsPlayerInRangeOfPoint(playerid, 6,255.3,77.4,1003.6) || IsPlayerInRangeOfPoint(playerid, 6,223.6328,186.8251,1003.0313) || IsPlayerInRangeOfPoint(playerid, 6, 233.4989,123.6518,1003.2188) || PlayerInfo[playerid][pLocal] != 255)
				{
					if(PlayerInfo[playerid][pDuty] == 0)
			        {
			            if(IsAFreecop(playerid))
			            {
			                format(string, sizeof(string), "* “ÂŒÒæ¸πŸ %s ¥”¥¢ŒÔπÒ¡Àƒ√¡À“ª∞—«π∫Õ“ªøÈª’’¬.", sendername);
                            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							SafeResetPlayerWeapons(playerid);
							SafeGivePlayerWeapon(playerid, 41, 150);
							SafeGivePlayerWeapon(playerid, 24, 70);
							SafeGivePlayerWeapon(playerid, 3, 0);
							SetPlayerColor(playerid,0xa9c4e400);
							PlayerInfo[playerid][pDuty] = 1;
    						SaveGuns(playerid);
							return 1;
						}
			            if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			            {
				    		format(string, sizeof(string), "* æ¸πŸ %s ¥”¥¢ŒÔπÒ¡Àƒ√¡À“ª∞—«π∫Õ“ªøÈª’’¬.", sendername);
    					}
						else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			            {
				    		format(string, sizeof(string), "* Ãÿπ§ %s ¥”¥¢ŒÔπÒ¡Àƒ√¡À“ª∞—«π∫Õ“ªøÈª’’¬.", sendername);
    					}
						else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			            {
				    		format(string, sizeof(string), "*  ø±¯ %s ¥”¥¢ŒÔπÒ¡Àƒ√¡À“ª∞—«π∫Õ“ªøÈª’’¬.", sendername);
						}
						if(IsPlayerInRangeOfPoint(playerid, 6, 257.1108,78.0250,1003.6406))//æØ≤Ïæ÷ Lockers
						{
							new sapdequip[] = "1\t—ßæØ\n2\tΩªæØ\n3\t—≤æØ\n4\tæØ≥§\n5\t∂Ω≤Ï\n6\t∏ﬂº∂∂Ω≤Ï\n7\t∏±æ÷≥§\n8\tæ÷≥§\n9\t∑¿µØ“¬+Ω°øµ\n10\tµÕº∂SWAT\n11\t÷–º∂SWAT\n12\t∏ﬂº∂SWAT\n13\tÃÿº∂SWAT";
				    		ShowPlayerDialog(playerid,50,DIALOG_STYLE_LIST,"◊∞±∏¡–±Ì:",sapdequip,"◊∞±∏","»°œ˚");
						}
						else if(IsPlayerInRangeOfPoint(playerid, 6, 223.6328,186.8251,1003.0313))//FBI Lockers (Library)
				        {
							new fbiequip[] = "1\tæ¸–£—ß…˙…Ë±∏\n2\t¥˙¿Ì…Ë±∏\n3\tπ€ø¥µƒ…Ë±∏\n4\tº‰µ˝…Ë±∏\n5\t±Í◊º◊˜’Ω\n6\t÷–µ»◊˜’Ω\n7\t÷ÿµƒ◊˜’Ω\n8\t…‰ª˜ ÷◊˜’Ω\n9\t◊∞º◊+Ω°øµ\n10\t¿Ò“«“¬∑˛\n11\t»± °\n12\t∏ﬂµƒ≈≈¡–";
							ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"◊∞±∏¡–±Ì:",fbiequip,"—°‘Ò","»°œ˚");
						}
						else if(IsPlayerInRangeOfPoint(playerid, 6, 233.4989,123.6518,1003.2188))//Army Lockers
				        {
							new armyequip[] = "1\tÀΩ”–…Ë±∏\n2\tæ¸ ø…Ë±∏\n3\tπ€ø¥µƒ…Ë±∏\n4\tº‰µ˝…Ë±∏\n5\t±Í◊ºÃÿ÷÷≤ø∂”\n6\t÷–µ»Ãÿ÷÷≤ø∂”\n7\t÷ÿµƒÃÿ÷÷≤ø∂”\n8\tæ—ª˜ ÷◊˜’Ω\n9\t◊∞º◊+Ω°øµ\n10\t¿Ò“«∑˛\n11\t»± °\n12\t∏ﬂµƒ≈≈¡–";
			                ShowPlayerDialog(playerid,52,DIALOG_STYLE_LIST,"◊∞±∏¡–±Ì:",armyequip,"—°‘Ò","»°œ˚");
						}
			    		SendClientMessage(playerid, COLOR_WHITE, "«Î—°‘Òƒ„µƒŒ‰∆˜◊∞±∏∫Õ÷∆∑˛,∑Ò‘Úƒ„÷ª”–“ªÃ◊ª˘¥°æØ≤Ï÷µ∞‡◊∞±∏,ƒ„ø…“‘ π”√/equip‘⁄’‚¿Ô‘Ÿ¥Œ—°‘Ò◊∞±∏!");
	    				SendClientMessage(playerid, COLOR_GREY,"*ƒ„Œﬁ∑®—°‘Òµƒ“ª«–£¨“ÚŒ™√ø“ª∏ˆœÓƒø–Ë“™À¸µƒ÷∏∂®◊È÷Øµ»º∂!");
						SendClientMessage(playerid, COLOR_WHITE,"* »Áπ˚µ–»À∑¥øππ˝º§,ƒ„ø…“‘ π”√/tazerΩ´À˚ª˜µπ");
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						SafeResetPlayerWeapons(playerid);
						SafeGivePlayerWeapon(playerid, 24, 70);
						SafeGivePlayerWeapon(playerid, 3, 0);
						PlayerInfo[playerid][pTazerBullets] = 20;
						PlayerInfo[playerid][pDuty] = 1;
						//PlayerInfo[playerid][pChar] = 71;
						SetPlayerToTeamColor(playerid);
						//new factionskin = PlayerInfo[playerid][pChar];
    					//SetPlayerSkin(playerid, factionskin);
    					//AttachWeaponCorrectly(playerid, 23);
					}
					else if(PlayerInfo[playerid][pDuty] == 1)
					{
					    if(IsAFreecop(playerid))
					    {
					        format(string, sizeof(string), "* “ÂŒÒæ¸πŸ %s ∞—À˚µƒŒ‰∆˜∫Õª’’¬∑≈»Î¡ÀπÒ◊”.", sendername);
					        ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							SafeResetPlayerWeapons(playerid);
							PlayerInfo[playerid][pDuty] = 0;
							SetPlayerColor(playerid, TEAM_HIT_COLOR);
							new originalskin = PlayerInfo[playerid][pModel];
	    					SetPlayerSkin(playerid, originalskin);
	    					PlayerInfo[playerid][pChar] = 0;
	    					SetPlayerWeapons(playerid);
							return 1;
						}
					    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
					    {
					        OnSwatDuty[playerid] = 0;
							format(string, sizeof(string), "* æ¸πŸ %s ∞—À˚µƒŒ‰∆˜∫Õª’’¬∑≈»Î¡ÀπÒ◊”.", sendername);
						}
						else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
						{
						    OnTacticalDuty[playerid] = 0;
						    format(string, sizeof(string), "* Ãÿπ§ %s ∞—À˚µƒŒ‰∆˜∫Õª’’¬∑≈»Î¡ÀπÒ◊”.", sendername);
						}
						else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			            {
			                OnSpecialFDuty[playerid] = 0;
				    		format(string, sizeof(string), "*  ø±¯ %s ∞—À˚µƒŒ‰∆˜∫Õª’’¬∑≈»Î¡ÀπÒ◊”.", sendername);
						}
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						SafeResetPlayerWeapons(playerid);
						SafeSetPlayerArmour(playerid, 0);
						SafeGivePlayerWeapon(playerid, 41, 500);
						PlayerInfo[playerid][pDuty] = 0;
						PlayerInfo[playerid][pChar] = 0;
						SetPlayerColor(playerid, TEAM_HIT_COLOR);
						new originalskin = PlayerInfo[playerid][pModel];
    					SetPlayerSkin(playerid, originalskin);
    					//AttachWeaponCorrectly(playerid, 99);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ª‘⁄∏¸“¬ “ !");
					return 1;
				}
			}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			else if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4)
			{
			    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 1222.1793,-1246.3489,1287.8243))
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "ƒ„≤ª‘⁄“Ω‘∫“¬ŒÔπÒ«∞!");
			        return 1;
				}
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄‘⁄“Ω‘∫œ¬∞‡¡ÀΩ´≤ª‘⁄Ω”µΩµÁª∞.");
			        JobDuty[playerid] = 0;
			        Medics -= 1;
			        SetPlayerColor(playerid, TEAM_HIT_COLOR);
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄…œ∞‡¡À,∂‘–Ë“™µƒ»ÀΩ¯––∞Ô÷˙.");
			        JobDuty[playerid] = 1;
			        Medics += 1;
					SetPlayerColor(playerid, 0xFF828200);
			    }
			}
			else if(PlayerInfo[playerid][pMember] == 12||PlayerInfo[playerid][pLeader] == 12)
			{
			    if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2811.7837,-1167.3248,1025.5703))
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "ƒ„≤ª‘⁄œ˚∑¿‘±¥¢ŒÔπÒ«∞!");
			        return 1;
				}
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄¿Îø™¡Àœ˚∑¿‘±µƒπ§◊˜≤ªª·Ω”µΩµÁª∞.");
			        JobDuty[playerid] = 0;
			        SetPlayerColor(playerid, TEAM_HIT_COLOR);
			        SafeResetPlayerWeapons(playerid);
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄…œ∞‡¡À,∂‘–Ë“™µƒ»ÀΩ¯––∞Ô÷˙.");
			        JobDuty[playerid] = 1;
					SetPlayerColor(playerid, 0xAA333300);
					SafeGivePlayerWeapon(playerid, 42, 2500);
					SafeGivePlayerWeapon(playerid, 6, 1);
			    }
			}
			else if(PlayerInfo[playerid][pJob] == 17)
   			{
       			if(JobDuty[playerid] == 1)
       			{
           			SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄¿Îø™¡À≈˚»¯Õ‚ÀÕµƒπ§◊˜,≤ªª·Ω”µΩπ§◊˜µÁª∞¡À");
           			JobDuty[playerid] = 0;
           			PizzaBoys -= 1;
       			}
       			else
       			{
           			SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄…œ∞‡¡Àª˝º´Ω”¥˝πÀøÕ.");
           			JobDuty[playerid] = 1;
        			PizzaBoys += 1;
        			GetPlayerName(playerid,sendername,sizeof(sendername));
   					format(string, sizeof(string), "[π„∏Ê] ≈˚»¯µÍÕ‚ÀÕ‘± %s …œ∞‡¡À,  π”√/call 111∂©π∫“ª∏ˆ≈˚»¯.", sendername);
	    			OOCNews(0xFF7E00AA,string);
				}
			}
			else if(PlayerInfo[playerid][pJob] == 7)
			{
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄¿Îø™¡À∆˚≥µ–ﬁ¿Ìπ§µƒπ§◊˜,≤ª‘⁄Ω”µΩπ§◊˜µÁª∞.");
			        JobDuty[playerid] = 0;
			        Mechanics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* ƒ„œ÷‘⁄…œ∞‡¡Àª˝º´Ω”¥˝πÀøÕ∞Ô÷˙µÁª∞.");
			        JobDuty[playerid] = 1;
			        Mechanics += 1;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
   					format(string, sizeof(string), "[π„∏Ê] ∆˚≥µ–ﬁ¿Ìπ§ %s…œ∞‡¡À, /call 555«Î“ª∏ˆ–ﬁ¿Ì‘±.", sendername);
	    			OOCNews(0x2993EDAA,string);
			    }
			}
			/*else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «“ª√˚æØ≤Ï !");
			}*/

			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /duty",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
//----------------------------------[departments]-----------------------------------------------
	if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/d)epartments [≤ø√≈¡ƒÃÏƒ⁄»›]");
				return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
			if(OnSwatDuty[playerid] == 1)
			{
				if(PlayerInfo[playerid][pSwat] == 4) { format(string, sizeof(string), "÷∏ª”πŸ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSwat] == 3) { format(string, sizeof(string), "–°∂”÷∏ª”πŸ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSwat] == 2) { format(string, sizeof(string), "∏®µº‘± %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSwat] == 1) { format(string, sizeof(string), "–ÃæØ %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
      		else if(OnTacticalDuty[playerid] == 1)
			{
				if(PlayerInfo[playerid][pTactical] == 4) { format(string, sizeof(string), "◊‹π‹√‹ÃΩ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pTactical] == 3) { format(string, sizeof(string), "æ´”¢√‹ÃΩ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pTactical] == 2) { format(string, sizeof(string), "◊®º“√‹ÃΩ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pTactical] == 1) { format(string, sizeof(string), " µœ∞…˙ Unit %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
		    else if(OnSpecialFDuty[playerid] == 1)
			{
		 		if(PlayerInfo[playerid][pSpecialF] == 4) { format(string, sizeof(string), "∂”≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSpecialF] == 3) { format(string, sizeof(string), "∏±∂”≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSpecialF] == 2) { format(string, sizeof(string), "…˙ªØ’Ω ø %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pSpecialF] == 1) { format(string, sizeof(string), " ø±¯ %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(IsAFreecop(playerid) && PlayerInfo[playerid][pDuty] == 1)
			{
				format(string, sizeof(string), "“ÂŒÒ%s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ÷≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±æ÷≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "∏ﬂº∂∂Ω≤Ï %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "∂Ω≤Ï %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "æØ≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "—≤æØ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "ΩªæØ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "—ßæØ %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ÷≥§ %s: %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±æ÷≥§ %s: %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "–≠÷˙÷˜»Œ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "ø∆≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Ãÿ±ÃΩ‘±∏∫‘»À %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "Ãÿ±ÃΩ‘± %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Ãÿπ§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "—ßæØ %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "…œΩ´ %s: %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "∏±…œΩ´ %s: %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "…œŒæ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "÷–Œæ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "…Ÿ–£ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "æ¸ ø %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " ø±¯ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "¡–±¯ %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
				ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
			{
			    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆––’˛≥§πŸ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆∏±‘∫≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆÷–Œæ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆…œŒæ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "«¿æ»“Ω¡∆∑˛ŒÒ“Ω…˙ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "ª˘±æ«¿æ»“Ω¡∆“Ω…˙ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆ µœ∞…˙ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "æ»‘Æ“Ω¡∆ª§¿Ì %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==12||PlayerInfo[playerid][pLeader]==12)
			{
				if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "FD ‘∫≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "‘∫≥§÷˙¿Ì %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "FD …œŒæ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "FD ÷–Œæ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "Engine %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "œ˚∑¿‘± %s: %s, ÕÍ±œ.", sendername, result); }
                else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "Probationary %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "µ˜≤È‘± %s: %s, ÕÍ±œ.", sendername, result); }
				else
				{
					format(string, sizeof(string), "[Œ¥÷™] %s (ŒﬁœﬂµÁ): %s, ÕÍ±œ.", sendername, result);
				}
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
				return 1;
			}
			else if(PlayerInfo[playerid][pLeader] == 7||PlayerInfo[playerid][pMember] == 7)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), " –≥§ %s: %s, ÕÍ±œ.", sendername, result); }
			    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), " –≥§÷˙¿Ì %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), " –≥§µƒ±£Œ¿ø∆≥§ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), " –≥§÷˜Àæª˙ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), " –≥§±£Ô⁄ %s: %s, ÕÍ±œ.", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), " –≥§Àæª˙ %s: %s, ÕÍ±œ.", sendername, result); }
			    else { SendClientMessage(playerid, COLOR_GREY, "**  –≥§√ª”–∏¯ƒ„“ª≤øŒﬁœﬂµÁ"); return 1; }
                ProxDetector(7.5, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				SentMessage[playerid] = 1;
				SendRadioMessage(3, COLOR_ALLDEPT, string);
				SendRadioMessage(2, COLOR_ALLDEPT, string);
				SendRadioMessage(1, COLOR_ALLDEPT, string);
				SendRadioMessage(4, COLOR_ALLDEPT, string);
				SendRadioMessage(12, COLOR_ALLDEPT, string);
				SendRadioMessage(7, COLOR_ALLDEPT, string);
				SentMessage[playerid] = 0;
				format(string, sizeof(string), "[%d/%d/%d](%d:%d:%d) %s (departments): (%s)",d,m,y,h,mi,s, sendername, result);
				RadioChatLog(string);
			    return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„≤ª «–°∂”µƒ“ª∑›◊” !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/mdc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚æØ≤Ï !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				return 1;
			}
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /mdc [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||IsASwatCar(tmpcar)||IsASpecialFCar(tmpcar)||IsATacticalCar(tmpcar)||IsAnFbiCar(tmpcar)||IsNgCar(tmpcar)||IsPlayerInRangeOfPoint(playerid, 5, 253.9280,69.6094,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, TEAM_BLUE_COLOR,"______-=± º«±æµÁƒ‘=-_______");
						format(string, sizeof(string), "√˚◊÷ : %s", sendername);
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "◊Ô–– : %s", PlayerCrime[giveplayerid][pAccusedof]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "À˜≈‚»À : %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "√Ë ˆ : %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD4,string);
						format(string, sizeof(string), "±ª∏Ê : %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
						SendClientMessage(playerid, TEAM_BLUE_COLOR,"_______________________________________");
						GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /mdc %s",d,m,y,h,mi,s,giveplayer, sendername);
						CommandLog(string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„≤ª‘⁄æØ≥µ…œªÚ‘⁄æØ≤Ïæ÷.");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/givepassport", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª «“ª√˚æØ≤Ï !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pRank] >= 4)
			{
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givepassport [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
	   				if(giveplayerid != INVALID_PLAYER_ID)
				    {
	       				GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						if(PlayerInfo[giveplayerid][pPassport] == 1) return SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆ»À“—æ≠”–“ª±æª§’’¡À!");
						PlayerInfo[giveplayerid][pPassport] = 1;
						format(string, sizeof(string),"ƒ„Ω´“ª±æª§’’∏¯¡À %s.",giveplayer);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string),"%s ∏¯ƒ„¡À“ª±æ,ª§’’ƒ„œ÷‘⁄ «“ª∏ˆ∫œ∑®π´√Ò!.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string),"[π‹¿Ì]: %s Ω´“ª±æª§’’∏¯¡À %s.",sendername, giveplayer);
						SendAdminMessage(COLOR_LIGHTRED, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /givepassport %s",d,m,y,h,mi,s,giveplayer, sendername);
						AdminLog(string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„–Ë“™4º∂“‘…œ≤≈ø…“‘ π”√.");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/agivepassport", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /agivepassport [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
	   				if(giveplayerid != INVALID_PLAYER_ID)
				    {
	       				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[giveplayerid][pPassport] == 1) return SendClientMessage(playerid, COLOR_GREY, "’‚∏ˆ»À“—æ≠”–“ª±æª§’’¡À!");
						PlayerInfo[giveplayerid][pPassport] = 1;
						format(string, sizeof(string),"ƒ„Ω´“ª±æª§’’∏¯¡À %s.",giveplayer);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string),"%s ∏¯ƒ„¡À“ª±æ,ª§’’ƒ„œ÷‘⁄ «“ª∏ˆ∫œ∑®π´√Ò!.",sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string),"[π‹¿Ì]: %s Ω´“ª±æª§’’∏¯¡À %s.",sendername, giveplayer);
						SendAdminMessage(COLOR_LIGHTRED, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /givepassport %s",d,m,y,h,mi,s,giveplayer);
						AdminLog(string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
		}
		return 1;
	}

//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pDuty] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–…œ∞‡!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/su)spect [ÕÊº“ID/ÕÊº“√˚◊÷] [◊Ô∑∏√Ë ˆ]");
				return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsACop(playerid) || IsAFreecop(playerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/su)spect [ÕÊº“ID/ÕÊº“√˚◊÷] [◊Ô∑∏√Ë ˆ]");
							return 1;
						}
						if(IsACop(giveplayerid))
						{
						    if(PlayerInfo[playerid][pRank] >= 6)
						    {
								if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 6; }
								else { WantedPoints[giveplayerid]+= 2; }
								SetPlayerCriminalEx(giveplayerid,playerid, result);
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY,"* ƒ„µƒµ»º∂±ÿ–Î¥Û”⁄ªÚµ»”⁄6ƒ„≤≈ø…“‘ª≥“…æØ≤Ï");
							    return 1;
							}
						}
						else if(IsAFreecop(giveplayerid))
						{
							if(PlayerInfo[playerid][pRank] >= 3)
						    {
								if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 6; }
								else { WantedPoints[giveplayerid]+= 2; }
								SetPlayerCriminalEx(giveplayerid,playerid, result);
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY,"* ƒ„µƒµ»º∂±ÿ–Î¥Û”⁄ªÚµ»”⁄3ƒ„≤≈ø…“‘ª≥“…æØŒ¿");
							    return 1;
							}
						}
						else
						{
						    if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 6; }
							else { WantedPoints[giveplayerid]+= 2; }
							SetPlayerCriminalEx(giveplayerid,playerid, result);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /suspect %s %s",d,m,y,h,mi,s,sendername, giveplayer, (result));
						CommandLog(string);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ªø…“‘ª≥“…æØ≤Ï !");
					}
				}
			}
			else
			{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ª «“ª√˚æØ≤Ï / FBI / π˙√ÒæØŒ¿∂” !");
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/asuspect", true) == 0 || strcmp(cmd, "/asu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/asu)spect [ÕÊº“ID/ÕÊº“√˚◊÷] [◊Ô∑∏√Ë ˆ]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
   				if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/asu)spect [ÕÊº“ID/ÕÊº“√˚◊÷] [◊Ô∑∏√Ë ˆ]");
						return 1;
					}
					if(WantedPoints[giveplayerid] == 0)
					{
						WantedPoints[giveplayerid] = 6;
					}
					else
					{
						WantedPoints[giveplayerid] = 6;
					}
					SetPlayerCriminalEx(giveplayerid,playerid, result);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /asuspect %s %s",d,m,y,h,mi,s,sendername, giveplayer, (result));
					AdminLog(string);
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				return 1;
			}
		}
		return 1;
	}

	
//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/lock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
			if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
			{
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPhousekey] == 9999)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„√ª”–“ª¡æ≥µ.");
					return 1;
				}
				else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPhousekey]+1)
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] != 299)
					{
						gLastDriver[HireCar[playerid]] = 300;
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
			if (PlayerInfo[playerid][pPhousekey] == 9999)
			{
				if(HireCar[playerid] == 299)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„√ª”–“ª¡æ≥µ.");
					return 1;
				}
			}
			carid = PlayerInfo[playerid][pPhousekey]+1;
			if(HireCar[playerid] != 299 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			//new driver = gLastDriver[carid];
			new lockstatus = gCarLock[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 9999)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª¡æ≥µ");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Hire Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
					}
					else if (PlayerInfo[playerid][pPhousekey] == carid-1)
					{
						GameTextForPlayer(playerid, "~w~House Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
						return 1;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 9999)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„√ª”–“ª¡æ≥µ");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Hire Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
					}
					if (PlayerInfo[playerid][pPhousekey] == carid-1)
					{
						GameTextForPlayer(playerid, "~w~House Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
						return 1;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "** ¥ÌŒÛ");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„√ª”–“ª¡æ≥µ !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/open", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPhousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
							SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /open",d,m,y,h,mi,s,sendername);
		CommandLog(string);
	    return 1;
	}
	
	if(strcmp(cmd, "/aopen", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(HouseInfo[i][hLock] == 1)
					{
						HouseInfo[i][hLock] = 0;
						GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
					if(HouseInfo[i][hLock] == 0)
					{
						HouseInfo[i][hLock] = 1;
						GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(BizzInfo[i][bLocked] == 1)
					{
						BizzInfo[i][bLocked] = 0;
						GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
					if(BizzInfo[i][bLocked] == 0)
					{
						BizzInfo[i][bLocked] = 1;
						GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(SBizzInfo[i][sbLocked] == 1)
					{
						SBizzInfo[i][sbLocked] = 0;
						GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
					if(SBizzInfo[i][sbLocked] == 0)
					{
						SBizzInfo[i][sbLocked] = 1;
						GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						return 1;
					}
				}
			}
	    }
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /aopen",d,m,y,h,mi,s,sendername);
		AdminLog(string);
	    return 1;
	}
//----------------------------------[LOCK]-----------------------------------------------
	/*if(strcmp(cmd, "/gang", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15 || PlayerInfo[playerid][pLeader] == 16)
			{
				if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pGangKey]+1)
				{
					if (GangCar[playerid] != gLastCar[playerid] && GangCar[playerid] != 512)
					{
						gLastDriver[GangCar[playerid]] = 520;
						gCarLock[GangCar[playerid]] = 0;
						UnLockCar(GangCar[playerid]);
					}
					GangCar[playerid] = gLastCar[playerid];
				}
			}
			if(GangCar[playerid] != 512 && !SwitchKey[playerid])
			{
				carid = GangCar[playerid];
			}
			//new driver = gLastDriver[carid];
			new lockstatus = gCarLock[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(GangCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Gang Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
					}
					else if (PlayerInfo[playerid][pPhousekey] == carid-1)
					{
						GameTextForPlayer(playerid, "~w~Gang Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
						return 1;
					}
				}
				case 1:
				{
					if(GangCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Gang Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
					}
					if (PlayerInfo[playerid][pPhousekey] == carid-1)
					{
						GameTextForPlayer(playerid, "~w~Gang Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
						return 1;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Error");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª¡æ≥µ !");
			}
		}
		return 1;
	}*/
//----------------------------------[PM]-----------------------------------------------
	if(strcmp(cmd, "/pm", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º!");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /pm [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(HidePM[giveplayerid] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“æ‹æ¯Ω” ’œ˚œ¢!");
			            return 1;
			        }
           			if(PlayerInfo[playerid][pMuted] == 1)
					{
						SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
						return 1;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x,y,z);
					new h, mi, s;
					new y1, m, d;
					gettime(h,mi,s);
					getdate(y1, m, d);
					if(giveplayerid == playerid)
					{
						format(string, sizeof(string), "* %s –°…˘‡÷πæ◊≈ ≤√¥.", sendername);
						ProxDetector(5.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/pm) [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
						return 1;
					}
					format(string, sizeof(string), "* PM œ˚œ¢¿¥◊‘ %s (%d): %s", sendername, playerid, (result));
					SendClientMessage(giveplayerid, 0xE5C43EAA, string);
					PlayerPlaySound(giveplayerid, 1055, x,y,z);
					format(string, sizeof(string), "* PM ∑¢ÀÕµΩ %s (%d): %s", giveplayer, giveplayerid, (result));
					SendClientMessage(playerid, 0xBBA033AA, string);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [PM] to %s: (%s)",d,m,y1,h,mi,s, sendername,giveplayer, result);
					PMLog(string);
					for(new i=0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[i][pViewPms] == 1 && PlayerInfo[i][pAdmin] >= 1)
							{
		                        format(string, sizeof(string), "[π‹¿Ì]: %s (%d) ∑¢ÀÕ PM µΩ %s (%d) - (%s)",sendername, playerid, giveplayer, giveplayerid, (result));
		                        SendClientMessage(i, COLOR_LIGHTRED, string);
							}
						}
					}
					return 1;
				}
			}
			else
			{
					format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

// ADMIN PM

	if(strcmp(cmd, "/apm", true) == 0 || strcmp(cmd, "/ap", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
	        	if(gPlayerLogged[playerid] == 0)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º!");
	            	return 1;
	        	}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /apm [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
			    	if(giveplayerid != INVALID_PLAYER_ID)
			    	{

						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new h,mi,s;
      					new y,m,d;
						gettime(h,mi,s);
						getdate(y,m,d);
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /apm [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
							return 1;
						}
						format(string, sizeof(string), "* PM ¿¥◊‘π‹¿Ì‘±: %s", (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "* PM ∑¢ÀÕ∏¯ %s (%d): %s", giveplayer, giveplayerid, (result));
						SendClientMessage(playerid,  COLOR_GREEN, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s PM∏¯ %s (%d) (ƒ⁄»›: %s).",sendername,giveplayer,giveplayerid, (result));
						SendAdminMessage(COLOR_LIGHTRED,string);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [APM] to %s: (%s)",d,m,y,h,mi,s, sendername,giveplayer, result);
						APMLog(string);
						return 1;
					}
				}
				else
				{
						format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
						SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			return 1;
		}
	}

	if(strcmp(cmd, "/tpm", true) == 0 || strcmp(cmd, "/tp", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pTester] >= 1)
			{
	        	if(gPlayerLogged[playerid] == 0)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º!");
	            	return 1;
	        	}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /tpm [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
			    	if(giveplayerid != INVALID_PLAYER_ID)
			    	{

						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new h,mi,s;
      					new y,m,d;
						gettime(h,mi,s);
						getdate(y,m,d);
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /apm [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
							return 1;
						}
						format(string, sizeof(string), "* PM ¿¥◊‘≤‚ ‘»À‘±: %s", (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "* PM ∑¢ÀÕµΩ %s (%d): %s", giveplayer, giveplayerid, (result));
						SendClientMessage(playerid,  COLOR_GREEN, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s PM∏¯ %s (%d) (ƒ⁄»›: %s).",sendername,giveplayer,giveplayerid, (result));
						SendTesterAdminMessage(COLOR_LIGHTRED,string);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [TPM] to %s: (%s)",d,m,y,h,mi,s, sendername,giveplayer, result);
						APMLog(string);
						return 1;
					}
				}
				else
				{
						format(string, sizeof(string), "* %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
						SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			return 1;
		}
	}
//----------------------------------[Whisper]-----------------------------------------------
	if(strcmp(cmd, "/talk", true) == 0 || strcmp(cmd, "/t", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º!");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/t)alk [ÕÊº“ID/ÕÊº“√˚◊÷] [∂˙”Ôœ˚œ¢]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			new h,mi,s;
			new y1,m,d;
			gettime(h,mi,s);
			getdate(y1,m,d);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        new Float:x, Float:y, Float:z;
           			GetPlayerPos(giveplayerid,x,y,z);
			        if(IsPlayerInRangeOfPoint(playerid, 5, x, y, z))
			        {

						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(giveplayerid == playerid)
						{
							format(string, sizeof(string), "* %s –°…˘µÕπ¿◊≈ ≤√¥.", sendername);
							ProxDetector(5.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						else
						{
						    format(string, sizeof(string), "* %s «ƒ«ƒ∂‘◊≈ %sÀµ", sendername, giveplayer);
							ProxDetector(15.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/w)isper [ÕÊº“ID/ÕÊº“√˚◊÷] [∂˙”Ôœ˚œ¢]");
							return 1;
						}
						format(string, sizeof(string), "%s «ƒ«ƒÀµ: %s", sendername, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "%s «ƒ«ƒÀµ: %s", sendername, (result));
						SendClientMessage(playerid,  COLOR_YELLOW, string);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [Whisper] to %s: (%s)",d,m,y1,h,mi,s, sendername,giveplayer, result);
						ChatLog(string);
						return 1;
					}
					else
					{
					    SendClientMessage(playerid,  COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					    return 1;
					}
				}
			}
			else
			{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//ATM STAFF
	if(strcmp(cmd, "/atmwithdraw", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
		        if(!IsPlayerInRangeOfPoint(playerid, 3, -32.276363,-57.995586,1003.139953) && !IsPlayerInRangeOfPoint(playerid, 3, 374.718902,167.128982,1007.987304))
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª‘⁄“ª∏ˆATMª˙≈‘±ﬂ!");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /atmwithdraw [ ˝¡ø]");
					format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /atmwithdraw [ ˝¡ø]");
					format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡ !");
					return 1;
				}


				if (cashdeposit > 5000)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„◊Ó∂‡÷ªƒ‹Ã·»°$5000!");
					return 1;
				}

			    ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid,cashdeposit);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
				format(string, sizeof(string), "  ƒ„»°◊ﬂ¡À$%d,ƒ„µƒ’ ªßªπ”–:: $%d ", cashdeposit,PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				PlayerInfo[playerid][pJobTimer] = 12;
	            GetPlayerName(playerid, giveplayer, sizeof(giveplayer));
	 			format(string, sizeof(string), "  ID(%d) -%s »°◊ﬂ¡À$%d.", playerid,giveplayer,cashdeposit);
				ABroadCast(COLOR_YELLOW,string, 5);
                
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /atmwithdraw ($%d)",d,m,y,h,mi,s,sendername, cashdeposit);
				PayLog(string);
				return 1;
			}
			return 1;
		}


	// END ATM STUFF
//----------------------------------[Car Whisper]-----------------------------------------------
	if(strcmp(cmd, "/cw", true) == 0 || strcmp(cmd, "/carwhisper", true) == 0 || strcmp(cmd, "/cwhisper", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
		    {
		    	SendClientMessage(playerid, COLOR_GREY, "   ƒ„ªπ√ª”–µ«¬º!");
		        return 1;
	     	}
		    if(!IsPlayerInAnyVehicle(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª‘⁄“ª¡æ≥µ¿Ô!");
		        return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/cw)hisper [ƒ⁄»›]");
				return 1;
			}
			new vehicle = GetPlayerVehicleID(playerid);
			for( new i = 0; i != MAX_PLAYERS; i++ )
			{
			    if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
			    {
			        if(GetPlayerVehicleID(i) == vehicle)
			        {
			            if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			            {
	      					format(string, sizeof(string), "Àæª˙ %s Àµ: %s", sendername, result);
	     					SendClientMessage(i,  0xD7DFF3AA, string);
						}
						else
						{
						    format(string, sizeof(string), "Passenger %s Àµ: %s", sendername, result);
	     					SendClientMessage(i,  0xD7DFF3AA, string);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /carwhisper %s",d,m,y,h,mi,s,result);
						ChatLog(string);
					}
			    }
			}
		}
		return 1;
	}
//----------------------------------[Bank System]-----------------------------------------------
    if(strcmp(cmd, "/withdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 5.0,2316.6189,-7.3091,26.7422) || IsPlayerInRangeOfPoint(playerid, 1.5, 1346.5016,-1758.7649,13.5156) || IsPlayerInRangeOfPoint(playerid, 1.5, 1592.7152,-2335.3748,13.5400) || IsPlayerInRangeOfPoint(playerid, 1.5, 2308.4612,-1634.4176,14.8270) || IsPlayerInRangeOfPoint(playerid, 1.5, 2865.9014,-1415.4203,11.0061) || IsPlayerInRangeOfPoint(playerid, 1.5, 2404.5913,-1229.8973,23.8301) || IsPlayerInRangeOfPoint(playerid, 1.5, 1172.5912,-1328.4365,15.4034))
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /withdraw [ ˝¡ø]");
					format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /withdraw [ ˝¡ø]");
					format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡ !");
					return 1;
				}
		    	//ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid,cashdeposit);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
				format(string, sizeof(string), "  ƒ„»°◊ﬂ¡À$%d,ƒ„µƒ’ ªßªπ”–:: $%d ", cashdeposit,PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_YELLOW, string);

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /withdraw ($%d)",d,m,y,h,mi,s,sendername, cashdeposit);
				PayLog(string);
				return 1;
			}
			else
			{
   				SendClientMessage(playerid, COLOR_GREY, "   ƒ„œ÷‘⁄≤ª‘⁄“¯–– !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bank", true) == 0 || strcmp(cmd, "/deposit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
	        if(!IsPlayerInRangeOfPoint(playerid, 5.0,2316.6189,-7.3091,26.7422))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "* ƒ„œ÷‘⁄≤ª‘⁄“¯––!");
	            return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bank [ ˝¡ø]");
				format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bank [ ˝¡ø]");
				format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡");
				return 1;
			}
			if (GetPlayerMoney(playerid) > ScriptMoney[playerid])
			{
			    if(admins == 0 || afkadmins == admins)
				{
			  		format(string, sizeof(string), "%s (%d), ±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜ ∑¥Õ‚π“ºÏ≤‚ ø…ƒ‹ π”√¡ÀÀ¢«Æ∫⁄øÕ.", sendername, playerid);
					SendClientMessageToAll(COLOR_NICERED, string);
					format(string, sizeof(string), "ƒ„±ªΩ˚÷πΩ¯»Î∑˛ŒÒ∆˜ ∑¥Õ‚π“ºÏ≤‚ ø…ƒ‹ π”√¡ÀÀ¢«Æ∫⁄øÕ ($%d)",(GetPlayerMoney(playerid) - ScriptMoney[playerid]));
					SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Banned %s for: Money Hacking",d,m,y,h,mi,s,sendername);
					BanLog(string);
					ScriptBan(playerid,999,"Money Hacks");
				}
				format(string, sizeof(string), "[PETER]: %s (%d) ø…ƒ‹ « π”√¡À À¢«Æ∫⁄øÕ; «ÎºÏ≤ÈÀ˚/À˝!!", sendername, playerid);
				SendAdminMessage(COLOR_YELLOW, string);
				PlayerSuspicious[playerid] = 1;
				PlayerMoneyHacking[playerid] = 1;
				PlayerSuspiciousMoney[playerid] = (GetPlayerMoney(playerid) - ScriptMoney[playerid]);
				PlayerGotSpottedRecently[playerid] = 1;
				SetTimerEx("ResetAcWarn", 90000, 0, "i", playerid);
				SendClientMessage(playerid, COLOR_CREAM, "* Ωª“◊÷’÷π,ƒ„µƒ«Æ ˝≤ª’˝≥£,«Î¡™œµπ‹¿Ì‘±Ω‚æˆ.");
				return 1;
			}
			SafeGivePlayerMoney(playerid,-cashdeposit);
			new curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
			SendClientMessage(playerid, COLOR_WHITE, "|___ “¯––π´∏Ê ___|");
			format(string, sizeof(string), "  æ…µƒΩ·”‡: $%d", curfunds);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  ¥ÊøÓ: $%d",cashdeposit);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  –¬µƒΩ·”‡: $%d", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			if(cashdeposit >= 100000)
			{
				format(string, sizeof(string), "[PETER]: %s (%d) “—¥Ê∑≈ $%d !", sendername, playerid, cashdeposit);
				SendAdminMessage(COLOR_YELLOW, string);
			}
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /deposit ($%d)",d,m,y,h,mi,s,sendername, cashdeposit);
			PayLog(string);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/balance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsPlayerInRangeOfPoint(playerid, 5.0,2316.6189,-7.3091,26.7422) || IsPlayerInRangeOfPoint(playerid, 1.5, 1346.5016,-1758.7649,13.5156) || IsPlayerInRangeOfPoint(playerid, 1.5, 1592.7152,-2335.3748,13.5400) || IsPlayerInRangeOfPoint(playerid, 1.5, 2308.4612,-1634.4176,14.8270) || IsPlayerInRangeOfPoint(playerid, 1.5, 2865.9014,-1415.4203,11.0061) || IsPlayerInRangeOfPoint(playerid, 1.5, 2404.5913,-1229.8973,23.8301) || IsPlayerInRangeOfPoint(playerid, 1.5, 1172.5912,-1328.4365,15.4034))
	        {
				format(string, sizeof(string), "  ƒ„µƒ’Àªß÷–”–$%d.",PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /balance",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„œ÷‘⁄≤ª‘⁄“¯–– !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{

				format(string, sizeof(string), "*** %s ≈◊≥ˆ“ª∏ˆ˜ª◊”µΩ  %d", sendername,dice);
				ProxDetector(10.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /dice (%d)",d,m,y,h,mi,s,sendername, dice);
				CommandLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ˜ª◊”");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/coin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new coin = random(2)+1;

			new coinname[20];
			if(coin == 1) { coinname = "head"; }
			else { coinname = "tail"; }
			format(string, sizeof(string), "*** %s ∑≠◊™“ª∏ˆ”≤±“‘⁄µÿ…œ %s", sendername,coinname);
			ProxDetector(10.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);

			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /coin (%s)",d,m,y,h,mi,s,sendername, coinname);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/transfer", true) == 0 || strcmp(cmd, "/wiretransfer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„µƒµ»º∂±ÿ–ÎŒ™3º∂ !");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] != 103)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„œ÷‘⁄≤ª‘⁄“¯–– !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /transfer [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /transfer [ÕÊº“ID/ÕÊº“√˚◊÷] [ ˝¡ø]");
				return 1;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					playermoney = PlayerInfo[playerid][pAccount] ;
					if (moneys > 0 && playermoney >= moneys)
					{
						PlayerInfo[playerid][pAccount] -= moneys;
						PlayerInfo[giveplayerid][pAccount] += moneys;
						format(string, sizeof(string), "   ƒ„Ω´ $%d ª„»Î %sµƒ’Àªß", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   ƒ„µƒªßÕ∑ ’µΩ $%d  « %s ª„∏¯ƒ„µƒ", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
		                if(moneys >= 99999)
						{
						    format(string, sizeof(string), "[PETER]: %s ª„»Î $%d ∏¯ %s", sendername, moneys, giveplayer);
							SendAdminMessage(COLOR_YELLOW,string);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /transfer %s $%d",d,m,y,h,mi,s,sendername,giveplayer,moneys);
						PayLog(string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Ωª“◊Ω∂Ó≤ª’˝»∑.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/equip", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pDuty] == 0)
		    {
      			SendClientMessage(playerid,COLOR_GREY,"** ƒ„ªπ√ª”–…œ∞‡!");
      			return 1;
			}
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3 || IsAFreecop(playerid))
			{
				if(IsPlayerInRangeOfPoint(playerid, 6, 257.1108,78.0250,1003.6406))//æØ≤Ïæ÷ Lockers
				{
					new sapdequip[] = "1\t—ßæØ\n2\tΩªæØ\n3\t—≤æØ\n4\tæØ≥§\n5\t∂Ω≤Ï\n6\t∏ﬂº∂∂Ω≤Ï\n7\t∏±æ÷≥§\n8\tæ÷≥§\n9\t∑¿µØ“¬+Ω°øµ\n10\tµÕº∂SWAT\n11\t÷–º∂SWAT\n12\t∏ﬂº∂SWAT\n13\tÃÿº∂SWAT";
	    			ShowPlayerDialog(playerid,50,DIALOG_STYLE_LIST,"◊∞±∏¡–±Ì:",sapdequip,"◊∞±∏","»°œ˚");
				}
				else if(IsPlayerInRangeOfPoint(playerid, 6, 223.6328,186.8251,1003.0313))//FBI Lockers (Library)
		        {
					new fbiequip[] = "1\tæ¸–£—ß…˙…Ë±∏\n2\t¥˙¿Ì…Ë±∏\n3\tπ€ø¥µƒ…Ë±∏\n4\tº‰µ˝…Ë±∏\n5\t±Í◊º◊˜’Ω\n6\t÷–µ»◊˜’Ω\n7\t÷ÿµƒ◊˜’Ω\n8\t…‰ª˜ ÷◊˜’Ω\n9\t◊∞º◊+Ω°øµ\n10\t¿Ò“«“¬∑˛\n11\t»± °\n12\t∏ﬂµƒ≈≈¡–";
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_LIST,"◊∞±∏¡–±Ì:",fbiequip,"—°‘Ò","»°œ˚");
				}
				else if(IsPlayerInRangeOfPoint(playerid, 6, 233.4989,123.6518,1003.2188))//Army Lockers
		        {
					new armyequip[] = "1\tÀΩ”–…Ë±∏\n2\tæ¸ ø…Ë±∏\n3\tπ€ø¥µƒ…Ë±∏\n4\tº‰µ˝…Ë±∏\n5\t±Í◊ºÃÿ÷÷≤ø∂”\n6\t÷–µ»Ãÿ÷÷≤ø∂”\n7\t÷ÿµƒÃÿ÷÷≤ø∂”\n8\tæ—ª˜ ÷◊˜’Ω\n9\t◊∞º◊+Ω°øµ\n10\t¿Ò“«∑˛\n11\t»± °\n12\t∏ﬂµƒ≈≈¡–";
	                ShowPlayerDialog(playerid,52,DIALOG_STYLE_LIST,"◊∞±∏¡–±Ì:",armyequip,"—°‘Ò","»°œ˚");
				}
				else
				{
			    	SendClientMessage(playerid, COLOR_WHITE, "ƒ„≤ª‘⁄∏¸“¬ “!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "ƒ„≤ª «æØ≤Ï/FBI/æ¸∂”!");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /equip %d",d,m,y,h,mi,s,sendername, strval(tmp));
			CommandLog(string);
			return 1;
		}
	}

	if(strcmp(cmd, "/drinks", true) == 0) // By CuervO_NegrO
	{
 		if(IsPlayerConnected(playerid))
	    {
     		if(IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
				if(PlayerInfo[playerid][pRegularRank] >= 1)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "---------------[RPC Bar]---------------");
					SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘¬Ú∆°æ∆ - /buybeer - $0");
					SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘¬Ú∆œÃ—æ∆ - /buywine - $0");
					SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘¬Ú ≤∆’¬◊øÀ - /buysprunk - $0");
					SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘¬Ú¬ÌÃ·ƒ·æ∆ - /buymart - $0");
					SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘¬Ú∑¸Ãÿº” - /buyvodkah - $0");
					SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘¬Ú±˘ÀÆ - /buywater - $0");
					SendClientMessage(playerid, COLOR_YELLOW, "---------------[RPC Bar]---------------");
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/buybeer", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
	            SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª‘⁄≥£øÕÕÊº“–›œ¢ “!!");
	            return 1;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
			GameTextForPlayer(playerid, "~W~Bought a ~Y~Beer ~N~~W~No Charge For Regular Players!",4000,1);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "ª®∑— $0, ≤ª“™æ∆∫Ûº›≥µ∞°!");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buybeer",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/buywine", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
	            SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª‘⁄≥£øÕÕÊº“–›œ¢ “!!");
	            return 1;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			GameTextForPlayer(playerid, "~W~Bought a ~Y~Wine ~N~~W~No Charge for Regular Players!",4000,1);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "ª®∑— $0, ≤ª“™æ∆∫Ûº›≥µ∞°!");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buywine",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/buysprunk", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
	            SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª‘⁄≥£øÕÕÊº“–›œ¢ “!!");
	            return 1;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			GameTextForPlayer(playerid, "~W~Bought a ~Y~Wine ~N~~W~No Charge For Regular Players!",4000,1);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "ª®∑— $0");
   			new Float:PlayersHealth;
   			GetPlayerHealth(playerid, PlayersHealth);
   			SetPlayerHealth(playerid, PlayersHealth + 10);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buysprunk",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}


	if(strcmp(cmd, "/buymart", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
	            SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª‘⁄≥£øÕÕÊº“–›œ¢ “!!");
	            return 1;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
			GameTextForPlayer(playerid, "~W~Bought a ~Y~Martini ~N~~W~No Charge For Regular Players!",4000,1);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "ª®∑— $0, ≤ª“™æ∆∫Ûº›≥µ∞°!");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buymart",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/buyvodkah", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
	            SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª‘⁄≥£øÕÕÊº“–›œ¢ “!!");
	            return 1;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			GameTextForPlayer(playerid, "~W~Bought a ~Y~Vodkah ~N~~W~No Charge For Regular Players!",4000,1);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "ª®∑— $0, ≤ª“™æ∆∫Ûº›≥µ∞°!");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buyvodkah",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/buywater", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 10, -2659.4521, 1409.1227, 906.7237)) //RPC
	        {
	            SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª‘⁄≥£øÕÕÊº“–›œ¢ “!!");
	            return 1;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
			GameTextForPlayer(playerid, "~W~Bought ~Y~Water ~N~~W~No Charge Regular Players!",4000,1);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "ª®∑— $0");
   			new Float:PlayersHealth;
   			GetPlayerHealth(playerid, PlayersHealth);
   			SetPlayerHealth(playerid, PlayersHealth + 10);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buywater",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/train", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!IsPlayerInRangeOfPoint(playerid, 2,767.2731,14.1037,1000.7003))//gym's checkpoint
			{
				SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„≤ª‘⁄Ω°…Ì∑ø!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /train [œÓƒø±‡∫≈]");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|_______Ω°…Ì∑ø _______|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: »≠ª˜ ($15000) | 2: ÷–π˙π¶∑Ú ($10000) |");
				SendClientMessage(playerid, COLOR_GRAD1, "| 3: ø’ ÷µ¿ ($13500) | 4: »·µ¿ ($50000) |");
				SendClientMessage(playerid, COLOR_GREY, "* º¸»Î /fightstyle ≤Èø¥ƒ„ø…“‘ π”√µƒ∏Ò∂∑∑Á∏Ò!");
				return 1;
			}
			new item = strval(tmp);
			if (item == 1 && GetPlayerMoney(playerid) > 14999)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                SetTimerEx("BoxTrain", 1000, false, "i", playerid);
				format(string, sizeof(string), "* %s ø™ º¥Ú…≥¥¸...", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				return 1;
			}
			else if (item == 2 && GetPlayerMoney(playerid) > 9999)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
				SetTimerEx("KungTrain", 1000, false, "i", playerid);
				format(string, sizeof(string), "* %s ø™ º¡∑œ∞Ã´º´»≠...", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				return 1;
			}
			else if (item == 3 && GetPlayerMoney(playerid) > 13499)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
				SetTimerEx("GrabTrain", 1000, false, "i", playerid);
				format(string, sizeof(string), "* %s ø™ ºÃﬂ…≥¥¸...", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				return 1;
			}
			else if (item == 4 && GetPlayerMoney(playerid) > 49999)
			{
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				SetTimerEx("KneeTrain", 1000, false, "i", playerid);
				format(string, sizeof(string), "* %s ø™ º¥Úø’∆¯...", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				return 1;
			}
	    }
	    
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /train",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		if (PlayerInfo[playerid][pAchievement15] == 0)
		{
		    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Fitness (15) ~n~~n~~w~you won ~g~$175");
	    	ShowAchievement(playerid);
			SafeGivePlayerMoney(playerid, 175);
			PlayerInfo[playerid][pAchievement15] = 1;
		}
		return 1;
 	}
/*
 	if(strcmp(cmd, "/selectspawn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new Float:Health;
            GetPlayerHealth(playerid, Health);
            if(Health <= 35) return SendClientMessage(playerid, COLOR_GREY,"ƒ„µƒΩ°øµ÷∏ ˝Ã´µÕ¡À,≤ªƒ‹ π”√’‚∏ˆ√¸¡Ó");
			new Buyitems[] = "1\t◊Ó∫Ûœ¬œﬂµƒŒª÷√\n2\t◊‘º∫µƒº“\n3\tº“Õ•÷ÿ…˙µ„\n4\t∞Ô≈…/π§◊˜µƒµÿ∑Ω";
			ShowPlayerDialog(playerid,999,DIALOG_STYLE_LIST,"—°‘Òƒ„µƒ÷ÿ…˙µ„",Buyitems,"—°‘Ò","»°œ˚");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /selectspawn",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
*/
	if(strcmp(cmd, "/buy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsPlayerInRangeOfPoint(playerid, 50,-30.875, -88.9609, 1004.53))//centerpoint 24-7
			{
				if(BizzInfo[7][bProducts] == 0 || BizzInfo[8][bProducts] == 0 || BizzInfo[9][bProducts] == 0 || BizzInfo[10][bProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				new Buyitems[] = "1\t ÷ª˙ ($150)\n2\tπŒπŒø® ($500)\n3\tµÁª∞±æ ($10)\n4\t˜ª◊” ($10)\n5\tÃÏ»ª∆¯ø… ($20)\n6\t±‹‘–Ã◊ ($1)\n7\tœ‡ª˙ ($50)\n8\t√Êæﬂ ($500)\n9\t±Ì ($100)\n10\tµˆ”„π§æﬂ ($150$)\n11\t…˛◊” ($10)\n12\t≈ÁŒÌπﬁ ($50)\n13\t¥Úªª˙ ($5)\n14\tœ„—Ã ($30\n15\t“Ù¿÷≤•∑≈ª˙ ($250)\n16\t∆˚≥µGPSµº∫Ω“«≤Âº˛ ($1500)\n17\tÀŸ∂»º∆ ($500)\n18\t∆˚≥µGPSµº∫Ω“« ($1500)";
				ShowPlayerDialog(playerid,69,DIALOG_STYLE_LIST,"24-7 …Ã∆∑«Âµ•",Buyitems,"—°‘Ò","»°œ˚");
			}
			else if (IsPlayerInRangeOfPoint(playerid, 50, -106.0233,-11.1038,1000.7188))
			{
			    new Buysexitems[] = "1\t¥Û∫≈◊‘Œø∞Ù ($50)\n2\t÷–∫≈◊‘Œø∞Ù ($35)\n3\t–°∫≈◊‘Œø∞Ù($10)\n4\tÃÿ–°◊‘Œø∞Ù ($15)\n5\t±‹‘–Ã◊ ($1)";
				ShowPlayerDialog(playerid,88,DIALOG_STYLE_LIST,"–‘”√∆∑µÍ",Buysexitems,"—°‘Ò","»°œ˚");
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buy",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	//--------CAR_OWNERSHIP_COMMANDS--------------------------------------------
	if(strcmp(cmd, "/vehiclehelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPcarkey] != 9999 || PlayerInfo[playerid][pPcarkey2] != 9999)
	        {
				SendClientMessage(playerid, COLOR_GREEN,"________________≥µ¡æ∞Ô÷˙________________");
				SendClientMessage(playerid, COLOR_GRAD2,"*** ≥µ¡æ *** (/v)ehicle [ø…”√√˚≥∆] /findcar[’“≥µ] /carcode[≥µ¡æ√‹¬Î]");
				SendClientMessage(playerid, COLOR_GRAD3,"*** ≥µ¡æ *** ø…”√√˚≥∆: park*…Ë÷√≥µ¡æ≥ˆ…˙µ„*, lock*≥µÀ¯*, sell*≥ˆ €*, sellto*≥ˆ €∏¯∆‰À˚»À*, color*≈Á–¬∆·*,paintjob,setcode*…Ë÷√≥µ¡æ√‹¬Î*");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /vehiclehelp",d,m,y,h,mi,s,sendername);
				CommandLog(string);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD2,"** ƒ„√ª”–◊‘º∫µƒ≥µ! **");
			    return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/apark", true) == 0)
	{
		if(IsPlayerConnected(playerid))
 		{
			new Float:x,Float:y,Float:z;
			new Float:a;
			new carid;
			carid = GetPlayerVehicleID(playerid);
			GetPlayerName(playerid, playername, sizeof(playername));
			GetVehiclePos(carid, x, y, z);
//			GetPlayerFacingAngle(playerid, a);
			GetVehicleZAngle(carid, a);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsAnOwnableCar(carid))
			    {
					CarInfo[carid][cLocationx] = x;
					CarInfo[carid][cLocationy] = y;
					CarInfo[carid][cLocationz] = z;
					CarInfo[carid][cAngle] = a;
					format(string, sizeof(string), "~n~ You have parked your car in this location. ~n~");
					GameTextForPlayer(playerid, "ƒ„Ω´ƒ„µƒ≥µÕ£øø‘⁄¡À‘⁄’‚¿Ôœ¬¥ŒÀ¸Ω´ª·‘⁄’‚¿Ô÷ÿ…˙.", 10000, 3);
					OnPropUpdate(4,carid);
					OnPlayerUpdateEx(playerid);
		    		DestroyVehicle(carid);
		    		ownedcar[carid] = CreateVehicle(CarInfo[carid][cModel],CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz]+1.0,CarInfo[carid][cAngle],CarInfo[carid][cColorOne],CarInfo[carid][cColorTwo],60000);
			        if(CarInfo[carid][cPaintjob] != 999)
					{
						ChangeVehiclePaintjob(carid, CarInfo[carid][cPaintjob]);
					}
					SetVehicleVirtualWorld(carid, CarInfo[carid][cVirWorld]);
					SetVehicleModifications(carid);
					PutPlayerInVehicle(playerid, carid, 0);
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ƒ„÷ªƒ‹‘⁄≤˙“µ≥µ¡æ…œ π”√!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			    return 1;
			}
		}
		return 1;
	}
	//--------END_CAR_OWNERSHIP_COMMANDS----------------------------------------

	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), "   ƒ„µƒµ»º∂±ÿ–Î « %d ≤≈ø…“‘π∫¬Ú’‚¥±∑øŒ› !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   ƒ„“—æ≠”–“ª¥±∑øŒ›¡À,»ÙªπœÎºÃ–¯π∫¬Ú«Î π”√/sellhouse¬ÙµÙ‘≠¿¥µƒ∑øŒ›!");
						return 1;
					}

					if(GetPlayerMoney(playerid) > HouseInfo[h][hValue])
					{
					    if(PlayerInfo[playerid][pPassport] == 1)
					    {
							PlayerInfo[playerid][pPhousekey] = h;
							HouseInfo[h][hOwned] = 1;
							strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
							SafeGivePlayerMoney(playerid,-HouseInfo[h][hValue]);
							PlayerPlayMusic(playerid);
						    GameTextForPlayer(playerid, "~w~Welcome Home~n~/exit or /enter", 5000, 3);
							SendClientMessage(playerid, COLOR_WHITE, "πßœ≤ƒ„!¬Ù¡À“ª¥±–¬∑øŒ›!");
							SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘ π”√/help≤Èø¥,”Î∑øŒ›œ‡πÿµƒ÷∏¡Ó!");
							SendClientMessage(playerid, COLOR_PINK, "* »Áπ˚ƒ„œÎ√ø¥Œ…œœﬂ∂º «‘⁄◊‘º∫µƒ∑øŒ›,ø…“‘ π”√/selectspawn…Ë÷√’‚¿ÔŒ™÷ÿ…˙µ„!");
							OnPropUpdate(1,h);
							OnPlayerUpdateEx(playerid);
							OnPropTextdrawUpdate(1, h);
							OnHousePickupUpdate(h);
							new y, m, d;
							new h1,mi,s;
							getdate(y,m,d);
							gettime(h1,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buyhouse [$%d]",d,m,y,h1,mi,s,sendername, HouseInfo[h][hValue]);
							PayLog(string);
							if (PlayerInfo[playerid][pAchievement18] == 0)
							{
							    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~Home, Sweet, Home. (18) ~n~~n~~w~you won ~g~$1337");
	    						ShowAchievement(playerid);
								SafeGivePlayerMoney(playerid, 1337);
								PlayerInfo[playerid][pAchievement18] = 1;
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ªπ√ª”–’‚¿Ôµƒª§’’,ƒ„≤ªø…“‘π∫¬Ú∑øŒ›,ƒ„ø…“‘»• –’˛Ã¸µƒ{FFFFF0}ª§’’øº ‘µ„øº»°ª§’’");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   ƒ„µƒœ÷Ω≤ªπª !");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentroom", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„“—æ≠”–“ª∏ˆ∑øŒ›¡À,»Áπ˚ƒ„œÎ◊‚ΩË’‚Ã◊∑øŒ›, π”√/sellhouse∑≈∆˙‘≠¿¥µƒ∑ø≤˙!Œ“œÎƒ„≤ªª·ƒ«√¥…µ!");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						SafeGivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						SafeSetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
						SafeSetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~/exit or /enter", 5000, 3);
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„◊‚ΩËµΩ“ª¥¶∑øŒ›.");
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„ø…“‘ π”√/help≤Èø¥,”Î◊‚ΩË∑øŒ›œ‡πÿµƒ÷∏¡Ó.");
						OnPlayerUpdateEx(playerid);

						new y, m, d;
						new h1,mi,s;
						getdate(y,m,d);
						gettime(h1,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /rentroom",d,m,y,h1,mi,s,sendername);
						CommandLog(string);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„µƒœ÷Ω≤ªπª");
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/hirecar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /hirecar [‘ø≥◊ID]");
					return 1;
				}
				new car = strval(tmp);
				HireCar[playerid] = car;
				format(string, sizeof(string), "‘ø≥◊∏ƒ±‰ƒ„ø…“‘À¯∂®≥µ %d.",car);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: º¸»Î /lock ");

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hirecar",d,m,y,h,mi,s,sendername);
				CommandLog(string);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/switchkey", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~You control now your house car", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~You do not hire a car", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~You control now your hire car", 5000, 6);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/unrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   ƒ„”µ”–’‚Ã◊∑øŒ› !");
				return 1;
			}
			PlayerInfo[playerid][pPhousekey] = 9999;
			SendClientMessage(playerid, COLOR_WHITE, "ƒ„œ÷‘⁄Œﬁº“ø…πÈ.");

			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /unrent",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/housewithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pPhousekey];
			if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /housewithdraw [ ˝¡ø]");
					format(string, sizeof(string), "  ƒ„µƒ«Æœ‰”– $%d.", HouseInfo[bouse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /housewithdraw [ ˝¡ø]");
					format(string, sizeof(string), "  ƒ„µƒ«Æœ‰”– $%d.", HouseInfo[bouse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit >  HouseInfo[bouse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡ !");
					return 1;
				}
				if (!IsPlayerInRangeOfPoint(playerid, 100,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„¿Îƒ„µƒº“Ã´‘∂¡À !");
					return 1;
				}
				else
				{
				    //ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,cashdeposit);
					HouseInfo[bouse][hTakings]=HouseInfo[bouse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  ƒ„»°≥ˆ¡À $%d ◊‹º∆ªπ”–: $%d ", cashdeposit,HouseInfo[bouse][hTakings]);
					OnPropUpdate(1,bouse);
					SendClientMessage(playerid, COLOR_YELLOW, string);

					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hosewithdraw %d",d,m,y,h,mi,s,sendername, cashdeposit);
					PayLog(string);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–◊‘º∫µƒ∑ø◊”.");
			}
		}
		return 1;

	}

	if(strcmp(cmd, "/asellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /asellbiz [≤˙“µ±‡∫≈]");
				return 1;
			}
			new biz = strval(tmp);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    for(new i = 0; i < MAX_PLAYERS; i ++)
			    {
			        if(IsPlayerConnected(i))
			        {
			            if(PlayerInfo[i][pPbiskey] == biz)
			            {
			                SafeGivePlayerMoney(i, BizzInfo[biz][bBuyPrice]);
			                PlayerInfo[i][pPbiskey] = 9999;
						}
						else
						{
						    format(string, sizeof(string),"LARP/Users/%s.ini",BizzInfo[biz][bOwner]);
			         		new totalcash = dini_Int(string,"Money") + BizzInfo[biz][bBuyPrice];
			         		dini_IntSet(string,"Money",totalcash);
			         		dini_IntSet(string,"Bizz",9999);
						}
					}
				}
			
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "◊¥Ã¨", 0, strlen("◊¥Ã¨"), 255);
				strmid(BizzInfo[biz][bExtortion], "√ª»À", 0, strlen("√ª»À"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold the Business");
				GameTextForPlayer(playerid, string, 10000, 3);
				format(string, sizeof(string), "[π‹¿Ì]: %s π‹¿Ì‘±≥ˆ €¡À≤˙“µ: [%d].",playername, biz);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				OnPropUpdate(2,biz);
				OnPropTextdrawUpdate(2,biz);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Admin Sold the House: [%d]",d,m,y,h,mi,s,sendername,biz);
				PlaceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„≤ª «π‹¿Ì‘±.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asellsbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /asellsbiz [s≤˙“µ±‡∫≈]");
				return 1;
			}
			new sbiz = strval(tmp);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    for(new i = 0; i < MAX_PLAYERS; i ++)
			    {
			        if(IsPlayerConnected(i))
			        {
			            new name[MAX_PLAYER_NAME];
						GetPlayerName(i, name, sizeof(name));
						
			            if(!strcmp(name, SBizzInfo[sbiz][sbOwner]))
			            {
			                SafeGivePlayerMoney(i, SBizzInfo[sbiz][sbBuyPrice]);
						}
						else
						{
						    format(string, sizeof(string),"LARP/Users/%s.ini",SBizzInfo[sbiz][sbOwner]);
			         		new totalcash = dini_Int(string,"Money") + SBizzInfo[sbiz][sbBuyPrice];
			         		dini_IntSet(string,"Money",totalcash);
			         		dini_IntSet(string,"Bizz",9999);
						}
					}
				}
			
			
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "◊¥Ã¨", 0, strlen("◊¥Ã¨"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "√ª»À", 0, strlen("√ª»À"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold the Business");
				GameTextForPlayer(playerid, string, 10000, 3);
				format(string, sizeof(string), "[π‹¿Ì]: %s π‹¿Ì‘±≥ˆ €¡Às≤˙“µ: [%d].",playername, sbiz);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				OnPropUpdate(3,sbiz);
				OnPropTextdrawUpdate(3,sbiz);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Admin Sold the House: [%d]",d,m,y,h,mi,s,sendername,sbiz);
				PlaceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„≤ª «π‹¿Ì‘±.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /asellhouse [∑øŒ›±‡∫≈]");
				return 1;
			}
			new house = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				
			    for(new i = 0; i < MAX_PLAYERS; i ++)
			    {
			        if(IsPlayerConnected(i))
			        {
			            if(PlayerInfo[i][pPhousekey] == house)
			            {
			                SafeGivePlayerMoney(i, HouseInfo[house][hValue]);
			                PlayerInfo[i][pPhousekey] = 9999;
						}
						else
						{
						    format(string, sizeof(string),"LARP/Users/%s.ini",HouseInfo[house][hOwner]);
			         		new totalcash = dini_Int(string,"Money") + HouseInfo[house][hValue];
			         		dini_IntSet(string,"House",9999);
			         		dini_IntSet(string,"Money",totalcash);
						}
					}
				}
			
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				
				strmid(HouseInfo[house][hOwner], "◊¥Ã¨", 0, strlen("◊¥Ã¨"), 255);
                strmid(HouseInfo[house][hMessage],"For Sale",0,strlen("For Sale"),255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold this property", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);

				format(string, sizeof(string), "[π‹¿Ì]: %s ≥ˆ €¡À∑øŒ›: [%d].",sendername,house);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				OnPropUpdate(1,house);
				OnPropTextdrawUpdate(1,house);
				OnHousePickupUpdate(house);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Admin Sold the House: [%d]",d,m,y,h,mi,s,sendername,house);
				PlaceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„≤ª «π‹¿Ì‘±.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] == 9999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–◊‘º∫µƒ∑ø◊”.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„Ω·ªÈ¡À≤ªø…“‘¬ÙµÙ∑ø◊” !");
		        return 1;
		    }
		    if(CanSellHouse[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªø…“‘¬ÙµÙ∑øŒ›,≥ˆ”⁄’Àªß∞≤»´‘≠“Ú«Îœ» π”√/account ⁄»®!");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPhousekey] != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;

				strmid(HouseInfo[house][hOwner], "◊¥Ã¨", 0, strlen("◊¥Ã¨"), 255);
                strmid(HouseInfo[house][hMessage],"For Sale",0,strlen("For Sale"),255);
				//ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid,HouseInfo[house][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPhousekey] = 9999;
				if(PlayerInfo[playerid][pLocal] == house)
				{
					SafeSetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SafeSetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
				}
				OnPropUpdate(1,house);
				OnPropTextdrawUpdate(1, house);
				OnHousePickupUpdate(house);
				OnPlayerUpdateEx(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–◊‘º∫µƒ∑ø◊”.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseupgrade", true) == 0 || strcmp(cmd, "/hu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /houseupgrade [œÓƒø±‡∫≈]");
					SendClientMessage(playerid, COLOR_GRAD1, "|_______ ∑øŒ›…˙ªÓ”√∆∑ _______|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Ω°øµ÷Œ¡∆ $50,000.");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: ª§º◊“¬πÒ $100,000.");
					return 1;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pLevel] < 5)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "ƒ„±ÿ–Î «5º∂≤≈ø…“‘ π”√");
							return 1;
						}
						if(GetPlayerMoney(playerid) < 50000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "ƒ„√ª”–◊„πªµƒœ÷Ω");
							return 1;
						}
						HouseInfo[house][hHel] = 1;
						SafeGivePlayerMoney(playerid,-25000);
						SBizzInfo[6][sbTill] += 50000;//heal buisness
						ExtortionSBiz(6, 25000);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "ƒ„œ÷‘⁄ø…“‘‘⁄º“¿Ô÷Œ¡∆¡À,  π”√ /heal.");
					}
					case 2:
					{
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if (PlayerInfo[playerid][pLevel] < 7)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "ƒ„µƒµ»º∂±ÿ–Î «7º∂≤≈ø…“‘π∫¬Ú");
							return 1;
						}
						if(GetPlayerMoney(playerid) < 100000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "ƒ„√ª”–◊„πªµƒœ÷Ω");
							return 1;
						}
						HouseInfo[house][hArm] = 1;
						SafeGivePlayerMoney(playerid,-50000);
						SBizzInfo[6][sbTill] += 50000;//heal buisness
						ExtortionSBiz(6, 50000);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "ƒ„œ÷‘⁄ø…“‘‘⁄º“¿Ôµ√µΩª§º◊¡À,  π”√ /heal.");
					}
				}
				OnPropUpdate(3,6);
				OnPropUpdate(1,house);
				OnPlayerUpdateEx(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /houseupgrade [%d]",d,m,y,h,mi,s,sendername,item);
				CommandLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–◊‘º∫µƒ∑ø◊”");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setrent [◊‚Ω]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 99999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "◊ÓµÕ $1, ◊Ó∏ﬂ≤ª≥¨π˝ $99999.");
					return 1;
				}
				HouseInfo[bouse][hRent] = strval(tmp);
				OnPropUpdate(1,bouse);
				format(string, sizeof(string), "∑øŒ›◊‚Ω…Ë÷√Œ™ $%d", HouseInfo[bouse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /setrent %d",d,m,y,h,mi,s,sendername, strval(tmp));
				CommandLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–◊‘º∫µƒ∑ø◊”");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evictall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			if (bouse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPhousekey] == PlayerInfo[playerid][pPhousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "ƒ„±ª∏œ≥ˆ¡Àƒ„µƒ◊‚∑ø.");
								PlayerInfo[i][pPhousekey] = 9999;

								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /evictall",d,m,y,h,mi,s,sendername);
								CommandLog(string);
							}
						}
					}
				}
				SendClientMessage(playerid, COLOR_WHITE, "∑øøÕ±ª∏œ≥ˆ»•¡À.");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–◊‘º∫µƒ∑ø◊” !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evict", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /evict [ÕÊº“ID/ÕÊº“√˚◊÷]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "ƒ„≤ªƒ‹∏œ≥ˆƒ„◊‘º∫.");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "ƒ„“—±ª∑ø∂´∏œ◊ﬂ");
							SendClientMessage(playerid, COLOR_WHITE, "∑øøÕ“—±ª∏œ≥ˆ»•");
							PlayerInfo[target][pPhousekey] = 9999;

							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /evict",d,m,y,h,mi,s,sendername);
							CommandLog(string);
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "’‚∏ˆ»À≤¢√ª”–◊‚ƒ„µƒ∑øŒ› !");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–◊‘º∫µƒ∑ø◊” !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setrentable", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setrentable [0/1]");
				}
				HouseInfo[bouse][hRentabil] = strval(tmp);
				OnPropUpdate(1,bouse);
				format(string, sizeof(string), "∑øŒ›≥ˆ◊‚…Ë÷√Œ™ %d.", HouseInfo[bouse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„√ª”–◊‘º∫µƒ∑ø◊” !");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/carcode", true) == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /carcode [√‹¬Î]");
				SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: »Áπ˚ƒ„ ‰»Î¥ÌŒÛ3¥Œ, ƒ„Ω´ª·±ªµÁÀ¿!");
				return 1;
			}
			new input;
			input = strval(tmp);
            new checking;
			new carid = GetPlayerVehicleID(playerid);

			if(IsAnOwnableCar(carid))
			{
				checking = CarInfo[carid][cCode];
			}
			else
			{
				checking = VehiclePass[carid];
			}
			if(checking != -1)
			{
			    if(input == checking)
			    {
			        if(Decoding[playerid] == 1)
			        {
						KillTimer(DecoderTimer);
						Decoder = 0;
						decodecode = 0;
						Decoding[playerid] = 0;
						format(string, sizeof(string),"%d",checking);
                        TextDrawSetString(Textdraw68,string);
						SetTimerEx("HideDecoder",8000,false,"i",playerid);
					}
					CanTurnEngine[playerid] = carid;
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"* ƒ„ ‰»Î¡À’˝»∑µƒ√‹¬Î! œ÷‘⁄∑¢∂Øª˙∆Ù∂Ø!");
					format(string, sizeof(string),"* %s ‘⁄“«±Ì≈Ã÷–º¸»Î¡À√‹¬Î,≤¢«“¥Úø™¡À∑¢∂Øª˙",sendername);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			    }
			    else
			    {
			        Fails[playerid] ++;
			        if(Fails[playerid] == 3)
			        {
			            SetPlayerCriminal(playerid,255,"≥¢ ‘Õµ≥µ");
			            format(string, sizeof(string),"* %s ‘⁄“«±Ì≈Ã÷–º¸»Î¡À√‹¬Î,µ´ «√ª”– ‰»Î’˝»∑±ªµÁÀ¿¡À",sendername);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    new Float:Health;
					    GetPlayerHealth(playerid, Health);
					    SetPlayerHealth(playerid, Health-15);
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/call", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /call [µÁª∞∫≈¬Î]");
				SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: /calllist (¥Úø™µÁª∞±æ)");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„√ª”– ÷ª˙!");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			format(string, sizeof(string), "* %s ƒ√≥ˆ¡À ÷ª˙.", sendername);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new phonenumb = strval(tmp);
			if(phonenumb == 115)
			{
			    SendClientMessage(playerid, COLOR_GREEN, "____________π´π≤∑˛ŒÒ∫≈¬Î____________");
			    SendClientMessage(playerid, COLOR_WHITE, "111 - ≈˚»¯øÏÀÕ, 222 - π´Ωª∑˛ŒÒ");
			    SendClientMessage(playerid, COLOR_WHITE, "103 - “ΩŒÒ∑˛ŒÒ, 444 - ≥ˆ◊‚≥µ∑˛ŒÒ, 555 - ∆˚≥µ–ﬁ¿Ìπ§∑˛ŒÒ");
			    SendClientMessage(playerid, COLOR_WHITE, "151 - π„∏Ê“µŒÒ, 150 - √¿π˙π„≤•π´Àæ");
			    SendClientMessage(playerid, COLOR_GREEN, "____________________________________________");
			    return 1;
			}
			if(phonenumb == 111)
			{
				new pizzaworkers = 0;
			    for(new i=0; i<MAX_PLAYERS; i++)
			    {
			        if(IsPlayerConnected(i))
			        {
			            if(PlayerInfo[i][pJob] == 17 && JobDuty[i] == 1)
			            {
			                pizzaworkers++;
			            }
			        }
			    }

			    if(pizzaworkers < 1)
          		{
          		    SendClientMessage(playerid, TEAM_GROVE_COLOR, "** µÁª∞Õ®¡À.");
          		    SendClientMessage(playerid, 0xF4E19FAA, "“ª∏ˆƒ–»ÀÀµ ( ÷ª˙): ’‚¿Ô «≈˚»¯µÍ.");
          		    SendClientMessage(playerid, 0xF4E19FAA, "“ª∏ˆƒ–»ÀÀµ ( ÷ª˙): ∫‹±ß«∏, œ÷‘⁄√ª”–»Œ∫Œ≈˚»¯µÍÕ‚ÀÕ‘±…œ∞‡.");
          		    SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ∂‘∑Ωπ“¡ÀµÁª∞.");
              		return 1;
          		}

       			format(string, sizeof(string), "** %s ∂©π∫¡À“ª∏ˆ≈˚»¯. ( π”√/accept Pizza Ω” ‹π§◊˜)", sendername);
       			SendJobMessage(17, COLOR_WHITE, string);
       			SendClientMessage(playerid, TEAM_GROVE_COLOR, "** µÁª∞Õ®¡À.");
       			SendClientMessage(playerid, 0xF4E19DAA, "≈‰ÀÕ»À‘±Àµ ( ÷ª˙): ’‚¿Ô «≈˚»¯µÍ.");
       			if(pizzaworkers == 1) { format(string, sizeof(string), "≈‰ÀÕ»À‘±Àµ ( ÷ª˙): ≈˚»¯µÍÕ‚ÀÕ‘±“—±ª∏Ê÷™ƒ„µƒ«Î«Û∑˛ŒÒ∆˜,œ»…˙."); }
       			else { format(string, sizeof(string), "≈‰ÀÕ»À‘±Àµ ( ÷ª˙): Œ“√«”– %d ≈˚»¯µÍÕ‚ÀÕ»À‘±,∂ºΩ”µΩ¡Àƒ„µƒ∂©µ• !", pizzaworkers); }
				SendClientMessage(playerid, 0xF4E19DAA, string);
 			    SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ∂‘∑Ωπ“¡ÀµÁª∞.");
       			PizzaCall = playerid;
			    return 1;
			}
   			if(phonenumb == 222)
   			{
   			    new routezonecheck = IsInBusrouteZone(playerid);
				new drivercount = 0;
				if (routezonecheck == 0)
				{
					for (new i=0; i<=MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i) && BusrouteEast[i][0] != 0) drivercount++;
					}
					if (drivercount != 0)
					{
						format(string, sizeof(string), "ƒø«∞”– %d √˚π´Ωª≥µÀæª˙‘⁄∂´≤øœﬂ¬∑. œﬂ¬∑»Áœ¬:", drivercount);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SendBusRoute(playerid, 0);
					}
					else SendClientMessage(playerid, COLOR_GREY, "œ÷‘⁄√ª”–π´Ωª≥µÀæª˙‘⁄∂´≤øœﬂ¬∑.");
				}
				else if (routezonecheck == 1)
				{
					for (new i=0; i<=MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i) && BusrouteWest[i][0] != 0) drivercount++;
					}
					if (drivercount != 0)
					{
						format(string, sizeof(string), "ƒø«∞”– %d √˚π´Ωª≥µÀæª˙‘⁄Œ˜≤øœﬂ¬∑. œﬂ¬∑»Áœ¬:", drivercount);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SendBusRoute(playerid, 1);
					}
					else SendClientMessage(playerid, COLOR_GREY, "œ÷‘⁄√ª”–π´Ωª≥µÀæª˙‘⁄Œ˜≤øœﬂ¬∑.");
				}
				else SendClientMessage(playerid, COLOR_GREY, "µ±«∞√ª”–π´Ωª≥µ‘⁄’‚¿Ô–– ª");
				return 1;
   			}
   			if(phonenumb == 103)
   			{
   			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "** µ±«∞√ª”–…œ∞‡µƒ“ΩŒÒ»À‘± !");
		            return 1;
		        }
		        
			    format(string, sizeof(string), "** %s –Ë“™“ª√˚“Ω…˙. ( π”√/accept medicΩ” ‹π§◊˜)", sendername);
		    	SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ƒ„µƒ«Î«Û“—∑¢ÀÕµΩ“Ω‘∫,«Îµ»¥˝¥∏¥.");
		    	MedicCall = playerid;
		    	return 1;
   			}
   			if(phonenumb == 444)
   			{
			    if(TaxiDrivers < 1)
		        {
          			 SendClientMessage(playerid, COLOR_GREY, "** µ±«∞√ª”–≥ˆ◊‚≥µÀæª˙…œ∞‡,«Î…‘∫Û‘Ÿ ‘!");
				     return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "** ƒ„œ÷‘⁄≤ªƒ‹’““ª∏ˆ◊‚≥µÀæª˙ !");
		            return 1;
		        }
		        
			    format(string, sizeof(string), "** %s –Ë“™“ª√˚≥ˆ◊‚≥µÀæª˙. ( π”√ /accept taxiΩ” ‹π§◊˜)", sendername);
		    	SendJobMessage(13, TEAM_AZTECAS_COLOR, string);
	    		SendClientMessage(playerid, TEAM_GROVE_COLOR, "** µÁª∞Õ®¡À.");
		    	SendClientMessage(playerid, 0xF4E19FAA, "“ª∏ˆƒ–»ÀÀµ ( ÷ª˙): ƒ„µƒ«Î«Û“—∑¢ÀÕµΩÀ˘”–≥ˆ◊‚≥µÀæª˙ƒ«¿Ô.");
		    	SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ∂‘∑Ωπ“¡ÀµÁª∞.");
		    	TaxiCall = playerid;
		    	return 1;
	    	}
   			if(phonenumb == 555)
   			{
   			    new mechanicworkers = 0;
			    for(new i=0; i<MAX_PLAYERS; i++)
			    {
			        if(IsPlayerConnected(i))
			        {
			            if(PlayerInfo[i][pJob] == 7 && JobDuty[i] == 1)
			            {
			                mechanicworkers++;
			            }
			        }
			    }
   			    if(mechanicworkers < 1)
		        {
		            SendClientMessage(playerid, TEAM_GROVE_COLOR, "** µÁª∞Õ®¡À.");
		            SendClientMessage(playerid, 0xBBE1F2AA, "“ª∏ˆƒ–»ÀÀµ ( ÷ª˙): ∂‘≤ª∆,µ±«∞√ª”–ø…“‘ø…“‘ π”√µƒ∆˚≥µ–ﬁ¿Ìπ§.");
		            SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ∂‘∑Ωπ“¡ÀµÁª∞.");
		            return 1;
		        }
		        
			    format(string, sizeof(string), "** %s –Ë“™“ª√˚∆˚≥µ–ﬁ¿Ìπ§. ( π”√ /accept mechanicΩ” ‹π§◊˜)", sendername);
		    	SendJobMessage(7, COLOR_WHITE, string);
		    	SendClientMessage(playerid, TEAM_GROVE_COLOR, "** µÁª∞Õ®¡À.");
		       	SendClientMessage(playerid, 0xBBE1F2AA, "“ª∏ˆƒ–»ÀÀµ ( ÷ª˙): ƒ„∫√,ƒ„µƒ«Î«Û“—±ª∏Ê÷™À˘”–∆˚≥µ–ﬁ¿Ìπ§ƒ«¿Ô,«Îµ»¥˝¥∏¥");
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ∂‘∑Ωπ“¡ÀµÁª∞.");
		    	MechanicCall = playerid;
		    	return 1;
   			}
   			if(phonenumb == 151)
   			{
   			    if(PlayerInfo[playerid][pLevel] < 2)
   			    {
   			        SendClientMessage(playerid, COLOR_GREEN, "π„∏Ê“µŒÒ: Œ“√«÷ª∏¯”–“ª∂®÷™√˚∂»µƒ»À◊ˆπ„∏Ê.(ƒ„µƒµ»º∂≤ª◊„2º∂)");
   			        SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ∂‘∑Ωπ“¡ÀµÁª∞...");
   			    }
   			    else
   			    {
   			    	SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ƒ„œ÷‘⁄∞¥œ¬T‘⁄ƒ„µƒµÁª∞¿ÔÀµª∞, π”√(/h)angupπ“∂œµÁª∞");
   			    	SendClientMessage(playerid, COLOR_GREEN, "π„∏Ê“µŒÒ: ª∂”≠¿¥µΩπ„∏Ê ¬ŒÒÀ˘,ƒ„œÎøØµ« ≤√¥—˘µƒπ„∏Êƒÿ?");
   			    	SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ‘⁄’‚¿Ô ‰»Îπ„∏Ê. ¿˝»Á: Œ““™≥ˆ €Œ“µƒ∑øŒ›");
   			    	Mobile[playerid] = 1180;
				}
   			    return 1;
   			}
   			if(phonenumb == 150)
   			{
   			    SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ƒ„œ÷‘⁄∞¥œ¬T‘⁄ƒ„µƒµÁª∞¿ÔÀµª∞, π”√(/h)angupπ“∂œµÁª∞");
   			    SendClientMessage(playerid, COLOR_GREEN, "π„≤•π´Àæ: «Î‘⁄ﬂŸ…˘œÏ∫Û¡Ùœ¬ƒ„µƒ¡Ù—‘!");
   			    SendClientMessage(playerid, COLOR_WHITE, "ﬂŸ~!");
   			    Mobile[playerid] = 3900;
   			    return 1;
   			}
			if(phonenumb == 911)
			{
				SendClientMessage(playerid, TEAM_GROVE_COLOR, "Ã· æ: ƒ„œ÷‘⁄∞¥œ¬T‘⁄ƒ„µƒµÁª∞¿ÔÀµª∞, π”√(/h)angupπ“∂œµÁª∞");
				SendClientMessage(playerid, COLOR_BLUE, "ΩÙº±∑˛ŒÒ:ƒ„ ≤√¥,æØ≤ÏªÚº±æ»?");
				Mobile[playerid] = 911;
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "** √¶“Ù...‡Ω‡Ω‡Ω‡Ω");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ƒ„“—æ≠‘⁄Õ®ª∞÷–¡À...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“µƒµÁª∞πÿª˙¡À!");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "ƒ„µƒµÁª∞‘⁄œÏ π”√(/pickup)Ω”µÁª∞ {FFFFF0}¿¥µÁœ‘ æ: %s", sendername);
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %sµÁª∞œÏ¡À.", sendername);
									SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: ƒ„œ÷‘⁄∞¥œ¬T‘⁄ƒ„µƒµÁª∞¿ÔÀµª∞, π”√(/h)angupπ“∂œµÁª∞");
									ProxDetector(30.0, i, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
									CellTime[playerid] = 1;
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "** √¶“Ù...‡Ω‡Ω‡Ω‡Ω");
		}
		return 1;
	}

	if(strcmp(cmd, "/sms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–µ«¬º!");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sms [µÁª∞∫≈¬Î] [ƒ⁄»›]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  ƒ„ªπ√ª”– ÷ª˙...");
				return 1;
			}

			format(string, sizeof(string), "* %s ƒ√≥ˆ¡À ÷ª˙.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/t)ext [µÁª∞∫≈¬Î] [ƒ⁄»›]");
				return 1;
			}
			if(phonenumb == 555)
			{
				if ((strcmp("jackpot", result, true, strlen(result)) == 0) && (strlen(result) == strlen("jackpot")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "∂Ã–≈∑¢ÀÕ.");
					format(string, sizeof(string), "∂Ã–≈: ≤ ∆±µƒÕ∑Ω± « $%d, ◊£ƒ„∫√‘À!, ∑¢º˛»À: MOLE (555)",Jackpot);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_YELLOW, "∂Ã–≈: ¬Ú≤ ∆±,º¸»Î/lotto 1-80, ∑¢º˛»À: MOLE (555)");
					RingTone[playerid] = 20;
					return 1;
				}
				else if ((strcmp("tutorial", result, true, strlen(result)) == 0) && (strlen(result) == strlen("tutorial")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "∂Ã–≈∑¢ÀÕ.");
					SendClientMessage(playerid, COLOR_YELLOW, "∂Ã–≈: »Áπ˚ƒ„‘∏“‚µƒª∞ƒ„ø…“‘◊ˆΩÃ≥Ã  π”√/tutorial");
					SendClientMessage(playerid, COLOR_YELLOW, "ƒ„Ω´‘⁄∑˛ŒÒ∆˜µƒ÷ÿµ„µÿµ„–– ª, ∑¢º˛»À: MOLE (555)");
					RingTone[playerid] = 20;
					return 1;
				}
				else if ((strcmp("jobs", result, true, strlen(result)) == 0) && (strlen(result) == strlen("jobs")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "∂Ã–≈∑¢ÀÕ.");
					SendClientMessage(playerid, COLOR_YELLOW, "∂Ã–≈: ƒ„»Áπ˚œÎµ√µΩ“ª∏ˆ∫œ∑®π§◊˜,ƒ„ø…“‘»• –’˛Ã¸");
					SendClientMessage(playerid, COLOR_YELLOW, "∂‘”⁄∑«∑®µƒπ§◊˜µ„ƒ„ø…“‘∏¯ƒ„µƒGPSµΩ24/7…˝º∂’“µΩ,ªÚ’ﬂ»•’“»À¥¯ƒ„»•, ∑¢º˛»À: MOLE (555)");
					RingTone[playerid] = 20;
					return 1;
				}
				else if ((strcmp("gps", result, true, strlen(result)) == 0) && (strlen(result) == strlen("gps")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "∂Ã–≈∑¢ÀÕ.");
					SendClientMessage(playerid, COLOR_YELLOW, "∂Ã–≈: »Áπ˚ƒ„œÎ÷™µ¿µÿÕºµƒ»∑«–Œª÷√,ƒ„ø…“‘¬Ú“ª∏ˆGPS");
					SendClientMessage(playerid, COLOR_YELLOW, "∂‘”⁄∑«∑®µƒπ§◊˜µ„ƒ„ø…“‘∏¯ƒ„µƒGPSµΩ24/7…˝º∂,∂¯«“…˝º∂∫Ûƒ„ø…“‘ π”√XYZ∂®Œªπ¶ƒ‹, ∑¢º˛»À: MOLE (555)");
					RingTone[playerid] = 20;
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "∂Ã–≈:  «Ω´ºÚµ•µƒ◊ˆ, ∑¢º˛»À: MOLE (555)");
					RingTone[playerid] = 20;
					return 1;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“µƒ ÷ª˙πÿª˙¡À!");
						            return 1;
						        }
								format(string, sizeof(string), "∂Ã–≈: %s, ∑¢º˛»À: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
                                SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* %sµÁª∞‡Ω‡ΩœÏ¡À“ªœ¬.", sendername);
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_WHITE, "∂Ã–≈∑¢ÀÕ");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								format(string, sizeof(string), "~r~$-%d", txtcost);
								GameTextForPlayer(playerid, string, 5000, 1);
								SafeGivePlayerMoney(playerid,-txtcost);
								SBizzInfo[2][sbTill] += txtcost;
								ExtortionSBiz(2, txtcost);
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 255;
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /sms %s %s",d,m,y,h,mi,s,sendername, giveplayer, result);
								CommandLog(string);
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  ∂Ã–≈∑¢ÀÕ ß∞‹...");
		}
		return 1;
	}
//-----------------------------------[House virtual world]---------------------------------
    if(strcmp(cmd, "/houseworld", true) == 0)
	{
		if(IsPlayerConnected(playerid))
    	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "”√∑®: /houseworld [World]");
				return 1;
			}
			new level;
			level = strval(tmp);
 	    	{
             		SetWorld = level;
	  				format(string, sizeof(string), "∑øŒ› ¿ΩÁ…Ë∂®Œ™ %d", SetWorld);
	  				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        	}
		}
    	return 1;
    }
//----------------------------------[pickup]-----------------------------------------------

	if(strcmp(cmd, "/pickup", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "** ƒ„“—æ≠‘⁄Õ®ª∞÷–¡À...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i, TEAM_GROVE_COLOR, "µÁª∞Õ®¡À...");

						format(string, sizeof(string), "* %s ‘⁄¥Ú ÷ª˙.", sendername);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						RingTone[playerid] = 0;

						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /pickup",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}

				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
  						if(caller < 255)
						{
							SendClientMessage(caller,  TEAM_CYAN_COLOR, "µÁª∞π“∂œ¡À...");
							CellTime[caller] = 0;
							Mobile[caller] = 255;
      					}
      					SendClientMessage(playerid,  TEAM_CYAN_COLOR, "ƒ„π“∂œ¡ÀµÁª∞....");
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						PlayerInfo[playerid][pSpeaker] = 0;
						UnidentifedCall[playerid] = 0;
					}
				}
			}
			else
			{
				SendClientMessage(playerid,  TEAM_CYAN_COLOR, "ƒ„π“∂œ¡ÀµÁª∞....");
				Mobile[playerid] = 255;
				CellTime[playerid] = 0;
				RingTone[playerid] = 0;
				PlayerInfo[playerid][pSpeaker] = 0;
				UnidentifedCall[playerid] = 0;
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		}
		return 1;
	}
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/time", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			new year, month,day;
			getdate(year, month, day);
			if(month == 1) { mtext = "January"; }
			else if(month == 2) { mtext = "February"; }
			else if(month == 3) { mtext = "March"; }
			else if(month == 4) { mtext = "April"; }
			else if(month == 5) { mtext = "May"; }
			else if(month == 6) { mtext = "June"; }
			else if(month == 7) { mtext = "July"; }
			else if(month == 8) { mtext = "August"; }
			else if(month == 9) { mtext = "September"; }
			else if(month == 10) { mtext = "October"; }
			else if(month == 11) { mtext = "November"; }
			else if(month == 12) { mtext = "December"; }
		    new hour,minuite,second;
			gettime(hour,minuite,second);
			if (minuite < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
				    if(PlayerInfo[playerid][pWatch] == 1)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
					}
					else
					{
					    format(string, sizeof(string), "~w~Jail Time Left: %d sec", PlayerInfo[playerid][pJailTime]-10);
					}
				}
				else
				{
				    if(PlayerInfo[playerid][pWatch] == 1)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
					}
					else
					{
					    format(string, sizeof(string), "~r~You don't have a watch");
					    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„√ª”– ÷±Ì");
					}
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
				    if(PlayerInfo[playerid][pWatch] == 1)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
					}
					else
					{
					    format(string, sizeof(string), "~w~Jail Time Left: %d sec", PlayerInfo[playerid][pJailTime]-10);
					}
				}
				else
				{
				    if(PlayerInfo[playerid][pWatch] == 1)
				    {
						format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
					}
					else
					{
					    format(string, sizeof(string), "~r~You don't have a watch");
					    SendClientMessage(playerid, COLOR_GRAD2, "ƒ„√ª”– ÷±Ì");
					}
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);

			if(PlayerInfo[playerid][pWatch] == 1)
			{
			    if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s æŸ∆À˚µƒ ÷ø¥¡Àœ¬ ÷±Ì.", sendername); }
			    else { format(string, sizeof(string), "* %s æŸ∆À˚µƒ ÷ø¥¡Àœ¬ ÷±Ì.", sendername); }
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);

			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /time",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
//----------------------{HOUSES}-------------------
	if(strcmp(cmd, "/house", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 5)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /house [∑øŒ›±‡∫≈]");
					return 1;
				}
				new housenum = strval(tmp);
				SafeSetPlayerInterior(playerid,HouseInfo[housenum][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[housenum][hWorld]);
				SafeSetPlayerPos(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pVirWorld] = HouseInfo[housenum][hWorld];
                HouseEntered[playerid] = housenum;
				PlayerInfo[playerid][pInteriorNr] = 39;
				format(string, sizeof(string), "[π‹¿Ì]: %s ¥´ÀÕµΩ∑øŒ›±‡∫≈Œ™: [%d] µƒ∑øŒ›ƒ⁄.", sendername,housenum);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to House Number: [%d]",d,m,y,h,mi,s,sendername,housenum);
				TelesLog(string);
				PlaceLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 5)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /houseo [∑øŒ›±‡∫≈]");
					return 1;
				}
				new housenum = strval(tmp);
				SafeSetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
				PlayerInfo[playerid][pVirWorld] = 0;
				SafeSetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);

				format(string, sizeof(string), "[π‹¿Ì]: %s ¥´ÀÕµΩ∑øŒ›±‡∫≈Œ™: [%d] «∞√Ê.", sendername,housenum);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself Outside of the House Number: [%d]",d,m,y,h,mi,s,sendername,housenum);
				TelesLog(string);
				PlaceLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 5)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /biz [≤˙“µ±‡∫≈]");
					return 1;
				}
				new housenum = strval(tmp);
				SafeSetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
				SetPlayerVirtualWorld(playerid, BizzInfo[housenum][bVirWorld]);
				SafeSetPlayerPos(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pInteriorNr] = BizzInfo[housenum][bInteriorNr];
				format(string, sizeof(string), "[π‹¿Ì]: %s ¥´ÀÕµΩ≤˙“µ±‡∫≈Œ™: [%d] µƒ≤˙“µ¿Ô√Ê.", sendername,housenum);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				BizzEntered[playerid] = housenum;
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Biz Number: [%d]",d,m,y,h,mi,s,sendername,housenum);
				TelesLog(string);
				PlaceLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 5)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bizo [≤˙“µ±‡∫≈]");
					return 1;
				}
				new housenum = strval(tmp);
				SafeSetPlayerPos(playerid,BizzInfo[housenum][bEntranceX],BizzInfo[housenum][bEntranceY],BizzInfo[housenum][bEntranceZ]);
				PlayerInfo[playerid][pVirWorld] = 0;
				SafeSetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				format(string, sizeof(string), "[π‹¿Ì]: %s ¥´ÀÕµΩ≤˙“µ±‡∫≈Œ™: [%d] µƒ≤˙“µ√≈ø⁄.", sendername,housenum);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself Outside of the Biz Number: [%d]",d,m,y,h,mi,s,sendername,housenum);
				TelesLog(string);
				PlaceLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 5)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sbiz [≤˙“µ±‡∫≈]");
					return 1;
				}
				new housenum = strval(tmp);
				SafeSetPlayerInterior(playerid,SBizzInfo[housenum][sbInterior]);
				SafeSetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 5)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "* ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
				return 1;
			}
			new x_job[128];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|_________________________________________________ Edit _________________________________________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /edit [ø…”√√˚≥∆] π”√‘⁄∑ø≤˙,≤˙“µ∫Õ∆˚≥µ");
				SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Level*µ»º∂*, Price, RentPrice, Desc 0, Int, Funds, Products | Model, Color1, Color2, Paintjob, VirtualWorld");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________________________________________________________|");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /edit [ø…”√√˚≥∆]");
				return 1;
			}
			new proplev = strval(tmp);
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "House: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev >= 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
							OnPropTextdrawUpdate(1, i);
							OnPropUpdate(1,i);
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
							OnPropTextdrawUpdate(1, i);
							OnPropUpdate(1,i);
						}
						else if(strcmp(x_job,"rentprice",true) == 0)
					    {
							HouseInfo[i][hRent] = proplev;
							OnPropTextdrawUpdate(1, i);
							OnPropUpdate(1,i);
						}
						else if(strcmp(x_job,"desc",true) == 0)
						{
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[128];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /edit desc 0 <√Ë ˆ>");
								return 1;
							}
							format(string, sizeof(string),"%s",(result));
							strmid(HouseInfo[i][hDiscription], string, 0, strlen(string), 255);
							format(string, sizeof(string),"∑ø≤˙±‡∫≈ %d œ÷‘⁄µƒ√Ë ˆ «: %s",i, (result));
							SendClientMessage(playerid,COLOR_GREY,string);
							OnPropTextdrawUpdate(1, i);
							OnPropUpdate(1,i);
						}
						else if(strcmp(x_job,"int",true) == 0)
					    {
							if(proplev < 1 || proplev > 42) { SendClientMessage(playerid, COLOR_WHITE, "[¥ÌŒÛ:]  “ƒ⁄ø’º‰ID 1-42."); return 1; }
							if(proplev == 1)
							{
								HouseInfo[i][hExitx] = 235.3054;
								HouseInfo[i][hExity] = 1186.6835;
								HouseInfo[i][hExitz] = 1080.2578;
								HouseInfo[i][hInt] = 3;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Large/2 story/3 bedrooms/clone of House 9.", i,proplev);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 2)
							{
								HouseInfo[i][hExitx] = 225.756989;
								HouseInfo[i][hExity] = 1240.000000;
								HouseInfo[i][hExitz] = 1082.149902;
								HouseInfo[i][hInt] = 2;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Medium/1 story/1 bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
							else if(proplev == 3)
							{
								HouseInfo[i][hExitx] = 223.1929;
								HouseInfo[i][hExity] = 1287.0780;
								HouseInfo[i][hExitz] = 1082.1406;
								HouseInfo[i][hInt] = 1;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/1 bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 4)
							{
								HouseInfo[i][hExitx] = 225.630997; HouseInfo[i][hExity] = 1022.479980; HouseInfo[i][hExitz] = 1084.069946;
								HouseInfo[i][hInt] = 7;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: VERY Large/2 story/4 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 5)
							{
								HouseInfo[i][hExitx] = 295.138977; HouseInfo[i][hExity] = 1474.469971; HouseInfo[i][hExitz] = 1080.519897;
								HouseInfo[i][hInt] = 15;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/2 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 6)
							{
								HouseInfo[i][hExitx] = 328.1066; HouseInfo[i][hExity] = 1478.0106; HouseInfo[i][hExitz] = 1084.4375;
								HouseInfo[i][hInt] = 15;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/2 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 7)
							{
								HouseInfo[i][hExitx] = 385.803986; HouseInfo[i][hExity] = 1471.769897; HouseInfo[i][hExitz] = 1080.209961;
								HouseInfo[i][hInt] = 15;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/1 bedroom/NO BATHROOM.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 8)
							{
								HouseInfo[i][hExitx] = 375.971985; HouseInfo[i][hExity] = 1417.269897; HouseInfo[i][hExitz] = 1081.409912;
								HouseInfo[i][hInt] = 15;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/1 bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 9)
							{
								HouseInfo[i][hExitx] = 490.810974; HouseInfo[i][hExity] = 1401.489990; HouseInfo[i][hExitz] = 1080.339966;
								HouseInfo[i][hInt] = 2;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Large/2 story/3 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     			 	else if(proplev == 10)
							{
								HouseInfo[i][hExitx] = 446.8264; HouseInfo[i][hExity] = 1397.3435; HouseInfo[i][hExitz] = 1084.3047;
								HouseInfo[i][hInt] = 2;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Medium/1 story/2 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 11)
							{
								HouseInfo[i][hExitx] = 227.722992; HouseInfo[i][hExity] = 1114.389893; HouseInfo[i][hExitz] = 1081.189941;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Large/2 story/4 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 12)
							{
								HouseInfo[i][hExitx] = 260.983978; HouseInfo[i][hExity] = 1286.549927; HouseInfo[i][hExitz] = 1080.299927;
								HouseInfo[i][hInt] = 4;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/1 bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 13)
							{
								HouseInfo[i][hExitx] = 221.7330; HouseInfo[i][hExity] = 1140.5146; HouseInfo[i][hExitz] = 1082.6094;
								HouseInfo[i][hInt] = 4;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/1 bedroom/NO BATHROOM!", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 14)
							{
								HouseInfo[i][hExitx] = 27.132700; HouseInfo[i][hExity] = 1341.149902; HouseInfo[i][hExitz] = 1084.449951;
								HouseInfo[i][hInt] = 10;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Medium/2 story/1 bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 15)
							{
								HouseInfo[i][hExitx] = -262.601990; HouseInfo[i][hExity] = 1456.619995; HouseInfo[i][hExitz] = 1084.449951;
								HouseInfo[i][hInt] = 4;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Large/2 story/1 bedroom/NO BATHROOM!", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 16)
							{
								HouseInfo[i][hExitx] = 22.778299; HouseInfo[i][hExity] = 1404.959961; HouseInfo[i][hExitz] = 1084.449951;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Medium/1 story/2 bedrooms/NO BATHROOM or DOORS!", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 17)
							{
								HouseInfo[i][hExitx] = 140.2267; HouseInfo[i][hExity] = 1365.9246; HouseInfo[i][hExitz] = 1083.8594;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Large/2 story/4 bedrooms/NO BATHROOM!", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 18)
							{
								HouseInfo[i][hExitx] = 234.045990; HouseInfo[i][hExity] = 1064.879883; HouseInfo[i][hExitz] = 1084.309937;
								HouseInfo[i][hInt] = 6;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Large/2 story/3 bedrooms.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 19)
							{
								HouseInfo[i][hExitx] = -68.294098; HouseInfo[i][hExity] = 1353.469971; HouseInfo[i][hExitz] = 1080.279907;
								HouseInfo[i][hInt] = 6;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/NO BEDROOM!", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 20)
							{
								HouseInfo[i][hExitx] = -285.548981; HouseInfo[i][hExity] = 1470.979980; HouseInfo[i][hExitz] = 1084.449951;
								HouseInfo[i][hInt] = 15;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: 1 bedroom/living room/kitchen/NO BATHROOM", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 21)
							{
								HouseInfo[i][hExitx] = -42.581997; HouseInfo[i][hExity] = 1408.109985; HouseInfo[i][hExitz] = 1084.449951;
								HouseInfo[i][hInt] = 8;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/NO BEDROOM!", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 22)
							{
								HouseInfo[i][hExitx] = 83.345093; HouseInfo[i][hExity] = 1324.439941; HouseInfo[i][hExitz] = 1083.889893;
								HouseInfo[i][hInt] = 9;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Medium/2 story/2 bedrooms", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 23)
							{
								HouseInfo[i][hExitx] = 260.941986; HouseInfo[i][hExity] = 1238.509888; HouseInfo[i][hExitz] = 1084.259888;
								HouseInfo[i][hInt] = 9;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Small/1 story/1 bedroom", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 24)
							{
								HouseInfo[i][hExitx] = 244.411987; HouseInfo[i][hExity] = 305.032990; HouseInfo[i][hExitz] = 999.231995;
								HouseInfo[i][hInt] = 1;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Denise's Bedroom", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 25)
							{
								HouseInfo[i][hExitx] = 266.4991; HouseInfo[i][hExity] = 304.9922; HouseInfo[i][hExitz] = 999.1484;
								HouseInfo[i][hInt] = 2;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Katie's Bedroom", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		      		 		else if(proplev == 26)
							{
								HouseInfo[i][hExitx] = 291.282990; HouseInfo[i][hExity] = 310.031982; HouseInfo[i][hExitz] = 999.154968;
								HouseInfo[i][hInt] = 3;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Helena's Bedroom (barn) - limited movement.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 27)
							{
								HouseInfo[i][hExitx] = 302.181000; HouseInfo[i][hExity] = 300.722992; HouseInfo[i][hExitz] = 999.231995;
								HouseInfo[i][hInt] = 4;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Michelle's Bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 28)
							{
								HouseInfo[i][hExitx] = 322.197998; HouseInfo[i][hExity] = 302.497986; HouseInfo[i][hExitz] = 999.231995;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Barbara's Bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 29)
							{
								HouseInfo[i][hExitx] = 346.870025; HouseInfo[i][hExity] = 309.259033; HouseInfo[i][hExitz] = 999.155700;
								HouseInfo[i][hInt] = 6;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Millie's Bedroom.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 30)
							{
								HouseInfo[i][hExitx] = 2495.6416; HouseInfo[i][hExity] = -1692.2361; HouseInfo[i][hExitz] = 1014.7422;
								HouseInfo[i][hInt] = 3;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: CJ's Mom's House.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 31)
							{
								HouseInfo[i][hExitx] = 1263.079956; HouseInfo[i][hExity] = -785.308960; HouseInfo[i][hExitz] = 1091.959961;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Madd Dogg's Mansion (West door).", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 32)
							{
								HouseInfo[i][hExitx] = 2468.4502; HouseInfo[i][hExity] = -1698.4801; HouseInfo[i][hExitz] = 1013.5078;
								HouseInfo[i][hInt] = 2;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Ryder's house.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 33)
							{
								HouseInfo[i][hExitx] = 2526.459961; HouseInfo[i][hExity] = -1679.089966; HouseInfo[i][hExitz] = 1015.500000;
								HouseInfo[i][hInt] = 1;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Sweet's House (South side of house is fucked).", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 34)
							{
								HouseInfo[i][hExitx] = 2543.659912; HouseInfo[i][hExity] = -1303.629883; HouseInfo[i][hExitz] = 1025.069946;
								HouseInfo[i][hInt] = 2;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Big Smoke's Crack Factory (Ground Floor).", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 35)
							{
								HouseInfo[i][hExitx] = 744.542969; HouseInfo[i][hExity] = 1437.669922; HouseInfo[i][hExitz] = 1102.739990;
								HouseInfo[i][hInt] = 6;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Fanny Batter's Whore House.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 36)
							{
								HouseInfo[i][hExitx] = 964.106995; HouseInfo[i][hExity] = -53.205498; HouseInfo[i][hExitz] = 1001.179993;
								HouseInfo[i][hInt] = 3;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Tiger Skin Rug Brothel.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 37)
							{
								HouseInfo[i][hExitx] = 2350.339844; HouseInfo[i][hExity] = -1181.649902; HouseInfo[i][hExitz] = 1028.000000;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Burning Desire Gang House.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 38)
							{
								HouseInfo[i][hExitx] = 2807.9172; HouseInfo[i][hExity] = -1174.4333; HouseInfo[i][hExitz] = 1025.5703;
								HouseInfo[i][hInt] = 8;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Colonel Furhberger's House.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 39)
							{
								HouseInfo[i][hExitx] = 318.7010; HouseInfo[i][hExity] = 1114.7716; HouseInfo[i][hExitz] = 1083.8828;
								HouseInfo[i][hInt] = 5;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Crack Den.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 40)
							{
								HouseInfo[i][hExitx] = 2324.3267; HouseInfo[i][hExity] = -1149.1440; HouseInfo[i][hExitz] = 1050.7101;
								HouseInfo[i][hInt] = 12;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Unused Safe House.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				else if(proplev == 41)
							{
								HouseInfo[i][hExitx] = 446.5014; HouseInfo[i][hExity] = 507.0295; HouseInfo[i][hExitz] = 1001.4195;
								HouseInfo[i][hInt] = 12;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Budget Inn Motel Room.", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		         			else if(proplev == 42)
							{
								HouseInfo[i][hExitx] = 2216.3398; HouseInfo[i][hExity] = -1150.5099; HouseInfo[i][hExitz] = 1025.7969;
								HouseInfo[i][hInt] = 15;
								format(string, sizeof string, "∑ø≤˙±‡∫≈: %d - ∑øŒ›√Ë ˆ: Jefferson Motel. (REALLY EXPENSIVE)", i);
								SendClientMessage(playerid, COLOR_WHITE,string);
		     				}
		     				OnPropTextdrawUpdate(1, i);
							OnPropUpdate(1,i);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* Œ¥÷™œÓƒø");
						    return 1;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Biz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev >= 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
							OnPropTextdrawUpdate(2, i);
							OnPropUpdate(2,i);
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
							OnPropTextdrawUpdate(2, i);
							OnPropUpdate(2,i);
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
							OnPropUpdate(2,i);
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							BizzInfo[i][bProducts] = proplev;
							OnPropTextdrawUpdate(2, i);
							OnPropUpdate(2,i);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* Œ¥÷™œÓƒø");
						    return 1;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SBiz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev >= 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
							OnPropTextdrawUpdate(3, i);
							OnPropUpdate(3,i);
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
							OnPropTextdrawUpdate(3, i);
							OnPropUpdate(3,i);
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
							OnPropUpdate(3,i);
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							SBizzInfo[i][sbProducts] = proplev;
							OnPropTextdrawUpdate(3, i);
							OnPropUpdate(3,i);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* Œ¥÷™œÓƒø");
						    return 1;
						}
					}
				}
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
				if(IsAnOwnableCar(idcar))
				{
				    format(string, sizeof(string), "≥µ≈∆∫≈: %d", idcar);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev >= 0)
					{
						if(strcmp(x_job,"color1",true) == 0)
					    {
							CarInfo[idcar][cColorOne] = proplev;
							ChangeVehicleColor(idcar, proplev, CarInfo[idcar][cColorTwo]);
							OnPropUpdate(4,idcar);
						}
						else if(strcmp(x_job,"color2",true) == 0)
					    {
							CarInfo[idcar][cColorTwo] = proplev;
							ChangeVehicleColor(idcar, CarInfo[idcar][cColorOne], proplev);
							OnPropUpdate(4,idcar);
						}
						else if(strcmp(x_job,"model",true) == 0)
					    {
					        if(proplev < 400 || proplev > 611)
							{
							    SendClientMessage(playerid, COLOR_GREY,"* Invalid Model!");
								return 1;
							}
							CarInfo[idcar][cModel] = proplev;
							OnPropUpdate(4,idcar);
						}
						else if(strcmp(x_job,"paintjob",true) == 0)
					    {
							CarInfo[idcar][cPaintjob] = proplev;
							ChangeVehiclePaintjob(idcar, proplev);
							OnPropUpdate(4,idcar);
						}
						else if(strcmp(x_job,"virtualworld",true) == 0)
					    {
							CarInfo[idcar][cVirWorld] = proplev;
							SetVehicleVirtualWorld(idcar, proplev);
							OnPropUpdate(4,idcar);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* Œ¥÷™œÓƒø");
						    return 1;
						}
					}
				}
			}
			format(string, sizeof(string), "You've adjusted the: %s to %d.", x_job,proplev);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/load", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar))
			{
				GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
				return 1;
			}
			format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/buyprods", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			new compcost = 20;
			if(IsPlayerInRangeOfPoint(playerid, 70, 2468.4919,-2092.9902,13.5469))
			{
				if(IsATruck(tmpcar))
				{
					if(PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity])
					{
					    new amount;
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /buyprods [ ˝¡ø]");
							return 1;
						}
						amount = strval(tmp);
						if(amount < 1 || amount > 500) { SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ªƒ‹¬Ú…Ÿ”⁄1∂‡”‡500µƒ≤˙∆∑!"); return 1; }
						new check= PlayerHaul[tmpcar][pLoad] + amount;
						if(check > PlayerHaul[tmpcar][pCapasity])
						{
						    format(string, sizeof(string), "   ƒ„µƒø®≥µ‘À‘ÿº´œﬁ « %d, ƒ„µ±«∞‘À‘ÿ¡À %d.",PlayerHaul[tmpcar][pCapasity],PlayerHaul[tmpcar][pLoad]);
						    SendClientMessage(playerid, COLOR_GREY, string);
						    return 1;
						}
						new cost = amount*compcost;
						if(GetPlayerMoney(playerid) >= cost)
						{
							PlayerHaul[tmpcar][pLoad] += amount;
							format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "ƒ„π∫¬Ú¡À%d≤˙∆∑“‘$%dº€∏Ò.", amount,cost);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							SafeGivePlayerMoney(playerid,-cost);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "ƒ„√ª”–◊„πªµƒ«Æπ∫¬Ú%d≤˙∆∑“‘$%dº€∏Ò!", amount,cost);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							return 1;
						}
					}
					else
					{
							format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "’‚¡æ≥µ≤ªƒ‹”√”⁄ÀÕªı.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª‘⁄ø®≥µÀæª˙π§◊˜µ„.");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/sellprods", true) == 0)
	{
	    new cashmade;
	    new tmpcar;
	    if(IsPlayerConnected(playerid))
		{
			tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar))
			{
				GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
				return 1;
			}
			if(PlayerHaul[tmpcar][pLoad] == 0)
			{
				GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
				format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				return 1;
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 10,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					//printf("Found House :%d",i);
					for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
					{
						if(BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts])
						{
							GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
							format(string, sizeof(string), "◊¨«Æœ÷Ω $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bPriceProd] > BizzInfo[i][bTill])
						{
							GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
							format(string, sizeof(string), "◊¨«Æœ÷Ω $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						PlayerHaul[tmpcar][pLoad]--;
						BizzInfo[i][bProducts]++;
						cashmade = cashmade+BizzInfo[i][bPriceProd];
						//ConsumingMoney[playerid] = 1;
						SafeGivePlayerMoney(playerid,BizzInfo[i][bPriceProd]);
						BizzInfo[i][bTill] -= BizzInfo[i][bPriceProd];
						if(PlayerHaul[tmpcar][pLoad] == 0)
						{
							GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
							format(string, sizeof(string), "◊¨«Æœ÷Ω $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					OnPropUpdate(3,i);
					return 1;
				}
			}
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 10,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				//printf("Found House :%d",i);
				for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
				{
					if(SBizzInfo[i][sbProducts] == SBizzInfo[i][sbMaxProducts])
					{
						GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
						format(string, sizeof(string), "◊¨«Æœ÷Ω $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
					if(SBizzInfo[i][sbPriceProd] > SBizzInfo[i][sbTill])
					{
						GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
						format(string, sizeof(string), "◊¨«Æœ÷Ω $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
					PlayerHaul[tmpcar][pLoad]--;
					SBizzInfo[i][sbProducts]++;
					cashmade = cashmade+SBizzInfo[i][sbPriceProd];
					//ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,SBizzInfo[i][sbPriceProd]);
					SBizzInfo[i][sbTill] -= SBizzInfo[i][sbPriceProd];
					if(PlayerHaul[tmpcar][pLoad] == 0)
					{
						GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
						format(string, sizeof(string), "◊¨«Æœ÷Ω $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "≤˙∆∑: %d/%d.", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
				}
				OnPropUpdate(3,i);
				return 1;
			}
		}
		GameTextForPlayer(playerid, "~r~To Far From A Business", 5000, 1);
		return 1;
	}
	if(strcmp(cmd, "/enter", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
 			if(MatsHolding[playerid] == 25 && PlayerInfo[playerid][pJob] == 22)
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„≈‹≤ƒ¡œ∏¯≤ƒ¡œ“¯––,’‚∆⁄º‰ƒ„≤ªƒ‹¿¥’‚¿Ô.");
	    		return 1;
			}
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 10,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					//printf("Found House :%d",i);
					if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
					{
					    if(PlayerInfo[playerid][pWanted] == 0)
					    {
							SafeSetPlayerInterior(playerid,HouseInfo[i][hInt]);
							SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
							SafeSetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
							GameTextForPlayer(playerid, "~w~Welcome Home", 5000, 1);
							PlayerInfo[playerid][pLocal] = i;
							PlayerInfo[playerid][pVirWorld] = HouseInfo[i][hWorld];
							HouseEntered[playerid] = i;
							PlayerInfo[playerid][pInteriorNr] = 39;
						}
						else
						{
							GameTextForPlayer(playerid, "~r~Criminals can't hide in houses!", 5000, 1);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 5,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(BizzInfo[i][bProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							SafeGivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-$%d~n~~w~type /exit~n~to get out", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bProducts]--;
							OnPropUpdate(2,i);
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						PlayerInfo[playerid][pInteriorNr] = BizzInfo[i][bInteriorNr];
						SetPlayerVirtualWorld(playerid,BizzInfo[i][bVirWorld]);
						SafeSetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SafeSetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						BizzEntered[playerid] = i;
						new h,mi,s,y,m,d;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ª®¡À$%d“‘Ω¯»Î%dµƒ≤˙“µ",d,m,y,h,mi,s, dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						if(BizzInfo[i][bVirWorld] == 0 || BizzInfo[i][bVirWorld] == 1)
						{
						    OnPlayerEnterFood(playerid, 1);
						}
						else if(BizzInfo[i][bVirWorld] == 2 || BizzInfo[i][bVirWorld] == 3)
						{
						    OnPlayerEnterFood(playerid, 2);
						}
						else if(BizzInfo[i][bVirWorld] == 4 || BizzInfo[i][bVirWorld] == 5)
						{
						    OnPlayerEnterFood(playerid, 3);
						}
						else if(BizzInfo[i][bVirWorld] == 6)
						{
						    OnPlayerEnterFood(playerid, 4);
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (IsPlayerInRangeOfPoint(playerid, 3,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(SBizzInfo[i][sbProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							SafeGivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoney(playerid);
							SBizzInfo[i][sbProducts]--;
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s ÷ß∏∂¡À $%d Ω¯»Î¡Àsbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							PayLog(string);
							OnPropUpdate(3,i);
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			if (IsPlayerInRangeOfPoint(playerid, 3,2695.6235,-1704.6960,11.8438))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
			    SafeSetPlayerInterior(playerid,7);
				SafeSetPlayerPos(playerid,-1404.5299,-259.0602,1043.6563);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 8,-2111.5686,-443.9720,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
			    SafeSetPlayerInterior(playerid,4);
				SafeSetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 3,-2080.3079,-406.0309,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
			    SafeSetPlayerInterior(playerid,14);
				SafeSetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
			}
            if (IsPlayerInRangeOfPoint(playerid,10,1099.3762,1601.5387,12.5469))
			{
				if (GetPlayerState(playerid) == 2)
				{
		   			if (PlayerInfo[playerid][pDTK] == 0 && PlayerInfo[playerid][pDM] == 0 && PlayerInfo[playerid][pAdmin] <= 2)
		    		{
			        	SendClientMessage(playerid,COLOR_NICERED,"ƒ„√ª”–“ª’≈»¸≥µæ∫ººµƒ»Î≥°»Ø!");

						format(string, sizeof(string), "[π‹¿Ì]: %s  ‘ÕºŒﬁ∆±Ω¯»Î»¸≥µæ∫ºº!", sendername);
						ABroadCast(COLOR_LIGHTRED,string, 5);
			        	return 1;
					}
					new tmpcar = GetPlayerVehicleID(playerid);
					new vehicleid = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1437.1271,990.9039,1030.5000);
					PlayerInfo[playerid][pDTK] = 0;
					SafeSetPlayerInterior(playerid, 15)
					LinkVehicleToInterior(vehicleid, 15);
					PlayerInfo[playerid][pInteriorNr] = 25;
					GameTextForPlayer(playerid,"~p~Raven's Roleplay ~n~~r~Destruction Derby Stadium", 5000,1)
					SendClientMessage(playerid, COLOR_NICERED, "ª∂”≠¿¥µΩ»¸≥µæ∫ºº≥°(DD)");
					SendClientMessage(playerid, TEAM_VAGOS_COLOR, "----------------------------------»¸≥µæ∫ºº÷˜“™πÊ‘Ú---------------------------------------");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "‘⁄π‹¿Ì‘±µπº∆ ±÷Æ«∞◊≤ª˜∆‰À˚ÕÊº“ª· ‹µΩ2–° ±º‡Ω˚µƒ≥Õ∑£");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "÷––ƒπ„≥° «÷˜≥÷»Àµƒµÿ«¯");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "»Áπ˚ƒ„≤ª «»¸≥µæ∫ººµƒ÷˜≥÷»À,ƒ„Ω´≤ª±ª‘ –ÌΩ¯»Î÷˜≥÷»Àµÿ«¯");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "∑«÷˜≥÷»ÀµƒÕÊº“Ω¯»Î÷˜≥÷»Àµÿ«¯Ω´ ‹µΩ30∑÷÷”º‡Ω˚µƒ≥Õ∑£");
					SendClientMessage(playerid, TEAM_VAGOS_COLOR, "----------------------------------≥µ ÷πÊ‘Ú----------------------------------------");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "µΩæ∫ºº≥°µƒΩ«¬‰»•≤¢µ»∫Úπ‹¿Ì‘±–˚≤ºµπº∆ ±!");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "≥°…œ £œ¬µƒ◊Ó∫Û“ª∏ˆ»¸≥µ√ª±ª∆∆ªµµƒÕÊº“ªÒ §");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "Ω±∆∑: 13,337,000,000$∫Õ1500∑¢»Œ“‚Œ‰∆˜µƒ◊”µØ; ◊£ƒ„∫√‘À!");
				}
				else
				{
	    			if (PlayerInfo[playerid][pDSTK] == 0 && PlayerInfo[playerid][pDM] == 0 && PlayerInfo[playerid][pAdmin] <= 2)
		    		{
			        	SendClientMessage(playerid,COLOR_NICERED,"ƒ„√ª”–“ª’≈»¸≥µæ∫ºº(≥°)µƒ»Î≥°»Ø!");

						format(string, sizeof(string), "[π‹¿Ì]: %s ‘ÕºŒﬁ∆±Ω¯»Î»¸≥µæ∫ºº!", sendername);
						ABroadCast(COLOR_LIGHTRED,string, 5);
			        	return 1;
					}
					GameTextForPlayer(playerid, "~p~Raven's Roleplay ~n~~r~~h~Destruction Derby Stadium ~n~~g~Las Venturas", 5000, 1);
					SafeSetPlayerInterior(playerid, 15);
					SafeSetPlayerPos(playerid,-1390.0785,930.2457,1041.5313);
					PlayerInfo[playerid][pDSTK] = 0;
					PlayerInfo[playerid][pInteriorNr] = 25;
					SendClientMessage(playerid, COLOR_NICERED, "ª∂”≠¿¥µΩ»¸≥µæ∫ºº≥°(DD)");
					SendClientMessage(playerid, TEAM_VAGOS_COLOR, "------------------------------------»¸≥µæ∫ºº÷˜“™πÊ‘Ú------------------------------------");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "‘⁄π‹¿Ì‘±µπº∆ ±÷Æ«∞◊≤ª˜∆‰À˚ÕÊº“ª· ‹µΩ2–° ±º‡Ω˚µƒ≥Õ∑£");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "÷––ƒπ„≥° «÷˜≥÷»Àµƒµÿ«¯");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "»Áπ˚ƒ„≤ª «»¸≥µæ∫ººµƒ÷˜≥÷»À,ƒ„Ω´≤ª±ª‘ –ÌΩ¯»Î÷˜≥÷»Àµÿ«¯");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "∑«÷˜≥÷»ÀµƒÕÊº“Ω¯»Î÷˜≥÷»Àµÿ«¯Ω´ ‹µΩ30∑÷÷”º‡Ω˚µƒ≥Õ∑£");
					SendClientMessage(playerid, TEAM_VAGOS_COLOR, "----------------------------------π€ø¥’ﬂπÊ‘Ú------------------------------------");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "¥˝‘⁄π€ø¥’ﬂ«¯”Ú∫√∫√œÌ ‹’‚∂Œ ±π‚∞…!");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "‘⁄π€ø¥’ﬂ«¯”Ú≤ª“™π•ª˜»Œ∫Œ»À");
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "π•ª˜»Œ∫Œ»ÀªÚ’ﬂΩ¯»Îæ∫ºº≥°ƒ⁄≤øΩ´ ‹µΩ30∑÷÷”º‡Ω˚µƒ≥Õ∑£.");
				}
			}
			else if (IsPlayerInRangeOfPoint(playerid, 4,2073.2979,-1831.1228,13.5469))
			{ // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
			    if(GetPlayerState(playerid) == 2)
			    {
			        if(GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
			        {
			            if(SBizzInfo[5][sbProducts] > 0)
			            {
           					new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 2062.1294,-1831.5498,13.5469);
			        		SetVehicleZAngle(tmpcar, 90);
			        		SafeGivePlayerMoney(playerid, - SBizzInfo[5][sbEntranceCost]);
			        		SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
			        		SBizzInfo[5][sbProducts]--;
			        		SetTimerEx("AfterSpray1", 7500, false, "i", playerid);
						}
						else
						{
						    GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î].");
					}
			    }
			}
			else if (IsPlayerInRangeOfPoint(playerid, 4,1024.9756,-1030.7930,32.0257))
			{ // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
			    if(GetPlayerState(playerid) == 2)
			    {
			        if(GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
			        {
			            if(SBizzInfo[5][sbProducts] > 0)
			            {
           					new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 1024.9763,-1021.8850,32.1016);
			        		SetVehicleZAngle(tmpcar, 0);
			        		SafeGivePlayerMoney(playerid, - SBizzInfo[5][sbEntranceCost]);
			        		SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
			        		SBizzInfo[5][sbProducts]--;
			        		SetTimerEx("AfterSpray2", 7500, false, "i", playerid);
						}
						else
						{
						    GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î].");
					}
			    }
			}
			else if (IsPlayerInRangeOfPoint(playerid, 4,488.3819,-1733.0563,11.1752))
			{ // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
			    if(GetPlayerState(playerid) == 2)
			    {
			        if(GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
			        {
			            if(SBizzInfo[5][sbProducts] > 0)
			            {
           					new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 487.4099,-1741.4585,11.1330);
			        		SetVehicleZAngle(tmpcar, 180);
			        		SafeGivePlayerMoney(playerid, - SBizzInfo[5][sbEntranceCost]);
			        		SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
			        		SBizzInfo[5][sbProducts]--;
			        		SetTimerEx("AfterSpray3", 7500, false, "i", playerid);
						}
						else
						{
						    GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î].");
					}
			    }
			}
			else if (IsPlayerInRangeOfPoint(playerid, 4,719.8940,-464.8272,16.3359))
			{ // –ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î]
			    if(GetPlayerState(playerid) == 2)
			    {
			        if(GetPlayerMoney(playerid) > SBizzInfo[5][sbEntranceCost] + 100)
			        {
			            if(SBizzInfo[5][sbProducts] > 0)
			            {
           					new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, 720.3924,-456.0286,16.3359);
			        		SetVehicleZAngle(tmpcar, 0);
			        		SafeGivePlayerMoney(playerid, - SBizzInfo[5][sbEntranceCost]);
			        		SBizzInfo[5][sbTill] += SBizzInfo[5][sbEntranceCost];
			        		SBizzInfo[5][sbProducts]--;
			        		SetTimerEx("AfterSpray4", 7500, false, "i", playerid);
						}
						else
						{
						    GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–◊„πªµƒ«Æ–ﬁ≥µ & ≈Á∆·  ‰»Î[/enterΩ¯»Î].");
					}
			    }
			}
		}

		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /enter",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}

	if(strcmp(cmd, "/exit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(HouseEntered[playerid] != 9999)
		    {
				new i = HouseEntered[playerid];
				
				if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					SafeSetPlayerInterior(playerid,0);
					SafeSetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					SetPlayerVirtualWorld(playerid,0);
					PlayerInfo[playerid][pVirWorld] = 0;
					HouseEntered[playerid] = 9999;
					if(HouseInfo[i][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if(tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
						}
					}
					return 1;
				}
			}
			if(BizzEntered[playerid] != 9999)
		    {
		        new i = BizzEntered[playerid];
		        
				if (IsPlayerInRangeOfPoint(playerid, 3,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
				    SafeSetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					OnPlayerExitFood(playerid);
					SafeSetPlayerPos(playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]);
					SetPlayerVirtualWorld(playerid, 0);
					BizzEntered[playerid] = 9999;
				}
			}
			new carid = GetPlayerVehicleID(playerid);
			if (IsABus(carid))
			{
				TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
				if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0) BusrouteEnd(playerid, carid);
			}
			if (IsASweeper(carid))
			{
				TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
			}
			if(IsAHarvest(carid))
			{
			    if (carid != 0)
				{
					SetVehicleToRespawn(carid);
				}
				if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
				{
					FarmerPickup[playerid][0]--;
				}
			    TogglePlayerControllable(playerid, 1);
			    SafeRemovePlayerFromVehicle(playerid);
			    FarmerVar[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);

			}
			if(IsADrugHarvest(carid))
			{

			    if(DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
			    {
			        DrugFarmerPickup[playerid][0]--;
			    }
			    TogglePlayerControllable(playerid, 1);
			    SafeRemovePlayerFromVehicle(playerid);
			    DrugFarmerVar[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			}
			if(IsASmuggleCar(carid))
			{
			    TogglePlayerControllable(playerid, 1);
			    SafeRemovePlayerFromVehicle(playerid);
			    SmugglerWork[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			}
			if(Decoding[playerid] == 1)
			{
			    Decoding[playerid] = 0;
			    KillTimer(DecoderTimer);
				HideDecoder(playerid);
				SendClientMessage(playerid, COLOR_NICERED, "ƒ„¿Îø™¡À∆˚≥µΩ‚¬Î∆˜Õ£÷π!");
				decodecode = 0;
				Decoder = 0;
			}
			if(IsAnOwnableCar(carid) && CarInfo[carid][cOwned] == 0)
	   		{
	        	TogglePlayerControllable(playerid, 1);
	        	SafeRemovePlayerFromVehicle(playerid);
	    	}
	    	if(IsPlayerInAnyVehicle(playerid) && !engineOn[GetPlayerVehicleID(playerid)] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    	{
	    	    TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
			}
			if(GetPlayerVehicleID(playerid) >= 112 && GetPlayerVehicleID(playerid) <= 130 || GetPlayerVehicleID(playerid) >= 135 && GetPlayerVehicleID(playerid) <= 154)
			{
				TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 3,387.7978,173.8582,1008.3828))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,1481.0206,-1771.1138,18.7958);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 6,-1404.5299,-259.0602,1043.6563))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 8,-1443.0554,-581.1879,1055.0472))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 8,-1464.7732,1557.5533,1052.5313))
			{
			    SafeSetPlayerInterior(playerid,0);
				SafeSetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
			}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
			}
		}

		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /exit",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}
	if(strcmp(cmd, "/home", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPhousekey] != 9999)
			{
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~w~Waypoint set ~r~Home", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /home",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are homeless", 5000, 1);
			}
		}
		return 1;
	}
	/*if(strcmp(cmd, "/towcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				if(SBizzInfo[8][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				if(CarTow(house+1))
				{
					GameTextForPlayer(playerid, "~w~Car~n~~g~Towed Home~n~~r~$-100", 5000, 1);
					SafeGivePlayerMoney(playerid,-100);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SBizzInfo[8][sbTill] += 100;//towcar buisness
					ExtortionSBiz(8, 1000);
					SBizzInfo[8][sbProducts]--;
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
			}
		}
		return 1;
	}*/
	/*if(strcmp(cmd, "/fixcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 9999 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				if(SBizzInfo[8][sbProducts] == 0)
				{
					GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
				}
				if(CarRespawn(house+1))
				{
					GameTextForPlayer(playerid, "~w~Car~n~~g~Repaired~n~~r~$-50", 5000, 1);
					SafeGivePlayerMoney(playerid,-50);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SBizzInfo[8][sbTill] += 50;//towcar buisness
					ExtortionSBiz(8, 1000);
					SBizzInfo[8][sbProducts]--;
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
				}
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are not a home owner", 5000, 1);
			}
		}
		return 1;
	}*/
//-----------------------------[TOW CAR]--------------------------------------------------------
	if(strcmp(cmd,"/tow",true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pJob] == 7)
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
		            new m = GetVehicleModel(GetPlayerVehicleID(playerid));
			    	if (m == 525 || m == 552)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
			   				    	Found=1;
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
			    						AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
							if(!Found)
				 			{
			   					SendClientMessage(playerid,0xFFFF00AA,"’‚∏ˆ«¯”Ú√ª”–≥µ");
			   				}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "ƒ„–Ë“™“ª∏ˆÀæª˙!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "ƒ„–Ë“™“ª¡æÕœ≥µ≤≈ø…“‘ π”√");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "ƒ„–Ë“™‘⁄“ª¡æ≥µ¿Ô!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD2,"ƒ„–Ë“™≥…Œ™∆˚≥µ–ﬁ¿Ìπ§≤≈ø…“‘ π”√’‚∏ˆ!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
            if(PlayerInfo[playerid][pPbiskey] != 9999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   ƒ„“—æ≠”µ”–“ª∏ˆ≤˙“µ¡À,  ‰»Î /sellbiz »Áπ˚ƒ„œÎ“™¬Úœ¬’‚“ª∏ˆ≤˙“µ.");
				return 1;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "ƒ„±ÿ–Î”–%dº∂≤≈ƒ‹π∫¬Ú’‚∏ˆ≤˙“µ",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
					{
					    if(PlayerInfo[playerid][pPassport] == 1)
						{
							PlayerInfo[playerid][pPbiskey] = b+100;
							SBizzInfo[b][sbOwned] = 1;
							strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
							SafeGivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
							PlayerPlayMusic(playerid);
							SendClientMessage(playerid, COLOR_WHITE, "πßœ≤ƒ„, ƒ„≥…π¶π∫¬Ú¡À’‚∏ˆ≤˙“µ.");
							SendClientMessage(playerid, COLOR_WHITE, "º¸»Î /help ‰Ø¿¿’‚∏ˆ–¬≤˙“µµƒ∞Ô÷˙.");
							OnPropUpdate(3,b);
							OnPlayerUpdateEx(playerid);
							OnPropTextdrawUpdate(3, b);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /buybiz",d,m,y,h,mi,s,sendername);
							CommandLog(string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "* ƒ„–Ë“™“ª±æª§’’≤≈ø…“‘π∫¬Ú’‚∏ˆ≤˙“µ!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„µƒœ÷Ω≤ªπª");
						return 1;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 2, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "ƒ„±ÿ–Î”–%dº∂≤≈ƒ‹π∫¬Ú’‚∏ˆ≤˙“µ",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						SafeGivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SafeSetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						SetPlayerVirtualWorld(playerid,BizzInfo[b][bVirWorld]);
						PlayerInfo[playerid][pInteriorNr] = BizzInfo[b][bInteriorNr];
						SafeSetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "πßœ≤ƒ„, ƒ„≥…π¶π∫¬Ú¡À’‚∏ˆ≤˙“µ.");
						SendClientMessage(playerid, COLOR_WHITE, "º¸»Î /help ‰Ø¿¿’‚∏ˆ–¬≤˙“µµƒ∞Ô÷˙.");
						OnPropUpdate(2,b);
						OnPlayerUpdateEx(playerid);
						OnPropTextdrawUpdate(2, b);
						BizzEntered[playerid] = b;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "ƒ„µƒœ÷Ω≤ªπª");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 9999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "* ƒ„√ª”–◊‘º∫µƒ≤˙“µ");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "* ƒ„“—æ≠Ω·ªÈ¡À,Œﬁ∑®≥ˆ €≤˙“µ !");
		        return 1;
		    }
      		if(CanSellBizz[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "ƒ„–Ë“™Õ®π˝ ⁄»®≤≈ø…“‘≥ˆ €’‚∏ˆ≤˙“µ,”√∑® /account panel!");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPbiskey]-100;
				SafeGivePlayerMoney(playerid,SBizzInfo[bouse][sbBuyPrice]);
				SafeGivePlayerMoney(playerid,SBizzInfo[bouse][sbTill]);
				SBizzInfo[bouse][sbLocked] = 1;
				SBizzInfo[bouse][sbOwned] = 0;

				strmid(SBizzInfo[bouse][sbOwner], "◊¥Ã¨", 0, strlen("◊¥Ã¨"), 255);
				strmid(SBizzInfo[bouse][sbExtortion], "√ª»À", 0, strlen("√ª»À"), 255);
				//ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d + $%d", SBizzInfo[bouse][sbBuyPrice], SBizzInfo[bouse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[bouse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate(3,bouse);
				OnPlayerUpdateEx(playerid);
				OnPropTextdrawUpdate(3, bouse);
				return 1;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[bouse][bLocked] = 1;
				BizzInfo[bouse][bOwned] = 0;

				strmid(BizzInfo[bouse][bOwner], "◊¥Ã¨", 0, strlen("◊¥Ã¨"), 255);
				strmid(BizzInfo[bouse][bExtortion], "√ª»À", 0, strlen("√ª»À"), 255);
				//ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid,BizzInfo[bouse][bBuyPrice]);
				SafeGivePlayerMoney(playerid,BizzInfo[bouse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d + $%d", BizzInfo[bouse][bBuyPrice], BizzInfo[bouse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[bouse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 9999;
				OnPropUpdate(2, bouse);
				OnPlayerUpdateEx(playerid);
				OnPropTextdrawUpdate(2, bouse);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–“ª∏ˆ≤˙“µ.");
			}
		}

		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /sellbiz",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}
	if (strcmp(cmd, "/bizinfo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if(bouse == 9999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–“ª∏ˆ≤˙“µ.");
				return 1;
			}
			if (bouse >= 100)
			{

				PrintSBizInfo(playerid,bouse-100);
			}
			else
			{
				PrintBizInfo(playerid,bouse);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/prodprice", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 9999)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ≤˙“µ");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /prodprice [amount to pay per Product]");
		}
		if(strval(tmp) < 1 || strval(tmp) > 99999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Minimum amount is $1, Maximum amount is $99999.");
			return 1;
		}
		if (bouse >= 100)
		{
			if(strval(tmp) > SBizzInfo[bouse-100][sbTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–ƒ«√¥∂‡ in your Till.");
				return 1;
			}
			SBizzInfo[bouse-100][sbPriceProd] = strval(tmp);
			OnPropUpdate(3, bouse);
			OnPropTextdrawUpdate(3, bouse);
			format(string, sizeof(string), "Buying Products for $%d.", SBizzInfo[bouse-100][sbPriceProd]);
		}
		else
		{
			if(strval(tmp) > BizzInfo[bouse][bTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "ƒ„√ª”–ƒ«√¥∂‡ in your Till.");
				return 1;
			}
			BizzInfo[bouse][bPriceProd] = strval(tmp);
			OnPropUpdate(2, bouse);
			OnPropTextdrawUpdate(2, bouse);
			format(string, sizeof(string), "Buying Products for $%d.", BizzInfo[bouse][bPriceProd]);
		}
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/bizfee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ≤˙“µ !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /bizfee [EntranceFee]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 99999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Minimum entrance is $0, Maximum entrance is $99999.");
				return 1;
			}
			if (bouse >= 100)
			{
				SBizzInfo[bouse-100][sbEntranceCost] = strval(tmp);
				OnPropUpdate(3,bouse);
				OnPropTextdrawUpdate(3, bouse);
				format(string, sizeof(string), "Entrance fee set to $%d.", SBizzInfo[bouse-100][sbEntranceCost]);
			}
			else
			{
				BizzInfo[bouse][bEntranceCost] = strval(tmp);
				OnPropUpdate(2, bouse);
				OnPropTextdrawUpdate(2, bouse);
				format(string, sizeof(string), "Entrance fee set to $%d.", BizzInfo[bouse][bEntranceCost]);
			}
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/extortion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ≤˙“µ");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /extortion [ÕÊº“ID/ÕÊº“√˚◊÷] (or 555 for √ª»À)");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s is know Extortioning your Business.",giveplayer);
			        SendClientMessage(playerid, COLOR_WHITE, string);
			        format(string, sizeof(string), "* %s has adjusted his Business, you are now Extortioning his Business.",sendername);
			        SendClientMessage(giveplayerid, COLOR_WHITE, string);
			        if (bouse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[bouse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Business Extortion Name set to %s",SBizzInfo[bouse-100][sbExtortion]);
						OnPropUpdate(3,bouse);
						OnPropTextdrawUpdate(3, bouse);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Business Extortion Name set to %s",BizzInfo[bouse][bExtortion]);
						OnPropUpdate(2,bouse);
						OnPropTextdrawUpdate(2, bouse);
					}
					SendClientMessage(playerid, COLOR_WHITE, string);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /extorton %s",d,m,y,h,mi,s,sendername,giveplayer);
					CommandLog(string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (bouse >= 100)
				{
				    format(string, sizeof(string), "√ª»À");
					strmid(SBizzInfo[bouse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Business Extortion Name set to %s",SBizzInfo[bouse-100][sbExtortion]);
					OnPropUpdate(3,bouse);
					OnPropTextdrawUpdate(3, bouse);
				}
				else
				{
				    format(string, sizeof(string), "√ª»À");
					strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Business Extortion Name set to %s",BizzInfo[bouse][bExtortion]);
					OnPropUpdate(2,bouse);
					OnPropTextdrawUpdate(2, bouse);
				}
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ≤˙“µ");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /bizname [Name]");
			}
			if (bouse >= 100)
			{
				strmid(SBizzInfo[bouse-100][sbMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Business name set to %s",SBizzInfo[bouse-100][sbMessage]);
				OnPropUpdate(3,bouse);
				OnPropTextdrawUpdate(3, bouse);
			}
			else
			{
				strmid(BizzInfo[bouse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Business name set to %s",BizzInfo[bouse][bMessage]);
				OnPropUpdate(2,bouse);
				OnPropTextdrawUpdate(2, bouse);
			}
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/bizwithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ≤˙“µ");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (bouse >= 100)
				{
					format(string, sizeof(string), "  You Have $%d in your till.", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  You Have $%d in your till.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bizwithdraw [ ˝¡ø]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bizwithdraw [ ˝¡ø]");
				return 1;
			}
			if (bouse >= 100)
			{
				if(cashdeposit > SBizzInfo[bouse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡");
					return 1;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡");
					return 1;
				}
			}
			if (bouse >= 100)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 100,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
				    //ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,cashdeposit);
					SBizzInfo[bouse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  You Have Withdrawn $%d from your till Total: $%d ", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate(3,bouse);
					OnPropTextdrawUpdate(3, bouse);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!IsPlayerInRangeOfPoint(playerid, 100,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
				    //ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,cashdeposit);
					BizzInfo[bouse][bTill] -= cashdeposit;
					format(string, sizeof(string), "  You Have Withdrawn $%d from your till Total: $%d ", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate(2,bouse);
					OnPropTextdrawUpdate(2, bouse);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 9999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–“ª∏ˆ≤˙“µ");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (bouse >= 100)
				{
					format(string, sizeof(string), "  You Have $%d in your till.", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  You Have $%d in your till.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bizbank [ ˝¡ø]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bizbank [ ˝¡ø]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„√ª”–ƒ«√¥∂‡");
				return 1;
			}
			if (bouse >= 100)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 100,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
					SafeGivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[bouse-100][sbTill] += cashdeposit;
					ExtortionSBiz(bouse-100, cashdeposit);
					format(string, sizeof(string), "  You Have Banked $%d to your till Total: $%d ", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate(3,bouse);
					OnPropTextdrawUpdate(3, bouse);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!IsPlayerInRangeOfPoint(playerid, 100,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
					SafeGivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[bouse][bTill] += cashdeposit;
					ExtortionBiz(bouse, cashdeposit);
					format(string, sizeof(string), "  You Have Banked $%d to your till Total: $%d ", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate(2,bouse);
					OnPropTextdrawUpdate(2, bouse);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/heal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);

			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1)
						{
							format(string, sizeof(string), "* %s puts on body armour.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							SafeSetPlayerArmour(playerid, 50.0);
						}
						else
						{
							format(string, sizeof(string), "This place does not have armour upgrades.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						if(HouseInfo[location][hHel] == 1)
						{
							new Float:tempheal;
							GetPlayerHealth(playerid,tempheal);
							if ( tempheal < 100.0)
							{
								SetPlayerHealth(playerid,100.0);
								PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "You have been healed to 100 health.");
								SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
							}
							else
							{
								SendClientMessage(playerid, TEAM_GREEN_COLOR,"You are already healed to 100.");
							}
						}
						else
						{
							format(string, sizeof(string), "This place does not have healing upgrades.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						return 1;
					}
					else if(location == 101)//Restaurant
					{
					    new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if ( tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "You have been healed to 100 health.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						else
						{
							SendClientMessage(playerid, TEAM_GREEN_COLOR,"You are already healed to 100.");
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /heal [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /heal [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 1000) { SendClientMessage(playerid, COLOR_GREY, "   Healing price not below 1 or above 1000!"); return 1; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You can not heal yourself!");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					new giveambu = GetPlayerVehicleID(giveplayerid);
					new playambu = GetPlayerVehicleID(playerid);
					if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//model
					{
						if (IsAnAmbulance(playambu) && playambu == giveambu)
						{
							new Float:tempheal;
							GetPlayerHealth(giveplayerid,tempheal);
							if(tempheal >= 100.0)
							{
								SendClientMessage(playerid, TEAM_GREEN_COLOR,"   That person is fully healed.");
								return 1;
							}
							format(string, sizeof(string), "~y~You healed ~n~~w~%s~n~~g~$%d", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							SafeGivePlayerMoney(playerid,moneys);
							SafeGivePlayerMoney(giveplayerid,-moneys);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
								SetPlayerHealth(giveplayerid, hp);
						    }
						    else
						    {
						        hp = 100;
						        SetPlayerHealth(giveplayerid, 100);
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "You have been healed to %d health -$%d",hp,moneys);
							SendClientMessage(giveplayerid, TEAM_GREEN_COLOR,string);
							if(STDPlayer[giveplayerid] > 0)
				            {
								STDPlayer[giveplayerid] = 0;
								SendClientMessage(giveplayerid, COLOR_WHITE, "* You are no longer infected with a STD anymore because of the Medics help!");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "** One of you is not in the Ambulance / Chopper!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}

		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /heal",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}
//-----------------------------AGL-------------------------------------------------------------------
	if(strcmp(cmd, "/agl", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] >= 2)
	        {
	            new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl [name] [ÕÊº“ID/ÕÊº“√˚◊÷]");
				    SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: Driving, Flying, Sailing, Fishing, Weapon, Police.");
					return 1;
				}
				if(strcmp(x_nr,"flying",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl Flying [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							if(PlayerInfo[giveplayerid][pPassport] == 1)
							{
						        
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* You've given a Flying License to %s (%d).",giveplayer, giveplayerid);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* %s has given you a Flying License.",sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 1;
	  							format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Flying License to %s (%d).",sendername ,giveplayer, giveplayerid);
								ABroadCast(COLOR_LIGHTRED, string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Given a Weapon License To %s.",d,m,y,h,mi,s,sendername,giveplayer);
								GiveLog(string);
						        return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player doesn't has a passport!");
							    return 1;
							}
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"sailing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl sailinglicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Sailing License to %s (%d).",giveplayer, giveplayerid);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Admin %s has given you a Sailing License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pBoatLic] = 1;
  							format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Sailing License to %s (%d).",sendername ,giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Given a Weapon License To %s.",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"police",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl police [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {

					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Police License to %s (%d).",giveplayer, giveplayerid);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "*π‹¿Ì%s has given you a Police License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pCopLic] = 1;
  							format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Police License to %s (%d).",sendername ,giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Given a Weapon License To %s.",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"driving",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl Driverslicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pPassport] == 1)
					        {
						        
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* You've given a Driving License to %s (%d).",giveplayer, giveplayerid);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "*π‹¿Ì%s has given you a Driving License.",sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 1;
	  							format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Driving License to %s (%d).",sendername ,giveplayer, giveplayerid);
								ABroadCast(COLOR_LIGHTRED, string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Given a Weapon License To %s.",d,m,y,h,mi,s,sendername,giveplayer);
								GiveLog(string);
						        return 1;
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "This player hasn't a passport!");
								return 1;
							}
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
                else if(strcmp(x_nr,"fishing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl fishinglicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Fishing License to %s (%d).",giveplayer, giveplayerid);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "*π‹¿Ì%s has given you a Fishing License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFishLic] = 1;
  							format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Fishing License to %s (%d).",sendername ,giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Given a Weapon License To %s.",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapon",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /agl weaponlicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Weapon License to %s (%d).",giveplayer, giveplayerid);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "*π‹¿Ì%s has given you a Weapon License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pGunLic] = 1;
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Weapon License to %s (%d).",sendername ,giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Given a Weapon License To %s.",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„Œﬁ»® π”√¥À√¸¡Ó!");
	            return 1;
	        }
	    }
	    return 1;
 	}
//----------------------------------[mole]-----------------------------------------------
	if(strcmp(cmd, "/mole", true) == 0 && PlayerInfo[playerid][pAdmin] >= 3)
	{
	    if(IsPlayerConnected(playerid))
	    {

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /mole [mole text]");
				return 1;
			}
			format(string, sizeof(string), "∂Ã–≈: %s, ∑¢º˛»À: MOLE (555)",result);
			if (gTeam[playerid] < 3){SendClientMessage(playerid, COLOR_YELLOW, string);}
			SendEnemyMessage(COLOR_YELLOW, string);
			format(string, sizeof(string), "[π‹¿Ì]: %s Has Sent a MOLE Message. [Message: %s].", sendername, result);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Sent a MOLE Message: %s",d,m,y,h,mi,s,sendername,result);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(gTeam[i] >= 3 && gPlayerSpawned[i])
					{
						RingTone[i] = 20;
					}
				}
			}
			printf("MOLE: %s", result);
		}
		return 1;
	}
//----------------------------------[◊‹≤ø]-----------------------------------------------
	if(strcmp(cmd, "/hq", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(IsPlayerConnected(playerid))
	    {

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /hq [hq text]");
				return 1;
			}
			format(string, sizeof(string), "◊‹≤ø: %s, over", result);
			if (gTeam[playerid] != 2 ){SendClientMessage(playerid, COLOR_DBLUE, string);}
			SendTeamBeepMessage(2, COLOR_DBLUE, string);
			printf("◊‹≤ø: %s", result);
		}
		return 1;
	}
//----------------------------------[RECON]-----------------------------------------------
	if(strcmp(cmd, "/bigears", true) == 0 && PlayerInfo[playerid][pAdmin] >= 2)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        GetPlayerName(playerid, sendername,sizeof(sendername));
			if (!BigEar[playerid])
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Your Ears Have Grown");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s uses /bigears (Grown)",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
			else if (BigEar[playerid])
			{
				(BigEar[playerid] = 0);
				SendClientMessage(playerid, COLOR_GRAD2, "   Your Ears Have Shrank");
                new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Uses /bigears (Shrank)",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /id [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new target;
			target = ReturnUser(tmp);
			new sstring[64];
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(sstring, sizeof(sstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, sstring);
				}
			}
		}
		return 1;
	}
//-------------------------------[Logout]--------------------------------------------------------------------------
	if (strcmp(cmd, "/logout", true) ==0 )
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				OnPlayerUpdateEx(playerid);
				gPlayerLogged[playerid] = 0;
				SendClientMessage(playerid, COLOR_ORANGE, "** It is now safe to quit.");
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Logged Out.", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Logged Out",d,m,y,h,mi,s,sendername);
				LoginLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/logoutpl", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /logoutpl [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(giveplayerid)&&giveplayerid != INVALID_PLAYER_ID)
			    {
					OnPlayerUpdateEx(giveplayerid);
					gPlayerLogged[giveplayerid] = 0;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					format(string, sizeof(string), "You have Successfuly Logged Out %s (%d)!", giveplayer, giveplayerid);
					SendClientMessage(playerid, COLOR_ORANGE, string);
					format(string, sizeof(string), "[π‹¿Ì]: %s Has Logged Out To: %s (%d)!.", sendername, giveplayer, giveplayerid);
					ABroadCast(COLOR_LIGHTRED, string, 5);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Logged Out to %s",d,m,y,h,mi,s,sendername,giveplayer);
					LoginLog(string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}
//-------------------------------[Logoutall]--------------------------------------------------------------------------
	if (strcmp(cmd, "/logoutall", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						OnPlayerUpdateEx(i);
						gPlayerLogged[i] = 0;
					}
				}
				SendClientMessage(playerid, COLOR_ORANGE, "** You have Successfuly Logged out Everyone");
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Logged Out Everyone.", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Logged Everyone",d,m,y,h,mi,s,sendername);
				LoginLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}

	//----------------------------------[acnn]-----------------------------------------------
	if(strcmp(cmd, "/acnn", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /acnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}

				format(string, sizeof(string), "[π‹¿Ì]: %s Has Announced [%s].", sendername , result);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
      			GameTextForAll(string, 5000, 6);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave the Admin CNN: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

//----------------------------------[rcnn]-----------------------------------------------
	if(strcmp(cmd, "/rcnn", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /rcnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~y~Raven's Roleplay: ~w~%s",result);
				GameTextForAll(string,5000,6);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave the Rodrigo CNN: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	//----------------------------------[jcnn]-----------------------------------------------
	if(strcmp(cmd, "/ccnn", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ccnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~r~Chuck Norris: ~w~%s",result);
				GameTextForAll(string,5000,6);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave the Chuck's CNN: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	//----------------------------------[gcnn]-----------------------------------------------
	if(strcmp(cmd, "/gcnn", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /gcnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~p~God: ~w~%s",result);
				GameTextForAll(string,5000,6);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave the God CNN: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anews", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /anews [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}

				format(string, sizeof(string), "[π‹¿Ì]: %s Gave The News [%s].", sendername , result);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "~b~Breaking News: ~n~~w~%s",result);
				GameTextForAll(string, 5000, 6);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave the News: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	//----------------------------------[cnn]-----------------------------------------------
	if(strcmp(cmd, "/cnn", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /cnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}

				format(string, sizeof(string), "[π‹¿Ì]: %s Has CNN'd [%s]", sendername , result);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string,sizeof(string),"%s",(result));
				GameTextForAll(string,5000,6);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has CNN'd: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
//--------------------------------------------------------------------------------------
	if(strcmp(cmd, "/cnnn", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /cnnn <type> [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "You can not select 2");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /cnnn <type> [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}

				format(string, sizeof(string), "[π‹¿Ì]: %s Has CNNN'd [%s].", sendername , result);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string,sizeof(string),"%s",(result));
				GameTextForAll(string,5000,txtid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has CNNN'd: [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
//[π‹¿Ì]______________________________________________________________________________
//-----------------------------------[JAIL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/prison",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„Œﬁ»® π”√¥À√¸¡Ó !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /prison [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					format(string, sizeof(string), "* You placed %s in Fort DeMorgan.", giveplayer);
					SendClientMessage(playerid, COLOR_ORANGE, string);
					format(string, sizeof(string), "* You were placed in Fort DeMorgan by Admin %s.", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					PlayerInfo[giveplayerid][pJailed] = 2;
					PlayerInfo[giveplayerid][pJailTime] = 900;
					TextDrawShowForPlayer(giveplayerid, Textdraw1[giveplayerid]);
		            SafeSetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
					SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
					SafeSetPlayerInterior(giveplayerid,0);
					format(string, sizeof(string), "%s (%d), has been prisoned by %s.", giveplayer, giveplayerid, sendername);
					SendClientMessageToAll(COLOR_NICERED,string);
					format(string, 256, "[π‹¿Ì]: %s (%d), has been prisoned by %s.", giveplayer, giveplayerid, sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Prisoned to %s",d,m,y,h,mi,s,sendername,giveplayer);
					JailLog(string);
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/unprison",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /unprison [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					format(string, sizeof(string), "You unprisoned %s (%d).", giveplayer, giveplayerid);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "* You have been unprisoned by %s.", sendername);
					SendClientMessage(giveplayerid, COLOR_ORANGE, string);
					PlayerInfo[giveplayerid][pJailTime] = 0;
					PlayerInfo[giveplayerid][pJailed] = 0;
					TextDrawHideForPlayer(giveplayerid, Textdraw1[giveplayerid]);
					SetPlayerWorldBounds(giveplayerid, 20000.0000,-20000.0000,20000.0000,-20000.0000);
					SafeSetPlayerPos(giveplayerid, 93.4852,1920.6235,18.0450);
					format(string, sizeof(string), "%s (%d), has been unprisoned by %s.", giveplayer, giveplayerid, sendername);
					SendClientMessageToAll(COLOR_NICERED,string);
					format(string, 256, "[π‹¿Ì]: %s (%d), has been un-prisoned by %s.", giveplayer, giveplayerid, sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Removed %s From Prison.",d,m,y,h,mi,s,sendername,giveplayer);
					JailLog(string);
				}
			}
	    }
	    return 1;
	}

	if(strcmp(cmd, "/ajail", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ajail [ÕÊº“ID/ÕÊº“√˚◊÷] [time(minutes)] <reason>");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(playa != playerid && Untouchable[playa]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SafeResetPlayerWeapons(playa);
							WantedPoints[playa] = 0;
							SetPlayerColor(playa, TEAM_HIT_COLOR);
							PlayerInfo[playa][pJailed] = 1;
							PlayerInfo[playa][pJailTime] = money*60;
							SafeSetPlayerInterior(playa, 6);
							SafeSetPlayerPos(playa, 264.6288,77.5742,1001.0391);
							SetPlayerSkin(playa, 252);
							format(string, sizeof(string), "You are jailed by %s for %d minutes.", sendername, money);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							format(string, 256, "[π‹¿Ì]: %s (%d) has been jailed by %s [No Reason Given].", giveplayer, playa, sendername);
							SendAdminMessage(COLOR_LIGHTRED,string);
		                    format(string, sizeof(string), "You have Jailed %s (%d) For %d Minute(s).",giveplayer, playa, money);
		                    SendClientMessage(playerid,COLOR_LIGHTRED ,string);
		                    format(string, sizeof(string), "%s (%d), Has Been Jailed by %s for %d Minute(s)", giveplayer, playa, sendername, money);
		                    SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "~r~~h~Admin Jail: ~n~ ~n~~n~~n~~n~~n~~n~ ~y~Time: %d Minute(s)", money);
							GameTextForPlayer(playa, string, 6000, 3);
							PlayerInfo[playa][pDuty] = 0;
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been jailed by %s | Reason: None | Time: %d Mins |.",d,m,y,h,mi,s,giveplayer,sendername,money);
							JailLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Jailed by %s - Reason: None - Time: %d Mins.",d,m,y,h,mi,s,sendername,money);
							AddPunishment(playa, string);
							TextDrawShowForPlayer(playa, Textdraw1[playa]);
							//KillTimer(cufftimer[playa]);
							return 1;
						}
						SafeResetPlayerWeapons(playa);
						WantedPoints[playa] = 0;
						SetPlayerColor(playa, TEAM_HIT_COLOR);
						PlayerInfo[playa][pJailed] = 1;
						PlayerInfo[playa][pJailTime] = money*60;
						SafeSetPlayerInterior(playa, 6);
						SafeSetPlayerPos(playa, 264.6288,77.5742,1001.0391);
						SetPlayerSkin(playa, 252);
						format(string, sizeof(string), "You are jailed by %s for %d minutes.", sendername, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						format(string, 256, "[π‹¿Ì]: %s (%d) has been jailed by %s [Reason: %s].", giveplayer, playa, sendername, (result));
						SendAdminMessage(COLOR_LIGHTRED,string);
	                    format(string, sizeof(string), "You have Jailed %s (%d) For %d Minute(s).",giveplayer, playa, money);
	                    SendClientMessage(playerid,COLOR_LIGHTRED ,string);
	                    format(string, sizeof(string), "%s (%d), Has Been Jailed by %s for %d Minute(s)", giveplayer, playa, sendername, money);
	                    SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "~r~~h~Admin Jail: ~n~ ~n~~n~~n~~n~~n~~n~ ~y~Time: %d Minute(s)", money);
						GameTextForPlayer(playa, string, 6000, 3);
						PlayerInfo[playa][pDuty] = 0;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been jailed by %s | Reason: None | Time: %d Mins |.",d,m,y,h,mi,s,giveplayer,sendername,(result),money);
						JailLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] A-Jailed by %s - Reason: %s - Time: %d Mins.",d,m,y,h,mi,s,sendername,(result),money);
						AddPunishment(playa, string);
						TextDrawShowForPlayer(playa, Textdraw1[playa]);
						//KillTimer(cufftimer[playa]);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "* ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/fine", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /fine [ÕÊº“ID/ÕÊº“√˚◊÷] [money] <reason>");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SafeGivePlayerMoney(playa, - money);
							format(string, 256, "[π‹¿Ì]: %s (%d) has been fined $%d by %s [No Reason Given].", giveplayer, playa,money, sendername);
							SendAdminMessage(COLOR_LIGHTRED,string);
		                    format(string, sizeof(string), "You have Fined $%d to %s (%d), No Reason Given.",money, giveplayer, playa);
		                    SendClientMessage(playerid,COLOR_LIGHTRED ,string);
		                    format(string, sizeof(string), "%s (%d), Has Been Fined $%d by %s, No Reason Given", giveplayer, playa, money, sendername);
		                    SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "~r~~h~-Admin Fined- ~n~~n~~n~~n~~n~~n~~n~~y~No reason Given ~n~Money: ~g~$%d", money);
							GameTextForPlayer(playa, string, 7000, 3);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been fined by %s | Reason: None | Money: $%d |.",d,m,y,h,mi,s,giveplayer,sendername, money);
							PayLog(string);
							AdminLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Fined by %s - Reason: None - Money: $%d .",d,m,y,h,mi,s,sendername,money);
							AddPunishment(playa, string);
							return 1;
						}
						SafeGivePlayerMoney(playa, - money);
						format(string, 256, "[π‹¿Ì]: %s (%d) has been fined $%d by %s [Reason: %s].", giveplayer, playa,money, sendername, (result));
						SendAdminMessage(COLOR_LIGHTRED,string);
	                    format(string, sizeof(string), "You have Fined $%d to %s (%d) for: %s .",money, giveplayer, playa, (result));
	                    SendClientMessage(playerid,COLOR_LIGHTRED ,string);
	                    format(string, sizeof(string), "%s (%d), Has Been Fined $%d by %s for: %s", giveplayer, playa, money, sendername, (result));
	                    SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "~r~~h~-Admin Fined- ~n~~n~~n~~n~~n~~n~~n~~y~Reason: ~w~%s ~n~Money: ~g~$%d",(result), money);
						GameTextForPlayer(playa, string, 7000, 3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been fined by %s | Reason: %s | Money: $%d |.",d,m,y,h,mi,s,giveplayer,sendername,(result),money);
						PayLog(string);
						AdminLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Fined by %s - Reason: %s - Money: $%d.",d,m,y,h,mi,s,sendername,(result),money);
						AddPunishment(playa, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[TOD]-----------------------------------------------

	if(strcmp(cmd, "/tod", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /tod [timeofday] (0-23)");
				return 1;
			}
			new hour;
			hour = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
                if(hour < 0||hour > 23) { SendClientMessage(playerid, COLOR_GREY, "** Hour Can't go Below 0 or Above 23 !"); return 1; }
				SetWorldTime(hour);
				format(string, sizeof(string), "** Time set to [%d] Hours.", hour);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);

	            format(string, sizeof(string), "[π‹¿Ì]: %s Has Set the Time to: [%d].",sendername,hour);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "*** Time of the Day Has Been Changed to [%d]", hour);
				SendClientMessageToAll(TEAM_GROVE_COLOR,string);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set Everyone's Time to [%d]",d,m,y,h,mi,s,sendername,hour);
				GiveLog(string);
				AdminLog(string);
				LoginLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}

//----------------------------------[LOTTO]-----------------------------------------------

	if(strcmp(cmd, "/startlotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 5)
	        {

	            format(string, sizeof(string), "[π‹¿Ì]: %s Has Started the Lotto.",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "Lottery News: We have started the Lottery Election.");
	            OOCOff(COLOR_GREEN, string);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Started The Lotto.",d,m,y,h,mi,s,sendername);
				AdminLog(string);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó !");
	            return 1;
	        }
	    }
		return 1;
	}

	if(strcmp(cmd, "/forceanticheat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	        {

	            format(string, sizeof(string), "[π‹¿Ì]: %s Has Forced the ∑¥Õ‚π“ºÏ≤‚.",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				PeterAC();
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Forced The ∑¥Õ‚π“ºÏ≤‚.",d,m,y,h,mi,s,sendername);
				AdminLog(string);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó !");
	            return 1;
	        }
	    }
		return 1;
	}

	if(strcmp(cmd, "/startlottoex", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 5)
	        {

	            format(string, sizeof(string), "[π‹¿Ì]: %s Has Started the Lotto.",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "Lottery News: We have started the Lottery Election.");
	            SendClientMessageToAll(COLOR_GREEN, string);
	            GameTextForAll("~y~Lotto Rolling.....",12000,0);
	            SetTimer("StartLotto", 12000,false);
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Started The Lotto.",d,m,y,h,mi,s,sendername);
				AdminLog(string);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó.");
	            return 1;
	        }
	    }
		return 1;
	}

	if(strcmp(cmd, "/setjackpot", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 6)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GREY, "”√∑®: /setjackpot [money]");
					return 1;
				}
				new money = strval(tmp);
				if(money < 1 && PlayerInfo[playerid][pAdmin] < 1337) return SendClientMessage(playerid, COLOR_GREY, "** Payday can't be below 1");
				if(PlayerInfo[playerid][pAdmin] == 6 && money > 1250000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $1250000");
				if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 15000000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $15000000");
				format(string, sizeof(string), "[π‹¿Ì]: %s Has set the Lotto Jackpot to %d.",sendername, money);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "Lottery News: Our New Jackpot is $%d.", money);
	            OOCOff(COLOR_GREEN, string);
	            Jackpot = money;
	            SaveStuff();
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set the lotto Jackpot to %d.",d,m,y,h,mi,s,sendername, money);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setmats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 6)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GREY, "”√∑®: /setmats [mats]");
					return 1;
				}
				new money = strval(tmp);
				if(money < 0 || money > 2500000) { SendClientMessage(playerid, COLOR_GREY, "* Mats may not go above 2500000 and Below 0!"); return 1; }
	            format(string, sizeof(string), "[π‹¿Ì]: %s Has set the Mats Bank amount to %d.",sendername, money);
				ABroadCast(COLOR_LIGHTRED,string, 5);
	            matssys[MatsAmmount] = money;
				SaveMatsSystem();
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set the Mats Bank amount to %d.",d,m,y,h,mi,s,sendername, money);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setdrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 6)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GREY, "”√∑®: /setdrugs [mats]");
					return 1;
				}
				new money = strval(tmp);
				if(money < 0 || money > 2500000) { SendClientMessage(playerid, COLOR_GREY, "* Mats may not go above 2500000 and Below 0!"); return 1; }
	            format(string, sizeof(string), "[π‹¿Ì]: %s Has set the Drugs Bank amount to %d.",sendername, money);
				ABroadCast(COLOR_LIGHTRED,string, 5);
	            drugsys[DrugAmmount] = money;
				SaveDrugSystem();
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set the Drugs Bank Amount to %d.",d,m,y,h,mi,s,sendername, money);
				AdminLog(string);
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/setlotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GREY, "”√∑®: /setlotto [number]");
					return 1;
				}
				new money = strval(tmp);
				if(money < 0 || money > 80) { SendClientMessage(playerid, COLOR_GREY, "* Jackpot may not go above $2500000 and Below $0!"); return 1; }

	            format(string, sizeof(string), "[π‹¿Ì]: %s Has started the lotto.",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
	            Lotto(money);
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Started the lotto with number: %d.",d,m,y,h,mi,s,sendername, money);
				AdminLog(string);
			}
		}
		return 1;
	}

    if(strcmp(cmd, "/lottoann", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 5)
	        {
	            format(string, sizeof(string), "~y~Lotto Time!! ~n~~w~Select Your Number ~n~~p~/lotto 1-80 ~g~($100) ~n~~r~Prize: ~g~$%d", Jackpot);
                if(TD3D == 1)
			    {
                    KillTimer(HideTD4Timer);
			        TextDrawHideForAll(TD3);
			        TextDrawSetString(TD3, string);
			        TextDrawShowForAll(TD3);
			        HideTD4Timer = SetTimer("HideTD4", 6000, false);
				}
				else
				{
	                TextDrawSetString(TD3, string);
				    TextDrawShowForAll(TD3);
				    TD3D = 1;
				    HideTD4Timer = SetTimer("HideTD4", 6000, false);
				}
             	format(string, sizeof(string), "[π‹¿Ì]: %s Has Sent the Lotto Announcement.",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has sent the Lotto Announcement.",d,m,y,h,mi,s,sendername);
				AdminLog(string);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó.");
	            return 1;
	        }
	    }
		return 1;
	}

	if(strcmp(cmd, "/lottosay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 5)
	        {
	            format(string, sizeof(string), "[π‹¿Ì]: %s Has Sent the Lotto Announcement.",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "Raven's Roleplay Lottery:     Lotto Time!!    Select Your Number  /lotto 1-80 ($100)    Prize: $%d", Jackpot);
             	SendClientMessageToAll(COLOR_GREEN, string);
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has sent the Lotto Message.",d,m,y,h,mi,s,sendername);
				AdminLog(string);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó.");
	            return 1;
	        }
	    }
		return 1;
	}


	if(strcmp(cmd, "/spayday", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            PayDay();
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/setweapskill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setweapskill [ÕÊº“ID/ÕÊº“√˚◊÷] [weapon] [ ˝¡ø]");
				SendClientMessage(playerid, COLOR_GREY, "| 1 Colt45 | 2 Silenced | 3 Deagle | 4 Shotgun | 5 Sawn-Off |");
				SendClientMessage(playerid, COLOR_GREY, "| 6 Combat | 7 Tec9/Mac10 | 8 SMG | 9 AK47 | 10 M4 |");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setweapskill [ÕÊº“ID/ÕÊº“√˚◊÷] [weapon] [ ˝¡ø]");
						SendClientMessage(playerid, COLOR_GREY, "| 1 Colt45 | 2 Silenced | 3 Deagle | 4 Shotgun | 5 Sawn-Off |");
						SendClientMessage(playerid, COLOR_GREY, "| 6 Combat | 7 Tec9/Mac10 | 8 SMG | 9 AK47 | 10 M4 |");
						return 1;
					}
					new weapon;
					weapon = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setweapskill [ÕÊº“ID/ÕÊº“√˚◊÷] [weapon] [ ˝¡ø]");
						SendClientMessage(playerid, COLOR_GREY, "| 1 Colt45 | 2 Silenced | 3 Deagle | 4 Shotgun | 5 Sawn-Off |");
						SendClientMessage(playerid, COLOR_GREY, "| 6 Combat | 7 Tec9/Mac10 | 8 SMG | 9 AK47 | 10 M4 |");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
						switch (weapon)
						{
							case 1:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pPistSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, amount);
								format(string, sizeof(string), "** The player's Colt45 Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Colt45 Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Colt45 Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 2:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pSilenSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, amount);
								format(string, sizeof(string), "** The player's Silenced Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Silenced Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Silenced Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 3:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pDesertSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, amount);
								format(string, sizeof(string), "** The player's Deagle Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Deagle Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Deagle Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 4:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pShotgSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, amount);
								format(string, sizeof(string), "** The player's Shotgun Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Shotgun Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Shotgun Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 5:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pSawnSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, amount);
								format(string, sizeof(string), "** The player's Sawn-Off Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Sawn-Off Level To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Sawn-Off Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 6:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pCombSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, amount);
								format(string, sizeof(string), "** The player's ¡¨…‰…¢µØ«π Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) ¡¨…‰…¢µØ«π Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Combat Shotgun Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 7:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pUziSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, amount);
								format(string, sizeof(string), "** The player's MAC10/TEC9 Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) MAC10/TEC9 Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's MAC10/TEC9 Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 8:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pSmgSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, amount);
								format(string, sizeof(string), "** The player's MP5 Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) MP5 Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's MP5 Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 9:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pAkSkill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, amount);
								format(string, sizeof(string), "** The player's AK47 Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) AK47 Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's AK47 Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 10:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pM4Skill] = amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, amount);
								format(string, sizeof(string), "** The player's M4A4 Skill was set to %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) M4A4 Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's M4A4 Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							default:
							{
								format(string, sizeof(string), "** Invalid Stat Code", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
							}

						}
						//SendClientMesasge(playerid, COLOR_ORANGE,string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}
	
	if(strcmp(cmd, "/giveweapskill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /giveweapskill [ÕÊº“ID/ÕÊº“√˚◊÷] [weapon] [amount]");
				SendClientMessage(playerid, COLOR_GREY, "| 1 Colt45 | 2 Silenced | 3 Deagle | 4 Shotgun | 5 Sawn-Off |");
				SendClientMessage(playerid, COLOR_GREY, "| 6 Combat | 7 Tec9/Mac10 | 8 SMG | 9 AK47 | 10 M4 |");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /giveweapskill [ÕÊº“ID/ÕÊº“√˚◊÷] [weapon] [amount]");
						SendClientMessage(playerid, COLOR_GREY, "| 1 Colt45 | 2 Silenced | 3 Deagle | 4 Shotgun | 5 Sawn-Off |");
						SendClientMessage(playerid, COLOR_GREY, "| 6 Combat | 7 Tec9/Mac10 | 8 SMG | 9 AK47 | 10 M4 |");
						return 1;
					}
					new weapon;
					weapon = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /giveweapskill [ÕÊº“ID/ÕÊº“√˚◊÷] [weapon] [amount]");
						SendClientMessage(playerid, COLOR_GREY, "| 1 Colt45 | 2 Silenced | 3 Deagle | 4 Shotgun | 5 Sawn-Off |");
						SendClientMessage(playerid, COLOR_GREY, "| 6 Combat | 7 Tec9/Mac10 | 8 SMG | 9 AK47 | 10 M4 |");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
						switch (weapon)
						{
							case 1:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pPistSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, amount);
								format(string, sizeof(string), "** The player's Colt45 Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d Colt45 Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for Colt45",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 2:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pSilenSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, amount);
								format(string, sizeof(string), "** The player's Silenced Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d Silenced Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for Silenced",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 3:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pDesertSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, amount);
								format(string, sizeof(string), "** The player's Deagle Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d Deagle Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for Deagle",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 4:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pShotgSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, amount);
								format(string, sizeof(string), "** The player's Shotgun Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d Shotgun Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for Shotgun",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 5:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pSawnSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, amount);
								format(string, sizeof(string), "** The player's Sawn-Off Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d Sawn Off Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for SAWNOFF",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 6:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pCombSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, amount);
								format(string, sizeof(string), "** The player's ¡¨…‰…¢µØ«π Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d Combat Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for Combat Shotgun",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 7:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pUziSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, amount);
								format(string, sizeof(string), "** The player's MAC10/TEC9 Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d MAC10/TEC9 Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for TEC9/MAC10",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 8:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pSmgSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, amount);
								format(string, sizeof(string), "** The player's MP5 Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d MP5 Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for MP5",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 9:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pAkSkill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, amount);
								format(string, sizeof(string), "** The player's AK47 Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d AK47 Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for AK47",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							case 10:
							{
							    if(amount < 0 || amount > 1000) { SendClientMessage(playerid, COLOR_GREY, "* Skill may not go Above 1000 And Below 0!"); return 1; }
								PlayerInfo[giveplayerid][pM4Skill] += amount;
								SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, amount);
								format(string, sizeof(string), "** The player's M4A4 Skill Has been increased by %d points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Gave to %s (%d) %d M4 Skillpoints.",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave To %s's %d Skillpoints for M4",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
								SetPlayerSkills(giveplayerid);
							}
							default:
							{
								format(string, sizeof(string), "** Invalid Stat Code", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
							}

						}
						//SendClientMesasge(playerid, COLOR_ORANGE,string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}

//-----------------------------------editstat---------------------------------------
	if(strcmp(cmd, "/setstat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setstat [ÕÊº“ID/ÕÊº“√˚◊÷] [statcode] [amount]");
				SendClientMessage(playerid, COLOR_GREY, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model |5 BankAccount");
				SendClientMessage(playerid, COLOR_GREY, "|6 µÁª∞∫≈¬Î |7 RespectPoints |8 HouseKey |9 BizKey |10 RegularRank");
				SendClientMessage(playerid, COLOR_GREY, "|11 FMember |12 Det |13 ¬… ¶ |14 Fixer |15 News |16 Jack |17 Drug");
				SendClientMessage(playerid, COLOR_GREY, "|18 Sex |19 Box |20 VehKey | 21 VehKey2 | 22 Job | 23 Contract Time | 24 GPS ");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setstat [ÕÊº“ID/ÕÊº“√˚◊÷] [statcode] [amount]");
						SendClientMessage(playerid, COLOR_GREY, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model |5 BankAccount");
						SendClientMessage(playerid, COLOR_GREY, "|6 µÁª∞∫≈¬Î |7 RespectPoints |8 HouseKey |9 BizKey |10 RegularRank");
						SendClientMessage(playerid, COLOR_GREY, "|11 FMember |12 Det |13 ¬… ¶ |14 Fixer |15 News |16 Jack |17 Drug");
						SendClientMessage(playerid, COLOR_GREY, "|18 Sex |19 Box |20 VehKey | 21 VehKey2 | 22 Job | 23 Contract Time | 24 GPS ");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /setstat [ÕÊº“ID/ÕÊº“√˚◊÷] [statcode] [amount]");
						SendClientMessage(playerid, COLOR_GREY, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model |5 BankAccount");
						SendClientMessage(playerid, COLOR_GREY, "|6 µÁª∞∫≈¬Î |7 RespectPoints |8 HouseKey |9 BizKey |10 RegularRank");
						SendClientMessage(playerid, COLOR_GREY, "|11 FMember |12 Det |13 ¬… ¶ |14 Fixer |15 News |16 Jack |17 Drug");
						SendClientMessage(playerid, COLOR_GREY, "|18 Sex |19 Box |20 VehKey | 21 VehKey2 | 22 Job | 23 Contract Time | 24 GPS ");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 6)
					{
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "** The Player Was Set To Level %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Level To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Level to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pSHealth] = amount;
								format(string, sizeof(string), "** The Player Was Set To %d Spawnhealth ", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Spawn Health To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Spawn Health to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = amount;
								format(string, sizeof(string), "** The Player Was Set To %d Upgrade Points", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Upgrade Points To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Upgrade Points to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pModel] = amount;
								format(string, sizeof(string), "** The Player Was Set To Model %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Model To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Model to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pAccount] = amount;
								format(string, sizeof(string), "** The Player Account Was Set To $%d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Bank Money To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Bank Money to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = amount;
								format(string, sizeof(string), "** The Player Phone Number Was Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Phone Nr. To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Phone Number to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "** The Player Respect Points Were Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Respect Points To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Respect Points to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPhousekey] = amount;
								format(string, sizeof(string), "** The Player House Key Was Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) House Key To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's House Key to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = amount;
								format(string, sizeof(string), "** The Player Business Key Was Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Bizz Key To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Biz Key to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 10:
							{
								PlayerInfo[giveplayerid][pRegularRank] = amount;
								format(string, sizeof(string), "** The Player RegularPlayer Rank Was Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) RegularPlayer Rank To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's ≥£øÕ≈≈√˚ to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 11:
							{
								PlayerInfo[giveplayerid][pFMember] = amount;
								format(string, sizeof(string), "** The Player Family Member Was Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Family Number To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Family Number to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pDetSkill] = amount;
								format(string, sizeof(string), "** The Player ’ÏÃΩ Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) ’ÏÃΩ Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's ’ÏÃΩ Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pLawSkill] = amount;
								format(string, sizeof(string), "** The Player ¬… ¶ Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) ¬… ¶ Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's ¬… ¶ Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);

							}
							case 14:
							{
								PlayerInfo[giveplayerid][pMechSkill] = amount;
								format(string, sizeof(string), "** The Player ∆˚≥µ–ﬁ¿Ìπ§ Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) ∆˚≥µ–ﬁ¿Ìπ§ Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's ∆˚≥µ–ﬁ¿Ìπ§ Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = amount;
								format(string, sizeof(string), "** The Player News Reporter Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Reporter Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Reporter Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 16:
							{
								PlayerInfo[giveplayerid][pJackSkill] = amount;
								format(string, sizeof(string), "** The Player Õµ≥µ‘Ù Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Jacker Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Jacker Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pDrugsSkill] = amount;
								format(string, sizeof(string), "** The Player ∂æ∑∑ Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) ∂æ∑∑ Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's ∂æ∑∑ Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pSexSkill] = amount;
								format(string, sizeof(string), "** The Player Sex Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Sex Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Sex Skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = amount;
								format(string, sizeof(string), "** The Player Box Skill Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Box Skill To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Boxing skill to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 20:
							{
							    PlayerInfo[giveplayerid][pPcarkey] = amount;
							    format(string, sizeof(string), "** The Player VehKey Set To %d", amount);
							    SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Veh Keyl1 To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Vehicle 1 Key to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 21:
							{
							    PlayerInfo[giveplayerid][pPcarkey2] = amount;
							    format(string, sizeof(string), "** The Player VehKey2 Set To %d", amount);
							    SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Veh Key2 To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string,3);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Vehicle 2 Key to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 22:
							{
								PlayerInfo[giveplayerid][pJob] = amount;
								format(string, sizeof(string), "** The Player Job Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);

      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Job To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Job to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 23:
							{
								PlayerInfo[giveplayerid][pContractTime] = amount;
								format(string, sizeof(string), "** The Player Job Contract Time Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
      							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) Contract Time To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Contract Time to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							case 24:
							{
								PlayerInfo[giveplayerid][pGPS] = amount;
								format(string, sizeof(string), "** The Player GPS Own was Set To %d", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s (%d) GPS ownership To [%d].",sendername,giveplayer,giveplayerid,amount);
								ABroadCast(COLOR_LIGHTRED,string, 5);
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's GPS ownership Time to %d",d,m,y,h,mi,s,sendername,giveplayer,amount);
								GiveLog(string);
							}
							default:
							{
								format(string, sizeof(string), "** Invalid Stat Code", amount);
								SendClientMessage(playerid, COLOR_ORANGE,string);
							}

						}
						//SendClientMesasge(playerid, COLOR_ORANGE,string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}
	if(strcmp(cmd, "/setfamily", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
				return 1;
			}
			new family;
			family = strval(tmp);
			if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
			family -= 1;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
				return 1;
			}
			new stat;
			stat = strval(tmp);
			if(stat < 1 || stat > 1) { SendClientMessage(playerid, COLOR_GREY, "   Stat Code can't be below 1 or above 1 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
				return 1;
			}
			new amount;
			amount = strval(tmp);
			if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Amount can't be below 1 or above 10 !"); return 1; }
			switch (stat)
			{
			    case 1:
			    {
					FamilyInfo[family][FamilyMembers] = amount;
					format(string, sizeof(string), "   Family %s set to %d members", FamilyInfo[family][FamilyName], amount);
			    }
			    default:
			    {
			    	format(string, sizeof(string), "   Invalid Stat Code");
			    }
			}
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setint [ÕÊº“ID/ÕÊº“√˚◊÷] [interiorid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			new intid;
			tmp = strtok(cmdtext, idx);
			intid = strvalEx(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
      					if(GetPlayerState(playa) == 2)
						{
	   						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							SafeSetPlayerInterior(playa, intid);
							new vehicleid = GetPlayerVehicleID(playa);
							LinkVehicleToInterior(vehicleid, GetPlayerInterior(playa));
							format(string, sizeof(string), "** You have set %s's (%d) Interior to %d.", giveplayer,playa, intid);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "~w~Admin %s ~n~~w~Has Set Your Interior to ~y~(%d)", sendername, intid);
							GameTextForPlayer(playa, string, 4000, 3);
							format(string, sizeof(string), "[π‹¿Ì]: %s has set %s's (%d) interior to %d.",sendername,giveplayer,playa,intid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Interior to %d",d,m,y,h,mi,s,sendername,giveplayer,intid);
							GiveLog(string);
						}
						else
						{
	    				GetPlayerName(playa, giveplayer, sizeof(giveplayer));

						SafeSetPlayerInterior(playa, intid);
						format(string, sizeof(string), "** You have set %s's (%d) interior to %d.", giveplayer,playa, intid);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "~w~Admin %s ~n~~w~Has Set Your Interior to ~y~(%d)", sendername, intid);
						GameTextForPlayer(playa, string, 4000, 3);
						format(string, sizeof(string), "[π‹¿Ì]: %s has set %s's (%d) interior to %d",sendername,giveplayer,playa,intid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Interior to %d",d,m,y,h,mi,s,sendername,giveplayer,intid);
						GiveLog(string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[SETVW]-----------------------------------------------
 	if(strcmp(cmd, "/setvw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setvw [ÕÊº“ID/ÕÊº“√˚◊÷] [virworldid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			new virid;
			tmp = strtok(cmdtext, idx);
			virid = strvalEx(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
      					if(GetPlayerState(playa) == 2)
						{
	   						GetPlayerName(playa, giveplayer, sizeof(giveplayer));

							SetPlayerVirtualWorld(playa, virid);
							PlayerInfo[playa][pVirWorld] = virid;
							new vehicleid = GetPlayerVehicleID(playa);
							SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playa));
							format(string, sizeof(string), "** You have set %s's (%d) virtual world to %d.", giveplayer,playa, virid);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "~w~Admin %s ~n~~w~Has Set Your Virtual World to ~y~(%d)", sendername, virid);
							GameTextForPlayer(playa, string, 4000, 3);
							format(string, sizeof(string), "[π‹¿Ì]: %s has set %s's (%d) world to %d.",sendername,giveplayer,playa,virid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's World to %d",d,m,y,h,mi,s,sendername,giveplayer,virid);
							GiveLog(string);
						}
						else
						{
				    		GetPlayerName(playa, giveplayer, sizeof(giveplayer));

							SetPlayerVirtualWorld(playa, virid);
							PlayerInfo[playa][pVirWorld] = virid;
							format(string, sizeof(string), "  You have set %s's (%d) virtual world to %d.", giveplayer,playa, virid);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "~w~Admin %s ~n~~w~Has Set Your Virtual World to ~y~(%d)", sendername, virid);
							GameTextForPlayer(playa, string, 4000, 3);
							format(string, sizeof(string), "[π‹¿Ì]: %s has set %s's (%d) world to %d.",sendername,giveplayer,playa,virid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's World to %d",d,m,y,h,mi,s,sendername,giveplayer,virid);
							GiveLog(string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[SKYDIVE]------------------------------------------------
	if(strcmp(cmd, "/skydive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				GetPlayerPos(playerid, rx, ry, rz);
				if (IsPlayerConnected(playerid))
				{
					SafeGivePlayerWeapon(playerid, 46, 0);
					SafeSetPlayerPos(playerid,rx, ry, rz+1500);
					SendClientMessage(playerid, COLOR_WHITE, "GO!! GO!! GO!!");

					format(string, sizeof(string), "[π‹¿Ì]: %s Has Sky-Dived", sendername);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has SkyDived",d,m,y,h,mi,s,sendername);
					AdminLog(string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[FOURDIVE]------------------------------------------------
	if(strcmp(cmd, "/fourdive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /fourdive [playerid1] [playerid2] [playerid3] [playerid4]");
				return 1;
			}
			new para1;
			new para2;
			new para3;
			new para4;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para4 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (IsPlayerConnected(para1)){ SafeGivePlayerWeapon(para1, 46, 0); SafeSetPlayerPos(para1,1536.0, -1360.0, 1350.0);SafeSetPlayerInterior(para1,0);SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para2)) && (para2>0)) { SafeGivePlayerWeapon(para2, 46, 0); SafeSetPlayerPos(para2,1536.0, -1345.0, 1350.0);SafeSetPlayerInterior(para2,0);SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para3)) && (para3>0)) { SafeGivePlayerWeapon(para3, 46, 0); SafeSetPlayerPos(para3,1552.0, -1345.0, 1350.0);SafeSetPlayerInterior(para3,0);SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para4)) && (para4>0)) { SafeGivePlayerWeapon(para4, 46, 0); SafeSetPlayerPos(para4,1552.0, -1360.0, 1350.0);SafeSetPlayerInterior(para4,0);SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");}

				format(string, sizeof(string), "[π‹¿Ì]: %s Has Four Skydived to: %s, %s, %s and %s", sendername, para1, para2, para3, para4);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Four-Skydived to %s,%s,%s and %s",d,m,y,h,mi,s,sendername,para1,para2,para3,para4);
				AdminLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[INVITE]------------------------------------------------
	if(strcmp(cmd, "/invite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /invite [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new para1;
			new ftext[20];
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (gTeam[para1]==TEAM_GREEN && PlayerInfo[para1][pMember] == 0 && PlayerInfo[para1][pFMember] == 255)
					    {
					        if(PlayerInfo[playerid][pLeader] == 1) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "æØ≤Ïæ÷"; ChosenSkin[para1] = 267; SetPlayerSkin(para1, 267); }
					        else if(PlayerInfo[playerid][pLeader] == 2) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "FBI"; ChosenSkin[para1] = 286; SetPlayerSkin(para1, 286); }
					        else if(PlayerInfo[playerid][pLeader] == 3) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "π˙√ÒæØŒ¿∂”"; ChosenSkin[para1] = 287; SetPlayerSkin(para1, 287); }
					        else if(PlayerInfo[playerid][pLeader] == 4) { PlayerInfo[para1][pTeam] = 1; gTeam[para1] = 1; ftext = "Firemen/Ambulance"; ChosenSkin[para1] = 70; SetPlayerSkin(para1, 70); }
					        else if(PlayerInfo[playerid][pLeader] == 5) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "»˝∫œª·"; ChosenSkin[para1] = 116; SetPlayerSkin(para1, 116); }
					        else if(PlayerInfo[playerid][pLeader] == 6) { PlayerInfo[para1][pTeam] = 6; gTeam[para1] = 6; ftext = "La Famiglia Sinatra"; ChosenSkin[para1] = 125; SetPlayerSkin(para1, 125); }
					        else if(PlayerInfo[playerid][pLeader] == 7) { return 1; }
					        else if(PlayerInfo[playerid][pLeader] == 8) { PlayerInfo[para1][pTeam] = 10; gTeam[para1] = 12; ftext = "…± ÷ª˙ππ"; ChosenSkin[para1] = 249; SetPlayerSkin(para1, 249); }
					        else if(PlayerInfo[playerid][pLeader] == 9) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "ABC Studio"; ChosenSkin[para1] = 148; SetPlayerSkin(para1, 148); }
					        else if(PlayerInfo[playerid][pLeader] == 10) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "Taxi Cab Company"; ChosenSkin[para1] = 255; SetPlayerSkin(para1, 255); }
					        else if(PlayerInfo[playerid][pLeader] == 11) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "School Instructors"; ChosenSkin[para1] = 59; SetPlayerSkin(para1, 59); }
					        else if(PlayerInfo[playerid][pLeader] == 14) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Yamaguchi"; ChosenSkin[para1] = 169; SetPlayerSkin(para1, 169); }
					        else if(PlayerInfo[playerid][pLeader] == 15) { PlayerInfo[para1][pTeam] = 15; gTeam[para1] = 15; ftext = "¥Û»¶∞Ô"; ChosenSkin[para1] = 258; SetPlayerSkin(para1, 258); }
					        else if(PlayerInfo[playerid][pLeader] == 16) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "La Vice"; ChosenSkin[para1] = 143; SetPlayerSkin(para1, 143); }
					        else { return 1; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));

							PlayerInfo[para1][pMember] = PlayerInfo[playerid][pLeader];
							PlayerInfo[para1][pRank] = 1;
							printf("AdmCmd: %s has invited %s to join %s.", sendername, giveplayer, ftext);
							format(string, sizeof(string), "   ƒ„±ª◊È÷Ø¡Ïµº’ﬂº”»Î¡À %s, ◊È÷Ø¡Ïµº’ﬂ « %s", ftext, sendername);
							SendClientMessage(para1, COLOR_WHITE, string);
							format(string, sizeof(string), "   ƒ„—˚«Î¡À %s º”»Î¡À %s.", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, " ’‚∏ˆÕÊº““—æ≠”–◊È÷Ø¡À.");
						    return 1;
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó(leaders only)!");
			}
		}
		return 1;
	}
//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /uninvite [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if(PlayerInfo[playerid][pLeader] == 1 && PlayerInfo[para1][pMember] != 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 2 && PlayerInfo[para1][pMember] != 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 3 && PlayerInfo[para1][pMember] != 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 4 && PlayerInfo[para1][pMember] != 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 5 && PlayerInfo[para1][pMember] != 5)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 6 && PlayerInfo[para1][pMember] != 6)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 7 && PlayerInfo[para1][pMember] != 7)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 8 && PlayerInfo[para1][pMember] != 8)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 9 && PlayerInfo[para1][pMember] != 9)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			/*if(PlayerInfo[playerid][pLeader] == 10 && PlayerInfo[para1][pMember] != 10)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}*/
			/*if(PlayerInfo[playerid][pLeader] == 11 && PlayerInfo[para1][pMember] != 11)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}*/
			if(PlayerInfo[playerid][pLeader] == 12 && PlayerInfo[para1][pMember] != 12)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 13 && PlayerInfo[para1][pMember] != 13)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 14 && PlayerInfo[para1][pMember] != 14)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 15 && PlayerInfo[para1][pMember] != 15)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 16 && PlayerInfo[para1][pMember] != 16)
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯!");
				return 1;
			}
			if (PlayerInfo[playerid][pLeader] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMember] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));

							printf("AdmCmd: %s has uninvited %s.", sendername, giveplayer);
							format(string, sizeof(string), "* ƒ„“—æ≠±ªÃﬂ≥ˆ¡À◊È÷Ø, ”…¡Ïµº %s.", sendername);
							SendClientMessage(para1, COLOR_WHITE, string);
							SendClientMessage(para1, COLOR_WHITE, "* ƒ„œ÷‘⁄Õ—¿Î¡À◊È÷Ø.");
			                gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pChar] = 0;
							new rand = random(sizeof(CIV));
							SetSpawnInfo(para1, gTeam[para1], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
							PlayerInfo[para1][pModel] = CIV[rand];
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "** ƒ„¥”◊È÷ØÃﬂ≥ˆ¡À %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó(Leaders only)!");
			}
		}
		return 1;
	}
//----------------------------------[MAKEADMIN]------------------------------------------------
	if(strcmp(cmd, "/setadminlevel", true) == 0 || strcmp(cmd, "/sal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /[s]et[a]dmin[l]evel [ÕÊº“ID/ÕÊº“√˚◊÷] [level(1-1338)]");
				return 1;
			}
			new para1;
			new level;
			new playerlevel;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			playerlevel = PlayerInfo[para1][pAdmin];
			if(PlayerInfo[playerid][pAdmin] >= 1337 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
 						if(level == playerlevel)
						{
							SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº““—æ≠ «’‚∏ˆÀÆ∆Ω¡À");
							return 1;
						}
						if(level >= 7 && level <= 1336) return SendClientMessage(playerid, COLOR_GREY,"* π‹¿Ìµ»º∂÷ªƒ‹ «0-6∫Õ1337-1338!");
						if(level < 0 || level > 1338) return SendClientMessage(playerid, COLOR_GREY,"* π‹¿Ìµ»º∂÷ªƒ‹ «0-6∫Õ1337-1338!");
						if(level > 4 && PlayerInfo[playerid][pAdmin] == 1337) return SendClientMessage(playerid, COLOR_GREY, "ƒ„÷ªƒ‹Ã·…˝4º∂π‹¿Ì“‘œ¬µƒÕÊº“");
						if(playerlevel >= 5 && PlayerInfo[playerid][pAdmin] == 1337) return SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªƒ‹Ωµº∂÷˜“™µƒπ‹¿Ì»À‘±.");
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						new Float:X, Float:Y, Float:Z;
						GetPlayerPos(para1, X,Y,Z);
						format(string, sizeof(string),"[π‹¿Ì]: %s …Ë÷√ %s (%d) π‹¿Ìµ»º∂: [%d]", sendername, giveplayer, para1, level);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						format(string, sizeof(string), "** %s ∏¯ƒ„π‹¿Ìµ»º∂: %d",sendername, level);
						SendClientMessage(para1, TEAM_GROVE_COLOR, string);
						if(level > PlayerInfo[para1][pAdmin])
						{
							format(string, sizeof(string), "πßœ≤ƒ„ %s. ƒ„œ÷‘⁄µƒµ»º∂ «: %d π‹¿Ì‘± !!!!",giveplayer, level);
							SendClientMessageToAll(COLOR_LIGHTBLUE, string);
                            PlayerPlaySound(para1, 1056, X, Y, Z);
                            GameTextForPlayer(para1, "~y~Promoted!",7500,3);
                            format(string, sizeof(string), "** ƒ„Ã·…˝ %s (%d) µƒπ‹¿Ìµ»º∂Œ™ %d.", giveplayer, para1, level);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
							PlayerInfo[para1][pAdmin] = level;
							PlayerInfo[para1][pHelper] = 3;
							if(playerlevel == 0 && level >= 1)
							{
							    admins ++;
							}
						}
						else
						{
                            PlayerPlaySound(para1, 1055, X, Y, Z);
                            GameTextForPlayer(para1, "~r~Demoted!",7500,3);
                            format(string, sizeof(string), "** ƒ„Ωµº∂ %s (%d) µƒπ‹¿Ìµ»º∂Œ™ %d..", giveplayer, para1, level);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
							PlayerInfo[para1][pAdmin] = level;
       						if(level == 0)
							{
								PlayerInfo[para1][pHelper] = 1;
								admins --;
							}
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave to %s Admin Level: [%d].",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						ChatLog(string);
						LoginLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entered", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: House Entered %d - Bizz Entered %d", HouseEntered[playerid],BizzEntered[playerid]);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	
	if(strcmp(cmd, "/sethousesss", true) == 0)
	{
	    for(new i = 0; i < sizeof(BizzInfo); i++)
	    {
			format(string, sizeof(string),"LARP/Bizzes/%d.ini",i)
			if(dini_Exists(string))
			{
			    dini_IntSet(string, "Setted",1);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/rhinos", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Number of Rhinos: %d", Rhinos);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/hydras", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Number of Hydras: %d", Hydras);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/hunters", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Number of Hunters: %d", Hunters);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/predators", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Number of Predators: %d", Predators);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/cadmins", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Number of Admens: %d", admins);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/legalmoney", true) == 0)
	{
	    SafeGivePlayerMoney(playerid, 1);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "[µ˜ ‘]: You were given with 1$ 'Legal' Money");
		return 1;
	}
	if(strcmp(cmd, "/enginecar", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Your current CanTurnEngine Variable is %d!",CanTurnEngine[playerid]);
	    SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
		return 1;
	}
	if(strcmp(cmd, "/hackedmoney", true) == 0)
	{
	    GivePlayerMoney(playerid, 1);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "[µ˜ ‘]: You were given with 1$ 'Hacked' Money");
		return 1;
	}
	if(strcmp(cmd, "/smoney", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Your Script Money is %d", ScriptMoney[playerid]);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}

	if(strcmp(cmd, "/regularcount", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Your Regular Count is %d", PlayerInfo[playerid][pRegularCount]);
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/world", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Your Virtual World is %d", GetPlayerVirtualWorld(playerid));
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/interior", true) == 0)
	{
	    format(string, sizeof(string),"[µ˜ ‘]: Your Interior is %d", GetPlayerInterior(playerid));
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/model", true) == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    format(string, sizeof(string),"[µ˜ ‘]: Your Vehicle Model is %d", GetVehicleModel(GetPlayerVehicleID(playerid)));
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, string);
			return 1;
		}
	}
	
	if(strcmp(cmd, "/cardebug", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1337)
	    {
	        if(cDebug == 1)
	        {
	            cDebug = 0;
				SendClientMessage(playerid, COLOR_LIGHT_BLUE, "[µ˜ ‘]: Car Debug mode is now Off");
			}
			else
			{
			    cDebug = 1;
				SendClientMessage(playerid, COLOR_LIGHT_BLUE, "[µ˜ ‘]: Car Debug mode is now On");
			}
			return 1;
		}
	}
	
	if (strcmp(cmd, "/scriptweapons", true) == 0) // Moddded By CuervO_NegrO
	{
	    for(new i = 0; i < 13; i++)
	    {
	        new weapon[24];
			GetWeaponName(ScriptWeapons[playerid][i],weapon,24);
			format(string, sizeof(string),"[µ˜ ‘]: Weapon on Slot %d: %s (%d)",i,weapon,ScriptWeapons[playerid][i]);
			SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
	    }
	    return 1;
	}
	
	if (strcmp(cmd, "/givemehackedweapon", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /givemehackedweapon [weapon]");
					return 1;
				}
				new weapon = strval(tmp);
				GivePlayerWeapon(playerid, weapon,1);
				format(string, sizeof(string),"[µ˜ ‘]: You gave yourself a 'Hacked' weaponid %d.",weapon);
				SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/givemehacked", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (IsPlayerAdmin(playerid))
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /givemehacked [amount]");
					return 1;
				}
				new money = strval(tmp);
				GivePlayerMoney(playerid, money);
				format(string, sizeof(string),"[µ˜ ‘]: You gave yourself $%d of 'Hacked' Money.",money);
				SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„≤ª «π‹¿Ì‘±");
			}
		}
		return 1;
	}
//----------------------------------[MAKEIRCADMIN]----------------------------------------------
    if(strcmp(cmd, "/makeircadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /makeircadmin [ÕÊº“ID/ÕÊº“√˚◊÷] [ChannelNr]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /makeircadmin [ÕÊº“ID/ÕÊº“√˚◊÷] [ChannelNr]");
				return 1;
			}
			new channel = strval(tmp);
			if(channel > 10 || channel < 0) { SendClientMessage(playerid, COLOR_GREY, "   Dont go below number 0, or above number 10!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Made %s Admin of IRC Channel %d.",d,m,y,h,mi,s,sendername,giveplayer,channel);
						AdminLog(string);
						ChatLog(string);
						LoginLog(string);
						format(string, sizeof(string), "* You've made %s an IRC Admin over Channel %d.", giveplayer, channel);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s has made you an IRC Admin over Channel %d.", sendername, channel);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s", giveplayer);
						switch(channel)
						{
						    case 1:
						    {
						        strmid(IRCInfo[0][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[0][iNeedPass] = 0; IRCInfo[0][iLock] = 0;
						    }
						    case 2:
						    {
						        strmid(IRCInfo[1][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[1][iNeedPass] = 0; IRCInfo[1][iLock] = 0;
						    }
						    case 3:
						    {
						        strmid(IRCInfo[2][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[2][iNeedPass] = 0; IRCInfo[2][iLock] = 0;
						    }
						    case 4:
						    {
						        strmid(IRCInfo[3][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[3][iNeedPass] = 0; IRCInfo[3][iLock] = 0;
						    }
						    case 5:
						    {
						        strmid(IRCInfo[4][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[4][iNeedPass] = 0; IRCInfo[4][iLock] = 0;
						    }
						    case 6:
						    {
						        strmid(IRCInfo[5][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[5][iNeedPass] = 0; IRCInfo[5][iLock] = 0;
						    }
						    case 7:
						    {
						        strmid(IRCInfo[6][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[6][iNeedPass] = 0; IRCInfo[6][iLock] = 0;
						    }
						    case 8:
						    {
						        strmid(IRCInfo[7][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[7][iNeedPass] = 0; IRCInfo[7][iLock] = 0;
						    }
						    case 9:
						    {
						        strmid(IRCInfo[8][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[8][iNeedPass] = 0; IRCInfo[8][iLock] = 0;
						    }
						    case 10:
						    {
						        strmid(IRCInfo[9][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[9][iNeedPass] = 0; IRCInfo[9][iLock] = 0;
						    }
						}
						SaveIRC();
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–»®œﬁ to do that !");
			    return 1;
			}
		}
		return 1;
	}
//----------------------------------[MAKELEADER]------------------------------------------------
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /makeleader [ÕÊº“ID/ÕÊº“√˚◊÷] [Number(1-10)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 16 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "* Dont go below number 0, or above number 16!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			            if(PlayerInfo[para1][pMember] > 0 || PlayerInfo[para1][pFMember] < 255)
			            {
			                SendClientMessage(playerid, COLOR_GREY, "** That player is in a Faction / Family !");
			                return 1;
			            }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						PlayerInfo[para1][pLeader] = level;
						format(string, sizeof(string), "* You have been promoted to Leader Of the Faction %d by Admin %s",level, sendername);
						SendClientMessage(para1, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "* You have given %s control to run Faction Number %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
	            		format(string, sizeof(string), "[π‹¿Ì]: %s Has Given Control of the Faction %d to %s.",sendername,level,giveplayer);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave The Control of the faction %d to [%s]",d,m,y,h,mi,s,sendername,level,giveplayer);
						LoginLog(string);
						AdminLog(string);
						if(level == 0) { PlayerInfo[para1][pChar] = 0; PlayerInfo[para1][pRank] = 0; gTeam[para1] = 3; PlayerInfo[para1][pTeam] = 0; return 1; }
						else if(level == 1) { PlayerInfo[para1][pChar] = 288; } //Police Force
						else if(level == 2) { PlayerInfo[para1][pChar] = 286; } //FBI/ATF
						else if(level == 3) { PlayerInfo[para1][pChar] = 287; } //π˙√ÒæØŒ¿∂”
						else if(level == 4) { PlayerInfo[para1][pChar] = 274; } //Ambulance
						else if(level == 5) { PlayerInfo[para1][pChar] = 175; } //»˝∫œª·
						else if(level == 6) { PlayerInfo[para1][pChar] = 187; } //La Famiglia Sinatra
						else if(level == 7) { PlayerInfo[para1][pChar] = 147; } //Mayor
						else if(level == 8) { PlayerInfo[para1][pChar] = 20; } //Hitmans
						else if(level == 9) { PlayerInfo[para1][pChar] = 227; } //News Reporters
						else if(level == 10) { PlayerInfo[para1][pChar] = 61; } //Taxi Cab Company
						else if(level == 11) { PlayerInfo[para1][pChar] = 171; } //Driving/Flying School
						else if(level == 12) { PlayerInfo[para1][pChar] = 279; } //Firemen
						else if(level == 13) { PlayerInfo[para1][pChar] = 248; } //bikers
						else if(level == 14) { PlayerInfo[para1][pChar] = 228; } //…Ωø⁄◊È
						else if(level == 15) { PlayerInfo[para1][pChar] = 113; } //¥Û»¶∞Ô
						else if(level == 16) { PlayerInfo[para1][pChar] = 228; } //¿≠∏±

						if(level == 0)
						{
						    gTeam[para1] = 3;
					    	PlayerInfo[para1][pTeam] = 3;
					    	PlayerInfo[para1][pRank] = 0;
						}
						else if(level == 1)
						{
						    gTeam[para1] = 2;
					    	PlayerInfo[para1][pTeam] = 2;
					    	PlayerInfo[para1][pRank] = 8;
						}
						else if(level == 2)
						{
						    gTeam[para1] = 2;
					    	PlayerInfo[para1][pTeam] = 2;
					    	PlayerInfo[para1][pRank] = 8;
						}
						else if(level == 3)
						{
						    gTeam[para1] = 2;
					    	PlayerInfo[para1][pTeam] = 2;
					    	PlayerInfo[para1][pRank] = 8;
						}
						else if(level == 4)
						{
                            gTeam[para1] = 1;
						    PlayerInfo[para1][pTeam] = 1;
						    PlayerInfo[para1][pRank] = 8;
						}
						else if(level == 5)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 6)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 8;
						}
						else if(level == 7)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 8)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 9)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 10)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 11)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 12)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 8;
						}
						else if(level == 13)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 14)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 6;
						}
						else if(level == 15)
						{
							gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 7;
						}
						else if(level == 16)
						{
						    gTeam[para1] = 15;
					    	PlayerInfo[para1][pTeam] = 15;
						    PlayerInfo[para1][pRank] = 9;
						}
						else
						{
						    gTeam[para1] = 3;
					    	PlayerInfo[para1][pTeam] = 3;
                            PlayerInfo[para1][pRank] = 0;
						}
					    SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					    SetPlayerToTeamColor(para1);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /forceskin [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMember] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   That player is not in a Family / Force !");
				            return 1;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "** You are forced to Change your Skin by Admin %s.", sendername);
						SendClientMessage(para1, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "** You have forced %s To change his Skin.", giveplayer);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has forced %s's (%d) skin.", sendername,giveplayer,giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						if(PlayerInfo[para1][pMember] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMember] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMember] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMember] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMember] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMember] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 111; }
				        else if(PlayerInfo[para1][pMember] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMember] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else { return 1; }
                        SafeSetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						SafeSetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMember];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pModel] = ChosenSkin[para1];
				    	PlayerInfo[para1][pChar] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'next' to Select the char you want to use.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* If you've found the Char you want to use, type 'done'.");
					    new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Forced %s To the Skin Slection",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[SETSKIN]------------------------------------------------
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setskin [ÕÊº“ID/ÕÊº“√˚◊÷] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "¥ÌŒÛµƒ∆§∑ÙID!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						PlayerInfo[para1][pChar] = level;
						format(string, sizeof(string), "** π‹¿Ì‘± %s ∏¸∏ƒ¡Àƒ„µƒ∆§∑Ù.", sendername);
						SendClientMessage(para1, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "** ƒ„…Ë÷√ %s ∆§∑Ù±‡∫≈Œ™ %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
   						format(string, sizeof(string), "[π‹¿Ì]: %s Gave The Skin [%d] to %s (%d).",sendername, level, giveplayer, para1);
						ABroadCast(COLOR_LIGHTRED,string, 5);
		    			SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
		    			new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave The Skin [%d] to %s",d,m,y,h,mi,s,sendername,level,giveplayer);
						GiveLog(string);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[GIVERANK]------------------------------------------------
    if(strcmp(cmd, "/giverank", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /giverank [ÕÊº“ID/ÕÊº“√˚◊÷] [Number(1-8)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
            if(level > 9 || level < 0) { SendClientMessage(playerid, COLOR_GREY, " ÷ª”–1-8∏ˆ÷∞“µµ»º∂."); return 1; }
			if(PlayerInfo[playerid][pLeader] != PlayerInfo[para1][pMember])
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "∑√Œ ±ªæ‹æ¯,’‚∏ˆÕÊº“≤ª‘⁄ƒ„’‚∏ˆ◊È÷Ø!");
				return 1;
			}
			if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pAdmin] >= 6)
			{
				if(IsPlayerConnected(para1))
				{
					if(para1 != INVALID_PLAYER_ID)
					{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						PlayerInfo[para1][pRank] = level;
						format(string, sizeof(string), " ƒ„±ªÃ·…˝¡À◊È÷ØΩ◊º∂,”…◊È÷Ø¡Ïµº’ﬂ %s÷¥––", sendername);
						SendClientMessage(para1, COLOR_WHITE, string);
						format(string, sizeof(string), " ƒ„Ω´ %sµƒ◊È÷ØΩ◊º∂…Ë÷√Œ™ %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_WHITE, string);
						if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 266; SetPlayerSkin(para1, 266); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 267; SetPlayerSkin(para1, 267); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 265; SetPlayerSkin(para1, 265); }
								else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
								else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
						{
						 if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 163; SetPlayerSkin(para1, 163); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 164; SetPlayerSkin(para1, 164); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 59; SetPlayerSkin(para1, 59); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 217; SetPlayerSkin(para1, 217); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 187; SetPlayerSkin(para1, 187); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 166; SetPlayerSkin(para1, 166); }
								else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 165; SetPlayerSkin(para1, 165); }
								else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 165; SetPlayerSkin(para1, 165); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
								else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 287; SetPlayerSkin(para1, 287); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
						{
							if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 276; SetPlayerSkin(para1, 276); }
							else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 276; SetPlayerSkin(para1, 276); }
							else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 275; SetPlayerSkin(para1, 275); }
							else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 274; SetPlayerSkin(para1, 274); }
							else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 274; SetPlayerSkin(para1, 274); }
							else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 274; SetPlayerSkin(para1, 274); }
							else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 274; SetPlayerSkin(para1, 274); }
							else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 274; SetPlayerSkin(para1, 274); }
						}
						else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
						{
							if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 275; SetPlayerSkin(para1, 275); }
							else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 277; SetPlayerSkin(para1, 277); }
							else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 278; SetPlayerSkin(para1, 278); }
							else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 278; SetPlayerSkin(para1, 278); }
							else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 278; SetPlayerSkin(para1, 278); }
							else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 278; SetPlayerSkin(para1, 278); }
							else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 279; SetPlayerSkin(para1, 279); }
							else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 279; SetPlayerSkin(para1, 279); }
						}
						else if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 188; SetPlayerSkin(para1, 188); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 125; SetPlayerSkin(para1, 125); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 173; SetPlayerSkin(para1, 173); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 174; SetPlayerSkin(para1, 174); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 113; SetPlayerSkin(para1, 113); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 175; SetPlayerSkin(para1, 175); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 125; SetPlayerSkin(para1, 125); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 223; SetPlayerSkin(para1, 223); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 258; SetPlayerSkin(para1, 258); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 126; SetPlayerSkin(para1, 126); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 98; SetPlayerSkin(para1, 98); }
								else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 127; SetPlayerSkin(para1, 127); }
								else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 187; SetPlayerSkin(para1, 187); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 41; SetPlayerSkin(para1, 41);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 163; SetPlayerSkin(para1, 163); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 227; SetPlayerSkin(para1, 227); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 164; SetPlayerSkin(para1, 164); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 17; SetPlayerSkin(para1, 17); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 147; SetPlayerSkin(para1, 147); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 187; SetPlayerSkin(para1, 187); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 210; SetPlayerSkin(para1, 210); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 183; SetPlayerSkin(para1, 183); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 235; SetPlayerSkin(para1, 235); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 184; SetPlayerSkin(para1, 184); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 217; SetPlayerSkin(para1, 217); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 227; SetPlayerSkin(para1, 283); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 153; SetPlayerSkin(para1, 153); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 153; SetPlayerSkin(para1, 153); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 153; SetPlayerSkin(para1, 153); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 153; SetPlayerSkin(para1, 153); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 171; SetPlayerSkin(para1, 172); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 171; SetPlayerSkin(para1, 172); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								if(PlayerInfo[para1][pRank] >= 1) { PlayerInfo[para1][pChar] = 172; SetPlayerSkin(para1, 172); }
								if(PlayerInfo[para1][pRank] >= 5) { PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194); }
							}
						}
						else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 125; SetPlayerSkin(para1, 125); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 126; SetPlayerSkin(para1, 126); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 295; SetPlayerSkin(para1, 295); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 272; SetPlayerSkin(para1, 272); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 113; SetPlayerSkin(para1, 113); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 291; SetPlayerSkin(para1, 291); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 181; SetPlayerSkin(para1, 181); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 100; SetPlayerSkin(para1, 100); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 254; SetPlayerSkin(para1, 254); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 247; SetPlayerSkin(para1, 247); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 248; SetPlayerSkin(para1, 248); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 233; SetPlayerSkin(para1, 298);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 122; SetPlayerSkin(para1, 122); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 123; SetPlayerSkin(para1, 123); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 117; SetPlayerSkin(para1, 117); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 118; SetPlayerSkin(para1, 118); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 120; SetPlayerSkin(para1, 120); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 121; SetPlayerSkin(para1, 121); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 195; SetPlayerSkin(para1, 195);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 258; SetPlayerSkin(para1, 258); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 259; SetPlayerSkin(para1, 259); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 125; SetPlayerSkin(para1, 125); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 126; SetPlayerSkin(para1, 126); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 127; SetPlayerSkin(para1, 127); }
								else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 113; SetPlayerSkin(para1, 113); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 195; SetPlayerSkin(para1, 195);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 187; SetPlayerSkin(para1, 187); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 187; SetPlayerSkin(para1, 187); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 166; SetPlayerSkin(para1, 166); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 147; SetPlayerSkin(para1, 147); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 124; SetPlayerSkin(para1, 124); }
								else if(PlayerInfo[para1][pRank] == 7) { PlayerInfo[para1][pChar] = 122; SetPlayerSkin(para1, 122); }
								else if(PlayerInfo[para1][pRank] == 8) { PlayerInfo[para1][pChar] = 111; SetPlayerSkin(para1, 111); }
								else if(PlayerInfo[para1][pRank] == 9) { PlayerInfo[para1][pChar] = 228; SetPlayerSkin(para1, 228); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 195; SetPlayerSkin(para1, 195);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 59; SetPlayerSkin(para1, 59); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 98; SetPlayerSkin(para1, 98); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 113; SetPlayerSkin(para1, 113); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 120; SetPlayerSkin(para1, 120); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 164; SetPlayerSkin(para1, 164); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 165; SetPlayerSkin(para1, 165); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 141; SetPlayerSkin(para1, 141);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 47; SetPlayerSkin(para1, 47); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 48; SetPlayerSkin(para1, 48); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 194; SetPlayerSkin(para1, 194);
							}
						}
						else if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
						{
							if(PlayerInfo[para1][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[para1][pRank] == 1) { PlayerInfo[para1][pChar] = 71; SetPlayerSkin(para1, 71); }
								else if(PlayerInfo[para1][pRank] == 2) { PlayerInfo[para1][pChar] = 280; SetPlayerSkin(para1, 280); }
								else if(PlayerInfo[para1][pRank] == 3) { PlayerInfo[para1][pChar] = 281; SetPlayerSkin(para1, 281); }
								else if(PlayerInfo[para1][pRank] == 4) { PlayerInfo[para1][pChar] = 282; SetPlayerSkin(para1, 282); }
								else if(PlayerInfo[para1][pRank] == 5) { PlayerInfo[para1][pChar] = 288; SetPlayerSkin(para1, 288); }
								else if(PlayerInfo[para1][pRank] == 6) { PlayerInfo[para1][pChar] = 283; SetPlayerSkin(para1, 283); }
							}
							else if(PlayerInfo[para1][pSex] == 2)
							{
								PlayerInfo[para1][pChar] = 211; SetPlayerSkin(para1, 211);
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó(Leaders Only)!");
			}
		}
		return 1;
	}
//----------------------------------[setteam]------------------------------------------------
	if(strcmp(cmd, "/setteam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setteam [ÕÊº“ID/ÕÊº“√˚◊÷] [team 1(civ) - 2(cop)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
						SetPlayerWeapons(para1);
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						format(string, sizeof(string),"[π‹¿Ì]: %s has switched %s (%d) to team %d.", sendername, giveplayer, para1, level);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "** You have been switched to team %d by %s", level, sendername);
						SendClientMessage(para1, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), "** You have switched %s to team %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Set %s's Team to %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[setjob]------------------------------------------------
	if(strcmp(cmd, "/setjob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setjob [ÕÊº“ID/ÕÊº“√˚◊÷] [π§◊˜ID]");
				return 1;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			jobid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						PlayerInfo[para1][pJob] = jobid;
						format(string, 256, "[π‹¿Ì]: %s …Ë÷√ %s (%d) π§◊˜Œ™ [±‡∫≈:%d]µƒπ§◊˜.", sendername,giveplayer,para1,jobid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "ƒ„≥…π¶µƒ…Ë÷√ %s (%d) π§◊˜Œ™ [±‡∫≈:%d]µƒπ§◊˜!",giveplayer,para1,jobid);
						SendClientMessage(playerid, COLOR_ORANGE,string);
						format(string, sizeof(string), "* %s …Ë÷√ƒ„µƒπ§◊˜Œ™ [±‡∫≈:%d]µƒπ§◊˜", sendername, jobid);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set Job id %d To %s.",d,m,y,h,mi,s,sendername,jobid,giveplayer);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
/*//‘› ±◊¢ Õ
	if(strcmp(cmd, "/clearcp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_ORANGE, "** “—æ≠«Â≥˛¡Àƒ„ø… ”µƒºÏ≤È’æ!");
		DisablePlayerCheckpoint(playerid);
		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Cleared his Checkpoints",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}
*/
//----------------------------------[GOTO]-----------------------------------------------
    if(strcmp(cmd, "/gotosfdocks", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1589.2644,106.9119,3.5495);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
					OnPlayerExitFood(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to SF¬ÎÕ∑.",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else
				{
					SafeSetPlayerPos(playerid, -1589.2644,106.9119,3.5495);
					SetPlayerVirtualWorld(playerid, 0);
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ SF¬ÎÕ∑.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to SF¬ÎÕ∑.",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/gotolvap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1432.6451,1378.7216,11.5507);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
					OnPlayerExitFood(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¿≠ÀπŒ¨º”Àπ Airport.",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1432.6451,1378.7216,11.5507);
					SetPlayerVirtualWorld(playerid, 0);
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ ¿≠ÀπŒ¨º”Àπ Airport.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¿≠ÀπŒ¨º”Àπ Airport.",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}
	
	

	if(strcmp(cmd, "/gotols", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
					OnPlayerExitFood(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–Àπ",d,m,y,h,mi,s,sendername);
					TelesLog(string);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1529.6,-1691.2,13.3);
					SetPlayerVirtualWorld(playerid, 0);
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ ¬Â…ºÌ∂…£Õ–Àπ.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–Àπ",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotorpl", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 478.0687,-1498.9708,20.4831);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 478.0687,-1498.9708,20.4831);
					SetPlayerVirtualWorld(playerid, 0);
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ RPL.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pVirWorld] = 0;
				DisablePlayerCheckpoint(playerid);
                OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Market Ammunation",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/gotohospital", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1177.5309,-1326.2706,14.0753);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1177.5309,-1326.2706,14.0753);
					SetPlayerVirtualWorld(playerid, 0);
				}
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ  –÷––ƒ“Ω‘∫.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pVirWorld] = 0;
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to  –÷––ƒ“Ω‘∫",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotoammu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1366.3837,-1281.2639,13.5469);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1366.3837,-1281.2639,13.5469);
					SetPlayerVirtualWorld(playerid, 0);
				}
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Market Ammunation.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pVirWorld] = 0;
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Market Ammunation",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/gotobank", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1457.3992,-1012.5910,26.8438);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1457.3992,-1012.5910,26.8438);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–Àπ Bank",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/gotolsch", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1481.1371,-1766.2443,18.7958);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1481.1371,-1766.2443,18.7958);
					SetPlayerVirtualWorld(playerid, 0);
				}
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ The ¬Â…ºÌ∂…£Õ–Àπ CH.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–Àπ  –’˛Ã¸",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotoshop", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					SafeSetPlayerPos(playerid, 1352.1194,-1759.2534,13.5078);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1352.1194,-1759.2534,13.5078);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–ÀπæØ≤Ïæ÷",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/goback", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
	            if(AdminPos[playerid][0] != 0.00)
	            {
	                SafeSetPlayerPos(playerid, AdminPos[playerid][0], AdminPos[playerid][1], AdminPos[playerid][2]);
	                AdminPos[playerid][0] = 0.00;
				    AdminPos[playerid][1] = 0.00;
				    AdminPos[playerid][2] = 0.00;
				}
			}
		}
	}

    if(strcmp(cmd, "/adminarea", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    new Float:X,Float:Y,Float:Z;
			    GetPlayerPos(playerid, X,Y,Z);
			    AdminPos[playerid][0] = X;
			    AdminPos[playerid][1] = Y;
			    AdminPos[playerid][2] = Z;
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					SafeSetPlayerPos(playerid, 370.6108,-1705.1226,17.03853);
				}
				else
				{
					SafeSetPlayerPos(playerid, 370.6108,-1705.1226,17.0385);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SendClientMessage(playerid, COLOR_GREY,"* Welcome, Admin.   To go back to your old position º¸»Î /goback!");
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–ÀπæØ≤Ïæ÷",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotolspd", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					SafeSetPlayerPos(playerid, 1554.9537,-1675.6584,16.1953);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1554.9537,-1675.6584,16.1953);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–ÀπæØ≤Ïæ÷",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotofbi", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					SafeSetPlayerPos(playerid, 1518.5179,-1452.9224,14.2031);
				}
				else
				{
					SetPlayerVirtualWorld(playerid, 0);
					SafeSetPlayerPos(playerid, 1518.5179,-1452.9224,14.2031);
				}
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–Àπ FBI ◊‹≤ø",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotoarmy", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					SafeSetPlayerPos(playerid, 2730.4297,-2451.5000,17.5937);
				}
				else
				{
					SetPlayerVirtualWorld(playerid, 0);
					SafeSetPlayerPos(playerid, 2730.4297,-2451.5000,17.5937);
				}
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¬Â…ºÌ∂…£Õ–Àπ Army Base",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gasplace", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1942.3014, -1773.7802, 19.5250);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1942.3014, -1773.7802, 19.5250);
					SetPlayerVirtualWorld(playerid, 0);
				}
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ The Gas Station.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to GS9",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotolv", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1699.2,1435.1, 10.7);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SendClientMessage(playerid, COLOR_ORANGE, "** Succesfuly Teleported to ¿≠ÀπŒ¨º”Àπ");
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ LV.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to ¿≠ÀπŒ¨º”Àπ",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotodd", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1098,1706.57,10.82);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1098.0063,1706.5728,10.8203);
					SetPlayerVirtualWorld(playerid, 0);
				}
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Teleported Himself outside of the DDS.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to the DDÃÂ”˝≥°",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/devsarea", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2466.2917, 2546.2483, 22.0781);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, 2466.2917, 2546.2483, 22.0781);
					SetPlayerVirtualWorld(playerid, 0);
				}
    			SendClientMessage(playerid, COLOR_GRAD1, "You have Been Teleported");
    			SendClientMessage(playerid, COLOR_NICERED, "Welcome to the Developers Area, Dev.");
    			SendClientMessage(playerid, COLOR_BLUE, "Please, Spawn the Heli/Hydra at the Helipad");
    			SendClientMessage(playerid, COLOR_BLUE, "To Use Any Car you must º¸»Î /St. Don't Forget to /tn");
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to The Devs Area",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotosf", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					LinkVehicleToInterior(tmpcar, 0);
					SetPlayerVirtualWorld(playerid, 0);
				}
				else
				{
					SafeSetPlayerPos(playerid, -1417.0,-295.8,14.1);
					SetPlayerVirtualWorld(playerid, 0);
				}
				SendClientMessage(playerid, COLOR_ORANGE, "** You have been teleported");
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ SF.", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				SafeSetPlayerInterior(playerid,0);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to  •∑∆“Æ¬ﬁ",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dealership", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
			    new list[] = "1\tSports\n2\tLowriders\n3\tSaloons\n4\tOff Road\n5\tAircrafts\n6\tMotorbikes\n7\tBoats\n8\tTrucks";
				ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST,"Dealerships:",list,"Tele","Cancel");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleported Himself to Cars Dealership",d,m,y,h,mi,s,sendername);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotocar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /gotocar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					SafeSetPlayerPos(playerid, cwx2,cwy2,cwz2+2);
				}
				else
				{
				    SafeSetPlayerInterior(playerid,0);
					SafeSetPlayerPos(playerid, cwx2,cwy2,cwz2+2);
				}
				SendClientMessage(playerid, COLOR_ORANGE, "** You have been teleported");
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Car: [%d].", sendername, testcar);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Car Id: [%d]",d,m,y,h,mi,s,sendername,testcar);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/getincar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /getincar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					SetVehicleToRespawn(GetPlayerVehicleID(playerid));
					SafeRemovePlayerFromVehicle(playerid);
					PutPlayerInVehicle(playerid, testcar, 0);
				}
				else
				{
				    SafeSetPlayerInterior(playerid,0);
					PutPlayerInVehicle(playerid, testcar, 0);
				}
				SendClientMessage(playerid, COLOR_ORANGE, "** You have been teleported");
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Car: [%d].", sendername, testcar);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				DisablePlayerCheckpoint(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ Car Id: [%d]",d,m,y,h,mi,s,sendername,testcar);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_ORANGE, "** Teleporter destination set");
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set a Teleport Mark at (%f | %f | %f)", sendername,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				ABroadCast(COLOR_LIGHTRED,string, 5);
 				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Places a Mark at (%f | %f | %f)",d,m,y,h,mi,s,sendername,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ His Mark.(%f | %f | %f).", sendername,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					DisablePlayerCheckpoint(playerid);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleports Himself to His Mark (%f | %f | %f)",d,m,y,h,mi,s,sendername,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					TelesLog(string);
				}
				else
				{
					SafeSetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
                
				SendClientMessage(playerid, COLOR_ORANGE, "** You have been teleported");
				SafeSetPlayerInterior(playerid,0);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ his Mark (%f | %f | %f).", sendername,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				OnPlayerExitFood(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Teleports himself to his Mark (%f | %f | %f)",d,m,y,h,mi,s,sendername,TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelesLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gotostad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					new vehicleid = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1398.46, 995.641, 1024.46);
					LinkVehicleToInterior(vehicleid, 15);
				}
				else
				{
					SafeSetPlayerPos(playerid, -1398.46, 995.641, 1024.46);
				}
				SafeSetPlayerInterior(playerid,15);
				DisablePlayerCheckpoint(playerid);
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ The DDÃÂ”˝≥°", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotojet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
				}
				else
				{
					SafeSetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SafeSetPlayerInterior(playerid,1);
			    OnPlayerExitFood(playerid);
				format(string, sizeof(string), "[π‹¿Ì]: %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ The Shamal Interior", sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				DisablePlayerCheckpoint(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/goto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /goto [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 3)
					{
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SafeSetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
	  					else
	  					{
							SafeSetPlayerInterior(playerid,0);
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SafeSetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(playerid, PlayerInfo[plo][pVirWorld]);
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Teleported to %s", sendername, giveplayer);
						ABroadCast(COLOR_LIGHTRED, string, 5);
						DisablePlayerCheckpoint(playerid);
						OnPlayerExitFood(playerid);
						if(BizzEntered[plo] != 9999)
						{
							BizzEntered[playerid] = BizzEntered[plo];
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ‘∂æ‡¿Î¥´ÀÕ◊‘º∫µΩ %s",d,m,y,h,mi,s,sendername,giveplayer);
						TelesLog(string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[GETHERE]-----------------------------------------------
	if(strcmp(cmd, "/gethere", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /gethere [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			GetPlayerName(playerid,sendername,sizeof(sendername));
			GetPlayerName(plo, giveplayer, sizeof(giveplayer));
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 4)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SafeSetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SafeSetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SafeSetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
							SafeSetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(plo, PlayerInfo[playerid][pVirWorld]);
						format(string,sizeof(string), "[π‹¿Ì]: %s Has teleported to %s (%d) at their Pos",sendername,giveplayer,plo);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						DisablePlayerCheckpoint(plo);
						OnPlayerExitFood(plo);
						if(BizzEntered[playerid] != 9999)
						{
							BizzEntered[plo] = BizzEntered[playerid];
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Teleported %s to Himself",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "* %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/getcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /getcar [carid]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx+8,plocy, plocz);
				LinkVehicleToInterior(plo, GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(plo, GetPlayerVirtualWorld(playerid));
				format(string, sizeof(string),"[π‹¿Ì]: %s Has Teleported Vehicle [%d] To his Position",sendername,plo);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Teleported the car [%d] To himself.",d,m,y,h,mi,s,sendername,plo);
				AdminLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/oldcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    format(string, sizeof(string), "Your old car was: %d",gLastCar[playerid]);
		    SendClientMessage(playerid, COLOR_ORANGE, string);
		    
			format(string, sizeof(string), "[π‹¿Ì]: %s Has Asked to the System his Old Car", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Asked for his Old Car",d,m,y,h,mi,s,sendername);
			AdminLog(string);
	    }
	    return 1;
	}
	
	if(strcmp(cmd, "/fuelcars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
	            for(new c=0;c<MAX_VEHICLES;c++)
				{
					Gas[c] = GasMax;
				}
				format(string, sizeof(string),"[π‹¿Ì]: %s Has Filled All Cars with Fuel",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Filled Every Car with Fuel",d,m,y,h,mi,s,sendername);
				AdminLog(string);
				GameTextForAll("~w~All Cars ~g~Filled ~w~With ~p~Fuel!",5000,1);
				SendClientMessage(playerid, COLOR_ORANGE, "** All cars filled with Fuel ! ");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª «π‹¿Ì‘± ! ");
	            return 1;
	        }
	    }
	    return 1;
	}

//----------------------------------[GiveGun]------------------------------------------------
	if(strcmp(cmd, "/weaponequip", true) == 0 || strcmp(cmd, "/we", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /weaponequip [Player ID / Player Name] [Weapon ID] [µØ“©]");
				return 1;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);

			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /weaponequip [ÕÊº“ID/ÕÊº“√˚◊÷] [weaponid] [ammo]");
				SendClientMessage(playerid, COLOR_GRAD4, "1(Brass) 2(Nite) 3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 9(Chainsaw) 10-13(Dildo)");
				SendClientMessage(playerid, COLOR_GRAD4, "14(Flowers) 15(Cane) 16(Grenades) 17(Teargas) 18(Molotovs) 22(Pistol) 23(SPistol) 24(Eagle)");
				SendClientMessage(playerid, COLOR_GRAD4, "25(Shotgun) 26(sawn-off) 27(Combat) 28(TEC9) 29(MP5) 30(AK47) 31(M4) 32(MAC10) 33(Country)");
				SendClientMessage(playerid, COLOR_GRAD3, "34(Sniper) 35(RPG) 37(Flamethrower) 38(Minigun) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
				return 1;
			}
			if(gun < 1||gun > 46||gun==19||gun==20||gun==21||gun==44||gun==45)
			{ SendClientMessage(playerid, COLOR_GRAD1, "** Invalid WeaponID!"); return 1; }
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 49999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "** Dont go below 1 or above 49999 bullets!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SafeGivePlayerWeapon(playa, gun, ammo);
                        new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave to %s the Weapon Id %d with %d Ammo.",d,m,y,h,mi,s,sendername,playa,gun,ammo);
						GiveLog(string);
						AdminLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[sethp]------------------------------------------------
	if(strcmp(cmd, "/sethp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sethp [ÕÊº“ID/ÕÊº“√˚◊÷] [health]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) hp to %d.", sendername,giveplayer,playa,health);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "Administrator %s Has Set your HP to %d",sendername, health);
						SendClientMessage(playa, TEAM_GROVE_COLOR, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's HP to: [%d]",d,m,y,h,mi,s,sendername,giveplayer,health);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setarmour", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setarmour [ÕÊº“ID/ÕÊº“√˚◊÷] [armor]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SafeSetPlayerArmour(playa, health);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));

						format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) armor to %d.", sendername,giveplayer,playa,health);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "Administrator %s Has Set your Armour to %d",sendername, health);
						SendClientMessage(playa, TEAM_GROVE_COLOR, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Armour to: [%d]",d,m,y,h,mi,s,sendername,giveplayer,health);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setdrunk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setdrunk [ÕÊº“ID/ÕÊº“√˚◊÷] [level]");
				return 1;
			}
			new playa;
			new drunk;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			drunk = strval(tmp);
			if(drunk < 0||drunk > 35000) { SendClientMessage(playerid, COLOR_GREY, "** Level May not go below 0 and above 35000!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerDrunkLevel(playa, drunk)
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, 256, "[π‹¿Ì]: %s has set %s's drunk level to %d.", sendername,giveplayer,drunk);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "Administrator %s Has Set your Drunk Level to %d",sendername, drunk);
						SendClientMessage(playa, TEAM_GROVE_COLOR, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Drunk Level to: [%d]",d,m,y,h,mi,s,sendername,drunk);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/setfight", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setfight [ÕÊº“ID/ÕÊº“√˚◊÷] [fight style]");
				SendClientMessage(playerid, COLOR_GRAD3, "STYLES: | 0: ƒ¨»œ | 1: »≠ª˜ | 2: ÷–π˙π¶∑Ú | 3: ø’ ÷µ¿ | 4: »·µ¿ | 5: ElBow |");
				return 1;
			}
			new playa;
			new item;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			item = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
   			if(item < 0||item > 5) { SendClientMessage(playerid, COLOR_GREY, "** Style May Not Go Above 0 And Below 5!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						if (item == 1)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 1;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_BOXING);
							format(string, sizeof(string), "~p~%s ~w~Has Set Your ~y~Fighting Style ~w~to ~g~%d [Boxing] !!", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [Boxing]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 2)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 2;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_KUNGFU);
							format(string, sizeof(string), "~p~%s ~w~Has Set Your ~y~Fighting Style ~w~to ~g~%d [KungFu] !!", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [KungFu]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
                            SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 3)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 3;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_GRABKICK);
							format(string, sizeof(string), "~p~%s ~w~Has Set Your ~y~Fighting Style ~w~to ~g~%d [Grab'n'Kick] !!", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [ø’ ÷µ¿]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 0)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 0;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_NORMAL);
							format(string, sizeof(string), "~p~%s ~w~Has Set Your ~y~Fighting Style ~w~to ~g~%d [Default] !!", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [ƒ¨»œ]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 4)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 4;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_KNEEHEAD);
							format(string, sizeof(string), "~p~%s ~w~Has Set Your ~y~Fighting Style ~w~to ~g~%d [KneeHead] !!", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [»·µ¿]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 5)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 5;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_ELBOW);
							format(string, sizeof(string), "~p~%s ~w~Has Set Your ~y~Fighting Style ~w~to ~g~%d [ElBow] !!", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [ElBow]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						SetPlayerSkills(playa);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Set %s's Fighting Style to %d",d,m,y,h,mi,s,sendername,giveplayer,item);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/givefight", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givefight [ÕÊº“ID/ÕÊº“√˚◊÷] [fight style]");
				SendClientMessage(playerid, COLOR_GRAD3, "STYLES: | 0: ƒ¨»œ | 1: »≠ª˜ | 2: ÷–π˙π¶∑Ú | 3: ø’ ÷µ¿ | 4: »·µ¿ | 5: ElBow |");
				return 1;
			}
			new playa;
			new item;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			item = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
   			if(item < 0||item > 5) { SendClientMessage(playerid, COLOR_GREY, "** Style May Not Go Above 0 And Below 5!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						if (item == 1)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 1;
							PlayerInfo[playa][pBoxiSkill] = 1;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_BOXING);
							format(string, sizeof(string), "~p~%s Has given you the ~y~Fighting style ~w~ID ~r~%d ~p~,Boxing", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [Boxing]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 2)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 2;
							PlayerInfo[playa][pKungSkill] = 1;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_KUNGFU);
							format(string, sizeof(string), "~p~%s Has given you the ~y~Fighting style ~w~ID ~r~%d ~p~,Kung Fu", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [KungFu]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
                            SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 3)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 3;
							PlayerInfo[playa][pGrabSkill] = 1;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_GRABKICK);
							format(string, sizeof(string), "~p~%s Has given you the ~y~Fighting style ~w~ID ~r~%d ~p~,Grab'n'Kick", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [ø’ ÷µ¿]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 0)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 0;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_NORMAL);
							format(string, sizeof(string), "~p~%s Has given you the ~y~Fighting style ~w~ID ~r~%d ~p~,Default", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [ƒ¨»œ]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 4)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 4;
							PlayerInfo[playa][pKneeSkill] = 1;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_KNEEHEAD);
							format(string, sizeof(string), "~p~%s Has given you the ~y~Fighting style ~w~ID ~r~%d ~p~,Kneehead", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [»·µ¿]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						else if (item == 5)
						{
							PlayerPlaySound(playa, 1052, 0.0, 0.0, 0.0);
							PlayerInfo[playa][pFS] = 5;
							PlayerInfo[playa][pElbowSkill] = 1;
							SetPlayerFightingStyle (playa, FIGHT_STYLE_ELBOW);
							format(string, sizeof(string), "~p~%s Has given you the ~y~Fighting style ~w~ID ~r~%d ~p~,Elbow", sendername,item);
							GameTextForPlayer(playa,string,4000,3);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Set %s's Fighting Style to %d [ElBow]",sendername,giveplayer,item);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							SetPlayerSkills(playa);
							return 1;
						}
						SetPlayerSkills(playa);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Set %s's Fighting Style to %d",d,m,y,h,mi,s,sendername,giveplayer,item);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

    if(strcmp(cmd, "/setgender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setgender [ÕÊº“ID/ÕÊº“√˚◊÷] [gender] (1 ƒ–) (2 ≈Æ)");
				return 1;
			}
			new playa;
			new age;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			age = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(age == 1)
			            {
							PlayerInfo[playerid][pSex] = 1;
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) gender to ƒ–.", sendername,giveplayer,playa);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "** %s (%d) Has Set Your gender to ƒ– !",sendername,playerid);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Set %s's Male",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
						}
						else if(age == 2)
						{
							PlayerInfo[playerid][pSex] = 2;
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) gender to ≈Æ.", sendername,giveplayer,playa);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "** %s (%d) Has Set Your gender to ≈Æ !",sendername,playerid);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Set %s's ≈Æ",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "** Only Genders 1 (male) and 2 (≈Æ) allowed!");
							return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setage", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setage [ÕÊº“ID/ÕÊº“√˚◊÷] [age]");
				return 1;
			}
			new playa;
			new age;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			age = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pAge] = age;
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) age to %d.", sendername,giveplayer,playa,age);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "** %s (%d) Has Set Your Age to %d !",sendername,playerid,age);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Set %s's Age to %d",d,m,y,h,mi,s,sendername,giveplayer,age);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/veh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 6)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /veh [carid] [color1] [color2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Vehicle Number can't be below 400 or above 611 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < -1 || color1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Color Number can't be below 0 or above 126 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /veh [carid] [color1] [color2]");
				return 1;
			}
			if(car == 520) Hydras ++;
			if(car == 425) Hunters ++;
			if(car == 430) Predators ++;
			if(car == 432) Rhinos ++;
			new color2;
			color2 = strval(tmp);
			if(color2 < -1 || color2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Color Number can't be below 0 or above 126 !"); return 1; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			
			new Float:Angle;
			GetPlayerFacingAngle(playerid, Angle);
			
			new carid = CreateVehicle(car, X,Y,Z, Angle, color1, color2, 60000);
			createdcar[carid] = carid;
			engineOn[carid] = true;
			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
			PutPlayerInVehicle(playerid, carid, 0);
			format(string, sizeof(string), "** Vehicle %d spawned.", carid);
			SendClientMessage(playerid, COLOR_GREY, string);
			new housename[24]; GetVehicleName(carid, housename, sizeof(housename));
			new area[36]; GetPlayer2DZone(playerid, area, sizeof(area));
			format(string,sizeof(string), "[π‹¿Ì]: %s Has Spawned a %s (%d) [%d] At His Position (%s).",sendername,housename,car,carid,area);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Spawned a %s (%d) [%d] (Color 1: %d | Color 2: %d) At His Position.",d,m,y,h,mi,s,sendername,housename,car,carid,color1,color2);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/hydra", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid))
			{
			    if (PlayerInfo[playerid][pDuty] != 1 || PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pAdminDuty])
			    {
			        SendClientMessage(playerid,COLOR_GREY, "ƒ„ªπ√ª”–…œ∞‡!");
			        return 1;
				}
			    if (!IsPlayerInRangeOfPoint(playerid, 6.5, 1555.3328,-1610.7543,13.3828) && !IsPlayerInRangeOfPoint(playerid, 6.5, 2789.7092,-2531.5193,13.6306) && !IsPlayerInRangeOfPoint(playerid, 6.5, 1527.3612,-1496.9624,13.5636))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Spawn an Hydra at the æØ≤Ïæ÷, FBI or Army Helipad!");
					return 1;
				}
				if (Hydras <= 2)
				{
					if (PlayerInfo[playerid][pHydra] == 1)
	    			{
		        		SendClientMessage(playerid,COLOR_NICERED,"You Already Have an Hydra, Destroy it First! (/dv)");

						format(string, sizeof(string), "[π‹¿Ì]: %s Tried to Spawn a Second Hydra!", sendername);
						ABroadCast(COLOR_LIGHTRED,string, 5);
		        		return 1;
					}
					if(PlayerInfo[playerid][pDBanned] == 1)
					{
				    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				    	return 1;
					}
				    new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid, X,Y,Z);
					new carid = CreateVehicle(520, X,Y,Z, 0.0, 0, 0, 60000);
					createdcar[carid] = carid;
	 				Hydras ++;
	 				PutPlayerInVehicle(playerid, carid, 0);
					LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "Please Do not Forget to /dv to destroy it!! -- Not destroying it = ban");
					format(string, sizeof(string), "** Vehicle %d spawned.", carid);
					SendClientMessage(playerid, COLOR_GREY, string);
					PlayerInfo[playerid][pHydra] = 1;
					format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Spawned an Hydra at %f | %f | %f", sendername, playerid, X,Y,Z);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hydra",d,m,y1,h,mi,s,sendername);
					CommandLog(string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* There are too many hydras in the state right now, Dump them first!");
				    return 1;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/hunter", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7  || IsSpecial(playerid))
			{
			    if (PlayerInfo[playerid][pDuty] != 1 || PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pAdminDuty])
			    {
			        SendClientMessage(playerid,COLOR_GREY, "ƒ„ªπ√ª”–…œ∞‡!");
			        return 1;
				}
			    if (!IsPlayerInRangeOfPoint(playerid, 6.5, 1555.3328,-1610.7543,13.3828) && !IsPlayerInRangeOfPoint(playerid, 6.5, 2789.7092,-2531.5193,13.6306) && !IsPlayerInRangeOfPoint(playerid, 6.5, 1527.3612,-1496.9624,13.5636))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Spawn an Hydra at the æØ≤Ïæ÷, FBI or Army Helipad!");
					return 1;
				}
				if (PlayerInfo[playerid][pHunter] == 1)
    			{
	        		SendClientMessage(playerid,COLOR_NICERED,"You Already Have a Hunter, Destroy it First! (/dv)");

					format(string, sizeof(string), "[π‹¿Ì]: %s Tried to Spawn a Second Hunter!", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
	        		return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
				if(Hunters < 2)
				{
				    new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid, X,Y,Z);
					new carid = CreateVehicle(425, X,Y,Z, 0.0, 0, 0, 60000);
					createdcar[carid] = carid;
	 				Hunters ++;
	 				PutPlayerInVehicle(playerid, carid, 0);
					LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "Please Do not Forget to /dv to destroy it!! -- Not destroying it = ban");
	 				format(string, sizeof(string), "** Vehicle %d spawned.", carid);
					SendClientMessage(playerid, COLOR_GREY, string);
					PlayerInfo[playerid][pHunter] = 1;
					format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Spawned a Hunter at %f | %f | %f", sendername, playerid, X,Y,Z);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hunter",d,m,y1,h,mi,s,sendername);
					CommandLog(string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* There are too many hunters in the state right now, Dump them first!");
				    return 1;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/rhino", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid))
			{
			    if (PlayerInfo[playerid][pDuty] != 1 || PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pAdminDuty])
			    {
			        SendClientMessage(playerid,COLOR_GREY, "ƒ„ªπ√ª”–…œ∞‡!");
			        return 1;
				}
       			if (!IsPlayerInRangeOfPoint(playerid, 6.5, 2789.7092,-2531.5193,13.6306))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Spawn the Rhino at the Army Helipad!");
					return 1;
				}
				if (PlayerInfo[playerid][pRhino] == 1)
    			{
	        		SendClientMessage(playerid,COLOR_NICERED,"You Already Have a Rhino, Destroy it First! (/dv)");

					format(string, sizeof(string), "[π‹¿Ì]: %s Tried to Spawn a Second Rhino!", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
	        		return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
				if(Rhinos < 2)
				{
				    new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid, X,Y,Z);
					new carid = CreateVehicle(432, X,Y,Z, 0.0, 0, 0, 60000);
					createdcar[carid] = carid;
	 				Rhinos ++;
	 				PutPlayerInVehicle(playerid, carid, 0);
					LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "Please Do not Forget to /dv to destroy it!! -- Not destroying it = ban");
	 				format(string, sizeof(string), "** Vehicle %d spawned.", carid);
					SendClientMessage(playerid, COLOR_GREY, string);
					PlayerInfo[playerid][pRhino] = 1;
					format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Spawned a Rhino at %f | %f | %f", sendername, playerid, X,Y,Z);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /rhino",d,m,y1,h,mi,s,sendername);
					CommandLog(string);
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* There are too many Rhinos in the state right now, Dump them first!");
				    return 1;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/predator", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid))
			{
			    if (PlayerInfo[playerid][pDuty] != 1 || PlayerInfo[playerid][pAdmin] < 5 && PlayerInfo[playerid][pAdminDuty])
			    {
			        SendClientMessage(playerid,COLOR_GREY, "ƒ„ªπ√ª”–…œ∞‡!");
			        return 1;
				}
			    if (!IsPlayerInRangeOfPoint(playerid, 10.5, 957.0421,-2060.8413,-0.6766))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Spawn the Predator at the Verona Beach Flare!");
					return 1;
				}
				if (PlayerInfo[playerid][pPredat] == 1)
    			{
	        		SendClientMessage(playerid,COLOR_NICERED,"You Already Have a Predator, Destroy it First! (/dv)");

					format(string, sizeof(string), "[π‹¿Ì]: %s Tried to Spawn a Second Predator!", sendername);
					ABroadCast(COLOR_LIGHTRED,string, 5);
	        		return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
				if(Predators < 2)
				{
				    new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid, X,Y,Z);
					new carid = CreateVehicle(430, X,Y,Z, 0.0, 1, 1, 60000);
					createdcar[carid] = carid;
					Predators ++;
					PutPlayerInVehicle(playerid, carid, 0);
					LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
					SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "Please Do not Forget to /dv to destroy it!! -- Not destroying it = ban");
	 				format(string, sizeof(string), "** Vehicle %d spawned.", carid);
					SendClientMessage(playerid, COLOR_GREY, string);
					PlayerInfo[playerid][pPredat] = 1;
					format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Spawned a Predator at %f | %f | %f", sendername, playerid, X,Y,Z);
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y1, m, d;
					new h,mi,s;
					getdate(y1,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /predator",d,m,y1,h,mi,s,sendername);
					CommandLog(string);
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* There are too many predators in the state right now, Dump them first!");
				    return 1;
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/dv", true) == 0)
	{
	    new vehicle = GetPlayerVehicleID(playerid);
	    if(!IsACreatedCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY,"* You may only destroy created vehicles");
	    if(IsPlayerConnected(playerid))
		{
		    if(!IsACop(playerid) && PlayerInfo[playerid][pRank] < 7 && !IsSpecial(playerid) && PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_NICERED, "ƒ„≤ª «“ª√˚Law Enforcement Leader!");
				return 1;
			}
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 432 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 520 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 425 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 430)
			{
				SendClientMessage(playerid, COLOR_NICERED, "** You are not in an Hydra / Hunter / Rhino / Predator !");
				return 1;
			}
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 432)
			{
			    if (!IsPlayerInRangeOfPoint(playerid, 6.5, 2789.7092,-2531.5193,13.6306))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Destroy the Rhino at the Army Helipad!");
					return 1;
				}
				SafeRemovePlayerFromVehicle(playerid);
				DestroyVehicle(vehicle);
				format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Destroyed Their Law Enforcement Rhino!", sendername, playerid);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				SendClientMessage(playerid, COLOR_YELLOW, "** Rhino Succesfuly Destroyed !");
				PlayerInfo[playerid][pRhino] = 0;
				Rhinos --;
			}
			else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 520)
			{
			    if (!IsPlayerInRangeOfPoint(playerid, 6.5, 1555.3328,-1610.7543,13.3828) && !IsPlayerInRangeOfPoint(playerid, 6.5, 2789.7092,-2531.5193,13.6306) && !IsPlayerInRangeOfPoint(playerid, 6.5, 1527.3612,-1496.9624,13.5636))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only destroy the hydra at the æØ≤Ïæ÷,FBI or Army Helipad!");
					return 1;
				}
				SafeRemovePlayerFromVehicle(playerid);
				DestroyVehicle(vehicle);
				format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Destroyed Their Law Enforcement Hydra!", sendername, playerid);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				SendClientMessage(playerid, COLOR_YELLOW, "** Hydra Succesfuly Destroyed !");
				PlayerInfo[playerid][pHydra] = 0;
				Hydras --;
			}
			else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
			{
			    if (!IsPlayerInRangeOfPoint(playerid, 6.5, 1555.3328,-1610.7543,13.3828) && !IsPlayerInRangeOfPoint(playerid, 6.5, 2789.7092,-2531.5193,13.6306) && !IsPlayerInRangeOfPoint(playerid, 6.5, 1527.3612,-1496.9624,13.5636))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Destroy the hunter at the æØ≤Ïæ÷,FBI or Army Helipad!");
					return 1;
				}
				SafeRemovePlayerFromVehicle(playerid);
				DestroyVehicle(vehicle);
				format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Destroyed Their Law Enforcement Hunter!", sendername, playerid);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				SendClientMessage(playerid, COLOR_YELLOW, "** Hunter Succesfuly Destroyed !");
				PlayerInfo[playerid][pHunter] = 0;
				Hunters --;
			}
			else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 430)
			{
       			if (!IsPlayerInRangeOfPoint(playerid, 10.5, 957.0421,-2060.8413,-0.6766))
				{
					SendClientMessage(playerid, COLOR_GREY, "You may only Destroy the Predator at the Verona Beach Police Pier (Flare)!");
					return 1;
				}
				SafeRemovePlayerFromVehicle(playerid);
				DestroyVehicle(vehicle);
				format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Destroyed Their Law Enforcement Predator!", sendername, playerid);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				SendClientMessage(playerid, COLOR_YELLOW, "** Predator Succesfuly Destroyed !");
				PlayerInfo[playerid][pPredat] = 0;
				if(Predators < 0)
				{
					Predators --;
				}
			}
		}

		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /dv",d,m,y,h,mi,s,sendername);
		CommandLog(string);
		return 1;
	}

	if(strcmp(cmd, "/adv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] <= 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** You need At Least Level Five To use this Command!");
				return 1;
			}
			if(GetPlayerState(playerid) == 2)
			{
			    new vehicle = GetPlayerVehicleID(playerid);
				new pvehi = GetVehicleModel(vehicle);
				if(!IsACreatedCar(vehicle)) return SendClientMessage(playerid, COLOR_GREY, "* You cannot destroy permanent cars!");
				if(pvehi == 520)
				{
				    if(Hydras >= 1)
				    {
					 	Hydras --;
					 	PlayerInfo[playerid][pHydra] = 0;
					}
				}
				if(pvehi == 425)
				{
				    if(Hunters >= 1)
				    {
						Hunters --;
						PlayerInfo[playerid][pHunter] = 0;
					}
				}
				if(pvehi == 432)
				{
				    if(Rhinos >= 1)
				    {
						Rhinos --;
						PlayerInfo[playerid][pRhino] = 0;
					}
				}
				if(pvehi == 430)
				{
				    if(Predators >= 1)
				    {
						Predators --;
						PlayerInfo[playerid][pPredat] = 0;
					}
				}
			    SafeRemovePlayerFromVehicle(playerid);
				DestroyVehicle(vehicle);
				format(string, sizeof(string), "[π‹¿Ì]: %s (%d) Has Destroyed Their Vehicle!", sendername, playerid);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				SendClientMessage(playerid, COLOR_YELLOW, "** Vehicle Destroyed !");
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Admin Destroyed Their Vehicle",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/vr", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    SendClientMessage(playerid, COLOR_GREY, "** Vehicle Fixed !");
       			format(string, sizeof(string), "[π‹¿Ì]: %s has Fixed His Car", sendername);
				ABroadCast(COLOR_LIGHTRED, string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Repaired His Vehicle.",d,m,y,h,mi,s,sendername);
				AdminLog(string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/setcarhp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setcarhp [ÕÊº“ID/ÕÊº“√˚◊÷] [health]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(IsPlayerInAnyVehicle(playa))
			            {
							SetVehicleHealth(GetPlayerVehicleID(playa), health * 10);
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) car hp to %d.", sendername,giveplayer,playa,health);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "Administrator %s Has Set your car HP to %d",sendername, health);
							SendClientMessage(playa, TEAM_GROVE_COLOR, string);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's car HP to: [%d]",d,m,y,h,mi,s,sendername,giveplayer,health);
							GiveLog(string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/setcarpj", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setcarpj [ÕÊº“ID/ÕÊº“√˚◊÷] [health]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						ChangeVehiclePaintjob(GetPlayerVehicleID(playa), health)
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, 256, "[π‹¿Ì]: %s has set %s's (%d) car paintjob to %d.", sendername,giveplayer,playa,health);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "Administrator %s Has Set your car paintjob to %d",sendername, health);
						SendClientMessage(playa, TEAM_GROVE_COLOR, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's car paintjob to: [%d]",d,m,y,h,mi,s,sendername,giveplayer,health);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/setbizz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new houseid = -1;
			
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(BizzInfo[h][bSetted] == 1)
					{
					    houseid = h + 1;
					}
				}
				
			    if(BizzInfo[houseid][bSetted] == 0)
			    {
			        new string2[256];
			        
					format(string, sizeof(string),"LARP/Bizzes/%d.ini",houseid);
					dini_Create(string);

			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setbizz [type]");
						SendClientMessage(playerid, COLOR_GRAD2, "TYPES: 0 (Cluckin Bell) - 1 (∫∫±§µÍ) - 2 (Pizza Stack) - 3 (Donut Shop) - 4 (24-7) - 5 (Strip Club) - 6 (Bar) - 7 (Gym)");
                        SendClientMessage(playerid, COLOR_GRAD2, "TYPES: 8 (Sex Shop) - 9 (Binco) - 10 (Ammunation) - 11 (Disco) - 12 (Restaurant) - 13 (ZIP) - 14(Victom) - 15 (Sub Urban)");
						return 1;
					}
					new type;
					type = strval(tmp);
					
					if(type == 0) // Cluckin
					{
				        BizzInfo[houseid][bExitX] = 365.779296;
						BizzInfo[houseid][bExitY] = -9.169898;
						BizzInfo[houseid][bExitZ] = 1001.851623;
						
						BizzInfo[houseid][bBuyPrice] = 325000;
						BizzInfo[houseid][bLevelNeeded] = 6;
						BizzInfo[houseid][bInterior] = 9;
						BizzInfo[houseid][bInteriorNr] = 20;

						strmid(BizzInfo[houseid][bMessage],"Cluckin' Bell",0,strlen("Cluckin' Bell"),255);
					}
					else if(type == 1) // Burger
					{
				        BizzInfo[houseid][bExitX] = 366.032409;
						BizzInfo[houseid][bExitY] = -72.639999;
						BizzInfo[houseid][bExitZ] = 1001.507812;

						BizzInfo[houseid][bBuyPrice] = 325000;
						BizzInfo[houseid][bLevelNeeded] = 6;
						BizzInfo[houseid][bInterior] = 10;
						BizzInfo[houseid][bInteriorNr] = 21;

						strmid(BizzInfo[houseid][bMessage],"Burger Shoot",0,strlen("Burger Shoot"),255);
					}
					else if(type == 2) // Pizza
					{
				        BizzInfo[houseid][bExitX] = 372.411712;
						BizzInfo[houseid][bExitY] = -130.457702;
						BizzInfo[houseid][bExitZ] = 1001.492187;

						BizzInfo[houseid][bBuyPrice] = 325000;
						BizzInfo[houseid][bLevelNeeded] = 6;
						BizzInfo[houseid][bInterior] = 5;
						BizzInfo[houseid][bInteriorNr] = 22;

						strmid(BizzInfo[houseid][bMessage],"Pizza Shop",0,strlen("Pizza Shop"),255);
					}
					else if(type == 3) // Donut
					{
				        BizzInfo[houseid][bExitX] = 377.172393;
						BizzInfo[houseid][bExitY] = -193.304504;
						BizzInfo[houseid][bExitZ] = 1000.632812;

						BizzInfo[houseid][bBuyPrice] = 350000;
						BizzInfo[houseid][bLevelNeeded] = 6;
						BizzInfo[houseid][bInterior] = 17;
						BizzInfo[houseid][bInteriorNr] = 30;

						strmid(BizzInfo[houseid][bMessage],"Donut Shop",0,strlen("Donut Shop"),255);
					}
					else if(type == 4) // 24-7
					{
						if(nextshop == 1)
						{
					        BizzInfo[houseid][bExitX] = -25.132600;
							BizzInfo[houseid][bExitY] = -139.067001;
							BizzInfo[houseid][bExitZ] = 1003.546875;
							BizzInfo[houseid][bInterior] = 16;
							
							nextshop ++;
						}
						else if(nextshop == 2)
						{
					        BizzInfo[houseid][bExitX] = -28.261899;
							BizzInfo[houseid][bExitY] = -31.767400;
							BizzInfo[houseid][bExitZ] = 1003.546875;
							BizzInfo[houseid][bInterior] = 4;

							nextshop ++;
						}
						else if(nextshop == 3)
						{
					        BizzInfo[houseid][bExitX] = -27.391899;
							BizzInfo[houseid][bExitY] = -58.252899;
							BizzInfo[houseid][bExitZ] = 1003.546875;
							BizzInfo[houseid][bInterior] = 6;

							nextshop ++;
						}
						else if(nextshop == 4)
						{
					        BizzInfo[houseid][bExitX] = -30.929899;
							BizzInfo[houseid][bExitY] = -92.011398;
							BizzInfo[houseid][bExitZ] = 1003.546875;
							BizzInfo[houseid][bInterior] = 18;

							nextshop = 1;
						}


						BizzInfo[houseid][bBuyPrice] = 350000;
						BizzInfo[houseid][bLevelNeeded] = 5;
						BizzInfo[houseid][bInteriorNr] = 12;

						strmid(BizzInfo[houseid][bMessage],"24-7",0,strlen("24-7"),255);
					}
					else if(type == 5) // Pig Pen
					{
				        BizzInfo[houseid][bExitX] = 1204.846191;
						BizzInfo[houseid][bExitY] = -13.852100;
						BizzInfo[houseid][bExitZ] = 1000.921875;

						BizzInfo[houseid][bBuyPrice] = 385000;
						BizzInfo[houseid][bLevelNeeded] = 8;
						BizzInfo[houseid][bInterior] = 2;
						BizzInfo[houseid][bInteriorNr] = 17;

						strmid(BizzInfo[houseid][bMessage],"Strip Club",0,strlen("Strip Club"),255);
					}
					else if(type == 6) // Bar
					{
				        BizzInfo[houseid][bExitX] = 501.870788;
						BizzInfo[houseid][bExitY] = -67.582000;
						BizzInfo[houseid][bExitZ] = 998.757812;

						BizzInfo[houseid][bBuyPrice] = 350000;
						BizzInfo[houseid][bLevelNeeded] = 6;
						BizzInfo[houseid][bInterior] = 11;
						BizzInfo[houseid][bInteriorNr] = 26;

						strmid(BizzInfo[houseid][bMessage],"Bar",0,strlen("Bar"),255);
					}
					else if(type == 7) //Ω°…Ì∑ø
					{
				        BizzInfo[houseid][bExitX] = 772.359375;
						BizzInfo[houseid][bExitY] = -5.515697;
						BizzInfo[houseid][bExitZ] = 1000.728576;

						BizzInfo[houseid][bBuyPrice] = 400000;
						BizzInfo[houseid][bLevelNeeded] = 8;
						BizzInfo[houseid][bInterior] = 5;
						BizzInfo[houseid][bInteriorNr] = 15;

						strmid(BizzInfo[houseid][bMessage],"Gym",0,strlen("Gym"),255);
					}
					else if(type == 8) // Sex Shop
					{
				        BizzInfo[houseid][bExitX] = -100.295700;
						BizzInfo[houseid][bExitY] = -24.654399;
						BizzInfo[houseid][bExitZ] = 1000.718811;

						BizzInfo[houseid][bBuyPrice] = 350000;
						BizzInfo[houseid][bLevelNeeded] = 5;
						BizzInfo[houseid][bInterior] = 3;
						BizzInfo[houseid][bInteriorNr] = 34;

						strmid(BizzInfo[houseid][bMessage],"Sex Shop",0,strlen("Sex Shop"),255);
					}
					else if(type == 9) // Binco
					{
				        BizzInfo[houseid][bExitX] = 207.766204;
						BizzInfo[houseid][bExitY] = -111.266296;
						BizzInfo[houseid][bExitZ] = 1005.132812;

						BizzInfo[houseid][bBuyPrice] = 600000;
						BizzInfo[houseid][bLevelNeeded] = 8;
						BizzInfo[houseid][bInterior] = 15;
						BizzInfo[houseid][bInteriorNr] = 16;

						strmid(BizzInfo[houseid][bMessage],"Binco",0,strlen("Binco"),255);
					}
					else if(type == 10) // Ammunation
					{
				        BizzInfo[houseid][bExitX] = 315.762786;
						BizzInfo[houseid][bExitY] = -143.661193;
						BizzInfo[houseid][bExitZ] = 999.601623;

						BizzInfo[houseid][bBuyPrice] = 750000;
						BizzInfo[houseid][bLevelNeeded] = 10;
						BizzInfo[houseid][bInterior] = 7;
						BizzInfo[houseid][bInteriorNr] = 14;

						strmid(BizzInfo[houseid][bMessage],"Ammunation",0,strlen("Ammunation"),255);
					}
					else if(type == 11) // Disco
					{
				        BizzInfo[houseid][bExitX] = 493.439300;
						BizzInfo[houseid][bExitY] = -24.916900;
						BizzInfo[houseid][bExitZ] = 1000.671875;

						BizzInfo[houseid][bBuyPrice] = 350000;
						BizzInfo[houseid][bLevelNeeded] = 6;
						BizzInfo[houseid][bInterior] = 17;
						BizzInfo[houseid][bInteriorNr] = 18;

						strmid(BizzInfo[houseid][bMessage],"Disco",0,strlen("Disco"),255);
					}
					else if(type == 12) // Restaurant
					{
				        BizzInfo[houseid][bExitX] = 460.265411;
						BizzInfo[houseid][bExitY] = -88.611503;
						BizzInfo[houseid][bExitZ] = 999.554687;

						BizzInfo[houseid][bBuyPrice] = 300000;
						BizzInfo[houseid][bLevelNeeded] = 5;
						BizzInfo[houseid][bInterior] = 4;
						BizzInfo[houseid][bInteriorNr] = 38;

						strmid(BizzInfo[houseid][bMessage],"Restaurant",0,strlen("Restaurant"),255);
					}
					else if(type == 13) // ZIP
					{
				        BizzInfo[houseid][bExitX] = 161.410293;
						BizzInfo[houseid][bExitY] = -96.687202;
						BizzInfo[houseid][bExitZ] = 1001.804687;

						BizzInfo[houseid][bBuyPrice] = 600000;
						BizzInfo[houseid][bLevelNeeded] = 8;
						BizzInfo[houseid][bInterior] = 18;
						BizzInfo[houseid][bInteriorNr] = 36;

						strmid(BizzInfo[houseid][bMessage],"ZIP",0,strlen("ZIP"),255);
					}
					else if(type == 14) // Victim
					{
				        BizzInfo[houseid][bExitX] = 227.342803;
						BizzInfo[houseid][bExitY] = -8.243800;
						BizzInfo[houseid][bExitZ] = 1002.210876;

						BizzInfo[houseid][bBuyPrice] = 600000;
						BizzInfo[houseid][bLevelNeeded] = 8;
						BizzInfo[houseid][bInterior] = 5;
						BizzInfo[houseid][bInteriorNr] = 37;

						strmid(BizzInfo[houseid][bMessage],"Victim",0,strlen("Victim"),255);
					}
					else if(type == 15) // Suburban
					{
				        BizzInfo[houseid][bExitX] = 203.895294;
						BizzInfo[houseid][bExitY] = -50.656700;
						BizzInfo[houseid][bExitZ] = 1001.804687;

						BizzInfo[houseid][bBuyPrice] = 600000;
						BizzInfo[houseid][bLevelNeeded] = 8;
						BizzInfo[houseid][bInterior] = 1;
						BizzInfo[houseid][bInteriorNr] = 35;

						strmid(BizzInfo[houseid][bMessage],"Sub urban",0,strlen("Sub urban"),255);
					}

					BizzInfo[houseid][bEntranceX] = X;
					BizzInfo[houseid][bEntranceY] = Y;
					BizzInfo[houseid][bEntranceZ] = Z;
					BizzInfo[houseid][bVirWorld] = houseid;
					BizzInfo[houseid][bSetted] = 1;
					
					EvaluateBizz(houseid);
					
					strmid(BizzInfo[houseid][bOwner],"◊¥Ã¨",0,strlen("◊¥Ã¨"),255);
                    strmid(BizzInfo[houseid][bExtortion],"√ª»À",0,strlen("√ª»À"),255);

					format(string, sizeof(string),"* Created the bizz number %d. The bizz was set automatically, Use /edit to edit it if you want.",houseid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					
					format(string,sizeof(string),"[π‹¿Ì]: %s Has Set Bizz: [%d]'s entrance to [%f - %f - %f].",sendername,houseid,X,Y,Z);
				    ABroadCast(COLOR_LIGHTRED,string, 5);
				    
				    format(string2,sizeof(string2),"¥À≤˙“µ…–Œﬁ“µ÷˜! \n %s \n ≤˙“µ±‡∫≈: %d \n ≥ˆ €º€∏Ò: $%d \n π∫¬Úµ»º∂–Ë«Û: %d \n »Áπ˚œÎπ∫¬Ú’‚¿Ô«Î‘⁄’‚¿Ô ‰»Î{F00FF0}/buybiz",BizzInfo[houseid][bMessage],houseid, BizzInfo[houseid][bBuyPrice],BizzInfo[houseid][bLevelNeeded]);
					BizzLabel[houseid] = Create3DTextLabel(string2 ,0x00FF00AA,X,Y,Z,50, 0, 1);
					BizzPickup[houseid] = CreateDynamicPickup(1274,1,X,Y,Z,-1);

					OnPropUpdate(2,houseid);
					OnPropTextdrawUpdate(2, houseid);
					
					SendClientMessage(playerid, COLOR_GREY,"* The label will appear on next server restart due to limit of labels!");

					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set the bizz %d.",d,m,y,h,mi,s,sendername,giveplayer,houseid);
					AdminLog(string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ERROR: Automatic detected Bizzid already setted!");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/sethouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new houseid = -1;
			new Float:X, Float:Y, Float:Z
			GetPlayerPos(playerid, X,Y,Z);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    new string2[256];
			    
			    for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(HouseInfo[h][hSetted] == 1)
					{
					    houseid = h + 1;
					}
				}
			    if(HouseInfo[houseid][hSetted] == 0)
			    {
					format(string, sizeof(string),"LARP/Properties/%d.ini",houseid);
					dini_Create(string);

			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sethouse [type]");
						SendClientMessage(playerid, COLOR_GRAD2, "TYPES: 0 Apartment - 1 Small - 2 Medium - 3 Big");
						return 1;
					}
					new type;
					type = strval(tmp);
					if(type == 0)
					{
						HouseInfo[houseid][hValue] = 45000;
						HouseInfo[houseid][hLevel] = 3;
						strmid(HouseInfo[houseid][hDiscription], "House Apartment", 0, strlen("House Apartment"), 255);
						if(nextapartment == 24)
						{
						    nextapartment = 25;
						    HouseInfo[houseid][hExitx] = 244.411987; HouseInfo[houseid][hExity] = 305.032990; HouseInfo[houseid][hExitz] = 999.231995;
							HouseInfo[houseid][hInt] = 1;
						}
						else if(nextapartment == 25)
						{
						    nextapartment = 27;
						    HouseInfo[houseid][hExitx] = 266.4991; HouseInfo[houseid][hExity] = 304.9922; HouseInfo[houseid][hExitz] = 999.1484;
							HouseInfo[houseid][hInt] = 2;
						}
						else if(nextapartment == 27)
						{
						    nextapartment = 29;
						    HouseInfo[houseid][hExitx] = 302.181000; HouseInfo[houseid][hExity] = 300.722992; HouseInfo[houseid][hExitz] = 999.231995;
							HouseInfo[houseid][hInt] = 4;
						}
						else if(nextapartment == 29)
						{
						    nextapartment = 24;
						    HouseInfo[houseid][hExitx] = 346.870025; HouseInfo[houseid][hExity] = 309.259033; HouseInfo[houseid][hExitz] = 999.155700;
							HouseInfo[houseid][hInt] = 6;
						}
					}
					else if(type == 1)
					{
						HouseInfo[houseid][hValue] = 50000;
						HouseInfo[houseid][hLevel] = 4;
						strmid(HouseInfo[houseid][hDiscription], "House Small", 0, strlen("House Small"), 255);
						if(nexthouse == 2)
						{
						    nexthouse = 3;
						    HouseInfo[houseid][hExitx] = 225.756989; HouseInfo[houseid][hExity] = 1240.000000; HouseInfo[houseid][hExitz] = 1082.149902;
							HouseInfo[houseid][hInt] = 2;
						}
						else if(nexthouse == 3)
						{
						    nexthouse = 6;
						    HouseInfo[houseid][hExitx] = 223.1929; HouseInfo[houseid][hExity] = 1287.0780; HouseInfo[houseid][hExitz] = 1082.1406;
							HouseInfo[houseid][hInt] = 1;
						}
						else if(nexthouse == 6)
						{
						    nexthouse = 12;
						    HouseInfo[houseid][hExitx] = 328.1066; HouseInfo[houseid][hExity] = 1478.0106; HouseInfo[houseid][hExitz] = 1084.4375;
							HouseInfo[houseid][hInt] = 15;
						}
						else if(nexthouse == 12)
						{
						    nexthouse = 41;
						    HouseInfo[houseid][hExitx] = 260.983978; HouseInfo[houseid][hExity] = 1286.549927; HouseInfo[houseid][hExitz] = 1080.299927;
							HouseInfo[houseid][hInt] = 4;
						}
						else if(nexthouse == 41)
						{
						    nexthouse = 2;
						    HouseInfo[houseid][hExitx] = 446.5014; HouseInfo[houseid][hExity] = 507.0295; HouseInfo[houseid][hExitz] = 1001.4195;
							HouseInfo[houseid][hInt] = 12;
						}

					}
					else if(type == 2)
					{
						HouseInfo[houseid][hValue] = 65000;
						HouseInfo[houseid][hLevel] = 6;
						strmid(HouseInfo[houseid][hDiscription], "House Medium", 0, strlen("House Medium"), 255);
						if(nextmedium == 17)
						{
						    nextmedium = 19;
						    HouseInfo[houseid][hExitx] = 140.2267; HouseInfo[houseid][hExity] = 1365.9246; HouseInfo[houseid][hExitz] = 1083.8594;
							HouseInfo[houseid][hInt] = 5;
						}
						else if(nextmedium == 19)
						{
						    nextmedium = 21;
						    HouseInfo[houseid][hExitx] = -68.294098; HouseInfo[houseid][hExity] = 1353.469971; HouseInfo[houseid][hExitz] = 1080.279907;
							HouseInfo[houseid][hInt] = 6;
						}
						else if(nextmedium == 21)
						{
						    nextmedium = 30;
						    HouseInfo[houseid][hExitx] = -42.581997; HouseInfo[houseid][hExity] = 1408.109985; HouseInfo[houseid][hExitz] = 1084.449951;
							HouseInfo[houseid][hInt] = 8;
						}
						else if(nextmedium == 30)
						{
						    nextmedium = 32;
						    HouseInfo[houseid][hExitx] = 2495.6416; HouseInfo[houseid][hExity] = -1692.2361; HouseInfo[houseid][hExitz] = 1014.7422;
							HouseInfo[houseid][hInt] = 3;
						}
						else if(nextmedium == 32)
						{
						    nextmedium = 38;
						    HouseInfo[houseid][hExitx] = 2468.4502; HouseInfo[houseid][hExity] = -1698.4801; HouseInfo[houseid][hExitz] = 1013.5078;
							HouseInfo[houseid][hInt] = 2;
						}
						else if(nextmedium == 38)
						{
						    nextmedium = 39;
						    HouseInfo[houseid][hExitx] = 2807.9172; HouseInfo[houseid][hExity] = -1174.4333; HouseInfo[houseid][hExitz] = 1025.5703;
							HouseInfo[houseid][hInt] = 8;
						}
						else if(nextmedium == 39)
						{
						    nextmedium = 17;
						    HouseInfo[houseid][hExitx] = 318.7010; HouseInfo[houseid][hExity] = 1114.7716; HouseInfo[houseid][hExitz] = 1083.8828;
							HouseInfo[houseid][hInt] = 5;
						}
					}
					else if(type == 3)
					{
						HouseInfo[houseid][hValue] = 85000;
						HouseInfo[houseid][hLevel] = 9;
						strmid(HouseInfo[houseid][hDiscription], "House Big", 0, strlen("House Big"), 255);
						if(nextbig == 1)
						{
						    nextbig = 4;
						    HouseInfo[houseid][hExitx] = 235.3054; HouseInfo[houseid][hExity] = 1186.6835; HouseInfo[houseid][hExitz] = 1080.2578;
							HouseInfo[houseid][hInt] = 3;
						}
						else if(nextbig == 4)
						{
						    nextbig = 11;
						    HouseInfo[houseid][hExitx] = 225.630997; HouseInfo[houseid][hExity] = 1022.479980; HouseInfo[houseid][hExitz] = 1084.069946;
							HouseInfo[houseid][hInt] = 7;
						}
						else if(nextbig == 11)
						{
						    nextbig = 13;
						    HouseInfo[houseid][hExitx] = 227.722992; HouseInfo[houseid][hExity] = 1114.389893; HouseInfo[houseid][hExitz] = 1081.189941;
							HouseInfo[houseid][hInt] = 5;
						}
						else if(nextbig == 13)
						{
						    nextbig = 14;
						    HouseInfo[houseid][hExitx] = 221.7330; HouseInfo[houseid][hExity] = 1140.5146; HouseInfo[houseid][hExitz] = 1082.6094;
							HouseInfo[houseid][hInt] = 4;
						}
						else if(nextbig == 14)
						{
						    nextbig = 15;
						    HouseInfo[houseid][hExitx] = 27.132700; HouseInfo[houseid][hExity] = 1341.149902; HouseInfo[houseid][hExitz] = 1084.449951;
							HouseInfo[houseid][hInt] = 10;
						}
						else if(nextbig == 15)
						{
						    nextbig = 40;
						    HouseInfo[houseid][hExitx] = -262.601990; HouseInfo[houseid][hExity] = 1456.619995; HouseInfo[houseid][hExitz] = 1084.449951;
							HouseInfo[houseid][hInt] = 4;
						}
						else if(nextbig == 40)
						{
						    nextbig = 1;
						    HouseInfo[houseid][hExitx] = 2324.3267; HouseInfo[houseid][hExity] = -1149.1440; HouseInfo[houseid][hExitz] = 1050.7101;
							HouseInfo[houseid][hInt] = 12;
						}
					}
					HouseInfo[houseid][hEntrancex] = X;
					HouseInfo[houseid][hEntrancey] = Y;
					HouseInfo[houseid][hEntrancez] = Z;
					HouseInfo[houseid][hWorld] = houseid;
					HouseInfo[houseid][hSetted] = 1;
					strmid(HouseInfo[houseid][hOwner],"◊¥Ã¨",0,strlen("◊¥Ã¨"),255);
					strmid(HouseInfo[houseid][hMessage],"For Sale",0,strlen("For Sale"),255);
					EvaluateHouse(houseid);
					format(string, sizeof(string),"* Created the house number %d. The house was set automatically, Use /edit to edit it if you want.",houseid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string,sizeof(string),"[π‹¿Ì]: %s Has Set House: [%d]'s entrance to [%f - %f - %f].",sendername,houseid,X,Y,Z);
				    ABroadCast(COLOR_LIGHTRED,string, 5);
				    format(string2,sizeof(string2),"¥À∑øŒ›…–Œﬁ“µ÷˜! \n ∑ø≤˙±‡∫≈: %d \n ≥ˆ €º€∏Ò: $%d \n √Ë ˆ: %s \n π∫¬Úµ»º∂–Ë«Û: %d",HouseInfo[houseid][hWorld], HouseInfo[houseid][hValue],HouseInfo[houseid][hDiscription], HouseInfo[houseid][hLevel]);
					HouseLabel[houseid] = Create3DTextLabel(string2 ,0x00FF00AA,X,Y,Z,25, 0, 1);
					HousePickup[houseid] = CreateDynamicPickup(1273, 1, HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez]);
					OnPropUpdate(1,houseid);
					OnPropTextdrawUpdate(1, houseid);
					OnHousePickupUpdate(houseid);
					SendClientMessage(playerid, COLOR_GREY,"* The label will appear on next server restart due to limit of labels!");
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set the house %d.",d,m,y,h,mi,s,sendername,giveplayer,houseid);
					AdminLog(string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ERROR: Automatic detected Houseid already setted!");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/unsetbizz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /unsetbizz [bizzid]");
				return 1;
			}
			new houseid;
			houseid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
	  			if(houseid >= 0 && houseid <= sizeof(BizzInfo))
			    {
	    			if(BizzInfo[houseid][bSetted] == 1)
			        {
			            BizzInfo[houseid][bSetted] = 0;
			        
						Delete3DTextLabel(BizzLabel[houseid]);
						DestroyDynamicPickup(BizzPickup[houseid]);
						
						OnPropUpdate(2,houseid);
						
						for(new i = 0; i < MAX_PLAYERS; i ++)
					    {
					        if(IsPlayerConnected(i))
					        {
					            if(PlayerInfo[i][pPbiskey] == houseid)
					            {
					                SafeGivePlayerMoney(i, BizzInfo[houseid][bBuyPrice]);
					                PlayerInfo[i][pPbiskey] = 9999;
								}
								else
								{
								    format(string, sizeof(string),"LARP/Users/%s.ini",BizzInfo[houseid][bOwner]);
					         		new totalcash = dini_Int(string,"Money") + BizzInfo[houseid][bBuyPrice];
					         		dini_IntSet(string,"Money",totalcash);
					         		dini_IntSet(string,"Bizz",9999);
								}
							}
						}
						
						format(string, sizeof(string),"* Destroyed the bizz number %d. This bizz is now unset.",houseid);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Un-Set the bizzid %s.",d,m,y,h,mi,s,sendername,giveplayer,houseid);
						AdminLog(string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* This bizz isn't setted!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ID Must not go above 500 and below 0");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/unsethouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /unsethouse [houseid(34-150)]");
				return 1;
			}
			new houseid;
			houseid = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
	  			if(houseid >= 0 && houseid <= 1023)
			    {
	    			if(HouseInfo[houseid][hSetted] == 1)
			        {
						HouseInfo[houseid][hSetted] = 0;

						Delete3DTextLabel(HouseLabel[houseid]);
						DestroyDynamicPickup(HousePickup[houseid]);
						OnPropUpdate(1,houseid);
						
						for(new i = 0; i < MAX_PLAYERS; i ++)
					    {
					        if(IsPlayerConnected(i))
					        {
					            if(PlayerInfo[i][pPhousekey] == houseid)
					            {
					                SafeGivePlayerMoney(i, HouseInfo[houseid][hValue]);
					                PlayerInfo[i][pPhousekey] = 9999;
								}
								else
								{
								    format(string, sizeof(string),"LARP/Users/%s.ini",HouseInfo[houseid][hOwner]);
					         		new totalcash = dini_Int(string,"Money") + HouseInfo[houseid][hValue];
					         		dini_IntSet(string,"Money",totalcash);
					         		dini_IntSet(string,"House",9999);
								}
							}
						}
						
						format(string, sizeof(string),"* Destroyed the house number %d. This house is now unset.",houseid);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Un-Set the houseid %s.",d,m,y,h,mi,s,sendername,giveplayer,houseid);
						AdminLog(string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* This house isn't setted!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ID must not go above 1024 or below 0");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	
	if(strcmp(cmd, "/weather", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /weather [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID can't be below 0 or above 45!"); return 1; }
			SetWeather(weather);
       		format(string, sizeof(string), "[π‹¿Ì] %s has changed everyone's weather to %d.", sendername,weather);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			format(string, sizeof(string), "World's Weather Has Been Changed to %d",weather);
			SendClientMessageToAll(COLOR_NICERED,string);
			DefaultWeather = weather;
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Changed The Server Weather to %d",d,m,y,h,mi,s,sendername,weather);
			AdminLog(string);
		}
		return 1;
	}
//----------------------------------[Money]------------------------------------------------
	if(strcmp(cmd, "/money", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /money [ÕÊº“ID/ÕÊº“√˚◊÷] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SafeResetPlayerMoney(playa);
						//ConsumingMoney[playa] = 1;
						SafeGivePlayerMoney(playa, money);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s has set %s (%d)'s money to $%d.", sendername,giveplayer,playa,money);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "** Succesfuly Set %s Money to %d", giveplayer,money);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Money to %d",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/bankmoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bankmoney [ÕÊº“ID/ÕÊº“√˚◊÷] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pAccount] = money;
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "[π‹¿Ì]: %s has set %s (%d)'s money to $%d.", sendername,giveplayer,playa,money);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "** Succesfuly Set %s Money to %d", giveplayer,money);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's Money to %d",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[PayDay]------------------------------------------------
	if(strcmp(cmd, "/payday", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /payday [money]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				new money;
				money = strval(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "** Payday can't be below 1");
				if(PlayerInfo[playerid][pAdmin] == 5 && money > 10000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $10000");
				if(PlayerInfo[playerid][pAdmin] == 6 && money > 50000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $50000");
				if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
						SafeGivePlayerMoney(i, money);
					}
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Payday of $%d",sendername,money,giveplayer,giveplayerid);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "It's Payday! You receive $%d from the government.",money);
				SendClientMessageToAll(COLOR_LIGHTBLUE,string);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a Payday of %d",d,m,y,h,mi,s,sendername,money);
				GiveLog(string);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/moneyall", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /moneyall [money]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				new money;
				money = strval(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        SafeResetPlayerMoney(i);
						SafeGivePlayerMoney(i, money);
					}
				}
				format(string, sizeof(string), "It's HippyDay! Your money was set to $%d by the government.",money);
				if(money < 0)
				{
					SendClientMessageToAll(COLOR_NICERED,string);
				}
				else
				{
				    SendClientMessageToAll(COLOR_LIGHTBLUE,string);
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set everyone's money to $%d",sendername,money,giveplayer,giveplayerid);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s set everyone's money to %d",d,m,y,h,mi,s,sendername,money);
				GiveLog(string);
				AdminLog(string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/bankmoneyall", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bankmoneyall [money]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
				new money;
				money = strval(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        PlayerInfo[i][pAccount] = money;
					}
				}
				format(string, sizeof(string), "It's HippyDay! Your bank money was set to $%d by the government.",money);
				if(money < 0)
				{
					SendClientMessageToAll(COLOR_NICERED,string);
				}
				else
				{
				    SendClientMessageToAll(COLOR_LIGHTBLUE,string);
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set everyone's bank money to $%d",sendername,money,giveplayer,giveplayerid);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s set everyone's money to %d",d,m,y,h,mi,s,sendername,money);
				GiveLog(string);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/taxday", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /taxday [money]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 5)
			{
				new money;
				money = strval(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "** Taxday can't be below 1");
				if(PlayerInfo[playerid][pAdmin] == 5 && money > 10000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $10000");
    			if(PlayerInfo[playerid][pAdmin] == 6 && money > 50000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $50000");
                if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
						SafeGivePlayerMoney(i, -money);
					}
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Given a Taxday of $%d",sendername,money,giveplayer,giveplayerid);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				format(string, sizeof(string), "It's Taxday! You pay $%d to the government.",money);
				SendClientMessageToAll(COLOR_NICERED,string);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a Taxday of %d",d,m,y,h,mi,s,sendername,money);
				GiveLog(string);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setalllotto", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setalllotto [money]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
				new money;
				money = strval(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(money < 1 || money > 80) return SendClientMessage(playerid, COLOR_GREY, "** number can't be below 1 or above 80");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
						PlayerInfo[i][pLottoNr] = money;
					}
				}
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Set everyone's lotto nubmer to %d",sendername,money,giveplayer,giveplayerid);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a Taxday of %d",d,m,y,h,mi,s,sendername,money);
				GiveLog(string);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setregulartime", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setregulartime [ÕÊº“ID/ÕÊº“√˚◊÷] [seconds]");
				return 1;
			}
			new money;
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(money < 1||money > 144000) { SendClientMessage(playerid, COLOR_GREY, "** Time Can't Go Below 0 And Above 57600√Î!"); return 1; }
						PlayerInfo[playa][pRegularCount] = money;
						format(string, sizeof(string), "** ƒ„µƒ≥£øÕÕÊº“ Time has been Changed to %d√Î by an admin!!",money);
						SendClientMessage(playa,COLOR_LIGHTBLUE,string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Set %s's regular time to %d√Î",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//---------------------------------------[Give Money]-------------------------------------

	if(strcmp(cmd, "/reward", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /reward [ÕÊº“ID/ÕÊº“√˚◊÷] [money]");
				return 1;
			}
			new money;
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "** Payday can't be below 1");
						if(PlayerInfo[playerid][pAdmin] == 6 && money > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $5000000");
						if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
						SafeGivePlayerMoney(playa, money);
						format(string, sizeof(string), "** Received an Special Bonification of $%d !!",money);
						SendClientMessage(playa,COLOR_LIGHTBLUE,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has given a reward of $%d to %s",sendername,money, giveplayer);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave to %s's $%d",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	

	if(strcmp(cmd, "/bankreward", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /bankreward [ÕÊº“ID/ÕÊº“√˚◊÷] [money]");
				return 1;
			}
			new money;
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "** Payday can't be below 1");
						if(PlayerInfo[playerid][pAdmin] == 6 && money > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $5000000");
						if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
						
                        PlayerInfo[playa][pAccount] += money;
						format(string, sizeof(string), "** Received an Special Interest of $%d !!",money);
						SendClientMessage(playa,COLOR_LIGHTBLUE,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has given an Interest of $%d to %s",sendername,money, giveplayer);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave to %s's $%d (bank)",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/tax", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /tax [ÕÊº“ID/ÕÊº“√˚◊÷] [money]");
				return 1;
			}
			new money;
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "** Payday can't be below 1");
						if(PlayerInfo[playerid][pAdmin] == 6 && money > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $5000000");
						if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
						
						SafeGivePlayerMoney(playa, -money);
						format(string, sizeof(string), "** Received a Tax of $%d",money);
						SendClientMessage(playa,COLOR_NICERED,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has given a tax of $%d to %s",sendername,money, giveplayer);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a tax to %s's of $%d",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/banktax", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /banktax [ÕÊº“ID/ÕÊº“√˚◊÷] [money]");
				return 1;
			}
			new money;
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "** Payday can't be below 1");
						if(PlayerInfo[playerid][pAdmin] == 6 && money > 5000000) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $5000000");
						if(PlayerInfo[playerid][pAdmin] >= 1337 && money > 999999999) return SendClientMessage(playerid, COLOR_GREY, "Your Money limit is $999999999");
						
						PlayerInfo[playa][pAccount] -= money;
						format(string, sizeof(string), "** Received a Bank Tax of $%d",money);
						SendClientMessage(playa,COLOR_NICERED,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has given a tax of $%d to %s",sendername,money, giveplayer);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a tax to %s's of $%d",d,m,y,h,mi,s,sendername,giveplayer,money);
						GiveLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

//--------------------------------------Specials Team, Saves to a File------------------------------------
	if(strcmp(cmd, "/swat", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /swat [ÕÊº“ID/ÕÊº“√˚◊÷] [º∂±](1-4)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pSwat] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 4) { SendClientMessage(playerid, COLOR_GREY, "** º∂±≤ªƒ‹µÕ”⁄0¥Û”⁄4!"); return 1; }
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pSwat] = level;
						format(string, sizeof(string), "** ∏¯ %s SWAT µ»º∂ [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~b~-L.S.P.D- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~S.W.A.T Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /swat %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/tactical", true) == 0)  // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /tactical [ÕÊº“ID/ÕÊº“√˚◊÷] [level](1-3)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pMember] == 2 && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pTactical] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 4) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 4!"); return 1; }
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pTactical] = level;
						format(string, sizeof(string), "** Gave to %s Special Forces Level [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~r~-F.B.I- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~Tactical Forces Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /tactical %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/specialf", true) == 0)  // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /specialf [ÕÊº“ID/ÕÊº“√˚◊÷] [level](1-3)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pMember] == 3 && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pSpecialF] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 4) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 4!"); return 1; }
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pSpecialF] = level;
						format(string, sizeof(string), "** Gave to %s Special Forces Level [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~g~-LA Army- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~Special Forces Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /specialf %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/richlist", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Rich Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Rich Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Rich Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(GetPlayerMoney(i) >= 5000000 || PlayerInfo[i][pAccount] >= 5000000)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d) - In Hand: $%d | In Bank: $%d", sendername, i, GetPlayerMoney(i), PlayerInfo[i][pAccount]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}

//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/slap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /slap [ÕÊº“ID/ÕÊº“√˚◊÷] <‘≠“Ú>");
				return 1;
			}
			new playa;
   			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1  || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
           				new targetlevel = PlayerInfo[playa][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
   						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
      					if(playa != playerid && Untouchable[playa]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
			        	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerPos(playa, slx, sly, slz);
						SafeSetPlayerPos(playa, slx, sly, slz+8);
						PlayerPlaySound(playa, /*1130*/1190, slx, sly, slz+8);
			        	new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							format(string, sizeof(string), "[π‹¿Ì]: %s ≈ƒ¡Àœ¬ÕÊº“ %s (%d).‘≠“Ú Œﬁ",sendername, giveplayer, playa);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							GameTextForPlayer(playa, "~r~Slapped!",5000,3);
							format(string, sizeof(string), "** ƒ„≥…π¶≈ƒ¡Àœ¬ÕÊº“ %s (%d)", giveplayer, playa);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      						format(string, sizeof(string), "** ƒ„±ªπ‹¿Ì‘±%s ≈ƒ¡À“ªœ¬,‘≠“Ú: Œﬁ", sendername);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							return 1;
						}
						format(string, sizeof(string), "[π‹¿Ì]: %s ≈ƒ¡Àœ¬ÕÊº“ %s (%d).‘≠“Ú %s",sendername, giveplayer, playa,(result));
						ABroadCast(COLOR_LIGHTRED,string, 5);
						GameTextForPlayer(playa, "~r~Slapped!",5000,3);
						format(string, sizeof(string), "** ƒ„≥…π¶≈ƒ¡Àœ¬ÕÊº“ %s (%d)", giveplayer, playa);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "** ƒ„±ªπ‹¿Ì‘±%s ≈ƒ¡À“ªœ¬,‘≠“Ú: %s", sendername, (result));
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/punch", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /slap [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new playa;
   			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1  || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            new targetlevel = PlayerInfo[playa][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
                        if(playa != playerid && Untouchable[playa]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerPos(playa, slx, sly, slz);
						SafeSetPlayerPos(playa, slx, sly, slz+20);
						PlayerPlaySound(playa, 1130, slx, sly, slz+20);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Oybcged %s.",d,m,y,h,mi,s,sendername,giveplayer);
						SlapLog(string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has Punched %s (%d).",sendername, giveplayer, playa);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						GameTextForPlayer(playa, "~r~Punched!",5000,3);
						format(string, sizeof(string), "** You have Successfuly Punched %s (%d)", giveplayer, playa);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cancelcontract", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /cancelcontract [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerPos(playa, slx, sly, slz);
						PlayerPlaySound(playa, 1130, slx, sly, slz);
						format(string, sizeof(string), "[π‹¿Ì]: %s has Cancelled Contract on %s (%d).",sendername, giveplayer, playa);
						SendAdminMessage(COLOR_LIGHTRED,string);
						GameTextForPlayer(playa, "~g~Contract on You has been Canceled!!",5000,3);
						format(string, sizeof(string), "** You have Successfuly Cancelled %s (%d)'s contract", giveplayer, playa);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playa][pHeadValue] = 0;
						format(string, sizeof(string), "[NEWS]: The contract on %s (%d) has been cancelled by an admin!",giveplayer,playa);
						SendRadioMessage(8, COLOR_GREY, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Cancelled hitmen contract on %s.",d,m,y,h,mi,s,sendername,giveplayer);
						SlapLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/game", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /game [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new playa;
   			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					    if(playa != playerid && Untouchable[playa]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
						SetPlayerHealth(playa, 1);
						GetPlayerPos(playa, slx, sly, slz);
						SafeSetPlayerPos(playa, slx, sly, slz+50000000);
						PlayerPlaySound(playa, /*1130*/1190, slx, sly, slz+50000000);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Had Fucked %s's Game.",d,m,y,h,mi,s,sendername,giveplayer);
						SlapLog(string);
						format(string, sizeof(string), "[π‹¿Ì]: %s had Fucked %s (%d)'s Game.",sendername, giveplayer, playa);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						GameTextForPlayer(playa, "~r~Game Fucked!",5000,3);
						format(string, sizeof(string), "** You have Successfuly Fucked %s (%d)'s Game", giveplayer, playa);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/mute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /mute [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
					    if(playa != playerid && Untouchable[playa]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Muted %s (%d).",sendername,giveplayer,playa);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							GameTextForPlayer(playa, "~r~Muted by An Administrator!",4000,3);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Muted %s",d,m,y,h,mi,s,sendername,giveplayer);
							MuteLog(string);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Un-Muted %s (%d).",sendername,giveplayer,playa);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							GameTextForPlayer(playa, "~g~Unmuted by An Administrator!",4000,3);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has UnMuted %s",d,m,y,h,mi,s,sendername,giveplayer);
							MuteLog(string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

//-----------------------------------[Force tutorial]-------------------------------------
    if(strcmp(cmd, "/learn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
   			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /learn [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
                        new targetlevel = PlayerInfo[giveplayerid][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Sent %s to re-take the tutorial.",d,m,y,h,mi,s,sendername,giveplayer);
						KickLog(string);
      					PlayerInfo[giveplayerid][pTut] = 5;
						Kick(giveplayerid);
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "Administrator %s has kicked %s and forced them to retake the tutorial.", sendername,giveplayer);
						SendClientMessageToAll(COLOR_NICERED, string);
						GameTextForPlayer(playerid, "~r~Sent To Read the Tutorial!",5000,3);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[Name kick]------------------------------------------------
    if(strcmp(cmd, "/nick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /nick [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
                        new targetlevel = PlayerInfo[giveplayerid][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* You can not kick People that is higher Than You!");
						format(string, sizeof(string), "%s (%d), Has Been Kicked by Administrator %s For having an Unvalid Name", giveplayer, giveplayerid, sendername);
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "You have Been Kicked by %s For Having an Unvalid Nick, Please, Try to Fix it as Soon Possible. Firstname_Lastname", sendername);
						SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, string);
						GameTextForPlayer(giveplayerid, "~r~Change Name!",5000,3);
				        Kick(giveplayerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Kicked %s for Unsuitable Nick.",d,m,y,h,mi,s,sendername,giveplayer);
						KickLog(string);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/fakesay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /fakesay [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /fakesay [ÕÊº“ID/ÕÊº“√˚◊÷] [ƒ⁄»›]");
							return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has forced %s to say: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
						KickLog(string);
						format(string, sizeof(string), "[π‹¿Ì]: π‹¿Ì‘± %s Has Forced %s (%d) to say: %s", sendername, giveplayer, giveplayerid, (result));
						ABroadCast(COLOR_LIGHTRED, string, 5);
						format(string, sizeof(string), "(( %s ))", (result));
						SendPlayerMessageToAll(giveplayerid, string);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

//---------------------------------------------[Kick]-----------------------------------------------------
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /kick [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
      		new targetlevel = PlayerInfo[giveplayerid][pAdmin];
			new playerlevel = PlayerInfo[playerid][pAdmin];
			if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* You can not Kick People that is higher Than You!");
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been kicked by %s, No Reason Given",d,m,y,h,mi,s,giveplayer,sendername);
							KickLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by %s - No Reason Given.",d,m,y,h,mi,s,sendername);
							AddPunishment(giveplayerid, string);
							format(string, sizeof(string), "%s (%d), Has been kicked by Administrator %s, No Reason Given", giveplayer, giveplayerid, sendername);
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "You have Been Kicked by Administrator %s, No Reason Given", sendername);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
	 						SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
			                SafeSetPlayerInterior(giveplayerid, 6);
							GameTextForPlayer(giveplayerid, "~r~~h~Admin Kicked: ~n~~r~No Reason Given", 6000, 3);
							Kick(giveplayerid);
							return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been kicked by %s for: %s",d,m,y,h,mi,s,giveplayer,sendername, (result));
						KickLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
						AddPunishment(giveplayerid, string);
						format(string, sizeof(string), "%s (%d), Has been kicked by Administrator %s for: %s", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "You have Been Kicked by Administrator %s for: %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
 						SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
		                SafeSetPlayerInterior(giveplayerid, 6);
 						format(string, sizeof(string), "~r~~h~Admin Kicked: ~n~~r~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
						Kick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/removepending", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /removepending [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has removed %s pending ban",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
						format(string, sizeof(string), "Your Pending ban was removed by administrator %s", sendername);
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s has removed %s (%d) pending ban",sendername, giveplayer,giveplayerid);
						SendAdminMessage(COLOR_LIGHTRED, string);
		                PlayerInfo[giveplayerid][pPending] = 0;
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/pending", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /pending [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
      		new targetlevel = PlayerInfo[giveplayerid][pAdmin];
			new playerlevel = PlayerInfo[playerid][pAdmin];
			if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* You can not Leave a Pending ban on People that is higher Than You!");
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Kicked %s, No Reason Given",d,m,y,h,mi,s,sendername,giveplayer);
							KickLog(string);
							format(string,sizeof(string), "Date: (%d/%d/%d)[%d:%d:%d] Issued By: %s, No Reason Given", d,m,y,h,mi,s,sendername);
							strmid(PlayerInfo[giveplayerid][pPendingInfo], string, 0, strlen(string), 255);
							format(string, sizeof(string), "%s (%d), Has been kicked by Administrator %s, No Reason Given", giveplayer, giveplayerid, sendername);
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "You have Been Kicked by Administrator %s, No Reason Given", sendername);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
	 						SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
			                SafeSetPlayerInterior(giveplayerid, 6);
			                PlayerInfo[giveplayerid][pPending] = 1;
							GameTextForPlayer(giveplayerid, "~r~~h~Admin Kicked: ~n~~r~No Reason Given", 6000, 3);
							Kick(giveplayerid);
							return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Kicked %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
						KickLog(string);
						format(string,sizeof(string), "Date: (%d/%d/%d)[%d:%d:%d] Issued By: %s, Reason: %s", d,m,y,h,mi,s,sendername, (result));
						strmid(PlayerInfo[giveplayerid][pPendingInfo], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s (%d), Has been kicked by Administrator %s for: %s", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "You have Been Kicked by Administrator %s for: %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
 						SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
		                SafeSetPlayerInterior(giveplayerid, 6);
		                PlayerInfo[giveplayerid][pPending] = 1;
 						format(string, sizeof(string), "~r~~h~Admin Kicked: ~n~~r~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
						Kick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
 	if(strcmp(cmd, "/unjail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /aunjail [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(PlayerInfo[giveplayerid][pJailed] >= 1)
				        {
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[128];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Unjailed %s, No Reason Given",d,m,y,h,mi,s,sendername,giveplayer);
								JailLog(string);
								PlayerInfo[giveplayerid][pJailTime] = 0;
								format(string, sizeof(string), "%s (%d), Has been unjailed by Administrator %s", giveplayer, giveplayerid, sendername);
								SendClientMessageToAll(COLOR_NICERED, string);
		 						format(string, sizeof(string), "[π‹¿Ì]: %s has unjailed %s (%d), No Reason Given",sendername,giveplayer,giveplayerid);
								SendAdminMessage(COLOR_LIGHTRED, string);
								GameTextForPlayer(giveplayerid, "~g~~h~Unjailed: ~n~~g~No Reason Given", 6000, 3);
								return 1;
							}
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Unjailed %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
							JailLog(string);
							PlayerInfo[giveplayerid][pJailTime] = 0;
							format(string, sizeof(string), "%s (%d), Has been unjailed by Administrator %s", giveplayer, giveplayerid, sendername, (result));
							SendClientMessageToAll(COLOR_NICERED, string);
	 						format(string, sizeof(string), "[π‹¿Ì]: %s has unjailed %s (%d) for %s",sendername,giveplayer,giveplayerid,(result));
							SendAdminMessage(COLOR_LIGHTRED, string);
	 						format(string, sizeof(string), "~g~~h~Unjailed: ~n~~g~%s",(result));
							GameTextForPlayer(giveplayerid, string, 6000, 3);
							return 1;
						}
					}
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/setevent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó!");
	            return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: /setevent [slot] [ƒ⁄»›]");
				return 1;
			}
			new slot = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: /setevent [slot] [ƒ⁄»›]");
				return 1;
			}
			if(slot == 1)
			{
			    format(string, sizeof(string),"%s",result);
			    TextDrawSetString(CTextdraw52,string);
			    strmid(event1,string,0,255,sizeof(string));
			}
			if(slot == 2)
			{
			    format(string, sizeof(string),"%s",result);
			    TextDrawSetString(CTextdraw53,string);
			    strmid(event2,string,0,255,sizeof(string));
			}
			if(slot == 3)
			{
			    format(string, sizeof(string),"%s",result);
			    TextDrawSetString(CTextdraw54,string);
			    strmid(event3,string,0,255,sizeof(string));
			}
			if(slot == 4)
			{
			    format(string, sizeof(string),"%s",result);
			    TextDrawSetString(CTextdraw55,string);
			    strmid(event4,string,0,255,sizeof(string));
			}
			SaveEvents();
		}
		return 1;
	}

 	if(strcmp(cmd, "/write", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó!");
	            return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: /write [Colour Number] [ƒ⁄»›]");
				SendClientMessage(playerid, COLOR_GRAD3, "COLOURS: Red(1) Orange(2) Blue(3) Yellow(4) LightBlue(5) Pink(6) Lime(7) Green(8) White(9) Grey(10) Sea(11) Cream(12)");
				return 1;
			}
			new colour = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: /write [Colour Number] [ƒ⁄»›]");
				SendClientMessage(playerid, COLOR_GRAD3, "COLOURS: Red(1) Orange(2) Blue(3) Yellow(4) LightBlue(5) Pink(6) Lime(7) Green(8) White(9) Grey(10) Sea(11) Cream(12)");
				return 1;
			}
			if (colour == 1)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_NICERED, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Red Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 2)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_ORANGE, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote an Orange Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 3)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_BLUE, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Yellow Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 4)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_YELLOW, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Blue Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 5)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_LIGHTBLUE, string); //

				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a LightBlue Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 6)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_PINK, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Pink Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 7)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(TEAM_GROVE_COLOR, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Lime Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 8)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_GREEN, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Green Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 9)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_WHITE, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a White Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 10)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_GREY, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Grey Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 11)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(COLOR_SEA, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a SEA Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 12)
			{
				format(string, sizeof(string), "%s",(result));
				SendClientMessageToAll(TEAM_CYAN_COLOR, string); //
				format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a Creamy Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
				AdminLog(string);
			}
			else if(colour == 13)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 6)
			    {
					format(string, sizeof(string), "%s",(result));
					SendClientMessageToAll(COLOR_LIGHTRED, string); //
					format(string, sizeof(string), "[π‹¿Ì]: %s Wrote At the Console: [%s]", sendername, (result));
					ABroadCast(COLOR_LIGHTRED,string, 5);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a L-Red Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
					AdminLog(string);
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "** Only Developoers or Above may use this Command!");
			        return 1;
				}
			}
		}
		return 1;
	}

//---------------------------------------------------------------------------------------------------------------------
	if(strcmp(cmd, "/ddsay", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pDM] == 1)
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
  			idx++;
  			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /ddsay [ƒ⁄»›]");

			format(string, sizeof(string), "Derby Manager %s: %s",sendername,(result));
			SendClientMessageToAll(COLOR_ORANGE, string);
			format(string, sizeof(string), "[π‹¿Ì]: %s Has Wrote At the Console: [DD: %s]", sendername, (result));
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a DD message: %s",d,m,y,h,mi,s,sendername,(result));
			ChatLog(string);
		}
		return 1;
	}

    if(strcmp(cmd, "/countdown", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /coutdown [seconds(3-60)]");
				return 1;
			}
			new countdowns = strval(tmp);
			if((countdowns > 60 || countdowns < 3) && PlayerInfo[playerid][pAdmin] < 1337) return SendClientMessage(playerid, COLOR_GREY,"* Seconds must not go above 60 or below 3!");
	        if(CountdownRunning == 0)
	        {
    			CountdownRunning = 1;
				CountdownSeconds = countdowns;
				CountdownTimer = SetTimer("CountDown",1000,true);
			    format(string, sizeof(string),"~p~Countdown: ~w~%d",countdowns);
			    TextDrawSetString(Textdraw46, string);
				TextDrawShowForAll(Textdraw46);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Announced a Countdown: [Seconds: %s]",d,m,y,h,mi,s,sendername, countdowns);
				AdminLog(string);
			}
			else
			{
			    KillTimer(CountdownTimer);
			    TextDrawHideForAll(Textdraw46);
			    CountdownRunning = 1;
				CountdownSeconds = countdowns;
				CountdownTimer = SetTimer("CountDown",1000,true);
			    format(string, sizeof(string),"~p~Countdown: ~w~%d",countdowns);
			    TextDrawSetString(Textdraw46, string);
				TextDrawShowForAll(Textdraw46);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Announced a Countdown: [Seconds: %s]",d,m,y,h,mi,s,sendername, countdowns);
				AdminLog(string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/say", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
  			idx++;
  			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /say [ƒ⁄»›]");

			format(string, sizeof(string), "* Admin: %s",(result));
			SendClientMessageToAll(0x2587CEFF, string);
			format(string, sizeof(string), "[π‹¿Ì]: %s Has Wrote At the Console: [ADM: %s]", sendername, (result));
			ABroadCast(COLOR_LIGHTRED,string, 5);
			SaveStuff();
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote at the Console: [Admin: %s]",d,m,y,h,mi,s,sendername,(result));
			AdminLog(string);
		}
		return 1;
	}

    if(strcmp(cmd, "/txt", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
  			idx++;
  			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /txt [ƒ⁄»›]");

			format(string, sizeof(string), "* Admin %s: %s ",sendername,(result));
			SendClientMessageToAll(0x2587CEFF, string);
			format(string, sizeof(string), "[π‹¿Ì]: %s Wroted At the Console: [%s]", sendername, (result));
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a White Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
			AdminLog(string);
		}
		return 1;
	}

 	if(strcmp(cmd, "/givetime", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
  			idx++;

			format(string, sizeof(string), "[π‹¿Ì]: %s had Shown the Time", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			format(string, sizeof(string), "** Time Successfully Sent!",(result));
			SendClientMessage(playerid, TEAM_HIT_COLOR, string);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "The Time: %d/%d/%d - %d:%d:%d...",d,m,y,h,mi,s);
			SendClientMessageToAll(COLOR_SEA, string);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Wrote a White Message At the Console: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/ashout", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
  			idx++;
  			if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /ashout [ƒ⁄»›]");

			format(string, sizeof(string), "[π‹¿Ì]: %s Shouted: [%s]", sendername, (result));
			ABroadCast(COLOR_LIGHTRED,string, 5);
			SetPlayerChatBubble(playerid, (result), COLOR_NICERED, 100.0, 10000);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Admin Shouted: [Message: %s]",d,m,y,h,mi,s,sendername,(result));
			AdminLog(string);
		}
		return 1;
	}

// -----------------------------------------------------------------------------------

	if(strcmp(cmd, "/countdownkick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] >= 2)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /countdownkick [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				if(giveplayerid != INVALID_PLAYER_ID)
    			{
    			    new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
			    	giveplayerid = ReturnUser(tmp);
	       			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					Ronned[giveplayerid] = 1;
					RonnTimer[playerid] = SetTimerEx("Ron", 1000, true, "i", giveplayerid);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by %s - Count down kick.",d,m,y,h,mi,s,sendername);
					AddPunishment(playerid, string);
					format(string, sizeof(string), "[π‹¿Ì]: %s Has Started a Kick countdown on %s (%d)", sendername, giveplayer, giveplayerid);
					ABroadCast(COLOR_LIGHTRED, string, 5);
					format(string, sizeof(string), "You Had Started a kick countdown on %s (%d)", giveplayer, giveplayerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Countdown kicked %s",d,m,y,h,mi,s,sendername,giveplayer);
					KickLog(string);
				}
                else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/unwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /unwarn [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Unwarned %s, No Reason Given",d,m,y,h,mi,s,sendername,giveplayer);
							WarnLog(string);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Unwarned %s (%d), No Reason Given.", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED, string, 5);
							format(string, sizeof(string), "%s (%d), Was UnWarned by %s, No Reason Given.", giveplayer, giveplayerid, sendername);
							SendClientMessageToAll(COLOR_NICERED, string);
							GameTextForPlayer(giveplayerid, "~g~~h~Admin Unwarn: ~n~~g~No Reason Given", 7500, 3);
							PlayerInfo[giveplayerid][pWarned] = 0;
							return 1;
      					}
      					if(PlayerInfo[giveplayerid][pWarned] != 1 && PlayerInfo[giveplayerid][pWarned] != 2)
      					{
      					    SendClientMessage(playerid, COLOR_NICERED, "** Player is not Warned!");
      					    return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Unwarned %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
						WarnLog(string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Unwarned %s (%d) For: %s.", sendername, giveplayer, giveplayerid, (result));
						ABroadCast(COLOR_LIGHTRED, string, 5);
						format(string, sizeof(string), "%s (%d), Was UnWarned by %s for: %s.", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "~g~~h~Admin Unwarn: ~n~~g~%s", (result));
						GameTextForPlayer(giveplayerid, string, 7500, 3);
						PlayerInfo[giveplayerid][pWarned] = 0;
					}
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/td", true) == 0 || strcmp(cmd, "/textdraw", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /textdraw <style> <text> ");
					SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: Styles 0 - 4");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /textdraw <style> <text>");
					SendClientMessage(playerid, COLOR_GRAD2, "Ã· æ: Styles 0 - 4");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid < 0 || txtid > 4) { SendClientMessage(playerid, COLOR_GREY, "* Style May not go Above 4 and below 0!"); return 1; }
                format(string, sizeof(string), "%s",(result));
				if(txtid == 0)
				{
				    if(TD0D == 1)
				    {
				        KillTimer(HideTD6Timer);
				        TextDrawHideForAll(TD0);
				        TextDrawSetString(TD0, string);
				        TextDrawShowForAll(TD0);
				        HideTD6Timer = SetTimer("HideTD6", 6500, false);
					}
					else
					{
						TextDrawSetString(TD0, string);
					    TextDrawShowForAll(TD0);
					    TD0D = 1;
					    HideTD6Timer = SetTimer("HideTD6", 6500, false);
					}
				}
				else if(txtid == 1)
				{
				    if(TD1D == 1)
				    {
				        KillTimer(HideTD2Timer);
				        TextDrawHideForAll(TD1);
				        TextDrawSetString(TD1, string);
				        TextDrawShowForAll(TD1);
                        HideTD2Timer = SetTimer("HideTD2", 6500, false);
					}
					else
					{
					    TextDrawSetString(TD1, string);
					    TextDrawShowForAll(TD1);
					    TD1D = 1;
					    HideTD2Timer = SetTimer("HideTD2", 6500, false);
					}
				}
				else if(txtid == 2)
				{
				    if(TD2D == 1)
				    {
				        KillTimer(HideTD3Timer);
				        TextDrawHideForAll(TD2);
				        TextDrawSetString(TD2, string);
				        TextDrawShowForAll(TD2);
				        HideTD3Timer = SetTimer("HideTD3", 6500, false);
					}
					else
					{
	                    TextDrawSetString(TD2, string);
					    TextDrawShowForAll(TD2);
					    TD2D = 1;
					    HideTD3Timer = SetTimer("HideTD3", 6500, false);
					}
				}
				else if(txtid == 3)
				{
				    if(TD3D == 1)
				    {
                        KillTimer(HideTD4Timer);
				        TextDrawHideForAll(TD3);
				        TextDrawSetString(TD3, string);
				        TextDrawShowForAll(TD3);
				        HideTD4Timer = SetTimer("HideTD4", 6500, false);
					}
					else
					{
	                    TextDrawSetString(TD3, string);
					    TextDrawShowForAll(TD3);
					    TD3D = 1;
					    HideTD4Timer = SetTimer("HideTD4", 6500, false);
					}
				}
				else if(txtid == 4)
				{
				    if(TD4D == 1)
				    {
				        KillTimer(HideTD5Timer);
				        TextDrawHideForAll(TD4);
				        TextDrawSetString(TD4, string);
				        TextDrawShowForAll(TD4);
				        HideTD5Timer = SetTimer("HideTD5", 6500, false);
					}
					else
					{
					    TextDrawSetString(TD4, string);
					    TextDrawShowForAll(TD4);
					    TD4D = 1;
					    HideTD5Timer = SetTimer("HideTD5", 6500, false);
					}
				}

				format(string, sizeof(string), "[π‹¿Ì]: %s Has Announced a Textdraw [%s].", sendername , result);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Announced a Textdraw [%s]",d,m,y,h,mi,s,sendername,result);
				AnnounceLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
				return 1;
			}
		}
		return 1;
	}


 	if(strcmp(cmd, "/warn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /warn [ÕÊº“ID/ÕÊº“√˚◊÷] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /warn [ÕÊº“ID/ÕÊº“√˚◊÷] [reason]");
							return 1;
      					}
      					format(string, sizeof(string), "%s",(result));
      					new targetlevel = PlayerInfo[giveplayerid][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
                        if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
      					if(PlayerInfo[giveplayerid][pWarned] == 0)
      					{

							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has warned %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
							WarnLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Warned by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
							AddPunishment(giveplayerid, string);
							format(string, sizeof(string), "%s (%d), Has been Warned by Administrator %s for %s", giveplayer,giveplayerid, sendername, (result));
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "You Have been Warned by Administrator %s for %s",sendername, (result));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pWarned] = 1;
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Warned %s (%d) for %s",sendername,giveplayer,giveplayerid, (result));
							SendAdminMessage(COLOR_LIGHTRED,string);
	 						new Float:wx, Float:wy, Float:wz;
							GetPlayerPos(giveplayerid,wx, wy, wz);
							return 1;
						}
 						else if(PlayerInfo[giveplayerid][pWarned] == 1)
      					{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has warned %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
							WarnLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Warned by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
							AddPunishment(giveplayerid, string);
							format(string, sizeof(string), "%s, Has been Warned by Administrator %s for %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "You Have been Warned by Administrator %s for %s",sendername, (result));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pWarned] = 2;
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Warned %s (%d) for %s",sendername,giveplayer,giveplayerid, (result));
							SendAdminMessage(COLOR_LIGHTRED,string);
	 						new Float:wx, Float:wy, Float:wz;
							GetPlayerPos(giveplayerid,wx, wy, wz);
							return 1;
						}
					 	else if(PlayerInfo[giveplayerid][pWarned] == 2)
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has kicked %s for: %s",d,m,y,h,mi,s,sendername,giveplayer, (result));
							WarnLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
							AddPunishment(giveplayerid, string);
							format(string, sizeof(string), "%s, Has been Kicked by Administrator %s for %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "You Have been Warned by Administrator %s for %s",sendername, (result));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[giveplayerid][pWarned] = 0;
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Warned %s (%d) for %s",sendername,giveplayer,giveplayerid, (result));
							SendAdminMessage(COLOR_LIGHTRED,string);
							SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
	    					SafeSetPlayerInterior(giveplayerid, 6);
							Kick(giveplayerid);
							return 1;
						}
					}
				}
				else
				{
					format(string, sizeof(string), "* %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /skick [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {

   						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
   						format(string, sizeof(string), "[π‹¿Ì]: %s Has Secretly Kicked %s (%d) From the Server", sendername , giveplayer, giveplayerid);
   						ABroadCast(COLOR_LIGHTRED, string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been secretely kicked by %s.",d,m,y,h,mi,s,giveplayer, sendername);
						KickLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Secretely Kicked by %s.",d,m,y,h,mi,s,sendername);
						AddPunishment(giveplayerid, string);
                        Kick(giveplayerid);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "* %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/kickres", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 2)
			{
				return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /kickres [level] [ammount]");
				return 1;
			}
			new level = strval(tmp);
			if(level < 0 || level > 5) { SendClientMessage(playerid, COLOR_GREY, "   Can only Reserved Slots Kick from level 0 to 5 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /kickres [level] [ammount]");
				return 1;
			}
			new ammount = strval(tmp);
			if(ammount < 1 || ammount > 5) { SendClientMessage(playerid, COLOR_GREY, "   Can only Reserved Slots Kick of a maximum of 5 players !"); return 1; }
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pLevel] == level && PlayerInfo[i][pAdmin] < 1 && PlayerInfo[i][pRegularRank] < 1 && ammount > 0)
			        {
			            ammount -= 1;
						Kick(i);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Kicked Everyone Below Level %d",d,m,y,h,mi,s,sendername,ammount);
						KickLog(string);
			        }
			    }
			}
 		}
		return 1;
	}

//--------------------------------------------[Small Announce]-------------------------------------------

	if(strcmp(cmd,"/announce",true) == 0 || strcmp(cmd,"/ann",true) == 0) // By CuervO_NegrO
	{
		if(PlayerInfo[playerid][pAdmin] < 3)
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "** ƒ„Œﬁ»® π”√¥À√¸¡Ó!");
		    return 1;
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[128];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "”√∑®: /ann [ƒ⁄»›]");
		for(new i = 0; i < MAX_PLAYERS; i++)
		if(IsPlayerConnected(i))
		{
  			format(string, sizeof(string), "~y~%s", result);
			GameTextForPlayer(i, string, 5000, 3);
		}

		format(string, sizeof(string), "[π‹¿Ì]: %s Has Displayed a Message. [Message: %s]", sendername, result);
		ABroadCast(COLOR_LIGHTRED,string, 5);
 		new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Sent an Announcement: [%s]",d,m,y,h,mi,s,sendername,result);
		AnnounceLog(string);
		return 1;
	}

	if(strcmp(cmd,"/ddannounce",true) == 0 || strcmp(cmd,"/ddann",true) == 0) // By CuervO_NegrO
	{
		if(PlayerInfo[playerid][pDM] == 1)
		{

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GREY, "”√∑®: /ddann [ƒ⁄»›]");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[playerid][pDTK] == 1 ||PlayerInfo[playerid][pDSTK] == 1 || IsPlayerInRangeOfPoint(playerid,250,-1398.3799,994.8915,1024.0889))
			    {
	                format(string, sizeof(string), "~r~Destruction Derby: ~n~~g~%s", result);
					GameTextForPlayer(i, string, 4500, 3);
				}
			}

			format(string, sizeof(string), "[π‹¿Ì]: %s Has Announced a DD Message. [DD: %s]", sendername, (result));
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Sent a DD Annoucement: [%s]",d,m,y,h,mi,s,sendername,result);
			AnnounceLog(string);
		}
		return 1;
	}

	if(strcmp(cmd,"/ddcount",true) == 0 || strcmp(cmd,"/ddcd",true) == 0) // By CuervO_NegrO
	{
		if(PlayerInfo[playerid][pDM] == 1)
		{
		    ddcounttimer = SetTimer("DDCountdown", 1000, true);
		}
		return 1;
	}

//---------------------------------------------[Hand of God]-----------------------------------------------
	if(strcmp(cmd, "/hog", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /hog [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        new targetlevel = PlayerInfo[giveplayerid][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
                        if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");

   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						SetPlayerHealth(giveplayerid,0);
  						format(string, sizeof(string), "You Have Killed %s With The Hand of God",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
 						SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "You have Been Killed By An Administrator");
 						format(string, sizeof(string), "%s Has Died By The Hand Of God",giveplayer);
 					 	SendClientMessageToAll(COLOR_RED,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Killed %s (%d) With the HOG",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Killed %s",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Killed by %s.",d,m,y,h,mi,s,sendername);
						AddPunishment(giveplayerid, string);
						if (PlayerInfo[giveplayerid][pAchievement13] == 0)
						{
						    TextDrawSetString(Textdraw64[playerid],"Congratulations! ~n~~n~You have earned the medal ~n~~b~A Black Hole (13) ~n~~n~~w~you won ~g~$175");
	    					ShowAchievement(playerid);
							SafeGivePlayerMoney(giveplayerid,175);
							PlayerInfo[giveplayerid][pAchievement13] = 1;
						}
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/spawn", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /spawn [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						SpawnPlayer(giveplayerid);
  						format(string, sizeof(string), "You Have Sent %s To Spawn Again",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
 						SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "You have been Spawned by an Administrator");
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Spawned %s (%d)",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						MedicBill[giveplayerid] = 0;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Spawned %s",d,m,y,h,mi,s,sendername,giveplayer);
						AdminLog(string);
				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
		}
		return 1;
	}
//--------------------------------------[Ban]----------------------------------------------------
	if(strcmp(cmd, "/ban", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
            new playersip[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ban [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
       						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ban [ÕÊº“ID/ÕÊº“√˚◊÷] [reason]");
							return 1;
						}
						if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
						new targetlevel = PlayerInfo[giveplayerid][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been banned by %s for: %s",d,m,y,h,mi,s,giveplayer,sendername, (result));
						BanLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Banned by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
						AddPunishment(giveplayerid, string);
						format(string, sizeof(string), "%s (%d), Has been Banned by Administrator %s for %s", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Been Added to the Ban list by %s", playersip, sendername);
						SendAdminMessage(COLOR_WHITE, string);
						format(string, sizeof(string), "You have Been Banned by Administrator %s for %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid,COLOR_BLUE, "If You Feel that This has Been an Error, Report the Admin to <changeme at 51586>");
						SendClientMessage(giveplayerid,COLOR_BLUE, "To Get Unbanned Post an Unban Request at Our Forums <changeme at 51587>");
						SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Don't Evade, Otherwise you wont get unbanned");
      					SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
		                SafeSetPlayerInterior(giveplayerid, 6);
		   				PlayerInfo[giveplayerid][pJailTime] = 300;
						PlayerInfo[giveplayerid][pJailed] = 1;
						format(string, sizeof(string), "~r~~h~Admin Ban: ~n~~r~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
						PlayerInfo[giveplayerid][pPending] = 0;
						PlayerInfo[giveplayerid][pBanned] = 1;
						ScriptBan(giveplayerid,playerid,result);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_ORANGE, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/rban", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
            new playersip[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /rban [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
       						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /rban [ÕÊº“ID/ÕÊº“√˚◊÷] [reason]");
							return 1;
						}
						if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
						new targetlevel = PlayerInfo[giveplayerid][pAdmin];
						new playerlevel = PlayerInfo[playerid][pAdmin];
						if(targetlevel > playerlevel) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹ π”√‘⁄±»ƒ„∏ﬂµƒÕÊº“!");
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been range banned by %s for: %s",d,m,y,h,mi,s,giveplayer,sendername, (result));
						BanLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Range Banned by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
						AddPunishment(giveplayerid, string);
						format(string, sizeof(string), "%s (%d), Has been Range Banned by Administrator %s for %s", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Been Added to the Ban list by %s", playersip, sendername);
						SendAdminMessage(COLOR_WHITE, string);
						format(string, sizeof(string), "You have Been Range Banned by Administrator %s for %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid,COLOR_BLUE, "If You Feel that This has Been an Error, Report the Admin to <changeme at 51666>");
						SendClientMessage(giveplayerid,COLOR_BLUE, "To Get Unbanned Post an Unban Request at Our Forums <changeme at 51667>");
						SendClientMessage(giveplayerid,COLOR_LIGHTRED, "Don't Evade, Otherwise you wont get unbanned");
      					SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
		                SafeSetPlayerInterior(giveplayerid, 6);
		   				PlayerInfo[giveplayerid][pJailTime] = 300;
						PlayerInfo[giveplayerid][pJailed] = 1;
						format(string, sizeof(string), "~r~~h~Admin Range Ban: ~n~~r~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
						PlayerInfo[giveplayerid][pPending] = 0;
						RangeBan(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_ORANGE, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/cage", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4 || IsPlayerAdmin(playerid))
		{
		    tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GREY,"* ”√∑®: /cage [ÕÊº“ID] [Reason]");
		        return 1;
			}
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(giveplayerid, X,Y,Z);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(caged[playerid] == 0)
			        {
				    	new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' ')) {
						idx++;
						}
						new offset = idx;
					    new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) {
						result[idx - offset] = cmdtext[idx];
						idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Caged %s, No Reason Given",d,m,y,h,mi,s,sendername,giveplayer);
							AdminLog(string);
							format(string, sizeof(string), "%s (%d), Has been Caged by Administrator %s, No Reason Given", giveplayer, giveplayerid, sendername);
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "[π‹¿Ì]: %s Caged %s (%d), No Reason Given", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "You have Been Caged by Administrator %s, No Reason Given", sendername);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
							GameTextForPlayer(giveplayerid, "~r~~h~Admin Cage: ~n~~r~No Reason given", 6000, 3);
							CagePlayer(giveplayerid);
							SafeSetPlayerPos(giveplayerid, X,Y,Z+1);
		        			return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Caged %s for: %s",d,m,y,h,mi,s,sendername,giveplayer,(result));
						AdminLog(string);
						format(string, sizeof(string), "%s (%d), Has been Caged by Administrator %s for %s", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Caged %s (%d) for: %s", sendername, giveplayer, giveplayerid, (result));
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "You have Been Caged by Administrator %s for %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
	 					format(string, sizeof(string), "~r~~h~Admin Cage: ~n~~r~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
						CagePlayer(giveplayerid);
						SafeSetPlayerPos(giveplayerid, X,Y,Z+1);
						return 1;
					}
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/uncage", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 4 || IsPlayerAdmin(playerid))
		{
		    tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
  				SendClientMessage(playerid,COLOR_GREY,"* ”√∑®: /uncage [ÕÊº“ID] [Reason]");
		        return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(caged[giveplayerid] == 1)
			        {
				    	new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Un-Caged %s, No Reason Given",d,m,y,h,mi,s,sendername,giveplayer);
							AdminLog(string);
							format(string, sizeof(string), "[π‹¿Ì]: %s Removed %s (%d)'s from cage, No Reason Given", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "You have Been Removed from your Cage by Administrator %s, No Reason Given", sendername);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
							GameTextForPlayer(giveplayerid, "~g~~h~Admin Un-Cage: ~n~~g~No reason given", 6000, 3);
							UnCagePlayer(giveplayerid);
							return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Un-Caged %s for: %s",d,m,y,h,mi,s,sendername,giveplayer,(result));
						AdminLog(string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Removed %s (%d)'s from cage for: %s", sendername, giveplayer, giveplayerid, (result));
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "You have Been Removed from your Cage by Administrator %s for %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
 						format(string, sizeof(string), "~g~~h~Admin Un-Cage: ~n~~g~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
						UnCagePlayer(giveplayerid);
						return 1;
					}
				}
			}
		}
		return 1;
	}
//----------------------------------[Fake Ban]----------------------------------------------

	if(strcmp(cmd, "/fban", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
            new playersip[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /fban [ÕÊº“ID/ÕÊº“√˚◊÷] <reason>");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Fake Banned %s, No Reason Given",d,m,y,h,mi,s,sendername,giveplayer);
							KickLog(string);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Fake Banned by %s - No Reason Given.",d,m,y,h,mi,s,sendername);
							AddPunishment(giveplayerid, string);
							format(string, sizeof(string), "%s (%d), Has been Banned by Administrator %s, No Reason Given", giveplayer, giveplayerid, sendername);
							SendClientMessageToAll(COLOR_NICERED, string);
							format(string, sizeof(string), "[π‹¿Ì]: %s Fake-Banned %s (%d), No Reason Given", sendername, giveplayer, giveplayerid);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							format(string, sizeof(string), "You have Been Banned by Administrator %s, No Reason Given", sendername);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
							SendClientMessage(giveplayerid,COLOR_BLUE, "You Just got Banned. OWNED");
	 						SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
							GameTextForPlayer(giveplayerid, "~r~~h~Admin Ban: ~n~~r~No Reason Given", 6000, 3);
			                SafeSetPlayerInterior(giveplayerid, 6);
							Kick(giveplayerid);
							return 1;
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Fake Banned %s for: %s",d,m,y,h,mi,s,sendername,giveplayer,(result));
						KickLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Fake Banned by %s - Reason: %s",d,m,y,h,mi,s,sendername,(result));
						AddPunishment(giveplayerid, string);
						format(string, sizeof(string), "%s (%d), Has been Banned by Administrator %s for %s", giveplayer, giveplayerid, sendername, (result));
						SendClientMessageToAll(COLOR_NICERED, string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Fake-Banned %s (%d) for: %s", sendername, giveplayer, giveplayerid, (result));
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "You have Been Banned by Administrator %s for %s", sendername, (result));
						SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid,COLOR_BLUE, "You Just got Banned. OWNED");
 						SafeSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
 						format(string, sizeof(string), "~r~~h~Admin Ban: ~n~~r~%s",(result));
						GameTextForPlayer(giveplayerid, string, 6000, 3);
		                SafeSetPlayerInterior(giveplayerid, 6);
						Kick(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_ORANGE, string);
			}
		}
		return 1;
	}

//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/freeze", true) == 0) // by Cuervo
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /freeze [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

						if(PlayerInfo[playa][pFrozen] == 0)
						{
						    if(giveplayerid != playerid && Untouchable[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹’‚—˘∂‘’‚∏ˆÕÊº“!");
       						PlayerInfo[playa][pFrozen] = 1;
       						TogglePlayerControllable(playa, 0);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Frozen %s (%d).",sendername,giveplayer,playa);
							SendAdminMessage(COLOR_LIGHTRED,string);
							GameTextForPlayer(playa, "~r~Frozen by An Administrator!",4000,3);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Frozen %s",d,m,y,h,mi,s,sendername,giveplayer);
							FreezeLog(string);
						}
						else
						{
       						PlayerInfo[playa][pFrozen] = 0;
       						TogglePlayerControllable(playa, 1);
							format(string, sizeof(string), "[π‹¿Ì]: %s Has Un-Frozen %s (%d).",sendername,giveplayer,playa);
							SendAdminMessage(COLOR_LIGHTRED,string);
							GameTextForPlayer(playa, "~g~UnFrozen by An Administrator!",4000,3);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has UnMuted %s",d,m,y,h,mi,s,sendername,giveplayer);
							FreezeLog(string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

//----------------------------------[unfreeze]------------------------------------------------
	if(strcmp(cmd, "/thaw", true) == 0 || strcmp(cmd, "/3", true) == 0) // Modded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /thaw [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "[π‹¿Ì]: %s (%d), was thawed by administrator %s",giveplayer, playa, sendername);
						SendAdminMessage(COLOR_LIGHTRED,string);
						format(string, sizeof(string), "~w~You have Been ~g~Unfrozen. ~n~~n~~n~~w~By Administrator ~y~%s.",sendername);
						GameTextForPlayer(playa, string, 5000, 3);
						format(string, sizeof(string), "** You have Successfuly Un-Freezed %s", giveplayer);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						PlayerInfo[playa][pFrozen] = 0;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Unfreezes %s",d,m,y,h,mi,s,sendername,giveplayer);
						FreezeLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
//----------------------------------[EndRound]-----------------------------------------------

	/*if(strcmp(cmd, "/endround", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	  		if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				GameModeInitExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}
 */
//----------------------------------[EndRound]-----------------------------------------------

//----------------------------------[GMX]-----------------------------------------------

	if(strcmp(cmd, "/gmx", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
				GameTextForAll("~r~Restarting the Server: ~n~~p~Game mode Restart",12000,0);
				SendClientMessageToAll(COLOR_NICERED, "Server Restart, Please Wait!");
				SendClientMessageToAll(COLOR_YELLOW,"Restart may take a while due to file saves!");
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Restarted The Server",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
			    SaveAllGuns();
			    UpdateAllPlayersPosition();
				GameModeExitFunc(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Restarted the GameMode (/gmx)",d,m,y,h,mi,s,sendername);
				LoginLog(string);
				AdminLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/upload", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
                GameTextForAll("~r~Restarting the Server: ~n~~p~Uploading new Scripts!",12000,0);
				SendClientMessageToAll(COLOR_NICERED, "Server Update, Restarting, Please Wait!");
				SendClientMessageToAll(COLOR_YELLOW,"Restart may take a while due to file saves, please be patient!");
				format(string, sizeof(string), "[π‹¿Ì]: %s Has Restarted The Server",sendername);
				ABroadCast(COLOR_LIGHTRED,string, 5);
				UpdateAllPlayersPosition();
				SaveAllGuns();
				GameModeExitFunc(playerid);
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Restarted the GameMode (/upload)",d,m,y,h,mi,s,sendername);
				LoginLog(string);
				AdminLog(string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó !");
			}
		}
		return 1;
	}


	if (strcmp(cmd, "/cam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /cam [1/2/3/4]");
				return 1;
			}
			Unspec[playerid][sCam] = strval(tmp);
			format(string, sizeof(string), "Switching to cam %d",Unspec[playerid][sCam]);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0) // By CuervO_NegrO
	{
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GREEN, "|____ Raven's Roleplay Online Administration Team ____|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmin] <= 1338 || PlayerInfo[i][pTester] >= 1)
				    {
				        new admtext[64];
				        if(PlayerInfo[i][pAppearList] == 1)
				        {
				         	if(PlayerInfo[i][pAdmin] == 1338) { admtext = "Server Owner"; }
							else if(PlayerInfo[i][pAdmin] == 1337) { admtext = "Server Scripter"; }
							else if(PlayerInfo[i][pAdmin] == 6)	{ admtext = "Server Developer"; }
							else if(PlayerInfo[i][pAdmin] == 5) { admtext = "Main Administrator"; }
							else if(PlayerInfo[i][pAdmin] == 4) { admtext = "Senior Administrator"; }
							else if(PlayerInfo[i][pAdmin] == 3) { admtext = "Administrator"; }
							else if(PlayerInfo[i][pAdmin] == 2)	{ admtext = "Global Moderator"; }
							else if(PlayerInfo[i][pAdmin] == 1) { admtext = "Moderator"; }
							else if(PlayerInfo[i][pTester] == 3) { admtext = "Lead Tester"; }
							else if(PlayerInfo[i][pTester] == 2) { admtext = "Tester"; }
							else if(PlayerInfo[i][pTester] == 1) { admtext = "Trial Tester"; }
							else { admtext = "Unknown Rank"; }
						}
						GetPlayerName(i, sendername, sizeof(sendername));
						if(PlayerInfo[i][pAdminDuty] == 0 && PlayerInfo[i][pAppearList] == 1)
						{
							format(string, sizeof(string), "%s - %s", admtext, sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdminDuty] == 1 && PlayerInfo[i][pAppearList] == 1)
						{
						    format(string, sizeof(string), "%s - %s (On Duty)", admtext, sendername);
							SendClientMessage(playerid, TEAM_VAGOS_COLOR, string);
						}
					}
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/licensers", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Licensers Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "** Ph: %d ** %s", PlayerInfo[i][pPnumber] ,sendername);
						SendClientMessage(playerid, COLOR_GRAD2, string);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /licensers",d,m,y,h,mi,s,sendername);
						CommandLog(string);
					}
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/showrulesall", true) == 0 || strcmp(cmd,"/srall", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s Showed the Rules to Everyone.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessageToAll(COLOR_GREY, "* Press the Fire Key to Close the Windows");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Showed the rules to everyone",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					ShowRules(i);
					ViewingRules[i] = 1;
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/masked", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Masked Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Masked Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Masked Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMaskuse] == 1)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d)", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}
	
    if (strcmp(cmd, "/dvehicles", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s Has Deleted every created car.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Has Deleted every created car.",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_VEHICLES; i++)
			{
				if(IsACreatedCar(i))
				{
					DestroyVehicle(i);
				}
			}
			Hunters = 0;
			Hydras = 0;
			Predators = 0;
			Rhinos = 0;
		}
		return 1;
	}

	if (strcmp(cmd, "/suspectlist", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Suspicious Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Suspicious Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Suspicious Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(Checked[i] == 0)
				    {
					    GetPlayerName(i, sendername, sizeof(sendername));
		    			if(PlayerMoneyHacking[i] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Is suspected of Money Hacking. (CASH: %d)",sendername,i,(GetPlayerMoney(i) - ScriptMoney[i]));
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerInteriorHacking[i] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Is suspected of Interior Switching Hacking. (INT: %d)",sendername,i,PlayerSuspiciousInterior[i]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerSpeedHacking[i] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Is suspected of Speed Hacking. (SPEED: %d)",sendername,i,PlayerSuspiciousSpeed[i]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerBunnyJumping[i] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Is suspected of Bunny Jumping. (JUMPS: %d)",sendername,i,PlayerBunnyJumped[i]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerOnCashInbalance[i] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Is possibly on a Cash Inbalance. (CASH: %d)",sendername,i,(GetPlayerMoney(i) - ScriptMoney[i]));
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerFailedToLogin[i] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Failed to Login at RCON (ATTEMPTS: %d)",sendername,i,LogingAttempts[i]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerInfo[i][pPending] == 1)
					    {
							format(string, sizeof(string), "%s (%d), Is Online with a pending Ban!! (–≈œ¢: %s)",sendername,i,PlayerInfo[i][pPendingInfo]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
						if(PlayerFakeDeathHacking[i] == 1)
						{
							format(string, sizeof(string), "%s (%d), Is suspected of ºŸÀ¿Õˆ Hacking. (DEATHS: %d)",sendername,i,FakeKillWarns[i]);
							SendClientMessage(playerid, COLOR_LIGHTRED, string);
						}
					}
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/usedildo", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(UsedDildo[playerid] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "* You already used a Dildo Recently, Your Vagina is red and worn, Please wait a bit more before using a dildo, Pervert!");
			    return 1;
			}
			if(PlayerInfo[playerid][pSex] == 2)
			{
	            
				new weap, ammo;
				GetPlayerWeaponData(playerid, 10, weap, ammo);
				if(weap == 10)
				{
				    TogglePlayerControllable(playerid, 0);
					ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
					SendClientMessage(playerid, COLOR_ORANGE, "* You start to Play with your Dildo and feel Reaaaally Great");
					GameTextForPlayer(playerid, "~p~Playing With your Dildo...",15000,5);
					format(string, sizeof(string), "* %s Takes his Purple Dildo and Starts to Play With it", sendername);
					ProxDetector(20.0, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					SetTimerEx("UsingPurpleDildo",15000,0,"i",playerid);
				}
	   			else if(weap == 11)
				{
				    TogglePlayerControllable(playerid, 0);
					ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
					SendClientMessage(playerid, COLOR_ORANGE, "* You start to Play with your Dildo and feel Reaaaally Great");
					GameTextForPlayer(playerid, "~p~Playing With your Dildo...",15000,5);
					format(string, sizeof(string), "* %s Takes his Small White Vibrator and Starts to Play With it", sendername);
					ProxDetector(20.0, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					SetTimerEx("UsingSmallDildo",15000,0,"i",playerid);
				}
				else if(weap == 12)
				{
				    TogglePlayerControllable(playerid, 0);
					ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
					SendClientMessage(playerid, COLOR_ORANGE, "* You start to Play with your Dildo and feel Reaaaally Great");
					GameTextForPlayer(playerid, "~p~Playing With your Dildo...",15000,5);
					format(string, sizeof(string), "* %s Takes his Large White Vibrator and Starts to Play With it", sendername);
					ProxDetector(20.0, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					SetTimerEx("UsingLargeDildo",15000,0,"i",playerid);
				}
				else if(weap == 13)
				{
				    TogglePlayerControllable(playerid, 0);
					ApplyAnimation(playerid,"MISC","Scratchballs_01",4.1,1,1,1,1,15000);
					SendClientMessage(playerid, COLOR_ORANGE, "* You start to Play with your Dildo and feel Reaaaally Great");
					GameTextForPlayer(playerid, "~p~Playing With your Dildo...",15000,5);
					format(string, sizeof(string), "* %s Takes his Small Black Vibrator and Starts to Play With it", sendername);
					ProxDetector(20.0, playerid, string,COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					SetTimerEx("UsingBlackDildo",15000,0,"i",playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* You are a man, How can you use a Dildo?...");
			    return 1;
			}
		}
		return 1;
	}


	if (strcmp(cmd, "/belt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsPlayerInAnyVehicle(playerid))
			{
				if(!IsModelABike(GetPlayerVehicleID(playerid)))
				{
				    if(UsingBelt[playerid] == 0)
				    {
					    SendClientMessage(playerid, TEAM_CYAN_COLOR, "* ƒ„π“…œ¡À∞≤»´¥¯");
					    format(string, sizeof(string), "* %s π“…œ¡À∞≤»´¥¯", sendername);
			            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			            UsingBelt[playerid] = 1;
					}
					else
					{
						SendClientMessage(playerid, TEAM_CYAN_COLOR, "* ƒ„»°œ¬¡À∞≤»´¥¯");
					    format(string, sizeof(string), "* %s »°œ¬¡À∞≤»´¥¯", sendername);
			            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			            UsingBelt[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"* ƒ„∆Ôµ√ «ƒ¶Õ–≥µ≤ª «∆˚≥µ,ƒ¶Õ–≥µƒ«¿Ô¿¥µƒ∞≤»´¥¯∞°! (/helmet  π”√∞≤»´Õ∑ø¯)");
					return 1;
				}
			}
		}
		return 1;
	}
	
	if (strcmp(cmd, "/helmet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsPlayerInAnyVehicle(playerid))
			{
			    if(IsModelABike(GetPlayerVehicleID(playerid)))
			    {
				    if(UsingBelt[playerid] == 0)
				    {
					    SendClientMessage(playerid, TEAM_CYAN_COLOR, "* ƒ„¥¯…œ¡Àƒ„µƒÕ∑ø¯");
					    format(string, sizeof(string), "* %s ¥”ƒ¶Õ–±∏œ‰¿Ô»°≥ˆ¡À∞≤»´Õ∑ø¯¥¯…œ", sendername);
			            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			            UsingBelt[playerid] = 1;
					}
					else
					{
						SendClientMessage(playerid, TEAM_CYAN_COLOR, "* ƒ„»°œ¬¡Àƒ„µƒ∞≤»´Õ∑ø¯");
					    format(string, sizeof(string), "* %s »°œ¬¡À∞≤»´Õ∑ø¯∑≈‘⁄¡Àƒ¶Õ–±∏œ‰¿Ô", sendername);
			            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			            UsingBelt[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"* ƒ„ø™µƒ «≥µ,≤ª «∆Ôµ√µƒƒ¶Õ–≥µ,ø™∆˚≥µƒ«¿Ô–Ë“™¥˜∞≤»´Õ∑ø¯∞°! (/belt  π”√∞≤»´¥¯)");
					return 1;
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/checkbelt", true) == 0) // Moddded By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «æØ≤Ï!");
		    	return 1;
			}
            if(PlayerInfo[playerid][pDuty] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–…œ∞‡!");
			    return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
		    	return 1;
    		}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /checkbelt [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
   			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(IsPlayerInAnyVehicle(giveplayerid))
			        {
			            if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
							if(UsingBelt[giveplayerid] == 1)
							{
							    format(string, sizeof(string), "%s is Using his Belt/Helmet Correctly.",sendername);
							}
							else if(UsingBelt[giveplayerid] == 0)
							{
							    format(string, sizeof(string), "%s is Not Using his Belt/Helmet.",sendername);
							}
							SendClientMessage(playerid, COLOR_GREY, string);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* You must be Near the Player To Search him!");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** Player is not on a Vehicle!");
		    			return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "** Invalid Player ID!");
		    		return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** Not Connected Player!");
	    		return 1;
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/muted", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Muted Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Muted Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Muted Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMuted] == 1)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "** %s (%d)", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/frozen", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Muted Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Frozen Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Frozen Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pFrozen] == 1)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d)", sendername,i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/warned", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Warned Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Warned Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Warned Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pWarned] >= 1)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d) - Warnings: %d", sendername, i, PlayerInfo[i][pWarned]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/blinded", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Blind Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Blinded Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Blind Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pBlind] >= 1)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d)", sendername, i);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/jailed", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You're no authorized to use that command . ");
	            return 1;
	        }

			format(string, sizeof(string), "[π‹¿Ì]: %s ºÏ≤È¡À For Jailed Users Online.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SendClientMessage(playerid, COLOR_GRAD3, "Jailed Users online:");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À For Jailed Users",d,m,y,h,mi,s,sendername);
			AdminLog(string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] >= 1)
				    {
				        GetPlayerName(i, sendername, sizeof(sendername));
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s (%d) - Time Left: %d√Î", sendername, i, PlayerInfo[i][pJailTime]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
		}
		return 1;
	}
//----------------------------------[DEV HELP]-----------------------------------------------
	if(strcmp(cmd, "/devhelp", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 6)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
	            return 1;
			}
			SendClientMessage(playerid, COLOR_RED, "-=-=-=-=-=-=-=-=-= Ids =-=-=-=-=-=-=-=-=-");
			SendClientMessage(playerid, COLOR_YELLOW, "If you Want to Know the Weapons IDs, º¸»Î /guns. If You Want To Know some Usefull Vehicles, Do /VEHS.");
		}
		return 1;
	}

	if(strcmp(cmd, "/guns", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 6)
	  		{
	    		SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
	   			return 1;
			}
			SendClientMessage(playerid, TEAM_VAGOS_COLOR, "-----------WEAPONS IDS-----------");
			SendClientMessage(playerid, COLOR_WHITE, "»‚≤´: 1(Brass) 2(Nite) 3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 9(Chainsaw) 10-13(Dildo) 14(Flowers) 15(Cane)");
			SendClientMessage(playerid, COLOR_BLUE, "Pistols: 22(Pistol) 23(SPistol) 24(Eagle)");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shotguns: 25(shotgun) 26(sawn-off) 27(Combat)");
			SendClientMessage(playerid, COLOR_YELLOW, "Assault: 30(AK47) 31(M4)");
			SendClientMessage(playerid, COLOR_GREEN, "Throw: 16(Grenades) 17(Teargas) 18(Molotovs) 39(Satchel Charge)");
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "Sub-Machines: 28(UZI) 32(TEC9) 29(MP5)");
			SendClientMessage(playerid, COLOR_NICERED, "Admin: 35(RocketLauncher) 37(Flamethrower) 38(Minigun) 36(Heat-RocketLauncher) ");
			SendClientMessage(playerid, COLOR_RED, "Rifles: 33(County) 34(Sniper)");
			SendClientMessage(playerid, COLOR_YELLOW, "Other: 41(spray) 43(Camera) 46(Parachute) 42(exting) 40(Detonator)");
		}
		return 1;
	 }

 	if(strcmp(cmd, "/vehs", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pAdmin] < 6)
			{
			    SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
			    return 1;
			}
			SendClientMessage(playerid, TEAM_VAGOS_COLOR, "-----------VEHICLES IDS-----------");
            SendClientMessage(playerid, COLOR_WHITE, "CARS: Infernus (411) | Turismo (451) | Banshee (429) | Cheetah (415) | Bullet (541) | Buffalo (402) | Washington (421)");
            SendClientMessage(playerid, COLOR_RED, "HELIS: Maverick (487) | Hunter (425) | Sea Sparrow (447) | Sparrow (469) | Police Maveirck (497) | News (488)");
            SendClientMessage(playerid, COLOR_NICERED, "PLANES: Hydra (520) | Shamal (519) | AT-400 [AIRPORTS] (577) | Andromeda [AIRPORTS] (592) | Rustler (476)");
            SendClientMessage(playerid, TEAM_GROVE_COLOR, "BIKES: PCJ-600 (461) | FCR-400 (521) | Sanchez (468) | NRG-400 (522) | Mountain Bike (510) | Bike (509) | BMX (481)");
            SendClientMessage(playerid, COLOR_GREEN, "BOATS: Speeder (452) | Jetmax (493) | Predator (430) | Dinghy (473)");
            SendClientMessage(playerid, COLOR_BLUE, "POLICE: LSPD (596) | SFPD (597) | LVPD (598) | Ranger (599) |Enforcer (427) | SWAT (601) | FBI (490) | FBI T (528)");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "OTHER: FireTruck (407) | Towtruck (525) | Sweeper (574) | Kart (571) | Bandito (569) | Utility (552) | Vortex (539)");
			SendClientMessage(playerid, COLOR_YELLOW, "SPECIAL: Dumper (406) | Monster (556-7) | Rhino (432) | Mower (572) | Taxi (420) | Stretch (409) | SuperGT (506)");
		}
  		return 1;
  	}

  	if(strcmp(cmd, "/flyto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pWanted] == 0)
	        {
				if (IsPlayerInRangeOfPoint(playerid, 5,1675.3717,1447.8632,10.7876)) // LV
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /flyto [destination number]");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "|_______ ¿≠ÀπŒ¨º”Àπ Airport _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: ¬Â…ºÌ∂…£Õ–Àπ ($250)		2:  •∑∆“Æ¬ﬁ ($250) |");
						SendClientMessage(playerid, COLOR_GRAD1, "| 3: Œ§∂˚√∑∂‡Àπ ($150)	4: Skydive LS ($300) |");
						SendClientMessage(playerid, COLOR_GRAD2, "| 5: Skydive LV ($150)      	6: Skydive SF ($300) |");
						SendClientMessage(playerid, COLOR_GRAD3, "| 7: Skydive MC ($500)		8: Skydive RC ($400) |");
						SendClientMessage(playerid, COLOR_GRAD3, "| 9: Skydive BC ($250)	    10: Skydive TR ($300) |");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1 && GetPlayerMoney(playerid) > 249) // Plane to LS - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 50;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 50);
						SetTimerEx("lvls", 120000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to LS:    Two Minutes");
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 2 && GetPlayerMoney(playerid) > 249) // Plane to SF - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 51;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 51);
						SetTimerEx("lvsf", 150000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to SF:    Two and a Half Minutes");
	                    PlayerInfo[playerid][pJet] = 1;
	                    PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 3 && GetPlayerMoney(playerid) > 149) // Plane to ∑œ∆˙ Airport - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 52;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 52);
						SetTimerEx("lvap", 60000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to AP:    One Minute");
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 4 && GetPlayerMoney(playerid) > 299) // Skydive LS - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 53;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 53);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvsls", 120000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to LS:    Two Minutes");
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 5 && GetPlayerMoney(playerid) > 149) // Skydive LV - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 54;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 54);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvslv", 60000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to LV:    One Minute");
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 6 && GetPlayerMoney(playerid) > 299) // Skydive SF - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 55;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 55);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvssf", 120000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to SF:    Two Minutes");
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 7 && GetPlayerMoney(playerid) > 499) // Skydive Mount Chilliad - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 56;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 56);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvsmc", 180000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to MC:    Three Minutes");
						return 1;
					}
					else if (item == 8 && GetPlayerMoney(playerid) > 299) // Skydive Red County - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 57;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 57);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvsrc", 180000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to RC:    Three Minutes");
						return 1;
					}
					else if (item == 9 && GetPlayerMoney(playerid) > 249) // Skydive Bone County - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 58;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 58);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvsbc", 60000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to BC:    One Minute");
						return 1;
					}
					else if (item == 10 && GetPlayerMoney(playerid) > 299) // Skydive Tierra Robada - From LV
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 58;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 58);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvsbc", 90000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to TR:    One and a half Minute");
						return 1;
					}
				}
				else if (IsPlayerInRangeOfPoint(playerid, 5,1685.9310,-2239.2971,-2.7028)) // Ls
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /flyto [destination number]");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "|_______ ¬Â…ºÌ∂…£Õ–Àπ Airport _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: ¿≠ÀπŒ¨º”Àπ ($250)		2:  •∑∆“Æ¬ﬁ ($250) |");
						SendClientMessage(playerid, COLOR_GRAD1, "| 3: Œ§∂˚√∑∂‡Àπ ($350)	4: Skydive LS ($150) |");
						SendClientMessage(playerid, COLOR_GRAD2, "| 5: Skydive LV ($300)      	6: Skydive SF ($300) |");
						SendClientMessage(playerid, COLOR_GRAD3, "| 7: Skydive MC ($500)		8: Skydive RC ($250) |");
						SendClientMessage(playerid, COLOR_GRAD3, "| 9: Skydive BC ($300)	    10: Skydive TR ($400) |");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1 && GetPlayerMoney(playerid) > 249) // Plane to LV - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 40;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 40);
						SetTimerEx("lslv", 120000, false, "i", playerid);
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to LV:    Two Minutes");
						return 1;
					}
					else if (item == 2 && GetPlayerMoney(playerid) > 249) // Plane to SF - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 41;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 41);
						SetTimerEx("lssf", 150000, false, "i", playerid);
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to SF:    Two and a Half Minutes");
						return 1;
					}
					else if (item == 3 && GetPlayerMoney(playerid) > 349) // Plane to ∑œ∆˙ Airport - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 42;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 42);
						SetTimerEx("lsap", 150000, false, "i", playerid);
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to AP:    Two and a half Minutes");
						return 1;
					}
					else if (item == 4 && GetPlayerMoney(playerid) > 150) // Skydive LS - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 43;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 43);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lssls", 30000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to LS:    Half Minute");
						return 1;
					}
					else if (item == 5 && GetPlayerMoney(playerid) > 300) // Skydive LV - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 44;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 44);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lsslv", 120000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to LV:    Two Minutes");
						return 1;
					}
					else if (item == 6 && GetPlayerMoney(playerid) > 299) // Skydive SF - From Ls
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 45;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 45);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lsssf", 120000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to SF:    Two Minutes");
						return 1;
					}
					else if (item == 7 && GetPlayerMoney(playerid) > 499) // Skydive Mount Chilliad - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 46;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 46);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lssmc", 120000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to MC:    Two Minutes");
						return 1;
					}
					else if (item == 8 && GetPlayerMoney(playerid) > 249) // Skydive Red County - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 47;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 47);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lssrc", 60000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to RC:    One Minute");
						return 1;
					}
					else if (item == 9 && GetPlayerMoney(playerid) > 299) // Skydive Bone County - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 48;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 48);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lssbc", 120000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to BC:    Two Minutes");
						return 1;
					}
					else if (item == 10 && GetPlayerMoney(playerid) > 399) // Skydive Tierra Robada - From LS
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 48;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 48);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("lvsbc", 150000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to TR:    Two and a Half Minutes");
						return 1;
					}
				}
				else if (IsPlayerInRangeOfPoint(playerid, 5,-1421.7410,-287.9273,14.1484)) // SF
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /flyto [destination number]");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "|_______  •∑∆“Æ¬ﬁ Airport _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: ¬Â…ºÌ∂…£Õ–Àπ ($250)		2: ¿≠ÀπŒ¨º”Àπ ($250) |");
						SendClientMessage(playerid, COLOR_GRAD1, "| 3: Œ§∂˚√∑∂‡Àπ ($300)	4: Skydive LS ($300) |");
						SendClientMessage(playerid, COLOR_GRAD2, "| 5: Skydive LV ($300)      	6: Skydive SF ($150) |");
						SendClientMessage(playerid, COLOR_GRAD3, "| 7: Skydive MC ($250)		8: Skydive RC ($300) |");
						SendClientMessage(playerid, COLOR_GRAD3, "| 9: Skydive BC ($300)	    10: Skydive TR ($200) |");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1 && GetPlayerMoney(playerid) > 249) // Plane to LS - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 30;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 30);
						SetTimerEx("sfls", 120000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to LS:    Two Minutes");
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 2 && GetPlayerMoney(playerid) > 249) // Plane to LV - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 31;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 31);
						SetTimerEx("sflv", 150000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to LV:    Two and a Half Minutes");
	                    PlayerInfo[playerid][pJet] = 1;
	                    PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 3 && GetPlayerMoney(playerid) > 299) // Plane to ∑œ∆˙ Airport - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 32;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 32);
						SetTimerEx("sfap", 180000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to AP:    Three Minutes");
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 4 && GetPlayerMoney(playerid) > 299) // Skydive LS - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 33;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 33);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfsls", 120000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to LS:    Two Minutes");
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 5 && GetPlayerMoney(playerid) > 299) // Skydive LV - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 34;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 34);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfslv", 150000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to LV:    Two and a Half Minutes");
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 6 && GetPlayerMoney(playerid) > 149) // Skydive SF - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 35;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 35);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfssf", 60000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to SF:    One Minute");
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 7 && GetPlayerMoney(playerid) > 249) // Skydive Mount Chilliad - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 36;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 36);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfsmc", 90000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to MC:    One and a Half Minutes");
						return 1;
					}
					else if (item == 8 && GetPlayerMoney(playerid) > 264) // Skydive Red County - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 37;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 37);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfsrc", 100000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to RC:    One and a Half Minutes");
						return 1;
					}
					else if (item == 9 && GetPlayerMoney(playerid) > 299) // Skydive Bone County - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 38;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 38);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfsbc", 120000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to BC:    Two Minutes");
						return 1;
					}
					else if (item == 10 && GetPlayerMoney(playerid) > 200) // Skydive Tierra Robada - From SF
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		                PlayerInfo[playerid][pVirWorld] = 39;
		                SafeSetPlayerInterior(playerid, 9);
		                SetPlayerVirtualWorld(playerid, 39);
	                	SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
						SetTimerEx("sfsbc", 60000, false, "i", playerid);
						PlayerInfo[playerid][pAndro] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Get Ready - Time to get to TR:    One Minute");
						return 1;
					}
				}
				else if (IsPlayerInRangeOfPoint(playerid, 5,422.3126,2508.9063,16.4844)) // AP
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /flyto [destination number]");
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "|_______ Œ§∂˚√∑∂‡Àπ Airport _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: ¬Â…ºÌ∂…£Õ–Àπ ($250)		2:  •∑∆“Æ¬ﬁ ($250)		3: ¿≠ÀπŒ¨º”Àπ ($150) |");
						return 1;
					}
					PlayerInfo[playerid][pInteriorNr] = 28;
					new item = strval(tmp);
					if (item == 1 && GetPlayerMoney(playerid) > 249) // Plane to LS - From AP
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 99;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 99);
						SetTimerEx("lvls", 150000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to LS:    Two and a Half Minutes");
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 2 && GetPlayerMoney(playerid) > 249) // Plane to SF - From AP
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 98;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 98);
						SetTimerEx("lvsf", 180000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to SF:    Three Minutes");
	                    PlayerInfo[playerid][pJet] = 1;
	                    PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
					else if (item == 3 && GetPlayerMoney(playerid) > 149) // Plane to LV - From AP
					{
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SafeSetPlayerPos(playerid, 3.7333,23.0483,1199.6012);
						PlayerInfo[playerid][pVirWorld] = 97;
						SafeSetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, 97);
						SetTimerEx("aplv", 60000, false, "i", playerid);
						SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: Welcome, Have a Seat - Time to get to LV:    One Minute");
						PlayerInfo[playerid][pJet] = 1;
						PlayerInfo[playerid][pInteriorNr] = 28;
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* You are a criminal, airport didn't let you fly!");
			    return 1;
			}
		}
		return 1;
	}

  	if(strcmp(cmd, "/flyls", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsPlayerInRangeOfPoint(playerid, 3, 25.1811,1968.5167,17.6406))
            {
                PlayerInfo[playerid][pVirWorld] = 69;
                PlayerInfo[playerid][pInteriorNr] = 28;
                SafeSetPlayerInterior(playerid, 9);
                SetPlayerVirtualWorld(playerid, 69);
                SafeSetPlayerPos(playerid, 315.745,984.969,1958.919);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "** Prison Airlines  -  Time To get to ¬Â…ºÌ∂…£Õ–Àπ:    Three Minutes");
                SetTimerEx("prisonls", 180000, false, "i", playerid);
                PlayerInfo[playerid][pAndro] = 1;
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /flyls",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/turn", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            new enablelist[] = "1\tView Admin Alerts (6)\n2\tView Private Messages (1)\n3\tAppear in Admin List (4)\n4\tView Help Messages (1)\n5\tOut of Character Chat (2)\n6\tOwner Mode (1338)";
            ShowPlayerDialog(playerid,5,DIALOG_STYLE_LIST,"Enable/Disable",enablelist,"Continue","Cancel");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /turn",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/anticheat", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 6)
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„Œﬁ»® π”√¥À—°œÓ");
				return 1;
			}
			new enablelist[] = "1\t∑¥Õ√◊”Ã¯\n2\t∑¥∫⁄øÕŒ‰∆˜\n3\t∑¥ “ƒ⁄∫⁄øÕ\n4\t∑¥≈Á∆¯±≥∞¸∫⁄øÕ\n5\t∑¥À¢«Æ∫⁄øÕ\n6\t∑¥AFK\n7\t∑¥∑«∑¥œ‡√˚≥∆\n8\t∑¥º›≥µ…±»À\n9\t∑¥ºŸÀ¿Õˆ\n10\t∏ﬂpingÃﬂ—°œÓ\n11\t…Ë÷√◊Ó¥Û»›–Ì Ping\n12\t∑¥À¢∆¡Ãﬂ";
            ShowPlayerDialog(playerid,1234,DIALOG_STYLE_LIST,"Enable/Disable ∑¥Õ‚π“ºÏ≤‚ Features:",enablelist,"—°‘Ò","»°œ˚");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /anticheat",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	
 	if(strcmp(cmd, "/DD", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4 || PlayerInfo[playerid][pDM] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(TEAM_GROVE_COLOR, "Raven's Roleplay Server Destruction Derby Stadium is now OPEN!");
			SendClientMessageToAll(TEAM_GROVE_COLOR, "Come With your Car And Wait until to get a Ticket!");

			format(string, sizeof(string), "[π‹¿Ì]: %s has Used </dd> ", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /dd",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/DD2", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4 || PlayerInfo[playerid][pDM] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(TEAM_VAGOS_COLOR, "Raven's Roleplay Server Destruction Derby Stadium  is Almost Getting Closed");
			SendClientMessageToAll(TEAM_VAGOS_COLOR, "Hurry Up! Come to the Blackfield Stadium (LV) With Your Car Filled with Fuel!");

			format(string, sizeof(string), "[π‹¿Ì]: %s has Used </dd2> ", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /dd2",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/DD3", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4 || PlayerInfo[playerid][pDM] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_ORANGE, "Raven's Roleplay Server Destruction Derby Stadium is Really Almost of Getting Closed !!!");
			SendClientMessageToAll(COLOR_ORANGE, "Hurry Up! Come to the Blackfield Stadium (LV) With Your Car! Last Chance!!!");

			format(string, sizeof(string), "[π‹¿Ì]: %s has Used </dd3> ", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /dd3",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/DD4", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4 || PlayerInfo[playerid][pDM] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_NICERED, "Raven's Roleplay Server Destruction Derby Stadium is Closed");
			format(string, sizeof(string), "[π‹¿Ì]: %s has Used </dd4> ", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /dd4",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/DDExplode", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4 || PlayerInfo[playerid][pDM] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            CreateExplosion(-1395.8973,978.0236,1023.8127, 7, 1);
            CreateExplosion(-1407.9353,978.3422,1023.8357, 7, 1);
            CreateExplosion(-1418.8068,978.7103,1023.8577, 7, 1);
            CreateExplosion(-1432.6871,979.6514,1024.0830, 7, 1);
            CreateExplosion(-1444.3564,983.5811,1024.0752, 7, 1);
            CreateExplosion(-1454.0627,990.9010,1024.5061, 7, 1);
            CreateExplosion(-1451.3059,1002.6296,1024.5448, 7, 1);
            CreateExplosion(-1440.4402,1010.7041,1024.5526, 7, 1);
            CreateExplosion(-1427.8453,1014.9993,1024.6248, 7, 1);
            CreateExplosion(-1415.1099,1016.0924,1024.6542, 7, 1);
            CreateExplosion(-1401.5198,1016.1044,1024.6487, 7, 1);
            CreateExplosion(-1391.3718,1015.9885,1024.8395, 7, 1);
            CreateExplosion(-1382.5806,1015.9128,1025.3558, 7, 1);
            CreateExplosion(-1369.9696,1015.8041,1024.8744, 7, 1);
			CreateExplosion(-1358.3679,1013.7198,1024.6265, 7, 1);
			CreateExplosion(-1349.0137,1008.2590,1024.5303, 7, 1);
			CreateExplosion(-1342.6956,999.9131,1024.4182, 7, 1);
			CreateExplosion(-1344.7191,987.6509,1024.1964, 7, 1);
			CreateExplosion(-1353.3180,979.4277,1024.1035, 7, 1);
			CreateExplosion(-1365.2085,975.4051,1023.9922, 7, 1);
			CreateExplosion(-1375.4406,975.0831,1023.9804, 7, 1);
			CreateExplosion(-1385.1360,974.9193,1024.1597, 7, 1);
			CreateExplosion(-1394.9315,974.5574,1024.0063, 7, 1);
			CreateExplosion(-1380.4440,977.7213,1023.7838, 7, 1);
			CreateExplosion(-1366.9730,978.0308,1023.7906, 7, 1);
			CreateExplosion(-1358.1095,985.8592,1024.6434, 7, 1);
			CreateExplosion(-1349.9338,998.7503,1024.0714, 7, 1);

			format(string, sizeof(string), "[π‹¿Ì]: %s has Used </ddexplode> ", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Exploded the DD",d,m,y,h,mi,s,sendername);
			ExplodeLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/ddfire", true) == 0)
	{
	    
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GREY, "/explode [Playerid]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pDM] == 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
					if(PlayerInfo[giveplayerid][pDDFire] == 0 && IsPlayerInRangeOfPoint(giveplayerid,250,-1398.3799,994.8915,1024.0889))
					{
						format(string, sizeof(string), "[π‹¿Ì]: %s DD Burned %s (%d).",sendername,giveplayer,giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "You have Successfuly Burned %s's (%d)",giveplayer,giveplayerid);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
						GameTextForPlayer(giveplayerid, "~r~Stop NASCARING/Camping!",5000,4);
						new Float:boomx, Float:boomy, Float:boomz;
						GetPlayerPos(giveplayerid,boomx, boomy, boomz);
						CreateExplosion(boomx, boomy , boomz, 1, 1);
						CreateExplosion(boomx, boomy , boomz, 1, 1);
						CreateExplosion(boomx, boomy , boomz, 1, 1);
						PlayerInfo[giveplayerid][pDDFire] = 1;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has DD Burned to %s",d,m,y,h,mi,s,sendername,giveplayer);
						ExplodeLog(string);
						return 1;
					}
					if(PlayerInfo[giveplayerid][pDDFire] == 1 && IsPlayerInRangeOfPoint(giveplayerid,250,-1398.3799,994.8915,1024.0889))
					{
						format(string, sizeof(string), "[π‹¿Ì]: %s DD Exploded %s (%d).",sendername,giveplayer,giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						format(string, sizeof(string), "You have Successfuly Exploded %s's (%d)",giveplayer,giveplayerid);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
						GameTextForPlayer(giveplayerid, "~r~You Have Been Warned to Stop Nascaring/Camping!",5000,4);
						SetPlayerHealth(giveplayerid, 1);
						new Float:boomx, Float:boomy, Float:boomz;
						GetPlayerPos(giveplayerid,boomx, boomy, boomz);
						CreateExplosion(boomx, boomy , boomz, 7, 0);
						CreateExplosion(boomx, boomy , boomz, 7, 0);
						CreateExplosion(boomx, boomy , boomz, 7, 0);
						PlayerInfo[giveplayerid][pDDFire] = 0;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has DD Burned to %s",d,m,y,h,mi,s,sendername,giveplayer);
						ExplodeLog(string);
						return 1;
					}
				}
				else
				{
				    format(string, sizeof(string), "%d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó!");
			}
		}
		return 1;
	}

 	if(strcmp(cmd, "/cc", true) == 0) // By CuervO_NegrO
	{
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            for(new i = 0; i < MAX_PLAYERS; i++)
            ClearChatbox(i, 100);
            SendClientMessageToAll(COLOR_LIGHTBLUE, "Chat has been Cleared!");

			format(string, sizeof(string), "[π‹¿Ì]: %s has Cleared the Chat", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Cleared the Chat",d,m,y,h,mi,s,sendername);
			ChatLog(string);
			AdminLog(string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/findcar", true) == 0) // By nill
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPcarkey] == 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–“ª¡æ◊‘º∫µƒ≥µ");
                return 1;
            }
            SendClientMessage(playerid, COLOR_GREY, "[GPS≥µ¡æ∂®ŒªœµÕ≥] /findcar1 ’“ƒ„µƒ1≥µ /findcar2 ’“ƒ„µƒ2≥µ");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/findcar1", true) == 0) // By nill
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPcarkey] == 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–“ª¡æ◊‘º∫µƒ≥µ");
                return 1;
            }
            new carid = PlayerInfo[playerid][pPcarkey];
			new Float:X, Float:Y, Float:Z;
			new zone[MAX_ZONE_NAME];
        	GetVehicle2DZone(carid, zone, MAX_ZONE_NAME);
			GetVehiclePos(carid, X,Y,Z);
            if(Searching[playerid] == 0)
            {
                Searching[playerid] = 1;
                SetPlayerCheckpoint(playerid, X,Y,Z, 2);
				format(string, sizeof(string),"ƒ„µƒ≥µ‘⁄ %s Ω÷«¯∏ΩΩ¸, ∫Ï…´±Íº«“—æ≠…Ë÷√‘⁄–°µÿÕº…œ.µ±ƒ„’“µΩÀ¸±Íº«ª·◊‘∂Øœ˚ ß.",zone);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			}
			else
			{
			    DisablePlayerCheckpoint(playerid);
    			SetPlayerCheckpoint(playerid, X,Y,Z, 2);
				format(string, sizeof(string),"ƒ„µƒ≥µ‘⁄ %s Ω÷«¯∏ΩΩ¸, ∫Ï…´±Íº«“—æ≠…Ë÷√‘⁄–°µÿÕº…œ.µ±ƒ„’“µΩÀ¸±Íº«ª·◊‘∂Øœ˚ ß.",zone);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/findcar2", true) == 0) // By nill
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pPcarkey2] == 9999)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–µ⁄∂˛¡æ◊‘º∫µƒ≥µ");
                return 1;
            }
            new carid = PlayerInfo[playerid][pPcarkey2];
			new Float:X, Float:Y, Float:Z;
			new zone[MAX_ZONE_NAME];
        	GetVehicle2DZone(carid, zone, MAX_ZONE_NAME);
			GetVehiclePos(carid, X,Y,Z);
            if(Searching[playerid] == 0)
            {
                Searching[playerid] = 1;
                SetPlayerCheckpoint(playerid, X,Y,Z, 2);
				format(string, sizeof(string),"ƒ„µƒ≥µ(2)‘⁄ %s Ω÷«¯∏ΩΩ¸, ∫Ï…´±Íº«“—æ≠…Ë÷√‘⁄–°µÿÕº…œ.µ±ƒ„’“µΩÀ¸±Íº«ª·◊‘∂Øœ˚ ß.",zone);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			}
			else
			{
   				DisablePlayerCheckpoint(playerid);
    			SetPlayerCheckpoint(playerid, X,Y,Z, 2);
				format(string, sizeof(string),"ƒ„µƒ≥µ(2)‘⁄ %s Ω÷«¯∏ΩΩ¸, ∫Ï…´±Íº«“—æ≠…Ë÷√‘⁄–°µÿÕº…œ.µ±ƒ„’“µΩÀ¸±Íº«ª·◊‘∂Øœ˚ ß.",zone);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/chuck", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_NICERED, "Chuck norris hides a fist behind his mustache and beard!");
			format(string, sizeof(string), "[π‹¿Ì]: %s has Announced Chuck's Fact!.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Sent Chuck's Fact",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/namehouse", true) == 0) // By CuervO_NegrO
    {
        if(PlayerInfo[playerid][pPhousekey] != 9999)
        {
            ShowPlayerDialog(playerid, 6655,DIALOG_STYLE_INPUT, "∑ø◊”√˚≥∆","‘⁄œ¬√ÊµƒøÚ÷–º¸»Î–¬µƒ∑ø◊”√˚≥∆\n◊Ó…Ÿ ‰»Î◊÷∑˚ = 6, ◊Ó¥Û ‰»Î◊÷∑˚ = 60\n≤ªø…“‘…∂“≤≤ª ‰»Î","»∑∂®","»°œ˚");
		}
		return 1;
	}
	if(strcmp(cmd, "/namebizz", true) == 0) // By CuervO_NegrO
    {
        if(PlayerInfo[playerid][pPbiskey] != 9999)
        {
            ShowPlayerDialog(playerid, 6656,DIALOG_STYLE_INPUT, "∑ø◊”√˚≥∆","‘⁄œ¬√ÊµƒøÚ÷–º¸»Î–¬µƒ∑ø◊”√˚≥∆\n◊Ó…Ÿ ‰»Î◊÷∑˚ = 6, ◊Ó¥Û ‰»Î◊÷∑˚ = 60\n≤ªø…“‘…∂“≤≤ª ‰»Î","»∑∂®","»°œ˚");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/account", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            strmid(Typed[playerid], "None", 0, strlen("None"), 255);
            ShowPlayerDialog(playerid, 334,DIALOG_STYLE_INPUT, "«Î ‰»Îƒ„µƒ√‹¬Î"," ‰»Î√‹¬Î≤≈ø…“‘∂‘ƒ„µƒ÷ÿ“™π¶ƒ‹Ω¯–– ⁄»®π‹¿Ì","»∑∂®","»°œ˚");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/fightstyle", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            new string1[24];
            new string2[24];
            new string3[24];
            new string4[24];
            new string5[24];
            if(PlayerInfo[playerid][pBoxiSkill] == 1)
            {
                format(string1,sizeof(string1),"\n»≠ª˜");
			}
			else
			{
			    format(string1,sizeof(string1),"\n√ª”–—µ¡∑");
			}
			if(PlayerInfo[playerid][pKungSkill] == 1)
            {
                format(string2,sizeof(string2),"\n÷–π˙π¶∑Ú");
			}
			else
			{
			    format(string1,sizeof(string1),"\n√ª”–—µ¡∑");
			}
			if(PlayerInfo[playerid][pKneeSkill] == 1)
            {
                format(string3,sizeof(string3),"\n»·µ¿");
			}
			else
			{
			    format(string1,sizeof(string1),"\n√ª”–—µ¡∑");
			}
			if(PlayerInfo[playerid][pGrabSkill] == 1)
            {
                format(string4,sizeof(string4),"\nø’ ÷µ¿");
			}
			else
			{
			    format(string1,sizeof(string1),"\n√ª”–—µ¡∑");
			}
			if(PlayerInfo[playerid][pElbowSkill] == 1)
            {
                format(string5,sizeof(string5),"\n≤´ª˜ ı");
			}
			else
			{
			    format(string1,sizeof(string1),"\n√ª”–—µ¡∑");
			}
			format(string, sizeof(string),"Normal%s%s%s%s%s",string1,string2,string3,string4,string5);
            ShowPlayerDialog(playerid, 300,DIALOG_STYLE_LIST,"«Î—°‘Òƒ„µƒ’Ω∂∑∑Á∏Ò",string,"»∑∂®","»°œ˚");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/officercourse", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pCopLic] == 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "You already have a cop license.");
                return 1;
            }
			OfficerCourseStep[playerid] = 1;
            ClearChatbox(playerid, 10);
			SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- City Hall Police Academy ---------------------------------");
			SendClientMessage(playerid, COLOR_WHITE,"Welcome to the Optional æ¸πŸ Test Course, offered by the City Hall of ¬Â…ºÌ∂…£Õ–Àπ");
			SendClientMessage(playerid, COLOR_WHITE,"Here, you will have a Course of not more than 15 Minutes to Learn how to be a Security Guard");
			SendClientMessage(playerid, COLOR_WHITE,"You will be teach on how to arrest a suspect, What to do, What to not do, And what could happen...");
			SendClientMessage(playerid, COLOR_WHITE,"Pay atention to the course carefully, You will be requiered to take a test later to get a Cop License");
			SendClientMessage(playerid, COLOR_WHITE,"The Test will have Ten Questions, you will be requiered to Answer 9 Correct to Pass, else you'll fail");
			ClearChatbox(playerid, 3);
			SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			GameTextForPlayer(playerid, "~w~Type ~y~/cancelcourse ~w~when done to finish the course",10000,4);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/cancelcourse", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(OfficerCourseStep[playerid] == 255)
            {
                SendClientMessage(playerid, COLOR_GREY, "You aren't taking your course.");
                return 1;
            }
			OfficerCourseStep[playerid] = 255;
            SendClientMessage(playerid, COLOR_WHITE,"Course cancelled, you was fined $2500 for taking the course");
            SafeGivePlayerMoney(playerid, -2500);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/canceltest", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(OnPassportTest[playerid] == 1)
            {
                OnPassportTest[playerid] = 0;
				TestStep[playerid] = 0;
	            SendClientMessage(playerid, COLOR_WHITE,"Test cancelled, No charges, you must now wait 3 hours to re-do it");
				PlayerInfo[playerid][pPassportTime] = 1080;
			}
			else if(OnOfficerTest[playerid] == 1)
            {
                OnOfficerTest[playerid] = 0;
				TestStep[playerid] = 0;
	            SendClientMessage(playerid, COLOR_WHITE,"Test cancelled, 5000$ Fees, you must now wait 3 hours to re-do it");
				PlayerInfo[playerid][pPassportTime] = 1080;
				SafeGivePlayerMoney(playerid, -5000);
				TestPoints[playerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* Not in any Test");
				return 1;
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/roadblocks", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            for(new h = 0; h < sizeof(Roadblocks); h++)
			{
			    if(Roadblocks[h][sCreated])
			    {
					format(string, sizeof(string), "CreateDynamicObject(1238,%f,%f,%f,0,0,0, 1001, -1, -1, 100);",Roadblocks[h][sX],Roadblocks[h][sY],Roadblocks[h][sZ]);
					LoginLog(string);
				}
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/gps", true) == 0) // By CuervO_NegrO
    {
    	if(IsPlayerConnected(playerid))
	    {
     		if(PlayerInfo[playerid][pGPS] == 0)
 			{
  				/*new list[] = "1\tArmy ◊‹≤ø\n2\t÷¥’’÷––ƒ\n3\tOff Road Dealership\n4\tCar Graveyard\n5\tCoutz And Shoutz\n6\tπ„≤•π´Àæ\n7\tFBI ◊‹≤ø\n8\tAmmunation\n9\tHosptial\n10\tGROTTI\n11\tRPL\n12\tLSFD\n13\tLowriderz Dealership\n14\t –’˛Ã¸\n15\tLSPD\n16\tTaxi Co. ◊‹≤ø\n17\tBoats Dealership\n18\tTrucks Dealership\n19\tSF Docks\n20\tLVAP Deliver";
     			ShowPlayerDialog(playerid, 1240,DIALOG_STYLE_LIST,"G.P.S Positions",list,"Track","Off");
       			SendClientMessage(playerid, COLOR_GREY,"* You do not have a GPS, displaying only basic positions, buy a Full GPS at any 24/7");*/
	        	SendClientMessage(playerid, COLOR_GREY,"* ƒ„ªπ√ª”–GPSµº∫Ω∆˜ƒÿ,ƒ„ø…“‘»•24/7π∫¬Ú");
	        	return 1;
			}
	        if(IsPlayerInAnyVehicle(playerid))
	        {
				if(PlayerInfo[playerid][pGPS] == 1)
	 			{
       				new list[] = "1\tArmy ◊‹≤ø\n2\t÷¥’’÷––ƒ\n3\tOff Road Dealership\n4\tCar Graveyard\n5\tCoutz And Shoutz\n6\tπ„≤•π´Àæ\n7\tFBI ◊‹≤ø\n8\tAmmunation\n9\tHosptial\n10\tGROTTI\n11\tRPL\n12\tLSFD\n13\tLowriderz Dealership\n14\t –’˛Ã¸\n15\tLSPD\n16\tTaxi Co. ◊‹≤ø\n17\tBoats Dealership\n18\tTrucks Dealership\n19\tSF Docks\n20\tLVAP Deliver";
     				ShowPlayerDialog(playerid, 1240,DIALOG_STYLE_LIST,"G.P.S Positions",list,"Track","Off");
       				SendClientMessage(playerid, COLOR_GREY,"* You do not have a GPS, displaying only basic positions, buy a Full GPS at any 24/7");
				}
                else if(PlayerInfo[playerid][pGPS] == 2)
                {
					new superstring[600];
		    		new list[] = "1\tArmy ◊‹≤ø\n2\t÷¥’’÷––ƒ\n3\tOff Road Dealership\n4\tCar Graveyard\n5\tCoutz And Shoutz\n6\tπ„≤•π´Àæ\n7\tFBI ◊‹≤ø\n8\tAmmunation\n9\tHosptial\n10\tGROTTI\n11\tRPL\n12\tLSFD\n13\tLowriderz Dealership\n14\t –’˛Ã¸\n15\tLSPD\n16\tTaxi Co. ◊‹≤ø";
		    		new list2[] = "\n17\tArms Dealer Job\n18\tBoats Dealership\n19\tTrucks Dealership\n20\tSF Docks\n21\tLVAP Deliver\n22\tMaterials Bank\n23\tDrug Dealer Job\n24\tDrugs Bank\n25\tDrugs Bank 2\n26\t Drugs Farmer\n27\t Materials Smuggler Job\n28\tMaterials Factory";
		    		format(superstring,sizeof(superstring),"%s%s",list,list2);
		        	ShowPlayerDialog(playerid, 1241,DIALOG_STYLE_LIST,"G.P.S Positions",superstring,"Track","Off");
		        	SendClientMessage(playerid, COLOR_GREY,"* You have a GPS Addon, displaying illegal jobs positions and others with the GPS Addon.");
		        	SendClientMessage(playerid, COLOR_GREY,"* To turn the GPS Off, º¸»Î /gps again and select off or º¸»Î /gpsfind 0 0 0");
                }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "* GPS÷ª”–ƒ„‘⁄≥µ¡æ≤≈ø…“‘ π”√");
			    return 1;
			}
		}
		return 1;
	}

    if(strcmp(cmd, "/pilot", true) == 0 || strcmp(cmd, "/p", true) == 0) // By CuervO_NegrO
    {
        if(IsModelAPlane(idcar) || IsModelAHeli(idcar))
		{
	        new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/p)ilot [pilot radio]");
				return 1;
			}
		    for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    new carid = GetPlayerVehicleID(i);
				    if(IsModelAPlane(carid) || IsModelAHeli(carid) || PlayerInfo[i][pAtcRadio] == 1)
				    {
        				format(string, sizeof(string),"Pilot %s: %s, over",sendername, (result));
        				SendClientMessage(i, COLOR_GREEN, string);
					}
				}
			}
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (pilot radio) %s.",d,m,y,h,mi,s,sendername, (result));
			RadioChatLog(string);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "* This Vehicle Model doesn't has a pilot radio");
		    return 1;
		}
		return 1;
	}
	
	if(strcmp(cmd, "/atc", true) == 0) // By CuervO_NegrO
    {
        if(PlayerInfo[playerid][pAtc] == 1 || PlayerInfo[playerid][pAdmin] >= 3)
        {
            if(PlayerInfo[playerid][pAtcRadio] == 1)
        	{
		    	new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /atc [atc radio]");
					return 1;
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    new carid = GetPlayerVehicleID(i);
					    if(IsModelAPlane(carid) || IsModelAHeli(carid) || PlayerInfo[i][pAtcRadio] == 1)
					    {
		        			format(string, sizeof(string),"ATC %s: %s, over",sendername, (result));
		        			SendClientMessage(i, TEAM_GROVE_COLOR, string);
						}
					}
				}
				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (atc radio) %s.",d,m,y,h,mi,s,sendername, (result));
				RadioChatLog(string);
			}
			else
			{
		 		SendClientMessage(playerid,COLOR_GREY, "* Your ATC Radio is off (/atcradio)");
		 		return 1;
			}
		}
		else
		{
	 		SendClientMessage(playerid,COLOR_GREY, "* You are not an ATC");
	 		return 1;
		}
		return 1;
	}
	
	if(strcmp(cmd, "/getin", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			for(new i=0; i < 1750; i++)
			{
			    new Float:X,Float:Y,Float:Z;
			    GetVehiclePos(i, X,Y,Z);
			    new vehiclename[24];
			    if(IsPlayerInRangeOfPoint(playerid, 7.0, X,Y,Z))
			    {
			        if(IsAnEnterableModel(i))
			        {
			            if(IsPlayerInEVehicle[playerid] == 9999 && !IsPlayerInAnyVehicle(playerid))
			            {
			                GetVehicleName(i, vehiclename, sizeof(vehiclename));
			                format(string,sizeof(string),"You have entered to a %s (%d)",vehiclename,i);
			                SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
				            if(IsAnEnterableCar(i) && Seats[i] <= 5)
				            {
				        		PutPlayerInVehicle(playerid, i, 4);
				        		Seats[i] ++;
				        		IsPlayerInEVehicle[playerid] = i;
				        		SendClientMessage(playerid, TEAM_GROVE_COLOR,"* You have Entered a Vehicle with /getin, Use /getout to get out or else YOU WILL CRASH!!");
								return 1;
							}
							else if(IsAnEnterableBoat(i) && Seats[i] <= 8)
				            {
				        		PutPlayerInVehicle(playerid, i, 4);
				        		Seats[i] ++;
				        		IsPlayerInEVehicle[playerid] = i;
				        		SendClientMessage(playerid, TEAM_GROVE_COLOR,"* You have Entered a Vehicle with /getin, Use /getout to get out or else YOU WILL CRASH!!");
	                            return 1;
							}
							else if(IsAnEnterablePlane(i))
				            {
				        		PutPlayerInVehicle(playerid, i, 4);
				        		IsPlayerInEVehicle[playerid] = i;
				        		SendClientMessage(playerid, TEAM_GROVE_COLOR,"* You have Entered a Vehicle with /getin, Use /getout to get out or else YOU WILL CRASH!!");
				        		return 1;
							}
							else if(IsAnEnterableHeli(i) && Seats[i] <= 10)
				            {
				        		PutPlayerInVehicle(playerid, i, 4);
				        		Seats[i] ++;
				        		IsPlayerInEVehicle[playerid] = i;
				        		SendClientMessage(playerid, TEAM_GROVE_COLOR,"* You have Entered a Vehicle with /getin, Use /getout to get out or else YOU WILL CRASH!!");
				        		return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* You are in a vehicle already!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* Not near an Enterable model or vehicle is full!");
					    return 1;
					}
				}
			}
		}
		return 1;
	}
	
	
	
	if(strcmp(cmd, "/getout", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			if(IsPlayerInEVehicle[playerid] != 9999)
			{
				new i = IsPlayerInEVehicle[playerid];
                new Float:cX,Float:cY,Float:cZ;
			    GetPlayerPos(playerid, cX,cY,cZ);
			    if(IsAnEnterableHeli(i) && cZ >= 80)
			    {
			        SafeGivePlayerWeapon(playerid, 46, 1);
				}
				else if(IsAnEnterablePlane(i) && cZ >= 80)
			    {
			        SafeGivePlayerWeapon(playerid, 46, 1);
				}
			    SafeSetPlayerPos(playerid, cX,cY+5,cZ);
			    SafeRemovePlayerFromVehicle(playerid);
			    Seats[i] --;
			    IsPlayerInEVehicle[playerid] = 9999;
			}
			else return SendClientMessage(playerid, COLOR_GREY,"* Not in an enterable vehicle!");
		}
		return 1;
	}
	
	
	if(strcmp(cmd, "/restallcars", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 5)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            //RestartCars();
            AllCarRespawn();//BY nill
			format(string, sizeof(string), "[π‹¿Ì]: %s ÷ÿ÷√¡À∑˛ŒÒ∆˜Œ¥ π”√µƒÀ˘”–≥µ¡æ!", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has restarted ownable cars.",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}
	
	
	
	if(strcmp(cmd, "/surrender", true) == 0 || strcmp(cmd, "/sur", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pWanted] == 1)
            {
				PlayerCuffed[playerid] = 0;
				TogglePlayerControllable(playerid, 0);
				SetPlayerColor(playerid, 0xFF660000);
				GaveUp[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "You gave up, wait until a cop cuffs you");
				SendClientMessage(playerid, COLOR_CREAM, "Do not attempt to escape now, you can be killed / kicked!");
				format(string, sizeof(string), "[◊‹≤ø]: Criminal %s has just given up, hold your fire and CUFF him!",sendername);
				SendRadioMessage(1,COLOR_BLUE,string);
				SendRadioMessage(2,COLOR_BLUE,string);
				SendRadioMessage(3,COLOR_BLUE,string);
				LoopingAnim(playerid, "ROB_BANK","SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
            }
		}
		return 1;
	}
	
	if(strcmp(cmd, "/chatmode", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			ShowPlayerDialog(playerid,222,DIALOG_STYLE_LIST, "Chat Mode", "1\tLocal Mode\n2\tOOC Mode","Accept","Cancel");
		}
		return 1;
	}
	
	if(strcmp(cmd, "/mir", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(IsACop(playerid) || IsAFreecop(playerid))
            {
                if(PlayerInfo[playerid][pDuty] == 1)
                {
	                format(string, sizeof(string),"%s reads out the Miranda Rights:",sendername);
	                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
	                ProxDetector(30.0, playerid, "You have the right to keep silence, Everything you say can be used agaisnt you in a court of the Law", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	                ProxDetector(30.0, playerid, "You have the right to a ¬… ¶, If you cannot afford one, the state will appoint you one", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	                ProxDetector(30.0, playerid, "You have the right to a Phone Call, but only to ONE. Did you understood your rights?", COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
            }
		}
		return 1;
	}

	if(strcmp(cmd, "/stuck", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pFrozen] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "You were frozen by an admin, you can't evade that!");
			    SendClientMessage(playerid, COLOR_GREY, "If you still think that you are bugged use /askq!");
				return 1;
			}
			if(admins >= 1 && PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "There are administrators online, please use /askq!");
				return 1;
			}
			TogglePlayerControllable(playerid, 1);
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stuck",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/changeweather", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1337)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            ChangeWeather();
			format(string, sizeof(string), "[π‹¿Ì]: %s has Forced the Weather Change!.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Forced the Weather Change",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/factionlist", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"*******************FACTIONS******************");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 1 | Faction Name: L.S.P.D |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 2 | Faction Name: F.B.I |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 3 | Faction Name: The Army |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 4 | Faction Name: L.S.M.D |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 5 | Faction Name: Los SureÒos |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 6 | Faction Name: La Famigla Sinatra|");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 7 | Faction Name: L.S Government |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 8 | Faction Name: Hitmen |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 9 | Faction Name: L.S News Channel |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 10 | Faction Name: L.S Taxi Cab Co. |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 11 | Faction Name: L.S Licensers |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 12 | Faction Name: L.S Fire Department |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 13 | Faction Name: Sons of Anarchy |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 14 | Faction Name: …Ωø⁄◊È |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 15 | Faction Name: ¥Û»¶∞Ô |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"| Faction ID: 16 | Faction Name: ¿≠∏± |");
			SendClientMessage(playerid,COLOR_LIGHTBLUE,"*******************FACTIONS******************");
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Sent Chuck's Fact",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}
	/*
	if(strcmp(cmd, "/resetspawn", true) == 0 || strcmp(cmd, "/spawnreset", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            new Float:Health;
            GetPlayerHealth(playerid, Health);
            if(Health <= 35) return SendClientMessage(playerid, COLOR_GREY,"ƒ„µƒΩ°øµ÷∏ ˝Ã´µÕ¡À,≤ªƒ‹ π”√’‚∏ˆ√¸¡Ó");
			UpdatePlayerPosition(playerid);
			SpawnWorld[playerid] = GetPlayerVirtualWorld(playerid);
			SpawnInterior[playerid] = GetPlayerInterior(playerid);
			new area[45]; GetPlayer2DZone(playerid, area, sizeof(area));
			format(string, sizeof(string),"You have resetted your spawn to your current location (%s)",area);
			SendClientMessage(playerid, TEAM_GROVE_COLOR,string);
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s has Updated his Weapons and Position.",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}*/

	if(strcmp(cmd, "/hidetds", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(AFK[playerid] == 0)
            {
				TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
				TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
				TextDrawHideForPlayer(playerid, Textdraw41[playerid]);
				TextDrawHideForPlayer(playerid, Textdraw42[playerid]);
				TextDrawHideForPlayer(playerid, Textdraw43);
	            HideSpeedGun(playerid);
				HideWelcome(playerid);
				HideRules(playerid);
				HideAchievement(playerid);
				hidemotd(playerid);
	            new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] --> /hidetds",d,m,y,h,mi,s,sendername);
				CommandLog(string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/showtds", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			TextDrawShowForPlayer(playerid, Textdraw49[playerid]);
			TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] --> /showtds",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	


	if(strcmp(cmd, "/achievements", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            new list[] = "0\tSilent Kill\n1\tI Can Shout\n2\tFor the Team\n3\tAdmin Loves You\n4\tAdmin Hates You\n5\tOne Hour!\n6\tFive Hours!\n7\t≥£øÕÕÊº“\n8\t≥£øÕÕÊº“ level 2\n9\tNewbie Killer\n10\tSerial Killer\n11\tAssassin\n12\tAcme Dinamyte\n13\tA Black Hole\n14\tIllegal Weapon\n15\tFitness \n\t Next Page....";
            ShowPlayerDialog(playerid,151,DIALOG_STYLE_LIST,"Achievements",list, "»∑∂®","»°œ˚");
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s ºÏ≤È¡À the Achievements",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/rules", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            ShowRules(playerid);
            SendClientMessage(playerid,COLOR_GREY, "Ã· æ: Type LMB To close this windows");
            ViewingRules[playerid] = 1;
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Checked the Rules. (/rules)",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/information", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            ShowWelcome(playerid);
            SendClientMessage(playerid,COLOR_GREY, "Ã· æ: Type LMB To close this windows");
            ViewingWelcome[playerid] = 1;
            new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Checked the Rules. (/rules)",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/destroytk", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pDTK] == 0 && PlayerInfo[playerid][pDSTK] == 0)
            {
                SendClientMessage(playerid, COLOR_GREY, "You do not have a Ticket to Destroy!.");
                return 1;
            }
			PlayerInfo[playerid][pDTK] = 0;
			PlayerInfo[playerid][pDSTK] = 0;
		 	new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			PlayerPlaySound(playerid, 1056, X, Y, Z);
 			GameTextForPlayer(playerid, "~w~Successfuly Destroyed Your Destruction Derby Tickets!", 5000,3);
			if(PlayerInfo[playerid][pDM] == 1)
			{
				format(string, sizeof(string), "[–≈œ¢]: %s Has Destroyed Their Destruction Derby Tickets!",sendername);
	   			SendClientMessage(playerid,COLOR_LIGHT_BLUE, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/carid", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
			new vehicle;
			vehicle = GetPlayerVehicleID(playerid);
			format(string, sizeof(string), "You are now in Vehicle: %d", vehicle);
			SendClientMessage(playerid,COLOR_GREY,string);
		}
		return 1;
	}

 	if(strcmp(cmd, "/peter", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_LIGHTBLUE, "Oh Look! There is A Message on my Cereals, It Àµ: OOOOOOOOOOOOO");

			format(string, sizeof(string), "[π‹¿Ì]: %s has Announced Peter's Fail.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
		}
		return 1;
	}

 	if(strcmp(cmd, "/web", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_LIGHTBLUE, "Visit the Server Web: <changeme at 54291>");
			format(string, sizeof(string), "[π‹¿Ì]: %s has Announced Server URLs.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
		}
		return 1;
	}

	if(strcmp(cmd, "/forums", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_LIGHTBLUE, "Visit the Server Forum: <changeme at 54307>");
			format(string, sizeof(string), "[π‹¿Ì]: %s has Announced Server URLs.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
		}
		return 1;
	}

	if(strcmp(cmd, "/factions", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessageToAll(COLOR_LIGHTBLUE, "Visit the Server Factions Boards: <changeme at 54323>");
			format(string, sizeof(string), "[π‹¿Ì]: %s has Announced Server URLs.", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
		}
		return 1;
	}


 	if(strcmp(cmd, "/copsuspend", true) == 0) // By CuervO_NegrO
	{
		if(PlayerInfo[giveplayerid][pDBanned] == 1)
		{
 			SendClientMessage(playerid,COLOR_NICERED,"Player is Already Cop Banned!");
 			return 1;
		}
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /copsuspend [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        PlayerInfo[giveplayerid][pDBanned] = 1;
  						format(string, sizeof(string), "You Suspended %s From Cop Duty",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
 						GameTextForPlayer(giveplayerid, "~r~Suspended from Cop Duty!", 5000, 3);
 						new Float:X, Float:Y, Float:Z;
			    		GetPlayerPos(giveplayerid, X,Y,Z);
	    				PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
	    				SetPlayerSkin(giveplayerid, 167);
 					 	SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "You Are not allowed to do Cop Duty anymore, until you get unsuspended");
						format(string, sizeof(string), "[π‹¿Ì]: %s has Suspended %s (%d) From Cop Duty.",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /copsuspend %s",d,m,y,h,mi,s,sendername,giveplayer);
						CommandLog(string);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/copunsuspend", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /copunsuspend [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[giveplayerid][pDBanned] == 0)
			{
 				SendClientMessage(playerid,COLOR_NICERED,"Player isn't Cop Suspended!");
 				return 1;
			}
			if(IsACop(playerid) && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        PlayerInfo[giveplayerid][pDBanned] = 0;
  						format(string, sizeof(string), "You have Un Suspended %s From Cop duty",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
 						GameTextForPlayer(giveplayerid, "~g~Unsuspended From Cop Duty!", 5000, 3);
 						new Float:X, Float:Y, Float:Z;
			    		GetPlayerPos(giveplayerid, X,Y,Z);
	    				PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
 					 	SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "You can now proceed with regular duty activities");
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Unsuspended %s (%d) From Cop Duty.",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						if(PlayerInfo[giveplayerid][pMember] == 1 || PlayerInfo[giveplayerid][pLeader] == 1)
						{
							if(PlayerInfo[giveplayerid][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[giveplayerid][pRank] == 1) { PlayerInfo[giveplayerid][pChar] = 71; SetPlayerSkin(giveplayerid, 71); }
								else if(PlayerInfo[giveplayerid][pRank] == 2) { PlayerInfo[giveplayerid][pChar] = 280; SetPlayerSkin(giveplayerid, 280); }
								else if(PlayerInfo[giveplayerid][pRank] == 3) { PlayerInfo[giveplayerid][pChar] = 266; SetPlayerSkin(giveplayerid, 266); }
								else if(PlayerInfo[giveplayerid][pRank] == 4) { PlayerInfo[giveplayerid][pChar] = 267; SetPlayerSkin(giveplayerid, 267); }
								else if(PlayerInfo[giveplayerid][pRank] == 5) { PlayerInfo[giveplayerid][pChar] = 281; SetPlayerSkin(giveplayerid, 281); }
								else if(PlayerInfo[giveplayerid][pRank] == 6) { PlayerInfo[giveplayerid][pChar] = 265; SetPlayerSkin(giveplayerid, 265); }
								else if(PlayerInfo[giveplayerid][pRank] == 7) { PlayerInfo[giveplayerid][pChar] = 282; SetPlayerSkin(giveplayerid, 282); }
								else if(PlayerInfo[giveplayerid][pRank] == 8) { PlayerInfo[giveplayerid][pChar] = 288; SetPlayerSkin(giveplayerid, 288); }
							}
							else if(PlayerInfo[giveplayerid][pSex] == 2)
							{
								PlayerInfo[giveplayerid][pChar] = 211; SetPlayerSkin(giveplayerid, 211);
							}
						}
						else if(PlayerInfo[giveplayerid][pMember] == 2 || PlayerInfo[giveplayerid][pLeader] == 2)
						{
							if(PlayerInfo[giveplayerid][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[giveplayerid][pRank] == 1) { PlayerInfo[giveplayerid][pChar] = 163; SetPlayerSkin(giveplayerid, 163); }
								else if(PlayerInfo[giveplayerid][pRank] == 2) { PlayerInfo[giveplayerid][pChar] = 164; SetPlayerSkin(giveplayerid, 164); }
								else if(PlayerInfo[giveplayerid][pRank] == 3) { PlayerInfo[giveplayerid][pChar] = 59; SetPlayerSkin(giveplayerid, 59); }
								else if(PlayerInfo[giveplayerid][pRank] == 4) { PlayerInfo[giveplayerid][pChar] = 217; SetPlayerSkin(giveplayerid, 217); }
								else if(PlayerInfo[giveplayerid][pRank] == 5) { PlayerInfo[giveplayerid][pChar] = 187; SetPlayerSkin(giveplayerid, 187); }
								else if(PlayerInfo[giveplayerid][pRank] == 6) { PlayerInfo[giveplayerid][pChar] = 166; SetPlayerSkin(giveplayerid, 166); }
								else if(PlayerInfo[giveplayerid][pRank] == 7) { PlayerInfo[giveplayerid][pChar] = 147; SetPlayerSkin(giveplayerid, 165); }
								else if(PlayerInfo[giveplayerid][pRank] == 8) { PlayerInfo[giveplayerid][pChar] = 165; SetPlayerSkin(giveplayerid, 165); }
							}
							else if(PlayerInfo[giveplayerid][pSex] == 2)
							{
								PlayerInfo[giveplayerid][pChar] = 141; SetPlayerSkin(giveplayerid, 141);
							}
						}
						else if(PlayerInfo[giveplayerid][pMember] == 3 || PlayerInfo[giveplayerid][pLeader] == 3)
						{
							if(PlayerInfo[giveplayerid][pSex] == 1)
							{
								//Male Skin
								if(PlayerInfo[giveplayerid][pRank] == 1) { PlayerInfo[giveplayerid][pChar] = 287; SetPlayerSkin(giveplayerid, 287); }
								else if(PlayerInfo[giveplayerid][pRank] == 2) { PlayerInfo[giveplayerid][pChar] = 287; SetPlayerSkin(giveplayerid, 287); }
								else if(PlayerInfo[giveplayerid][pRank] == 3) { PlayerInfo[giveplayerid][pChar] = 287; SetPlayerSkin(giveplayerid, 287); }
								else if(PlayerInfo[giveplayerid][pRank] == 4) { PlayerInfo[giveplayerid][pChar] = 287; SetPlayerSkin(giveplayerid, 287); }
								else if(PlayerInfo[giveplayerid][pRank] == 5) { PlayerInfo[giveplayerid][pChar] = 287; SetPlayerSkin(giveplayerid, 287); }
								else if(PlayerInfo[giveplayerid][pRank] == 6) { PlayerInfo[giveplayerid][pChar] = 287; SetPlayerSkin(giveplayerid, 287); }
							}
							else if(PlayerInfo[giveplayerid][pSex] == 2)
							{
								PlayerInfo[giveplayerid][pChar] = 191; SetPlayerSkin(giveplayerid, 191);
							}
						}
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/checkticket", true) == 0 || strcmp(cmd, "/checktk", true) == 0) // By CuervO_NegrO
	{
		if (PlayerInfo[playerid][pDM] == 0)
		{
 			SendClientMessage(playerid,COLOR_NICERED,"You are not an Official Destruction Derby Manager!");
 			return 1;
		}
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /checktk [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pDM] == 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[giveplayerid][pDTK] == 1)
						{
						    format(string, sizeof(string), "** %s Has a Driver Ticket And Is Allowed to Enter", sendername);
						    SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
						}
						else
						{
							format(string, sizeof(string), "** %s Hasn't a Driver Ticket And Isn't Allowed to Enter", sendername);
						    SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
			    		}
    		 	 		if(PlayerInfo[giveplayerid][pDSTK] == 1)
						{
						    format(string, sizeof(string), "** %s Has a Spectation Ticket And Is Allowed to Spectate", sendername);
						    SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
						}
						else
						{
							format(string, sizeof(string), "** %s Hasn't an Specation Ticket And Isn't Allowed to Spectate", sendername);
						    SendClientMessage(playerid, COLOR_LIGHT_BLUE,string);
			    		}

				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/giveddtk", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /giveddtk [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pDM] == 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
      					if (PlayerInfo[giveplayerid][pDTK] == 1)
						{
				 			SendClientMessage(playerid,COLOR_NICERED,"Player Already Has a DD Ticket or Player Not Connected!");
				 			return 1;
						}
				        
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        PlayerInfo[giveplayerid][pDTK] = 1;
  						format(string, sizeof(string), "You Have Granted %s With a Destruction Derby Ticket",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
 						GameTextForPlayer(giveplayerid, "~w~Granted with a DD Ticket!", 5000, 3);
 						new Float:X, Float:Y, Float:Z;
			    		GetPlayerPos(giveplayerid, X,Y,Z);
	    				PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
 					 	SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "You can Now Get near the CHECKPOINT And º¸»Î /enterdd to enter to the DD");
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Granted a DD Ticket To %s (%d)",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a DD Ticket to %s",d,m,y,h,mi,s,sendername,giveplayer);
						GiveLog(string);
				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/crime", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /crime [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "[–≈œ¢]: %s's crime is: %s",giveplayer,PlayerInfo[playerid][pCrimeReason])
					SendClientMessage(playerid, COLOR_YELLOW, string);
					new y, m, d;
					new h,mi,s;
					getdate(y,m,d);
					gettime(h,mi,s);
					format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Checked %s's crime.",d,m,y,h,mi,s,sendername,giveplayer);
					GiveLog(string);
			    }
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/cancelsuspect", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /cancelsuspect [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsACop(playerid) && PlayerInfo[playerid][pRank] >= 3)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
      					if (PlayerInfo[giveplayerid][pWanted] == 0)
						{
				 			SendClientMessage(playerid,COLOR_NICERED,"Player not Wanted!");
				 			return 1;
						}
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
  						format(string, sizeof(string), "You Have cleared %s's crimes!",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
 						GameTextForPlayer(giveplayerid, "~w~Unsuspected!", 5000, 3);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Unsuspected %s (%d)",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						ClearCrime(giveplayerid);
						format(string, sizeof(string), "[◊‹≤ø]: %s has unsuspected %s (%d)",sendername, giveplayer, giveplayerid);
						SendRadioMessage(3, COLOR_ALLDEPT, string);
						SendRadioMessage(2, COLOR_ALLDEPT, string);
						SendRadioMessage(1, COLOR_ALLDEPT, string);
						format(string, sizeof(string), "[MOLE]: You have been unsuspected by %s, your crime has been cleared!",sendername)
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						SetPlayerToTeamColor(giveplayerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Unsuspected to %s",d,m,y,h,mi,s,sendername,giveplayer);
						GiveLog(string);
				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/makehelper", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /makehelper [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0 || level > 3) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 2!"); return 1; }
						if(level == 3 && PlayerInfo[playa][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GREY,"* This level is reserved for admins!");
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pHelper] = level;
						format(string, sizeof(string), "** Gave to %s Server Helper Level [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~b~-Administration- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~Official Helpers Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /makehelper %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/settesterlevel", true) == 0 || strcmp(cmd, "/stl", true) == 0 ) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /[s]et[t]ester[l]evel [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-4)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6 || PlayerInfo[playerid][pTester] == 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(level == 4 && PlayerInfo[playa][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GREY, "* This level is only For Administrators!");
			            if(level < 0 || level > 3) return SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 3!");
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pTester] = level;
						format(string, sizeof(string), "** Gave to %s Tester Level [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~b~-Administration- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~Testing Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /settesterlevel %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/atcrights", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /atcrights [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(level < 0||level > 1) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 1!"); return 1; }
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pAtc] = level;
						format(string, sizeof(string), "** Gave to %s ATC Level [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~b~-Aereal System- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~Official A.T.C Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /atcrights %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/ddrights", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ddrights [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 1) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 1!"); return 1; }
			            
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pDM] = level;
						format(string, sizeof(string), "** Gave to %s Destruction Derby Manager Level [%d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "~b~-Destruction Derby- ~n~~w~You Have Now Level ~y~%d ~n~~w~At the ~p~Official Destruction Derby Managers Team",level);
						GameTextForPlayer(playa, string, 4500,3);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /ddrights %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/setlottonumber", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /setlottonumber [ÕÊº“ID/ÕÊº“√˚◊÷] [number](1-80)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(level < 0||level > 80) { SendClientMessage(playerid, COLOR_GREY, "** Number May not be below 0 or above 80!"); return 1; }
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "[π‹¿Ì]: %s has set %s (%d)'s lotto number to %d",sendername,giveplayer,playa,level);
			            ABroadCast(COLOR_LIGHTRED,string,5);
						PlayerInfo[playa][pLottoNr] = level;
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /setlottonumber %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/hydrarights", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /hydrarights [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 1) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 1!"); return 1; }
			            
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pHydraR] = level;
						format(string, sizeof(string), "** Gave to %s Hydra Driver Rights [Level: %d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						if(level == 1)
						{
							format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~g~can ~w~fly the Hydra",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						else
						{
						    format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~r~can't ~w~fly the Hydra",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hydrarights %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/hunterrights", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /hunterrights [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 1) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 1!"); return 1; }
			            
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pHunterR] = level;
						format(string, sizeof(string), "** Gave to %s Hunter Driver Rights [Level: %d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						if(level == 1)
						{
							format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~g~can ~w~fly the Hunter",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						else
						{
						    format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~r~can't ~w~fly the Hunter",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /hunterrights %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
						CommandLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/rhinorights", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /rhinorights [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 1) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 1!"); return 1; }
			            
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pRhinoR] = level;
						format(string, sizeof(string), "** Gave to %s Rhino Driver Rights [Level: %d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
      					if(level == 1)
						{
							format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~g~can ~w~drive the Rhino",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						else
						{
						    format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~r~can't ~w~drive the Rhino",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /rhinorights %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/predrights", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /predrights [ÕÊº“ID/ÕÊº“√˚◊÷] [level](0-1)");
				return 1;
			}
			new playa;
			new level;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (IsACop(playerid) && PlayerInfo[playerid][pRank] >= 7 || IsSpecial(playerid) || PlayerInfo[playerid][pAdmin] >= 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            //ConsumingMoney[playa] = 1;
			            if(level < 0||level > 1) { SendClientMessage(playerid, COLOR_GREY, "** Level May not be below 0 or above 1!"); return 1; }
			            
			            GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pPredR] = level;
						format(string, sizeof(string), "** Gave to %s Predator Driver Rights [Level: %d]",giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						if(level == 1)
						{
							format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~g~can ~w~sail the Predator",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						else
						{
						    format(string, sizeof(string), "~b~-Raven's RP- ~n~~w~You are now a Pilot Level ~y~%d ~n~~w~And now you ~r~can't ~w~sail the Predator",level);
							GameTextForPlayer(playa, string, 8500,3);
						}
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /predrights %s %d",d,m,y,h,mi,s,sendername,giveplayer,level);
						AdminLog(string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/giveddstk", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /giveddstk [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pDM] == 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (PlayerInfo[giveplayerid][pDSTK] == 1)
						{
				 			SendClientMessage(playerid,COLOR_NICERED,"** Player Already Has a DD Spectator Ticket!");
				 			return 1;
						}
				        
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        PlayerInfo[giveplayerid][pDSTK] = 1;
  						format(string, sizeof(string), "You Have Granted %s With a Destruction Derby Ticket (Spectator)",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
						GameTextForPlayer(giveplayerid, "~w~Granted with an DD Spectation Ticket!", 5000, 3);
 						new Float:X, Float:Y, Float:Z;
			    		GetPlayerPos(giveplayerid, X,Y,Z);
			    		PlayerPlaySound(giveplayerid, 1056, X, Y, Z);
 					 	SendClientMessage(giveplayerid, TEAM_GROVE_COLOR, "You can Now Get near the CHECKPOINT And º¸»Î /enterdd_s to enter to the DD");
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Granted a DDS Ticket To %s (%d)",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
                        new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave a DDS Ticket to %s",d,m,y,h,mi,s,sendername,giveplayer);
						GiveLog(string);
				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/remddtk", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /remddtk [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pDM] == 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (PlayerInfo[giveplayerid][pDTK] == 0)
						{
				 			SendClientMessage(playerid,COLOR_NICERED,"Player doesn't has a DD Ticket!");
				 			return 1;
						}
				        
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        PlayerInfo[giveplayerid][pDTK] = 0;
  						format(string, sizeof(string), "You Have Removed %s's Destruction Derby Ticket",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
						GameTextForPlayer(giveplayerid, "~r~DD Ticket Removed!", 5000, 3);
 						new Float:X, Float:Y, Float:Z;
			    		GetPlayerPos(giveplayerid, X,Y,Z);
			    		PlayerPlaySound(giveplayerid, 1130, X, Y, Z);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Removed %s (%d)'s DD Ticket",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Removed %s's DD Ticket",d,m,y,h,mi,s,sendername,giveplayer);
						GiveLog(string);
				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/remddstk", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /remddstk [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[giveplayerid][pAdmin] >= 3 || PlayerInfo[playerid][pDM] == 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if (PlayerInfo[giveplayerid][pDSTK] == 0)
						{
				 			SendClientMessage(playerid,COLOR_NICERED,"Player Doesn't has an Spectator Ticket!");
				 			return 1;
						}
				        
   					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        PlayerInfo[playerid][pDSTK] = 0;
  						format(string, sizeof(string), "You Have Removed %s's DD Ticket (Spectator)",giveplayer);
      					SendClientMessage(playerid,COLOR_LIGHTRED,string);
						GameTextForPlayer(giveplayerid, "~r~DD Spectation Ticket Removed!", 5000, 3);
 						new Float:X, Float:Y, Float:Z;
			    		GetPlayerPos(giveplayerid, X,Y,Z);
			    		PlayerPlaySound(giveplayerid, 1130, X, Y, Z);
						format(string, sizeof(string), "[π‹¿Ì]: %s Has Removed %s (%d)'s DDS Ticket.",sendername, giveplayer, giveplayerid);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Removed %s's DDS Ticket",d,m,y,h,mi,s,sendername,giveplayer);
						GiveLog(string);
				    }
				}
				else
				{
					format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/derbyhelp", true) == 0) // By CuervO_NegrO
	{
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 4 && PlayerInfo[playerid][pDM] == 0)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„Œﬁ»® π”√¥À√¸¡Ó!");
		        return 1;
			}
			SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Derby Help -----------------------");
  			SendClientMessage(playerid, COLOR_WHITE, "To Send a DD Opening Message º¸»Î: /dd");
			SendClientMessage(playerid, COLOR_WHITE, "To Send a DD Second Opening Message º¸»Î: /dd2");
			SendClientMessage(playerid, COLOR_WHITE, "To Send a DD Closeing Message: /dd3");
			SendClientMessage(playerid, COLOR_WHITE, "To Announce that the DD is Closed º¸»Î: /dd4");
			SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Derby Door -----------------------");
			SendClientMessage(playerid, COLOR_WHITE, "To Open the DD Door Get in the Post and º¸»Î /opendd");
			SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Derby Tickets -----------------------");
			SendClientMessage(playerid, COLOR_WHITE, "To Give Someone a DD Ticket º¸»Î /giveddtk, To Give Someone an Spectation Ticket º¸»Î /giveddstk");
			SendClientMessage(playerid, COLOR_WHITE, "To Remove Someone's DD Ticket º¸»Î /remddtk, To Remove Someone's Spectation Ticket º¸»Î /remddstk");
			SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Other (Abuse = Ban) -----------------------");
			SendClientMessage(playerid, COLOR_WHITE, "You can Start the Countdown of the Derby with /ddcount or /ddcd");
			SendClientMessage(playerid, COLOR_WHITE, "You can burn someone for nascaring with /ddfire, At the second time it will kill the Guy");
            SendClientMessage(playerid, COLOR_WHITE, "You can burn the Stadium just in Case of Count Down Campers with /ddexplode");
		}
		return 1;
	}

 	if(strcmp(cmd, "/messages", true) == 0) // By CuervO_NegrO
 	{
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Level One Admin -----------------------");
       		SendClientMessage(playerid, COLOR_NICERED, "Only For lvl 1 Admins (Moderator)");
            SendClientMessage(playerid, COLOR_BLUE, "To Display The Server URLs º¸»Î: /URLs");
            SendClientMessage(playerid, COLOR_BLUE, "To Display a Peter's Say º¸»Î: /Peter");
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
            	SendClientMessage(playerid, TEAM_VAGOS_COLOR, "----------------------- Level Three Admin -----------------------");
            	SendClientMessage(playerid, COLOR_NICERED, "Only For lvl 3 Admins (Administrators)");
            	SendClientMessage(playerid, COLOR_BLUE, "To Send a Chuck's Message º¸»Î: /chuck");
			}
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
            	SendClientMessage(playerid, TEAM_VAGOS_COLOR, "----------------------- Level Four Admin -----------------------");
            	SendClientMessage(playerid, COLOR_NICERED, "Only For lvl 4 Admins (Senior Administrators)");
            	SendClientMessage(playerid, COLOR_BLUE, "To Send a DD Opening Message º¸»Î: /dd");
				SendClientMessage(playerid, COLOR_BLUE, "To Send a DD Second Opening Message º¸»Î: /dd2");
				SendClientMessage(playerid, COLOR_BLUE, "To Send a DD Closeing Message: /dd3");
				SendClientMessage(playerid, COLOR_BLUE, "To Announce that the DD is Closed º¸»Î: /dd4");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/gates", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 4)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            if(PlayerInfo[playerid][pDM] == 1 || PlayerInfo[playerid][pAdmin] >= 4)
            {
	            SendClientMessage(playerid, COLOR_YELLOW, "----------------------- DD Admin -----------------------");
	       		SendClientMessage(playerid, COLOR_NICERED, "Only For lvl DD Managers)");
	            SendClientMessage(playerid, COLOR_BLUE, "To Open the DD¥Û√≈º¸»Î: /opendd");
			}
			if(PlayerInfo[playerid][pAdmin] >= 6)
			{
            	SendClientMessage(playerid, TEAM_VAGOS_COLOR, "----------------------- Level Six Admin -----------------------");
            	SendClientMessage(playerid, COLOR_NICERED, "Only For lvl 6 Admins (Developers)");
            	SendClientMessage(playerid, COLOR_BLUE, "To Open the Developers Area º¸»Î: /opendev");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/teles", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 3)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Level Three Admin -----------------------");
       		SendClientMessage(playerid, COLOR_GREEN, "Only For lvl 3 Admins (Administrators)");
       		SendClientMessage(playerid, COLOR_WHITE, "To Teleport to Admin Area º¸»Î: /adminarea");
            SendClientMessage(playerid, COLOR_WHITE, "To Teleport to ¬Â…ºÌ∂…£Õ–Àπ º¸»Î: /gotols");
            SendClientMessage(playerid, COLOR_WHITE, "To Teleport to ¬Â…ºÌ∂…£Õ–Àπ  –’˛Ã¸ º¸»Î: /gotolsch");
            SendClientMessage(playerid, COLOR_WHITE, "To Teleport to The DDÃÂ”˝≥° º¸»Î: /gotostad");
            SendClientMessage(playerid, COLOR_WHITE, "To Teleport to Shamal Jet's Interior º¸»Î: /gotojet");
            SendClientMessage(playerid, COLOR_WHITE, "To Teleport to  •∑∆“Æ¬ﬁ Cars Delivery Point º¸»Î: /gotosfdocks");
            SendClientMessage(playerid, COLOR_WHITE, "To Teleport to ¿≠ÀπŒ¨º”Àπ Airport planes delivery point º¸»Î: /gotolvap");
			if(PlayerInfo[playerid][pAdmin] >= 4)
            {
            	SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Level Four Admin -----------------------");
            	SendClientMessage(playerid, COLOR_GREEN, "Only For lvl 4 Admins (Senior Administrators)");
            	SendClientMessage(playerid, COLOR_WHITE, "To Teleport to ¿≠ÀπŒ¨º”Àπ º¸»Î: /gotolv");
            	SendClientMessage(playerid, COLOR_WHITE, "To Teleport to  •∑∆“Æ¬ﬁ º¸»Î: /gotosf");
           	 	SendClientMessage(playerid, COLOR_WHITE, "To Teleport to a Gas Station º¸»Î: /gasplace");
				SendClientMessage(playerid, COLOR_WHITE, "To Teleport to the DDÃÂ”˝≥° º¸»Î: /gotodd");
			}
			if(PlayerInfo[playerid][pAdmin] >= 1337)
			{
            	SendClientMessage(playerid, COLOR_YELLOW, "----------------------- Level 1338 Admin -----------------------");
            	SendClientMessage(playerid, COLOR_GREEN, "Only For lvl 1338 Admins (Developers)");
            	SendClientMessage(playerid, COLOR_WHITE, "To Teleport to Developers Area º¸»Î: /devsarea");
				SendClientMessage(playerid, COLOR_WHITE, "To Teleport to æØ≤Ïæ÷ º¸»Î: /gotolspd");
				SendClientMessage(playerid, COLOR_WHITE, "To Teleport to FBI ◊‹≤ø º¸»Î º¸»Î: /gotofbi");
				SendClientMessage(playerid, COLOR_WHITE," To Teleport to the Army Base º¸»Î: /gotoarmy");
				SendClientMessage(playerid, COLOR_WHITE, "To Teleport to a Car's Dealership º¸»Î: /dealership");
				SendClientMessage(playerid, COLOR_WHITE, "To Teleport to “¯–– º¸»Î: /gotobank");
			}
		}
		return 1;
	}


 	if(strcmp(cmd, "/moves", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 5)
            {
                SendClientMessage(playerid, COLOR_GREY, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
                return 1;
            }
            SendClientMessage(playerid, COLOR_NICERED, "To Move Up º¸»Î /up || To Move Down º¸»Î /down");
            SendClientMessage(playerid, COLOR_NICERED, "To Move Right º¸»Î /right || To move Left º¸»Î /left");
            SendClientMessage(playerid, COLOR_NICERED, "To Move Forward º¸»Î /forw || To move Back º¸»Î /back");
			format(string, sizeof(string), "[π‹¿Ì]: %s has used /moves", sendername);
			ABroadCast(COLOR_LIGHTRED,string, 5);
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Used /moves",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}

	if(strcmp(cmd, "/credits", true) == 0) // By CuervO_NegrO
    {
        if(IsPlayerConnected(playerid))
        {
            SendClientMessage(playerid, COLOR_PINK, "-----------  Raven's Roleplay Server Developers -----------");
			SendClientMessage(playerid, COLOR_WHITE, "<Changeme at 55467>");
			SendClientMessage(playerid, COLOR_PINK, "-------------- Special Administrators ---------------");
            SendClientMessage(playerid, COLOR_WHITE, "<Changeme at 55469>");
            SendClientMessage(playerid, COLOR_PINK, "------------------ Special Thanks -------------------"); // DO NOT REMOVE ANY OF THESE, You can only ADD but not REMOVE
            SendClientMessage(playerid, COLOR_WHITE, "LordMan - LA:RP Gamemode Creator - Thank You!");
            SendClientMessage(playerid, COLOR_WHITE, "CuervO_NegrO - Raven's Roleplay Gamemode Creator.");
            SendClientMessage(playerid, COLOR_WHITE, "TheToni & Moker - Raven's Roleplay Gamemode Testers.");
		}
		return 1;
	}

	if(strcmp(cmd, "/kill", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	 	        SendClientMessage(playerid, COLOR_RED, "ƒ„√ª”–»®œﬁ π”√’‚∏ˆ√¸¡Ó.");
	 	        return 1;
			}

			format(string, sizeof(string), "[π‹¿Ì]: %s ◊‘…±¡À.", sendername);
			ABroadCast(COLOR_LIGHTRED, string, 5);
			SetPlayerHealth(playerid,0)
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Killed Himself.",d,m,y,h,mi,s,sendername);
			AdminLog(string);
		}
		return 1;
	}


//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/help", true) == 0) // By nill
	{
	    if(IsPlayerConnected(playerid))
	    {
			new listitems[] = "1\t’Àªßπ‹¿Ì∞Ô÷˙\n2\t≥£”√÷∏¡Ó∞Ô÷˙\n3\t“¯––∞Ô÷˙\n4\t ÷ª˙∞Ô÷˙\n5\t∑øŒ›∞Ô÷˙\n6\t± º«±æ∞Ô÷˙\n7\t◊‚∑ø∞Ô÷˙\n8\t≤˙“µ∞Ô÷˙\n9\t◊È÷Ø¡Ïµº∞Ô÷˙\n10\tIRC∞Ô÷˙\n11\tµˆ”„∞Ô÷˙\n12\t≈Î‚ø∞Ô÷˙\n13\t∞Ô≈…∞Ô÷˙\n14\tæØ≤Ï∞Ô÷˙\n15\tπ§◊˜∞Ô÷˙";
			ShowPlayerDialog(playerid,8536,DIALOG_STYLE_LIST,"«Î—°‘Òƒ„–Ë“™≤Èø¥µƒ∞Ô÷˙:",listitems,"»∑∂®","»°œ˚");
		}
		return 1;
	}

	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "ƒ„Œﬁ»®œﬁ π”√¥À√¸¡Ó!");
			    return 1;
			}
			new plevel = PlayerInfo[playerid][pAdmin];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREY, "”√∑®: /(ah)elp [level]");
				if(plevel == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1.");
				}
				else if(plevel == 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1, 2.");
				}
				else if(plevel == 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1, 2, 3.");
				}
				else if(plevel == 4)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1, 2, 3, 4.");
				}
				else if(plevel == 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1, 2, 3, 4, 5.");
				}
				else if(plevel == 6)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1, 2, 3, 4, 5, 6.");
				}
				else if(plevel >= 1337)
				{
					SendClientMessage(playerid, COLOR_GREY, "ø…”√µ»º∂: 1, 2, 3, 4, 5, 6, 1337.");
				}
				return 1;
			}

			new level = strval(tmp);
			if (level == 1)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 1)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "=========================== Trial Moderator ===========================");
					SendClientMessage(playerid, COLOR_GRAD1, "/check /setint /setvw /mute /kick /nick /(un)warn /jailed /blinded /reports /masked /apm /freeze /alias");
					SendClientMessage(playerid, COLOR_GRAD1, "/learn /sr /(not)Checked /muted /frozen /suspectlist /richlist /slap /kill /messages /admin /warned /ips");
					SendClientMessage(playerid, COLOR_GRAD1, "/ajail /checkweapons /(end)spec /turn /givetime /ip /unjail /trace /afk /pending /registred /fixmoney");
			    }
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 1!");
				    return 1;
				}
			}
			else if (level == 2)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 2)
			    {
			        SendClientMessage(playerid, COLOR_WHITE,"=========================== Global Moderator ===========================");
			        SendClientMessage(playerid, COLOR_GRAD2,"/skydive /kickres /unprison /punch /setjob /update /agl /agivepassport /shiftname /getips");
					SendClientMessage(playerid, COLOR_GRAD2,"/skick /noooc /txt /bigears /fine /fban /respawnthiscar(/rtc) /disarm /cancelcontract");
					SendClientMessage(playerid, COLOR_GRAD2,"/atcradio /removeroadblock /cancelcountdown /cancelvote /countdownkick /asu /Nonewbie /getaliases");
			    }
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 2!");
				    return 1;
				}
			}
			else if (level == 3)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_WHITE,"=========================== Administrator ===========================");
			        SendClientMessage(playerid, COLOR_GRAD3,"/ban /hog /announce /fourdive /mole /fuelcars /giveddtk /remddtk /atake /(cancel)countdown");
					SendClientMessage(playerid, COLOR_GRAD3,"/mark /gotomark /oldcar /write /teles /setage /prison /vehslap /burn /goto");
					SendClientMessage(playerid, COLOR_GRAD3,"/god /chuck /respawnrentbikes /respawnrentcars /giveddstk /remddst /srall");
				}
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 3!");
				    return 1;
				}
			}
			else if (level == 4)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 4)
			    {
			        SendClientMessage(playerid, COLOR_WHITE,"=========================== Senior Administrator ===========================");
       				SendClientMessage(playerid, COLOR_GRAD4,"/setteam /anews /gates /givemats /carreset /ddrights /atcrights /getincar /setskin");
   					SendClientMessage(playerid, COLOR_GRAD4,"/cc /sethp /setarmour /forceskin /explode /cnnn /cnn /acnn /gethere /td /setmats /update");
	       			SendClientMessage(playerid, COLOR_GRAD4,"/supervehslap /asellhouse /asellbiz /setdrugs /givedrugs /asellsbiz /setchamp /cop(un)suspend");
				}
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 4!");
				    return 1;
				}
			}
			else if (level == 5)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 5)
			    {
			        SendClientMessage(playerid, COLOR_WHITE,"=========================== Main Administrator ===========================");
			        SendClientMessage(playerid, COLOR_GRAD5,"/unbanip /startlotto(ex) /bizentrance /sbizentrance /moves /tod /restallcars /acheckcode");
					SendClientMessage(playerid, COLOR_GRAD5,"/lottosay /asellcar /weather /house /biz /houseo /setdesc /setcar /xgoto /(un)setcar /(un)setbizz");
					SendClientMessage(playerid, COLOR_GRAD5,"/say /houseentrance /housexit /lottoann /payday /crash /adv /houseint /dvehicles /(un)sethouse");
				}
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 5!");
				    return 1;
				}
			}
			else if (level == 6)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 6)
			    {
			        SendClientMessage(playerid, COLOR_WHITE,"=========================== Server Developer ===========================");
			        SendClientMessage(playerid, COLOR_GRAD6,"/getcar /veh /st /tn /edit /upload /createpickup /makehelper /(bank)reward");
	    			SendClientMessage(playerid, COLOR_GRAD6,"/ccnn /gcnn /reward /(bank)money /taxday /setcarhp /setcarpj /givefight");
	    			SendClientMessage(playerid, COLOR_GRAD6,"/setlottonumber /opendev /setstat /makeleader /(bank)tax /setjackpot");
				}
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 6!");
				    return 1;
				}
			}
			else if (level == 1337)
			{
			    if(PlayerInfo[playerid][pAdmin] >= 1337)
			    {
			        SendClientMessage(playerid, COLOR_WHITE,"=========================== Server Owner / Scripter ===========================");
					SendClientMessage(playerid, COLOR_WHITE, "/setadminlevel /makeircadmin /rcnn /vr /setlotto /(bank)moneyall /resetofficertimer");
					SendClientMessage(playerid, COLOR_WHITE, "/resetammutimer /setweapskill /gotoammu /spayday /resetpassporttimer /setalllotto /(de)attach");
			    }
			    else
				{
				    SendClientMessage(playerid, COLOR_GREY, "ƒ„µƒπ‹¿Ìµ»º∂≤ª « 1337/1338!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "√ª”–’‚∏ˆπ‹¿Ìµ»º∂!");
			    return 1;
			}
			SendClientMessage(playerid, COLOR_GREY, "Àµª∞«∞º” #<ƒ⁄»›> π‹¿Ì‘±Àµª∞,@<text> ≤‚ ‘»À‘±Àµª∞");
			new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /ahelp",d,m,y,h,mi,s,sendername);
			CommandLog(string);
		}
		return 1;
	}

	if(strcmp(cmd,"/stopani",true)==0 || strcmp(cmd,"/stopanim",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        	ClearAnimations(playerid);
	        	new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /stopani",d,m,y,h,mi,s,sendername);
				CommandLog(string);
	        	if(UsingSmokeAnim[playerid] == 1)
	            {
	                UsingSmokeAnim[playerid] = 0;
	            }
	    }
	    return 1;
	}
	if(strcmp(cmd,"/skill",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /skill [ ˝◊÷]");
		  		SendClientMessage(playerid, COLOR_GREY, "| 1: ¬… ¶         		6: »≠ª˜ ÷");
		  		SendClientMessage(playerid, COLOR_GREY, "| 2: ºÀ≈Æ                	7: µˆ”„");
		  		SendClientMessage(playerid, COLOR_GREY, "| 3: ∂æ∑∑");
		  		SendClientMessage(playerid, COLOR_GREY, "| 4: º«’ﬂ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 5: ∆˚≥µ–ﬁ¿Ìπ§");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
			else if(strcmp(x_nr,"1",true) == 0)//¬… ¶
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ¬… ¶ººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to free %d more people to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ¬… ¶ººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to free %d more people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ¬… ¶ººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to free %d more people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ¬… ¶ººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to free %d more people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ¬… ¶ººƒ‹µ»º∂ = 5."); }
			}
			else if(strcmp(x_nr,"2",true) == 0)//ºÀ≈Æ
			{
			    new level = PlayerInfo[playerid][pSexSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒºÀ≈Æººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒºÀ≈Æººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒºÀ≈Æººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒºÀ≈Æººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒºÀ≈Æººƒ‹µ»º∂ = 5."); }
			}
			else if(strcmp(x_nr,"3",true) == 0)//∂æ∑∑
			{
			    new level = PlayerInfo[playerid][pDrugsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∂æ∑∑ººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∂æ∑∑ººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∂æ∑∑ººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∂æ∑∑ººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∂æ∑∑ººƒ‹µ»º∂ = 5."); }
			}
			else if(strcmp(x_nr,"4",true) == 0)//News Reporter
			{
			    new level = PlayerInfo[playerid][pNewsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒº«’ﬂººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to use /news %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒº«’ﬂººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒº«’ﬂººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒº«’ﬂººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒº«’ﬂººƒ‹µ»º∂ = 5."); }
			}
			else if(strcmp(x_nr,"5",true) == 0)//∆˚≥µ–ﬁ¿Ìπ§
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§ººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to fix/fill a car for %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§ººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to fix/fill a car for %d times people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§ººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to fix/fill a car for %d times people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§ººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to fix/fill a car for %d times people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§ººƒ‹µ»º∂ = 5."); }
			}
			else if(strcmp(x_nr,"6",true) == 0)//»≠ª˜ ÷
			{
			    new level = PlayerInfo[playerid][pBoxSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ»≠ª˜ ÷ººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ»≠ª˜ ÷ººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ»≠ª˜ ÷ººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ»≠ª˜ ÷ººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒ»≠ª˜ ÷ººƒ‹µ»º∂ = 5."); }
			}
			else if(strcmp(x_nr,"7",true) == 0)//Fishing
			{
			    new level = PlayerInfo[playerid][pFishSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒµˆ”„ººƒ‹µ»º∂ = 1."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒµˆ”„ººƒ‹µ»º∂ = 2."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒµˆ”„ººƒ‹µ»º∂ = 3."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒµˆ”„ººƒ‹µ»º∂ = 4."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 1000 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "ƒ„µƒµˆ”„ººƒ‹µ»º∂ = 5."); }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   √ª”–’‚∏ˆ ˝◊÷—°œÓ !");
			    return 1;
			}
	    }
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /skill",d,m,y,h,mi,s,sendername);
		CommandLog(string);
	    return 1;
	}

	if(strcmp(cmd, "/cks", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «π‹¿Ì‘± !");
	            return 1;
	        }
	        new ck;
	        new number = 0;
	        new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    for(new i = 0; i < sizeof(CKInfo); i++)
			    {
					number ++;
					if(CKInfo[i][cUsed] != 0)
					{
				        format(string, sizeof(string), "%d| %s wants to Character Kill %s.",number,CKInfo[i][cSendername],CKInfo[i][cGiveplayer]);
				        SendClientMessage(playerid, COLOR_WHITE, string);
			        }
			    }
				return 1;
			}
		    if(strcmp(x_nr,"accept",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cks accept [cknumber]");
					return 1;
				}
				ck = strval(tmp);
				if(ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   CK Number can't be below 1 or above 10!"); return 1; }
				ck -= 1;
				new found1 = 255;
				new found2 = 255;
				for (new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        //if(found1 != 255 && found2 != 255)
				        //{
							new wstring[MAX_PLAYER_NAME];
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s", giveplayer);
							strmid(wstring, string, 0, strlen(string), 255);
							if(strcmp(CKInfo[ck][cSendername] ,wstring, true ) == 0 )
							{
							    found1 = i;
							}
							else if(strcmp(CKInfo[ck][cGiveplayer] ,wstring, true ) == 0 )
							{
							    found2 = i;
							}
						//}
					}
				}
				if(found1 != 255 && found2 != 255)
    			{
    			    GetPlayerName(found2, giveplayer, sizeof(giveplayer));
    			    format(string, sizeof(string), "* An Admin has accepted your Character Kill, you can now perform your kill on %s.", giveplayer);
    			    SendClientMessage(found1, COLOR_LIGHTBLUE, string);
    			    OnCK[found1] = found2;
    			    GettingCK[found2] = found1;
    			    return 1;
    			}
    			else
    			{
    			    SendClientMessage(playerid, COLOR_YELLOW2, "Sorry, the Killer or Dieer ain't Online.");
    			    return 1;
    			}
			}
			else if(strcmp(x_nr,"delete",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cks delete [cknumber]");
					return 1;
				}
				ck = strval(tmp);
				if(ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   CK Number can't be below 1 or above 10 !"); return 1; }
				ck -= 1;
				ClearCK(ck);
				ck += 1;
				format(string, sizeof(string), "* You've cleared Character Kill nr: %d", ck);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid CK command name !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ck", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLevel] < 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You must be Level 5 in order to request a Character Kill !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /ck [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
	        if(IsPlayerConnected(giveplayerid))
	        {
	            if(giveplayerid != INVALID_PLAYER_ID)
	            {
	                if(PlayerInfo[giveplayerid][pAdmin] >= 1)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   Can't perform Character Kills on Admins !");
	                    return 1;
	                }
	                else if(PlayerInfo[giveplayerid][pLevel] < 5)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   The Player you want to Character Kill must be Level 5 !");
			            return 1;
			        }
					SendAdminMessage(COLOR_GREEN, "[–≈œ¢]: A New Character Kill request has come in, use /cks.");
					new found = 0;
					for(new i = 0; i < sizeof(CKInfo); i++)
			    	{
			    	    if(found != 1)
			    	    {
							if(CKInfo[i][cUsed] != 1)
							{
							    found = 1;
							    
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							    format(string, sizeof(string), "%s", sendername);
							    strmid(CKInfo[i][cSendername], string, 0, strlen(string), 255);
							    format(string, sizeof(string), "%s", giveplayer);
								strmid(CKInfo[i][cGiveplayer], string, 0, strlen(string), 255);
								CKInfo[i][cUsed] = 1;
								SaveCK();
							}
						}
			    	}
			    	if(found != 1)
			    	{
			    	    SendClientMessage(playerid, COLOR_YELLOW2, "Sorry, all the Character Kill Slots are used, try again later.");
			    	}
			    	else
			    	{
			    	    SendClientMessage(playerid, COLOR_YELLOW2, "Your Character Kill Request has been added to the list, you'll hear from an Admin soon.");
			    	}
			    	return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(strcmp(cmd, "/givelicense", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	        {
	            if(PlayerInfo[playerid][pRank] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** Only Rank 2 or higher can give away a License !");
	                return 1;
	            }
	            new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givelicense [name] [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				    SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: Driving, Flying, Sailing, Fishing.");
					return 1;
				}
			    if(strcmp(x_nr,"driving",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givelicense driverslicense [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							if(PlayerInfo[giveplayerid][pPassport] == 1)
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givelicense driving [playerid/ParOfName] [º€∏Ò]");
									return 1;
								}
								new price;
								price = strval(tmp);
								if(price < 50 || price > 500) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 50, or above 500!"); return 1; }
						        
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* You've given a Drivers License to %s.",giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ∏®µº‘± %s has given you a Drivers License.",sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 1;
						        format(string, sizeof(string), "* You offerd %s to buy drivers license for $%d .", giveplayer, price);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* School instructor %s wants to sell you drivers license for $%d, (º¸»Î /accept license) to buy.", sendername, price);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								LicenseOffer[giveplayerid] = playerid;
								LicensePrice[giveplayerid] = price;
								LicenseType[giveplayerid] = 1;
						        return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "** That player Doesn't has a passport!");
							    return 1;
							}
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flying",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givelicense flying [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pPassport] == 1)
							{
								tmp = strtok(cmdtext, idx);
								if(!strlen(tmp))
								{
									SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givelicense flying [playerid/ParOfName] [º€∏Ò]");
									return 1;
								}
								new price;
								price = strval(tmp);
								if(price < 500 || price > 25000) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 500, or above 25000!"); return 1; }
						        
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* You've given a Flying License to %s.",giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* ∏®µº‘± %s has given you a Flying License.",sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 1;
						        format(string, sizeof(string), "* You offerd %s to buy flying license for $%d .", giveplayer, price);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* School instructor %s wants to sell you flying license for $%d, (º¸»Î /accept license) to buy.", sendername, price);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								LicenseOffer[giveplayerid] = playerid;
								LicensePrice[giveplayerid] = price;
								LicenseType[giveplayerid] = 2;
						        return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "** That player Doesn't has a passport!");
							    return 1;
							}
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"sailing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givelicense sailinglicense [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givelicense sailing [playerid/ParOfName] [º€∏Ò]");
								return 1;
							}
							new price;
							price = strval(tmp);
							if(price < 100 || price > 10000) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 100, or above 10000!"); return 1; }
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Sailing License to %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ∏®µº‘± %s has given you a Sailing License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pBoatLic] = 1;
					        format(string, sizeof(string), "* You offerd %s to buy sailing license for $%d .", giveplayer, price);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* School instructor %s wants to sell you sailing license for $%d, (º¸»Î /accept license) to buy.", sendername, price);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							LicenseOffer[giveplayerid] = playerid;
							LicensePrice[giveplayerid] = price;
							LicenseType[giveplayerid] = 3;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"fishing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givelicense fishing [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givelicense fishinglicense [playerid/ParOfName] [º€∏Ò]");
								return 1;
							}
							new price;
							price = strval(tmp);
							if(price < 100 || price > 1000) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 100, or above 1000!"); return 1; }
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Fishing License to %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ∏®µº‘± %s has given you a Fishing License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFishLic] = 1;
					        format(string, sizeof(string), "* You offerd %s to buy fishing license for $%d .", giveplayer, price);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* School instructor %s wants to sell you fishing license for $%d, (º¸»Î /accept license) to buy.", sendername, price);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							LicenseOffer[giveplayerid] = playerid;
							LicensePrice[giveplayerid] = price;
							LicenseType[giveplayerid] = 4;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «“ª√˚School Instructor !");
	            return 1;
	        }
	    }
	    
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /givelicense %s %s",d,m,y,h,mi,s,sendername, giveplayer, strtok(cmdtext, idx));
		CommandLog(string);
	    return 1;
    }
	if(strcmp(cmd, "/weplicense", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	        {
	            if(PlayerInfo[playerid][pRank] < 3)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** Only Rank 3 or higher can give away a License !");
	                return 1;
	            }
 				if(PlayerInfo[playerid][pDBanned] == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				    return 1;
				}
                new x_nr[24];
			    x_nr = strtok(cmdtext, idx);
			    if(!strlen(x_nr))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /weplicense [name] [ÕÊº“ID/ÕÊº“√˚◊÷]");
				    SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: Weapon.");
					return 1;
				}
			    if(strcmp(x_nr,"weapon",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /givelicense weapon [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							tmp = strtok(cmdtext, idx);
							if(!strlen(tmp))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /givelicense weaponlicense [playerid/ParOfName] [º€∏Ò]");
								return 1;
							}
							new price;
							price = strval(tmp);
							if(price < 1 || price > 100) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then $1, or above $100."); return 1; }
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* You've given a Weapon License to %s.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* ∏®µº‘± %s has given you a Weapon License.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pGunLic] = 1;
					        format(string, sizeof(string), "* You offerd %s to buy weapon license for $%d .", giveplayer, price);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* æ¸πŸ %s wants to sell you weapon license for $%d, (º¸»Î /accept license) to buy.", sendername, price);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							LicenseOffer[giveplayerid] = playerid;
							LicensePrice[giveplayerid] = price;
							LicenseType[giveplayerid] = 5;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You are not in the correct faction !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/startlesson", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /startlesson [ÕÊº“ID/ÕÊº“√˚◊÷]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* You've started %s's Lesson.",giveplayer);
				        SendClientMessage(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "* ∏®µº‘± %s has started your Lesson.",sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        TakingLesson[giveplayerid] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚School Instructor !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/stoplesson", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /stoplesson [ÕÊº“ID/ÕÊº“√˚◊÷]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(TakingLesson[giveplayerid] != 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   That player is not taking a Lesson !");
				            return 1;
				        }
				        
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* You've stopped %s's Lesson.",giveplayer);
				        SendClientMessage(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "* ∏®µº‘± %s has stopped your Lesson.",sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        TakingLesson[giveplayerid] = 0;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚School Instructor !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/families", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    new number = 0;
		        for(new i = 0; i < sizeof(FamilyInfo); i++)
		        {
		            number ++;
		            format(string, sizeof(string), "Family %d| Name: %s | Leader: %s | Members: %d.",number,FamilyInfo[i][FamilyName],FamilyInfo[i][FamilyLeader],FamilyInfo[i][FamilyMembers]);
		            SendClientMessage(playerid, COLOR_WHITE, string);
		        }
		        return 1;
	        }
	        new family = strval(tmp);
	        if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
			family -= 1;
			if(FamilyInfo[family][FamilyTaken] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr hasn't been Taken yet !");
			    return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pFMember] == family)
			        {
			            GetPlayerName(i, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* Family %d: %s | Rank: %d.",family,giveplayer,PlayerInfo[i][pRank]);
			            SendClientMessage(playerid, COLOR_GREY, string);
			        }
			    }
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/adjust", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFMember] == 255)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not in a Family !");
	            return 1;
	        }
	        new family = PlayerInfo[playerid][pFMember];
	        new wstring[128];

			format(string, sizeof(string), "%s", sendername);
			strmid(wstring, string, 0, strlen(string), 255);
	        if(strcmp(FamilyInfo[family][FamilyLeader],wstring, true ) == 0 )
			{
			    new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /adjust [name]");
					SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: Name, MOTD, Color, Spawn, Invite, Uninvite, Rank");
					return 1;
				}
			    if(strcmp(x_nr,"name",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /adjust Name [Family Name]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyName], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's Name.");
				}
				else if(strcmp(x_nr,"motd",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /adjust MOTD [Family MOTD Text]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's MOTD.");
				}
				else if(strcmp(x_nr,"color",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /adjust color [Family Color Sample: 0xFFFFFFAA]");
						return 1;
					}
					if(offset < 10)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Wrong Color number, take a look at the Sample ! (0xFFFFFFAA)");
					    return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's Color.");
				}
				else if(strcmp(x_nr,"spawn",true) == 0)
				{
				    GetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
				    GetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
				    FamilyInfo[family][FamilyInterior] = GetPlayerInterior(playerid);
				    SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's Spawnplace.");
				}
				else if(strcmp(x_nr,"invite",true) == 0)
				{
				    if(FamilyInfo[family][FamilyMembers] >= 10)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Your Family has reached the Maximum of 10 Family Members, can't invite more !");
				        return 1;
				    }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /adjust invite [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != 255)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is already in a Family !");
					            return 1;
					        }
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* You've invited %s to join '%s'.",giveplayer, FamilyInfo[family][FamilyName]);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* %s has invited you to join '%s', you are now a Member of it.",sendername, FamilyInfo[family][FamilyName]);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = family;
					        PlayerInfo[giveplayerid][pRank] = 1;
					        FamilyInfo[family][FamilyMembers] ++;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"uninvite",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /adjust uninvite [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
					            return 1;
					        }
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* You've kicked %s out of your Family.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Family Leader %s has kicked your out of the Family.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = 255;
					        PlayerInfo[giveplayerid][pRank] = 0;
					        FamilyInfo[family][FamilyMembers] --;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"rank",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /adjust rank [RankNr] [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					new rank = strval(tmp);
					if(rank < 1 || rank > 6) { SendClientMessage(playerid, COLOR_GREY, "   RankNr can't be below 1 or above 6 !"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /adjust rank [RankNr] [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
					            return 1;
					        }
					        
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* You've given %s Rank %d.",giveplayer,rank);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Family Leader %s has given you Rank %d.",sendername,rank);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pRank] = rank;
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Invalid Adjust name !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of your Family !");
			    return 1;
			}
	    }
	    return 1;
	}

	if(strcmp(cmd, "/allowcreation", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /allowcreation [FamilyNr] [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "* FamilyNr can't be below 1 or above 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "* »˝∫œª· Leader can only take FamilyNr 1 till 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "* ¬Ûµ¬¡÷∞Ô family Leader can only take FamilyNr 6 till 10 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 14 && family < 14) { SendClientMessage(playerid, COLOR_GREY, "* …Ωø⁄◊È Leader can only take FamilyNr 11 till 15 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 15 && family < 15) { SendClientMessage(playerid, COLOR_GREY, "* ¥Û»¶∞Ô Leader can only take FamilyNr 15 till 20 !"); return 1; }
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /allowcreation [FamilyNr] [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        family -= 1;
				        if(FamilyInfo[family][FamilyTaken] == 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr is already taken !" );
				            return 1;
				        }
				        
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* You've made %s the Leader of FamilyNr %d.",giveplayer,family);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        if(PlayerInfo[playerid][pLeader] == 5)
				        {
				            format(string, sizeof(string), "* »˝∫œª· Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        else if(PlayerInfo[playerid][pLeader] == 6)
				        {
				            format(string, sizeof(string), "* ¬Ûµ¬¡÷∞Ô family Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        else if(PlayerInfo[playerid][pLeader] == 14)
				        {
				            format(string, sizeof(string), "* …Ωø⁄◊È Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        else if(PlayerInfo[playerid][pLeader] == 15)
				        {
				            format(string, sizeof(string), "* ¥Û»¶∞Ô Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        else if(PlayerInfo[playerid][pLeader] == 16)
				        {
				            format(string, sizeof(string), "* ¿≠∏± Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        format(string, sizeof(string), "%s",giveplayer);
				        strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
				        FamilyInfo[family][FamilyMembers] ++;
				        FamilyInfo[family][FamilyTaken] = 1;
				        PlayerInfo[giveplayerid][pFMember] = family;
				        SaveFamilies();
				    }
				}
				else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
                    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of one of the Organisations !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/deletecreation", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pLeader] == 14)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /deletecreation [FamilyNr]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "* »˝∫œª· Leader can only take FamilyNr 1 till 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "* ¬Ûµ¬¡÷∞Ô family Leader can only take FamilyNr 6 till 10 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 14 && family < 14) { SendClientMessage(playerid, COLOR_GREY, "* …Ωø⁄◊È Leader can only take FamilyNr 6 till 10 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 15 && family < 15) { SendClientMessage(playerid, COLOR_GREY, "* ¥Û»¶∞Ô Leader can only take FamilyNr 6 till 10 !"); return 1; }
				family -= 1;
				if(FamilyInfo[family][FamilyTaken] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr isn't taken !");
				    return 1;
				}
				ClearFamily(family);
				SaveFamilies();
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of one of the Organisations !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ram", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
  			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
			if(gTeam[playerid] == 2 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 3)
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (IsPlayerInRangeOfPoint(playerid, 3,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SafeSetPlayerInterior(playerid,HouseInfo[i][hInt]);
					    SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SafeSetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
				}
				if (IsPlayerInRangeOfPoint(playerid, 3,1298.7075,-798.5981,84.1406))
				{
				    SafeSetPlayerInterior(playerid,5);
					GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
					SafeSetPlayerPos(playerid, 1254.3436,-789.3809,1084.0078);
				}
				if (IsPlayerInRangeOfPoint(playerid, 3,2380.5647,-1785.7302,13.5469))
				{
				    SafeSetPlayerPos(playerid, 318.4700,1117.5127,1083.8828);
					GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
					SafeSetPlayerInterior(playerid,5);
					SetPlayerFacingAngle(playerid, 0);
				}
				if (IsPlayerInRangeOfPoint(playerid, 3,2022.9038,-1120.2688,26.4210))
				{
				    SafeSetPlayerPos(playerid, 1237.8329,-833.3148,1084.0078);
					GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
					SafeSetPlayerInterior(playerid,5);
					SetPlayerFacingAngle(playerid, 90);
				}
				if (IsPlayerInRangeOfPoint(playerid, 3,2770.6973,-1628.4293,12.1775))
				{
				    SafeSetPlayerPos(playerid, 2464.8335,-1698.4218,1013.5078);
					GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
					SafeSetPlayerInterior(playerid,2);
					SetPlayerFacingAngle(playerid, 90);
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚æØ≤Ï /  ø±¯ !");
			    return 1;
            }
		}
		return 1;
	}
	if(strcmp(cmd, "/camera", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(IsACop(playerid))
            {
                if(!IsPlayerInRangeOfPoint(playerid, 8,211.6222,1811.9565,21.8594))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not at the Area51 Security Panel !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /camera [number 1 - 6]  (6 = OFF)");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Camera Number can't be below 1 or above 6 !"); return 1; }
				TogglePlayerControllable(playerid, 0);
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
				    MedicBill[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚æØ≤Ï /  ø±¯ !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/divorce",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMarried] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You aren't Married !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /divorce [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* You've sent Divorce Papers to %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s just sent you his Divorce Papers (º¸»Î /accept divorce) to accept.", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   That player is not Married to you !");
						    return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/propose",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 20000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   The Marriage & Reception costs $20000 !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are already Married !");
				return 1;
	        }
	        if(PlayerInfo[playerid][pPhousekey] == 9999)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You don't have a House to let your Wife / Husband live somewhere !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /propose [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   That player is already Married !");
			            return 1;
			        }
			        if(PlayerInfo[giveplayerid][pPhousekey] != 9999)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   That player has a House, can't be Married !");
			            return 1;
			        }
			        if(PlayerInfo[giveplayerid][pPbiskey] != 9999)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   That player has a Business, can't be Married !");
			            return 1;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "* You proposed to %s.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s just proposed to you (º¸»Î /accept marriage) to accept.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/witness",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /witness [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "* You requested %s to be your Marriage Witness.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s just requested you to be his Marriage Witness (º¸»Î /accept witness) to accept.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/irc",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc Leave)  (/irc Admins)");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc [name] [channelnr]");
				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: MOTD, Password, NeedPass, Lock, Kick, Status");
				return 1;
			}
		    if(strcmp(x_nr,"join",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc join [channelnr] or /irc join [channelnr] [password]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
			    if(IRCInfo[channel][iLock] == 0)
			    {
			        if(IRCInfo[channel][iNeedPass] == 0)
			        {
			            JoinChannelNr(playerid, channel);
				    }
				    else
				    {
				        tmp = strtok(cmdtext, idx);
				        if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "There's a password required to join this Channel.");
							SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc join [channelnr] [password]");
							return 1;
						}
						JoinChannel(playerid,channel,tmp);
				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   That Channel is…œÀ¯, please choose a different one !");
				    return 1;
			    }
			}
			else if(strcmp(x_nr,"status",true) == 0)
			{
			    for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
			        format(string, sizeof(string), "Channel %d: %d Players Connected.",i + 1, IRCInfo[i][iPlayers]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"password",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc password [channelnr] [password]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];

				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc password [channelnr] [password]");
					    return 1;
					}
					strmid(IRCInfo[channel][iPassword], tmp, 0, strlen(tmp), 255);
					format(string, sizeof(string), "You've changed the IRC Channel's Password to: %s.",IRCInfo[channel][iPassword]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"needpass",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc needpass [channelnr]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];

				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iNeedPass] != 0)
				    {
				        IRCInfo[channel][iNeedPass] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "Players won't have to fill in a password in order to join the IRC Channel now.");
				    }
					else
					{
					    IRCInfo[channel][iNeedPass] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Players must fill in a password in order to join the IRC Channel now.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"lock",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc lock [channelnr]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];

				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iLock] != 0)
				    {
				        IRCInfo[channel][iLock] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "You'veΩ‚À¯ the IRC Channel.");
				    }
					else
					{
					    IRCInfo[channel][iLock] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "You've…œÀ¯ the IRC Channel.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"motd",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc motd [channelnr] [motdtext]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];

				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /irc motd [motdtext]");
						return 1;
					}
					strmid(IRCInfo[channel][iMOTD], result, 0, strlen(result), 255);
					SendClientMessage(playerid, COLOR_YELLOW, "You've adjusted the IRC Channel's MOTD Text.");
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"leave",true) == 0)
			{
			    if(PlayersChannel[playerid] < 999)
			    {
			        
			        format(string, sizeof(string), "* %s has left the Channel.", sendername);
			        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			        IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
			        PlayersChannel[playerid] = 999;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not in an IRC Channel !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"admins",true) == 0)
			{
				for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
				    format(string, sizeof(string), "Channel %d: %s.", i + 1, IRCInfo[i][iAdmin]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"kick",true) == 0)
			{
			    if(PlayersChannel[playerid] == 999)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not in an IRC Channel !");
			        return 1;
			    }
			    new wstring[128];

				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[PlayersChannel[playerid]][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /irc kick [ÕÊº“ID/ÕÊº“√˚◊÷]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayersChannel[giveplayerid] == PlayersChannel[playerid])
					        {
					            
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* You've kicked %s out of your IRC Channel.",giveplayer);
					            SendClientMessage(playerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* You've been kicked out of the IRC Channel by Channel Admin: %s.",sendername);
					            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* %s has left the Channel (Kicked).", sendername);
						        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
					            IRCInfo[PlayersChannel[giveplayerid]][iPlayers] -= 1;
					            PlayersChannel[giveplayerid] = 999;
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your IRC Channel !");
							    return 1;
					        }
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of the Channel !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid IRC Channel Number ! ");
			    return 1;
			}
		}
		return 1;
 	}
 	if(strcmp(cmd,"/i",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayersChannel[playerid] == 999)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not in an IRC Channel !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /i [irc chat]");
				return 1;
			}
			format(string, sizeof(string), "** IRC %s: %s. **", sendername, result);
			SendIRCMessage(PlayersChannel[playerid], COLOR_YELLOW2, string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/settax",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   You are not the Mayor !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /settax [ammount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   Tax may not be below 1 or above 5000 !"); return 1; }
			Tax = moneys;
			SaveStuff();
			SaveAnticheat();
			format(string, sizeof(string), "* The Tax is $%d per player, from now on.", Tax);
			SendClientMessage(playerid, COLOR_WHITE, string);

		    new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /settax %d",d,m,y,h,mi,s,sendername, moneys);
			CommandLog(string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/givetax",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   You are not the Mayor !");
				return 1;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   There is no Money left in the Tax Fault !");
				return 1;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(gTeam[i] == 2 && PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new value = Tax / 2;
			    new price = value / Cops;
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(gTeam[i] == 2 && PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
				        {
				            format(string, sizeof(string), "* You received $%d from the Tax Vault from the Mayor.",price);
							SendClientMessage(i, COLOR_WHITE, string);
							SafeGivePlayerMoney(i, price);
							Tax -= price;
				        }
				    }
				}
				SaveStuff();
				SaveAnticheat();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   There are no Cops Online at the moment !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/read",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[64];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /read [name]");
				SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Paper, TestPaper");
				return 1;
			}
	        if(strcmp(x_job,"paper",true) == 0)
			{
			    if(GotPaper[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "|_____________________ Raven's Roleplay: Newspaper _____________________|");
			        format(string, sizeof(string), "| %s  |  By News Reporter: %s.",Paper[playerid][pTitle],Paper[playerid][pMaker]);
			        SendClientMessage(playerid, COLOR_GREEN, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine1]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine2]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine3]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine4]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine5]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine6]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine7]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–“ª∑›±®÷Ω !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"testpaper",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			    {
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /read testpaper [papernr]");
						return 1;
					}
					new paper = strval(tmp);
					if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
					paper -= 1;
					if(PaperInfo[paper][PaperUsed] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   There is no Newspaper written on that number !");
					    return 1;
					}
			        SendClientMessage(playerid, COLOR_WHITE, "|_____________________ Raven's Roleplay: Newspaper _____________________|");
			        format(string, sizeof(string), "| %s  |  By News Reporter: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
			        SendClientMessage(playerid, COLOR_GREEN, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText1]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText2]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText3]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText4]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText5]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText6]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText7]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
			        return 1;
				}
				else
				{
        			SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚News Reporter !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /read testpaper [papernr]");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/deliver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 15 || gTeam[playerid] == 2 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pJob] == 13)
	        {
	            if(gTeam[playerid] == 2 || IsACop(playerid))
	            {
	                if(!IsPlayerInRangeOfPoint(playerid, 8,96.9123,1920.5088,18.1473))
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You are not at the Area51 Delivery¥Û√≈!");
					    return 1;
					}
					if(PlayerInfo[playerid][pDBanned] == 1)
					{
			    		SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    		return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /deliver [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
			        giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't throw yourself into Fort DeMorgan !"); return 1; }
					        if(WantedLevel[giveplayerid] < 1) { SendClientMessage(playerid, COLOR_GREY, "   The player needs at least Wanted Level 1 to be thrown into Fort DeMorgan !"); return 1; }
					        if(gTeam[giveplayerid] == 2 || PlayerInfo[giveplayerid][pLeader] == 6 || PlayerInfo[giveplayerid][pLeader] == 10) { return 1; }
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You've brought %s to Fort DeMorgan.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s brought you to Fort DeMorgan.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
								WantedPoints[giveplayerid] = 0;
								WantedLevel[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pJailed] = 2;
								PlayerInfo[giveplayerid][pJailTime] = 600;
								TextDrawShowForPlayer(giveplayerid, Textdraw1[giveplayerid]);
								SafeSetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
								SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					    	return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}

	            }
             	else if(PlayerInfo[playerid][pJob] == 15)
	            {
			        if(BringingPaper[playerid] != 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You haven't picked up a Newspaper from the News Reporters Building yet !");
			            return 1;
			        }
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /deliver [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
			        giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You offerd one of your Newspapers to %s.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* ±®ÕØ %s wants to give you a Newspaper ( π”√ /accept paper, to accept).", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								PaperOffer[giveplayerid] = playerid;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					    	return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚±®ÕØ !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/startstunt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 11)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Your are not a Stuner!");
		        return 1;
	        }
	        else
	        {
	        EnableStuntBonusForPlayer(playerid, 1);
            GameTextForPlayer(playerid, "~w~Stunt has been~n~~p~Started!", 3500, 1);
	        }
	    }
		return 1;
	}
	if(strcmp(cmd, "/stopstunt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 11)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Your are not a Stuner!");
		        return 1;
	        }
	        else
	        {
	        EnableStuntBonusForPlayer(playerid, 0);
	        GameTextForPlayer(playerid, "~w~Stunt has been~n~~p~Stoped!", 3500, 1);
	        }
	    }
		return 1;
	}
	if(strcmp(cmd, "/bring", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 15)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚±®ÕØ !");
	            return 1;
	        }
			if(IsPlayerInRangeOfPoint(playerid, 3,1793.02,-1296.56,13.44))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /bring [papernr]");
					return 1;
				}
		        new paper = strval(tmp);
		        if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
				paper -= 1;
				if(PaperInfo[paper][PaperUsed] == 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   There is no written Newspaper on that number !");
				    return 1;
				}
		        
		        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		        format(string, sizeof(string), "* You can now deliver Newspapers to people, Newspaper: %s, By: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperTitle]);
				strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperMaker]);
				strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
				strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
				strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
				strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
				strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
				strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
				strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
				strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
				BringingPaper[playerid] = 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not at the News Reporter Building !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/papers", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pJob] == 15)
	        {
				if(IsPlayerInRangeOfPoint(playerid, 3,1793.02,-1296.56,13.44))
				{
				    new number = 0;
				    for(new i = 0; i < sizeof(PaperInfo); i++)
				    {
				        number ++;
				        if(PaperInfo[i][PaperUsed] == 1)
				    	{
				        	format(string, sizeof(string), "|%d| Newspaper: %s, By: %s",number,PaperInfo[i][PaperTitle],PaperInfo[i][PaperMaker]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not at the News Reporter Building !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚±®ÕØ / News Reporter !");
	            return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/paper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	        {
	            if(!IsPlayerInRangeOfPoint(playerid, 3,1793.02,-1296.56,13.44))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not at the News Reporter Building !");
				    return 1;
				}
				new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /paper write [papernr] or /paper delete [papernr]");
				    return 1;
				}
			    if(strcmp(x_nr,"write",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /paper write [papernr]");
					    return 1;
					}
					new paper = strval(tmp);
					if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
					paper -= 1;
					if(PaperInfo[paper][PaperUsed] == 1)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   There is already a Newspaper on that number !");
					    return 1;
					}
					SendClientMessage(playerid, COLOR_WHITE, "* You are producing a new Newspaper.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Everything you type now will be added to the Newspaper, you have 7 lines available.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Please type in the Title of your Newspaper.");
					WritingPaper[playerid] = 1;
					WritingPaperNumber[playerid] = paper;
					WritingLine[playerid] = 1;
				}
				else if(strcmp(x_nr,"delete",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 4)
				    {
				        tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /paper delete [papernr]");
						    return 1;
						}
						new paper = strval(tmp);
						if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
						paper -= 1;
						ClearPaper(paper);
						new number = paper; number += 1;
						format(string, sizeof(string), "You've deleted Newspaper %d.",number);
						SendClientMessage(playerid, COLOR_YELLOW, string);
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You need Rank 4 in order to Delete Newspapers !");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /paper write [papernr] or /paper delete [papernr]");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚News Reporter !");
	            return 1;
			}
	    }
	    return 1;
	}
	
	if(strcmp(cmd, "/clothes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] >= 1)
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 300, 20.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid, 300,203.9068,-41.0728,1001.8047) || IsPlayerInRangeOfPoint(playerid, 300,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid, 300, 161.3765,-83.8416,1001.8047))
				{
				    if(PlayerInfo[playerid][pMember] == 1) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
					else if(PlayerInfo[playerid][pMember] == 2) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
					else if(PlayerInfo[playerid][pMember] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
					if(PlayerInfo[playerid][pMember] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }
					else if(PlayerInfo[playerid][pMember] == 5) { ChosenSkin[playerid] = 117; SetPlayerSkin(playerid, 117); }
					else if(PlayerInfo[playerid][pMember] == 6) { ChosenSkin[playerid] = 111; SetPlayerSkin(playerid, 111); }
					else if(PlayerInfo[playerid][pMember] == 8) { ChosenSkin[playerid] = 249; SetPlayerSkin(playerid, 249); }
					else if(PlayerInfo[playerid][pMember] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
					else if(PlayerInfo[playerid][pJob] == 13) { ChosenSkin[playerid] = 255; SetPlayerSkin(playerid, 255); }
					else if(PlayerInfo[playerid][pMember] == 11) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
					else if(PlayerInfo[playerid][pMember] == 14) { ChosenSkin[playerid] = 169; SetPlayerSkin(playerid, 169); }
					else if(PlayerInfo[playerid][pMember] == 15) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
					else if(PlayerInfo[playerid][pMember] == 16) { ChosenSkin[playerid] = 184; SetPlayerSkin(playerid, 184); }
					else { return 1; }
					GetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
					ChangePos2[playerid][0] = GetPlayerInterior(playerid);
					ChangePos2[playerid][1] = 1;
					ChangePos3[playerid] = GetPlayerVirtualWorld(playerid);
				    //afeSetPlayerInterior(playerid,0);
					new rand = random(sizeof(gInviteSpawns));
					SafeSetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]); // Warp the player
					SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
					SetPlayerCameraPos(playerid,ChangePos[playerid][0] + 3, ChangePos[playerid][1], ChangePos[playerid][2]);
					SetPlayerCameraLookAt(playerid,ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
        			
					TogglePlayerControllable(playerid, 0);
					SelectChar[playerid] = 255;
					SelectCharID[playerid] = PlayerInfo[playerid][pMember];
					SelectCharPlace[playerid] = 1;
					PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			    	PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SendClientMessage(playerid, COLOR_LIGHTRED, "*  π”√ 'next' —°‘Òœ¬“ª∏ˆ.");
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* »Áπ˚ƒ„’“µΩƒ„œ≤ª∂µƒ,  ‰»Î'done'.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„≤ª‘⁄“¬∑˛µÍ !");
					return 1;
				}
	        }
	        else
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 300, 20.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid, 300,203.9068,-41.0728,1001.8047) || IsPlayerInRangeOfPoint(playerid, 300,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid, 300, 161.3765,-83.8416,1001.8047))
	            {
	                if(PlayerInfo[playerid][pSex] == 1) { ChosenSkin[playerid] = 2; SetPlayerSkin(playerid, 2); PlayerInfo[playerid][pChar] = 2; }
	                else if(PlayerInfo[playerid][pSex] == 2) { ChosenSkin[playerid] = 55; SetPlayerSkin(playerid, 55); PlayerInfo[playerid][pChar] = 55; }
	                else { return 1; }
	                GetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
					ChangePos2[playerid][0] = GetPlayerInterior(playerid);
					ChangePos2[playerid][1] = 1;
					ChangePos3[playerid] = GetPlayerVirtualWorld(playerid);
					//SafeSetPlayerInterior(playerid,0);
					new rand = random(sizeof(gInviteSpawns));
					SafeSetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]); // Warp the player
					SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
					SetPlayerCameraPos(playerid,ChangePos[playerid][0] + 3, ChangePos[playerid][1], ChangePos[playerid][2]);
					SetPlayerCameraLookAt(playerid,ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);

					TogglePlayerControllable(playerid, 0);
					SelectChar[playerid] = 255;
					if(PlayerInfo[playerid][pSex] == 1) { SelectCharID[playerid] = 20; }
					else if(PlayerInfo[playerid][pSex] == 2) { SelectCharID[playerid] = 30; }
					else { return 1; }
					SelectCharPlace[playerid] = 1;
					PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
					PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SendClientMessage(playerid, COLOR_LIGHTRED, "*  π”√ 'next' —°‘Òœ¬“ª∏ˆ.");
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* »Áπ˚ƒ„’“µΩƒ„œ≤ª∂µƒ,  ‰»Î'done'.");
	            }
 				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   ƒ„≤ª‘⁄“¬∑˛µÍ !");
					return 1;
				}
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/lotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„“—æ≠”–“ª’≈≤ ∆±¡À !");
	            return 1;
	        }
	        if(GetPlayerMoney(playerid) < 50)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„–Ë“™ $50 π∫¬Ú≤ ∆± !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE,"”√∑®: /lotto [ ˝◊÷]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   ø™Ω±∫≈¬Î≤ªƒ‹µÕ”⁄1¥Û”⁄80 !"); return 1; }
			format(string, sizeof(string), "* ƒ„¬Ú¡À“ª’≈≤ ∆± ˝◊÷Œ™: %d.", lottonr);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SafeGivePlayerMoney(playerid, - 50);
			PlayerInfo[playerid][pLottoNr] = lottonr;
			format(string, sizeof(string), "~w~bought a ~g~lottery Ticket ~n~~w~number: ~p~ %d", lottonr);
			GameTextForPlayer(playerid, string, 4000, 3);

		    new y, m, d;
			new h,mi,s;
			getdate(y,m,d);
			gettime(h,mi,s);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /lotto %d",d,m,y,h,mi,s,sendername, lottonr);
			CommandLog(string);
	    }
	    return 1;
	}

	if(strcmp(cmd, "/take", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gTeam[playerid] == 2 || IsACop(playerid))
	        {
	            if(PlayerInfo[playerid][pRank] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   ƒ„µƒ◊È÷Ø≈≈√˚ªπ≤ªπª π”√¥À√¸¡Ó !");
	                return 1;
	            }
 				if(PlayerInfo[playerid][pDBanned] == 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
					return 1;
				}
	            new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|___________________ Take Items ____________________|");
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take [Item] [ÕÊº“ID/ÕÊº“√˚◊÷]");
			  		SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Driverslicense, Flyinglicense, Boatlicense, Weapons, Drugs, Materials");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"driverslicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take driverslicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new giveplayername[64];
							    
							    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						        format(string, sizeof(string), "* You have taken away %s's Drivers License.", giveplayername);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* æ¸πŸ %s has taken away your Drivers License.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flyinglicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take flyinglicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new giveplayername[64];
							    
							    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						        format(string, sizeof(string), "* You have taken away %s's Flying License.", giveplayername);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* æ¸πŸ %s has taken away your Flying License.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"boatlicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take boatlicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new giveplayername[64];
							    
							    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						        format(string, sizeof(string), "* You have taken away %s's Boat License.", giveplayername);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* æ¸πŸ %s has taken away your Boat License.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapons",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take weapons [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					if(PlayerInfo[giveplayerid][pAdminDuty] >= 1) return SendClientMessage(playerid, COLOR_GREY, "* You may not take away admin on duty's weapons!");
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new giveplayername[64];
							    
							    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
						        format(string, sizeof(string), "* You have taken away %s's Weapons.", giveplayer);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* æ¸πŸ %s has taken away your Weapons.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        SafeResetPlayerWeapons(giveplayerid);
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"drugs",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take drugs [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new giveplayername[64];
							    
							    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							    format(string, sizeof(string), "* You have taken away %s's Drugs.", giveplayer);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* æ¸πŸ %s has taken away your Drugs.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        PlayerInfo[giveplayerid][pDrugs] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"materials",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /take materials [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new giveplayername[64];
							    
							    GetPlayerName(giveplayerid, giveplayername, sizeof(giveplayername));
							    format(string, sizeof(string), "* You have taken away %s's Materials.", giveplayer);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* æ¸πŸ %s as taken away your Materials.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Unknown Take name !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚æØ≤Ï !");
	            return 1;
	        }
	    }
	    
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /take %s %s ",d,m,y,h,mi,s,sendername, strtok(cmdtext, idx), giveplayer);
		CommandLog(string);
	    return 1;
	}
	
	if(strcmp(cmd, "/atake", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
	            new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|___________________ Take Items ____________________|");
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake [Item] [ÕÊº“ID/ÕÊº“√˚◊÷]");
			  		SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Driverslicense, Flyinglicense, Boatlicense, Weapons, Drugs, Materials, Passport, CopLicense");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
					return 1;
				}
				if(strcmp(x_nr,"coplicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake coplicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(string, sizeof(string), "* You have taken away %s's æ¸πŸ License.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your æ¸πŸ License.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    PlayerInfo[giveplayerid][pCopLic] = 0;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
			    if(strcmp(x_nr,"driverslicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake driverslicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(string, sizeof(string), "* You have taken away %s's Drivers License.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your Drivers License.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    PlayerInfo[giveplayerid][pCarLic] = 0;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flyinglicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake flyinglicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(string, sizeof(string), "* You have taken away %s's Flying License.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your Flying License.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    PlayerInfo[giveplayerid][pFlyLic] = 0;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"boatlicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake boatlicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(string, sizeof(string), "* You have taken away %s's Boat License.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your Boat License.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    PlayerInfo[giveplayerid][pBoatLic] = 0;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"boatlicense",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake boatlicense [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(string, sizeof(string), "* You have taken away %s's Boat License.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your Boat License.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    PlayerInfo[giveplayerid][pBoatLic] = 0;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapons",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake weapons [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
				 			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			     			format(string, sizeof(string), "* You have taken away %s's Weapons.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your Weapons.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    SafeResetPlayerWeapons(giveplayerid);
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
                else if(strcmp(x_nr,"passport",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /atake passport [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						    format(string, sizeof(string), "* You have taken away %s's Passport.", giveplayer);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						    format(string, sizeof(string), "* π‹¿Ì‘± %s has taken away your Passport.", sendername);
						    SendClientMessage(giveplayerid, COLOR_WHITE, string);
						    PlayerInfo[giveplayerid][pPassport] = 0;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–»®œﬁ to use this!");
	            return 1;
	        }
	    }
	    return 1;
	}
	
	
	if(strcmp(cmd, "/drink", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(GetPlayerDrunkLevel(playerid) <= 20000)
	            {
	                new Float:health;
	                new x_nr[24];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|____________________ Bar Drinks ______________________|");
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /drink [drinkname]");
				  		SendClientMessage(playerid, COLOR_GREY, "Non-Alcoholic: Water ($1), Sprunk($2)");
				  		SendClientMessage(playerid, COLOR_GREY, "Cheap Booze: Pissh ($6), Bourbon($8), Champagne($12)");
				  		SendClientMessage(playerid, COLOR_GREY, "Expensive Drinks: Vodka ($16), Cristal($20)");
				  		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Warning! Excessive Drinking Causes Liver Damage");
						SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________________|");
						return 1;
					}
				    if(strcmp(x_nr,"pissh",true) == 0)
					{
						if(PlayerInfo[playerid][pAge] < 16)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: Sorry, you need to be 16 years to get this drink.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 6);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						GetPlayerHealth(playerid, health);
						if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 10; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 10.0); }
						}
					}
					else if(strcmp(x_nr,"bourbon",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 18)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: Sorry, you need to be 18 years to get this drink.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 8);
                        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						GetPlayerHealth(playerid, health);
						if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 15.0); }
						}
					}
					else if(strcmp(x_nr,"champagne",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 18)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: Sorry, you need to be 18 years to get this drink.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 12);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						GetPlayerHealth(playerid, health);
						if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 20; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 20.0); }
						}
					}
                    else if(strcmp(x_nr,"vodka",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 18)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: Sorry, you need to be 18 years to get this drink.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 16);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						GetPlayerHealth(playerid, health);
						if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 27.0); }
						}
					}
                    else if(strcmp(x_nr,"cristal",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 18)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: Sorry, you need to be 18 years to get this drink.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 20);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						GetPlayerHealth(playerid, health);
						if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 40; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 40.0); }
						}
					}
					else if(strcmp(x_nr,"water",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 1);
						GetPlayerHealth(playerid, health);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
						SetPlayerDrunkLevel(playerid, -1000)
					    if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 50.0); }
						}
						else if(health > 100)
						{
						    SetPlayerHealth(playerid, 100);
						}
					}
					else if(strcmp(x_nr,"sprunk",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 2);
						GetPlayerHealth(playerid, health);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
						SetPlayerDrunkLevel(playerid, -1000)
					    if(health < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 50.0); }
						}
						else if(health > 100)
						{
						    SetPlayerHealth(playerid, 100);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "Bartender: I don't know that Drink Name.");
					    return 1;
					}
					GetPlayerHealth(playerid, health);
					if (health > 100) SetPlayerHealth(playerid, 100);

					format(string, sizeof(string), "* %s drinks some %s from the bottle.", sendername ,x_nr);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You can't drink anymore, you will throw up!");
	                return 1;
	            }
	        }
	        else if(IsPlayerInRangeOfPoint(playerid, 5, 1255.9084,-791.8105,1085.3828))
	        {
	            if(PlayerDrunk[playerid] < 10)
	            {
	                new Float:health;
	                new x_nr[24];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|____________________ Bar Drinks ______________________|");
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /drink [drinkname]");
				  		SendClientMessage(playerid, COLOR_GREY, "Coffee: Cappuccino ($4), Latte($5), Macchiato($5)");
				  		SendClientMessage(playerid, COLOR_GREY, "Mixes/liqueur: Limoncello($8), Amaretto($7), Martini($12)");
				  		SendClientMessage(playerid, COLOR_GREY, "Wine: Merlot ($15), Sangiovese($18), Frizzante($16)");
				  		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Warning! Excessive Drinking Causes Liver Damage");
						SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________________|");
						return 1;
					}
					else if(strcmp(x_nr,"cappuccino",true) == 0)
					{
						GetPlayerHealth(playerid, health);
						if(health < 100)
					    {
							SafeGivePlayerMoney(playerid, - 4);
					        SetPlayerHealth(playerid, health + 30);
					        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);

							format(string, sizeof(string), "* %s takes a sip of Cappuccino from the porcelain cup.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    }
					}
					else if(strcmp(x_nr,"latte",true) == 0)
					{
						SafeGivePlayerMoney(playerid, - 5);
				        SetPlayerHealth(playerid, health + 30);
				        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);

						format(string, sizeof(string), "* %s drinks from a tall glass of Caffe Latte.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
					else if(strcmp(x_nr,"macchiato",true) == 0)
					{
						SafeGivePlayerMoney(playerid, - 5);
				        SetPlayerHealth(playerid, health + 30);
				        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);

						format(string, sizeof(string), "* %s drinks from a glass mug of Caffe Macchiato.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
				    else if(strcmp(x_nr,"limoncello",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 8);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0)
							{
								PlayerDrunk[playerid] += 1;
								new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
								hp += 30;
								SetPlayerHealth(playerid, health + hp);
								format(string, sizeof(string), "* %s drinks from a ceramic glass of Limoncello.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
								SetPlayerHealth(playerid, health + 30.0);
								format(string, sizeof(string), "* %s drinks from a ceramic glass of Limoncello.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
						}
					}
				    else if(strcmp(x_nr,"amaretto",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 7);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0)
							{
								PlayerDrunk[playerid] += 1;
								new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
								hp += 30;
								SetPlayerHealth(playerid, health + hp);
								format(string, sizeof(string), "* %s takes a sip of Amaretto from a rocks glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
								SetPlayerHealth(playerid, health + 30.0);
								format(string, sizeof(string), "* %s takes a sip of Amaretto from a rocks glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
						}
					}
				    else if(strcmp(x_nr,"martini",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 12);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0)
							{
								PlayerDrunk[playerid] += 1;
								new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
								hp += 30;
								SetPlayerHealth(playerid, health + hp);
								format(string, sizeof(string), "* %s takes a sip of Martini from the cocktail glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
								SetPlayerHealth(playerid, health + 30.0);
								format(string, sizeof(string), "* %s takes a sip of Martini from the cocktail glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
						}
					}
				    else if(strcmp(x_nr,"merlot",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 15);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0)
							{
								PlayerDrunk[playerid] += 1;
								new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
								hp += 30;
								SetPlayerHealth(playerid, health + hp);
								format(string, sizeof(string), "* %s takes a sip of red wine (Merlot) from the wine glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
								SetPlayerHealth(playerid, health + 30.0);
								format(string, sizeof(string), "* %s takes a sip of red wine (Merlot) from the wine glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
						}
					}
				    else if(strcmp(x_nr,"sangiovese",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 18);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0)
							{
								PlayerDrunk[playerid] += 1;
								new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
								hp += 30;
								SetPlayerHealth(playerid, health + hp);
								format(string, sizeof(string), "* %s takes a sip of red wine (Sangiovese) from the wine glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
								SetPlayerHealth(playerid, health + 30.0);
								format(string, sizeof(string), "* %s takes a sip of red wine (Sangiovese) from the wine glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
						}
					}
				    else if(strcmp(x_nr,"frizzante",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 16);
					    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0)
							{
								PlayerDrunk[playerid] += 1;
								new hp = 2 * PlayerInfo[playerid][pAlcoholPerk];
								hp += 30;
								SetPlayerHealth(playerid, health + hp);
								format(string, sizeof(string), "* %s takes a sip of white wine (Frizzante) from the wine glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
								SetPlayerHealth(playerid, health + 30.0);
								format(string, sizeof(string), "* %s takes a sip of white wine (Frizzante) from the wine glass.", sendername);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
						}
					}
					GetPlayerHealth(playerid, health);
					if (health > 100) SetPlayerHealth(playerid, 100);
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at a Bar!");
	            return 1;
	        }
	    }
	    
	    new y, m, d;
		new h,mi,s;
		getdate(y,m,d);
		gettime(h,mi,s);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /drink %s",d,m,y,h,mi,s,sendername, strtok(cmdtext, idx));
		CommandLog(string);
	    return 1;
	}
 	if(strcmp(cmd,"/showmenu",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pJob] != 6)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Your are not a ∑˛ŒÒ‘±!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /showmenu [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(4.0, playerid, giveplayerid))
					{
                        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));


			            format(string, sizeof(string), "* %s hands %d a menu from the rack.", sendername, giveplayerid);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						ProxDetector(8.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
						LoopingAnim(playerid,"BAR","Barserve_give",4.1,0,1,1,1,1);
					    SendClientMessage(giveplayerid, COLOR_RED, "|____________________ Food Menu _____________________|");
						SendClientMessage(giveplayerid, COLOR_WHITE, "           --- Today's Selections ---               ");
						SendClientMessage(giveplayerid, COLOR_WHITE, "          Naan Bread ($75) Salad ($85)              ");
				  		SendClientMessage(giveplayerid, COLOR_WHITE, "   Chicken Korma ($200) Spaghetti Bolognese ($250)  ");
				  		SendClientMessage(giveplayerid, COLOR_WHITE, "     Rice Pudding ($300) Chocolate Gateau ($425)    ");
				  		SendClientMessage(giveplayerid, COLOR_RED, "                   ”√∑®: /ordermeal                    ");
				  		SendClientMessage(giveplayerid, COLOR_RED, "|____________________________________________________|");
						SendClientMessage(giveplayerid, COLOR_GREY, string);
				        format(string, sizeof(string), "* %s has shown the menu to you.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
         			}
					else
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
	                    return 1;
	                }
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
	            return 1;
	        }
		}
	    return 1;
 	}
	if(strcmp(cmd, "/cookuniform", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pJob] != 6)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "ƒ„≤ª «“ª√˚∑˛ŒÒ‘±!");
				return 1;
			}
			{
			    new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cookuniform list then /cookuniform[skin id]");
					return 1;
				}
				if (IsPlayerInRangeOfPoint(playerid, 3,-792.9693,500.5572,1367.3672) || IsPlayerInRangeOfPoint(playerid, 3,-779.3134,497.8989,1371.7490) || PlayerInfo[playerid][pLocal] != 255)
				{
					if(strcmp(x_nr,"list",true) == 0)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "|_________∑˛ŒÒ‘± Uniforms_________|");
						SendClientMessage(playerid, COLOR_GRAD1, "1: Black Cook 2: White Cook");
						SendClientMessage(playerid, COLOR_YELLOW, "|_________∑˛ŒÒ‘± Uniforms_________|");
						return 1;
					}
					else if(strcmp(x_nr,"1",true) == 0)
					{
						SetPlayerSkin(playerid, 168);
						SendClientMessage(playerid, COLOR_GRAD2, "You are now the black chef.");
						return 1;
					}
					else if(strcmp(x_nr,"2",true) == 0)
					{
						SetPlayerSkin(playerid, 209);
						SendClientMessage(playerid, COLOR_GRAD2, "ƒ„œ÷‘⁄ «“ª∏ˆŒ‘µ◊  π§◊˜»À‘±.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "You are not by the cookers.");
					return 1;
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/ordermeal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Food Menu  __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /ordermeal [food]");
		  		SendClientMessage(playerid, COLOR_GREY, "Starters: NaanBread, Salad");
		  		SendClientMessage(playerid, COLOR_GREY, "Main Courses: SpagBol, ChickenKorma");
		  		SendClientMessage(playerid, COLOR_GREY, "Desserts: Chocolate Gateau, RicePudding ");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"naanbread",true) == 0)
			{
			    
			    format(string, sizeof(string), "** %s has ordered a naan bread.", sendername);
		    	SendJobMessage(18, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered a Naan Bread.");
		    	return 1;
			}
			else if(strcmp(x_nr,"salad",true) == 0)
			{
			    
			    format(string, sizeof(string), "** %s has ordered a salad.", sendername);
		    	SendJobMessage(18, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered a Salad.");
		    	return 1;
			}
			else if(strcmp(x_nr,"spagbol",true) == 0)
			{
			    
			    format(string, sizeof(string), "** %s has ordered Spaghetti Bolognese.", sendername);
		    	SendJobMessage(18, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered Spaghetti Bolognese.");
		    	return 1;
			}
			else if(strcmp(x_nr,"chickenkorma",true) == 0)
			{
			    
			    format(string, sizeof(string), "** %s has ordered a Chicken Korma.", sendername);
		    	SendJobMessage(18, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered a Chicken Korma.");
		    	return 1;
			}
			else if(strcmp(x_nr,"chocolategateau",true) == 0)
			{
			    
			    format(string, sizeof(string), "** %s has ordered some Chocolate Gateau.", sendername);
		    	SendJobMessage(18, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered some Chocolate Gateau.");
		    	return 1;
			}
			else if(strcmp(x_nr,"ricepudding",true) == 0)
			{
			    
			    format(string, sizeof(string), "** %s has ordered some Rice Pudding.", sendername);
		    	SendJobMessage(18, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered some Rice Pudding.");
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   We don't serve that here, sorry!");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setchamp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /setchamp [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
		        if(IsPlayerConnected(giveplayerid))
		        {
		            if(giveplayerid != INVALID_PLAYER_ID)
		            {
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		                
		                new nstring[MAX_PLAYER_NAME];
						format(nstring, sizeof(nstring), "%s", giveplayer);
						strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
						Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
						Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
						SaveBoxer();
						format(string, sizeof(string), "* You have made %s the new Boxing Champion.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Has Given you Boxing Champion Rights!", sendername);
						SendClientMessage(giveplayerid,TEAM_GROVE_COLOR,string);
						format(string, sizeof(string), "[π‹¿Ì]: %s Gave Boxing Champion Title to %s.", sendername, giveplayer);
						ABroadCast(COLOR_LIGHTRED,string, 5);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Gave Boxing Champion Title to %s",d,m,y,h,mi,s,sendername,giveplayer);
						GiveLog(string);
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
		            return 1;
		        }
	        }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„√ª”–»®œﬁ π”√∏√√¸¡Ó!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/boxstats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 12)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚»≠ª˜ ÷ !");
	            return 1;
	        }
	        new ttext[20];//Title
	        new clevel = PlayerInfo[playerid][pBoxSkill];
			if(clevel >= 0 && clevel <= 50) { ttext = "Beginner"; }
			else if(clevel >= 51 && clevel <= 200) { ttext = "Amateur"; }
			else if(clevel >= 201 && clevel <= 400) { ttext = "Professional"; }
	        new ntext[20];//NickName
	        new level = PlayerInfo[playerid][pWins];
	        if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	        {
	            ntext = "Undefeated";
	        }
	        else
	        {
	            if(level >= 0 && level <= 10) { ntext = "Newcomer"; }
	            else if(level >= 11 && level <= 20) { ntext = "Touchy Fist"; }
	            else if(level >= 21 && level <= 30) { ntext = "Nut Cracker"; }
	            else if(level >= 31 && level <= 40) { ntext = "Tommygun"; }
	            else if(level >= 41 && level <= 50) { ntext = "Skull Breaker"; }
	            else if(level >= 51 && level <= 60) { ntext = "Light Speed"; }
	            else if(level >= 61 && level <= 70) { ntext = "Unbroken Warrior"; }
	            else if(level >= 71) { ntext = "Itallion Stallion"; }
	        }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Boxing Records __________________|");
	        format(string, sizeof(string), "| Current Champion: %s, with [%d] Winnings and [%d] Losses.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Current Title: %s.", ttext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Current NickName: %s.", ntext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total Wins: %d.", PlayerInfo[playerid][pWins]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total Losses: %d.", PlayerInfo[playerid][pLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
	        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________|");
		}
		return 1;
	}
	if(strcmp(cmd, "/fight", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 12)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚»≠ª˜ ÷ !");
	            return 1;
	        }
	        if(InRing > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   There is already a Fight going on, wait for it to Finish !");
	            return 1;
	        }
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are already Fighting !");
	            return 1;
	        }
	        if(!IsPlayerInRangeOfPoint(playerid, 20,765.9343,0.2761,1000.7173))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at the Gantom Gym !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /fight [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Box with yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "* You offerd a Boxing Challenge to %s.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* »≠ª˜ ÷ %s wants to Fight with you (º¸»Î /accept boxing) to accept.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        BoxOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/music", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCD])
	        {
		        new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Music __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /music [name]");
			  		SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: On, Off, Next");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"next",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "** Unknown music command !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** You don't have a CD-Player !");
			    return 1;
			}
	    }
	    return 1;
	}
	/*if(strcmp(cmd, "/service", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[64];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /service [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic, Pizza");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   There are no Taxi Drivers On Duty at the moment, try again later !");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   You can't call for a Taxi now !");
		            return 1;
		        }
		        
			    format(string, sizeof(string), "** %s –Ë“™“ª√˚Taxi Driver. ( π”√ /accept taxiΩ” ‹π§◊˜)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Taxi Driver, wait for a reply.");
		    	TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"Pizza",true) == 0)//added lookagain
   			{
       			if(PizzaBoys < 1)
          		{
              		SendClientMessage(playerid, COLOR_GREY, "   There are no Pizza boys On Duty at the moment, try again later!");
              		return 1;
          		}

       			format(string, sizeof(string), "** %s –Ë“™“ª√˚Pizza. ( π”√/accept Pizza Ω” ‹’‚∑›π§◊˜)", sendername);
       			SendJobMessage(17, COLOR_LIGHTBLUE, string);
       			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have ordered a Pizza, wait for a reply.");
       			PizzaCall = playerid;
       			return 1;
   			}
			else if(strcmp(x_nr,"bus",true) == 0)
			{
			    new routezonecheck = IsInBusrouteZone(playerid);
				new drivercount = 0;
				if (routezonecheck == 0)
				{
					for (new i=0; i<=MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i) && BusrouteEast[i][0] != 0) drivercount++;
					}
					if (drivercount != 0)
					{
						format(string, sizeof(string), "ƒø«∞”– %d √˚π´Ωª≥µÀæª˙‘⁄∂´≤øœﬂ¬∑. œﬂ¬∑»Áœ¬:", drivercount);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, " ");
						SendBusRoute(playerid, 0);
					}
					else SendClientMessage(playerid, COLOR_GREY, "œ÷‘⁄√ª”–π´Ωª≥µÀæª˙‘⁄∂´≤øœﬂ¬∑..");
				}
				else if (routezonecheck == 1)
				{
					for (new i=0; i<=MAX_PLAYERS; i++)
					{
						if (IsPlayerConnected(i) && BusrouteWest[i][0] != 0) drivercount++;
					}
					if (drivercount != 0)
					{
						format(string, sizeof(string), "There are currently %d bus drivers on the west route. œﬂ¬∑»Áœ¬:", drivercount);
						SendClientMessage(playerid, TEAM_AZTECAS_COLOR, string);
						SendBusRoute(playerid, 1);
					}
					else SendClientMessage(playerid, COLOR_GREY, "There are no bus drivers on the west route at this time.");
				}
				else SendClientMessage(playerid, COLOR_GREY, "µ±«∞√ª”–π´Ωª≥µ‘⁄’‚¿Ô–– ª");
		    	return 1;
			}
			else if(strcmp(x_nr,"medic",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   µ±«∞√ª”–…œ∞‡µƒ“ΩŒÒ»À‘± !");
		            return 1;
		        }
		        
			    format(string, sizeof(string), "** %s –Ë“™“ª√˚Medic. ( π”√ /accept medicΩ” ‹π§◊˜)", sendername);
		    	SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Medic, wait for a reply.");
		    	MedicCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"mechanic",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   There are no ∆˚≥µ–ﬁ¿Ìπ§s On Duty at the moment, try again later !");
		            return 1;
		        }
		        
			    format(string, sizeof(string), "** %s –Ë“™“ª√˚Car Mechanic. ( π”√ /accept mechanicΩ” ‹π§◊˜)", sendername);
		    	SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Car Mechanic, wait for a reply.");
		    	MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Unknown service name !");
			    return 1;
			}
		}
		return 1;
	}*/
	if(strcmp(cmd, "/service", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GREY, "** Use /calllist for a list of services' numbers !");
			return 1;
	    }
	    return 1;
	}
	if(strcmp(cmd, "/calllist", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	SendClientMessage(playerid, COLOR_GREEN, "____________Services number list____________");
			SendClientMessage(playerid, COLOR_WHITE, "111 - pizza stack co., 222 - bus services");
			SendClientMessage(playerid, COLOR_WHITE, "103 - medics, 444 - taxi, 555 - ∆˚≥µ–ﬁ¿Ìπ§");
			SendClientMessage(playerid, COLOR_WHITE, "151 - Advertisement Agency, 150 - π„≤•π´Àæs");
			SendClientMessage(playerid, COLOR_GREEN, "____________________________________________");
			return 1;
	    }
	    return 1;
	}
	if(strcmp(cmd, "/tie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(Rope[playerid] != 0)
			{
			    if(PlayerInfo[playerid][pLevel] < 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You need to be atleast level 2 to tie ! ");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /tie [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "** Player already Tied !");
					        return 1;
					    }
					    if(PlayerInfo[giveplayerid][pAdminDuty] == 1)
					    {
					        SendClientMessage(playerid, COLOR_NICERED, "** You May not Tie an Admin on Duty!");
					        format(string,sizeof(string),"[π‹¿Ì]: %s (%d) Tried to Tie to %s While on Admin Duty",sendername,playerid,giveplayer);
							ABroadCast(COLOR_LIGHTRED,string, 5);
							return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        format(string, sizeof(string), "* You were tied up by %s, till untie.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* You tied %s up, till untie.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s ties %s up, so he wont go anywhere.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
								GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								Rope[playerid]--;
							    new y, m, d;
								new h,mi,s;
								getdate(y,m,d);
								gettime(h,mi,s);
								format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s [CMD] -> /tie %s",d,m,y,h,mi,s,sendername, giveplayer
								);
								CommandLog(string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Player not in your Car, or your not the Driver !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   You don't have a Rope !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /untie [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Untie yourself!"); return 1; }
						if(PlayerTied[giveplayerid])
						{
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						    format(string, sizeof(string), "* You were Untied by %s.", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* You Untied %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							format(string, sizeof(string), "* %s unties %s and takes the rope with him/her.", sendername, giveplayer);
      						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      						Rope[playerid]++;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   That player isn't Tied up !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/auntie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /auntie [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if(PlayerTied[giveplayerid])
						{
		    				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

			    			format(string, sizeof(string), "* You were Admin Untied by %s.", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* You Untied %s.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							format(string, sizeof(string), "* %s unties %s.", sendername, giveplayer);
      						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      						format(string, sizeof(string), "[π‹¿Ì]: %s Has admin untied %s (%d)", sendername,giveplayer,giveplayerid);
      						ABroadCast(COLOR_LIGHTRED,string, 5);
      						new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Admin Untied %s.",d,m,y,h,mi,s,sendername,giveplayer);
							GiveLog(string);
							AdminLog(string);
						}
						else
						{
		    				SendClientMessage(playerid, COLOR_GREY, "** That player isn't Tied up !");
					    	return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚æØ≤Ï !");
			}
		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/copuntie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsACop(playerid))
			{
			    /*if(PlayerInfo[playerid][pRank] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You need Rank 3 or higher to untie people !");
			        return 1;
			    }*/
    			if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /copuntie [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Untie yourself!"); return 1; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

							    format(string, sizeof(string), "* You were Untied by %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* You Untied %s.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								format(string, sizeof(string), "* %s unties %s.", sendername, giveplayer);
      							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player isn't Tied up !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚æØ≤Ï !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/sell", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[64];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Selling __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sell [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Fish, Cooked");
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"fish",true) == 0)
			{
			    if (!IsPlayerInRangeOfPoint(playerid, 100,-30.875, -88.9609, 1004.53))//centerpoint 24-7
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are not in a 24-7 !");
					return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sell fish [fish]");
					return 1;
				}
				new price;
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
				//ConsumingMoney[playerid] = 1;
				switch (fishid)
				{
				    case 1:
				    {
				        if(Fishes[playerid][pWeight1] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]) / 3;
                        price = price * Fishes[playerid][pWeight1] / 3;
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 800;
				            new payout = (skill)*(1);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 1);
				    }
				    case 2:
				    {
				        if(Fishes[playerid][pWeight2] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid2]) / 3;
                        price = price * Fishes[playerid][pWeight2] / 3;
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 800;
				            new payout = (skill)*(1);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 2);
				    }
				    case 3:
				    {
				        if(Fishes[playerid][pWeight3] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid3]) / 3;
                        price = price * Fishes[playerid][pWeight3] / 3;
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 800;
				            new payout = (skill)*(1);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 3);
				    }
				    case 4:
				    {
				        if(Fishes[playerid][pWeight4] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid4]) / 3;
                        price = price * Fishes[playerid][pWeight4] / 3;
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 800;
				            new payout = (skill)*(1);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 4);
				    }
				    case 5:
				    {
				        if(Fishes[playerid][pWeight5] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid5]) / 3;
                        price = price * Fishes[playerid][pWeight5] / 3;
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 800;
				            new payout = (skill)*(1);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 5);
				    }
				}
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				return 1;
			}
			else if(strcmp(x_nr,"cooked",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sell cooked [cooknumber] [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				new cookid = strval(tmp);
				if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
				else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(1) !"); return 1; }
				else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(2) !"); return 1; }
				else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(3) !"); return 1; }
				else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(4) !"); return 1; }
				else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(5) !"); return 1; }
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sell cooked [cooknumber] [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

				        switch(cookid)
				        {
							case 1:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 2:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 3:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 4:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 5:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d ( π”√ /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_WHITE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_WHITE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
				        }//switch
				        ClearCookingID(playerid, cookid);
				    }//invalid giveplayerid
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Unknown Selling Name !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/fare",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 13 || PlayerInfo[playerid][pJob] == 14 || PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* ƒ„œ÷‘⁄œ¬∞‡¡À◊¨»°¡À $%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SafeGivePlayerMoney(playerid, TransportMoney[playerid]);
					/*ConsumingMoney[playerid] = 1;*/
					TransportValue[playerid] = 0;
					TransportMoney[playerid] = 0;
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				new model = GetVehicleModel(Veh);
				if(model == 438 || model == 420)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /fare [º€∏Ò]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Fare price must be between $1 and $999 !"); return 1; }
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "[π„∏Ê] ≥ˆ◊‚≥µÀæª˙ %s is On Duty, /call 444 to call a ≥ˆ◊‚≥µÀæª˙. Fare: $%d.", sendername, TransportValue[playerid]);
	    				OOCNews(0xEDCA29AA,string);
	    				SetPlayerToTeamColor(playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You are not the Driver !");
					    return 1;
					}
				}
				else if(model == 437 || model == 431)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /fare [º€∏Ò]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Fare price must be between $1 and $99999 !"); return 1; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "π´≥µÀæª˙ %s is On Duty, fare: $%d.", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				SetPlayerToTeamColor(playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You are not the Driver !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not in a Taxi / Bus !");
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ƒ„≤ª «“ª√˚Taxi / π´≥µÀæª˙ !");
			    return 1;
			}
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/eat",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Cant eat a Fish while you are fighting !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /eat [cook number]");
				return 1;
			}
			new cookid = strval(tmp);
			if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
			else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(1) !"); return 1; }
			else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(2) !"); return 1; }
			else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(3) !"); return 1; }
			else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(4) !"); return 1; }
			else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(5) !"); return 1; }
            
			new Float:health;
			if(GetPlayerHealth(playerid, health) < 40)
			{
			    new hp = 0;
			    switch (cookid)
			    {
					case 1:
					{
					    if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
					    hp = Cooking[playerid][pCWeight1];
					    format(string, sizeof(string), "* %s eats %s.", sendername, Cooking[playerid][pCook1]);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook1], hp);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 2:
					{
					    if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
					    hp = Cooking[playerid][pCWeight2];
					    format(string, sizeof(string), "* %s eats %s.", sendername, Cooking[playerid][pCook2]);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook2], hp);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 3:
					{
					    if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
					    hp = Cooking[playerid][pCWeight3];
					    format(string, sizeof(string), "* %s eats %s.", sendername, Cooking[playerid][pCook3]);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook3], hp);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 4:
					{
					    if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
					    hp = Cooking[playerid][pCWeight4];
					    format(string, sizeof(string), "* %s eats %s.", sendername, Cooking[playerid][pCook4]);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook4], hp);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					case 5:
					{
					    if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "Consuming endangered Species");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
					    hp = Cooking[playerid][pCWeight5];
					    format(string, sizeof(string), "* %s eats %s.", sendername, Cooking[playerid][pCook5]);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					    format(string, sizeof(string), "* You ate %s weighting %d, and it was added to your Health.",Cooking[playerid][pCook5], hp);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
			    }
				ClearCookingID(playerid, cookid);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Your health is high enough, can only eat at 40 Health !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmdtext, "/eatpizza",true)==0) //added
 	{
		if (bPizza[playerid] != 1)
     	{
			SendClientMessage(playerid, COLOR_GREY, "   You dont have pizza, /call 111");
         	return 1;
  		}
  		SetPlayerHealth(playerid, 100);

  		format(string, sizeof(string), "* You ate a pizza , you feel better now");
  		SendClientMessage(playerid, COLOR_WHITE, string);
  		format(string, sizeof(string), "* %s takes out a pizza and eats it", sendername);
  		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
  		bPizza[playerid] = 0;
		return 1;
	}
	if(strcmp(cmd, "/sellpizza", true) ==0)
	{
    	if (PlayerInfo[playerid][pJob] == 17)
     	{
   			if (sPizza[playerid] == 1)
      		{
    			tmp = strtok(cmdtext, idx);
    			if(!strlen(tmp))
    			{
     				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sellpizza [ÕÊº“ID/ÕÊº“√˚◊÷]");
     				return 1;
    			}
    			giveplayerid = ReturnUser(tmp);
    			if(IsPlayerConnected(giveplayerid))
    			{
        			if(giveplayerid != INVALID_PLAYER_ID)
        			{
            			if (ProxDetectorS(8.0, playerid, giveplayerid))
          				{
       						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

       						format(string, sizeof(string), "* You have delivered a pizza to %s", giveplayer);
       						SendClientMessage(playerid, COLOR_WHITE, string);
       						format(string, sizeof(string), "* ≈˚»¯µÍÕ‚ÀÕ‘± %s gave you a pizza /eatpizza", sendername);
       						SendClientMessage(giveplayerid, COLOR_WHITE, string);
       						format(string, sizeof(string), "* %s takes out a pizza and gives it to %s", sendername ,giveplayer);
       						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
       						bPizza[giveplayerid] = 1;
       						sPizza[playerid] = 0;
      					}
      					else
          				{
              				SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
              				return 1;
      					}
     				}
    			}
    			return 1;
			}
   			else
   			{
    			SendClientMessage(playerid, COLOR_GREY, "   Go grab a pizza pizza from the kitchen!");
   			}
  		}
		return 1;
 	}
 	if(strcmp(cmd,"/cook",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsAtCookPlace(playerid))
	        {
	            new x_nr[24];
	            x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cook [name]");
					SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: Lastfish, Fish, Chicken, Hamburger, Pizza.");
					return 1;
				}
				if(strcmp(x_nr,"lastfish",true) == 0)
				{
				    if(Fishes[playerid][pLastFish] > 0)
	        		{
					    new found = 0;
					    if(Cooking[playerid][pCWeight1] == 0)
					    {
						    format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight2] == 0)
					    {
						    format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight3] == 0)
					    {
						    format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight4] == 0)
					    {
						    format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight5] == 0)
					    {
						    format(string, sizeof(string), "A Cooked %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						    found = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
					        return 1;
					    }
					    if(found)
					    {
					        ClearFishID(playerid, Fishes[playerid][pLastFish]);
				            Fishes[playerid][pLastFish] = 0;
				            Fishes[playerid][pFishID] = 0;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
				        return 1;
				    }
				}
				else if(strcmp(x_nr,"fish",true) == 0)
				{
				    new found = 0;
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cook fish [fishnumber]");
						return 1;
					}
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
					if(Cooking[playerid][pCWeight1] == 0)
					{
					    if(fishid == 1)
					    {
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
					    	SendClientMessage(playerid,COLOR_WHITE, string);
					    }
						else if(fishid == 2)
					 	{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight2] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 2)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_WHITE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight3] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_WHITE, string);
    					}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						found = 1;
   					}
					else if(Cooking[playerid][pCWeight4] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_WHITE, string);
    					}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight5] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_WHITE, string);
			    		}
						found = 1;
   					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
					    return 1;
		    		}
					if(found)
					{
					    ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
			   			Fishes[playerid][pFishID] = 0;
					}
				}
				else if(strcmp(x_nr,"chicken",true) == 0)
				{
				    if(IsPlayerInRangeOfPoint(playerid, 3,369.9786,-4.0798,1001.8589))
				    {//Cluckin Bell
				        if(Groceries[playerid][pChicken] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Chickens with you !");
				            return 1;
				        }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You need to be at Cluckin Bell to Cook this !");
					    return 1;
				    }
				}
				else if(strcmp(x_nr,"hamburger",true) == 0)
				{
				    if(IsPlayerInRangeOfPoint(playerid, 3,376.4466,-60.9574,1001.5078) || IsPlayerInRangeOfPoint(playerid, 3,378.1215,-57.4928,1001.5078))
					{//Burgershot
					    if(Groceries[playerid][pHamburger] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Hamburgers with you !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You need to be at Burger Shot to Cook this !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"pizza",true) == 0)
				{
				    if(IsPlayerInRangeOfPoint(playerid, 3,374.1185,-113.6361,1001.4922) || IsPlayerInRangeOfPoint(playerid, 3,377.7971,-113.7668,1001.4922))
					{//Well Stacked Pizza
					    if(Groceries[playerid][pPizza] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_WHITE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Pizzas with you !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You need to be at Well Stacked Pizza to Cook this !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Invalid Cooking Name !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at one of the Cooking Places (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd,"/cooked",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cooking __________________|");
	        format(string, sizeof(string), "** (1) Made: %s.   Weight: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Made: %s.   Weight: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Made: %s.   Weight: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Made: %s.   Weight: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Made: %s.   Weight: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
	if(strcmp(cmd,"/fish",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFishTool] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You don't have a fishing toolbox with you !");
			    return 1;
			}
	        if(PlayerInfo[playerid][pFishes] > 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Caught to many fish, wait till its reduced !");
	            return 1;
	        }
	        if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You already caught 5 Fishes, sell / eat / release them first !");
	            return 1;
	        }
	        new Veh = GetPlayerVehicleID(playerid);
	        if((IsAtFishPlace(playerid)) || IsABoat(Veh))
	        {
	            new Caught;
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            new Level = PlayerInfo[playerid][pFishSkill];
	            if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	            else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
	            else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
	            else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
	            else if(Level >= 401) { Caught = random(180)-70; }
	            rand = random(FishNamesNumber);
	            if(Caught <= 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Line snapped !");
	                return 1;
	            }
	            else if(rand == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a Jacket and threw it away !");
	                return 1;
	            }
	            else if(rand == 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a Pants and threw it away !");
	                return 1;
	            }
	            else if(rand == 7)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a Can and threw it away !");
	                return 1;
	            }
	            else if(rand == 10)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a pair of Shoes and threw it away !");
	                return 1;
	            }
	            else if(rand == 13)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught some Garbage and threw it away !");
	                return 1;
	            }
	            else if(rand == 20)
	            {
	                new mrand = random(500);
	                format(string, sizeof(string), "* You caught a Money Bag, containing $%d.", mrand);
					SendClientMessage(playerid, COLOR_WHITE, string);
	                SafeGivePlayerMoney(playerid, mrand);
	                return 1;
	            }
		        if(PlayerInfo[playerid][pFishLic] < 1)
		        {
	            	WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "Illegal Fishing");
				}
		        if(Fishes[playerid][pWeight1] == 0)
		        {
		        	PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight1] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish1], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 1;
					Fishes[playerid][pFid1] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
     			}
		        else if(Fishes[playerid][pWeight2] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight2] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish2], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 2;
					Fishes[playerid][pFid2] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight3] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight3] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish3], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 3;
					Fishes[playerid][pFid3] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight4] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight4] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish4], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 4;
					Fishes[playerid][pFid4] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight5] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight5] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish5], Caught);
					SendClientMessage(playerid, COLOR_WHITE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 5;
					Fishes[playerid][pFid5] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_WHITE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   You dont have any space for your Fish !");
		            return 1;
		        }
	            if(PlayerInfo[playerid][pFishSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Fishingµ»º∂œ÷‘⁄ « 2, you can now catch Heavier Fishes."); }
				else if(PlayerInfo[playerid][pFishSkill] == 250)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒFishingµ»º∂œ÷‘⁄ « 3, you can now catch Heavier Fishes."); }
				else if(PlayerInfo[playerid][pFishSkill] == 500)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒFishingµ»º∂œ÷‘⁄ « 4, you can now catch Heavier Fishes."); }
				else if(PlayerInfo[playerid][pFishSkill] == 1000)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒFishingµ»º∂œ÷‘⁄ « 5, you can now catch Heavier Fishes."); }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at a Fishing Place (Big Wheel Rods) or on a Fishing Boat !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/fishes",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Fishes __________________|");
	        format(string, sizeof(string), "** (1) Fish: %s.   Weight: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Fish: %s.   Weight: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Fish: %s.   Weight: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Fish: %s.   Weight: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Fish: %s.   Weight: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/releasefish",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /releasefish [fish]");
				return 1;
			}
			new fishid = strval(tmp);
			if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
			else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
			else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
			else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
			else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
			else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
   			Fishes[playerid][pFishID] = 0;
		}
		return 1;
	}
 	if(strcmp(cmd,"/throwback",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pLastFish] > 0)
	        {
	            ClearFishID(playerid, Fishes[playerid][pLastFish]);
	            Fishes[playerid][pLastFish] = 0;
	            Fishes[playerid][pFishID] = 0;
	            SendClientMessage(playerid, COLOR_GREY, "   You threw back a fish into the river!");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/throwbackall",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
	        {
	            ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				SendClientMessage(playerid, COLOR_GREY, "   You throw back all of your fish into the river!");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/licenses",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text0[20];
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
			new text6[20];
	        if(PlayerInfo[playerid][pPassport]) { text0 = "Approved"; } else { text0 = "Not Approved"; }
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Passed"; } else { text1 = "Not Passed"; }
            if(PlayerInfo[playerid][pFlyLic]) { text2 = "Passed"; } else { text4 = "Not Passed"; }
			if(PlayerInfo[playerid][pBoatLic]) { text3 = "Passed"; } else { text2 = "Not Passed"; }
	        if(PlayerInfo[playerid][pFishLic]) { text4 = "Passed"; } else { text3 = "Not Passed"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Passed"; } else { text5 = "Not Passed"; }
	        if(PlayerInfo[playerid][pCopLic]) { text6 = "Passed"; } else { text5 = "Not Passed"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licenses __________________|");
			format(string, sizeof(string), "Passport: %s.", text0);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Drivers License: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Flying License: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Sailing License: %s.", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Fishing License: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "Weapon License: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "æ¸πŸ License: %s.", text6);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________|");
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/members",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new teamnumber;
			if (PlayerInfo[playerid][pLeader] != 0) teamnumber = PlayerInfo[playerid][pLeader];
			else if (PlayerInfo[playerid][pMember] != 0) teamnumber = PlayerInfo[playerid][pMember];
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "You are not a member of a team!");
				return 1;
			}
	    	SendClientMessage(playerid, 0x808000AA, "**Members Online**");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, sizeof(string), "");
					if (PlayerInfo[i][pLeader] == teamnumber) format(string, sizeof(string), "%s (LEADER)",sendername);
					else if (PlayerInfo[i][pMember] == teamnumber) format(string, sizeof(string), "%s, Rank: %d.",sendername, PlayerInfo[i][pRank]);
					if (strlen(string) > 1) SendClientMessage(playerid, 0xF5DEB3AA, string);
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd,"/showlicenses",true)==0 || strcmp(cmd,"/sl",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /showlicenses [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Show Licenses to yourself, use /licenses!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new text0[20];
					    new text1[20];
				        new text2[20];
				        new text3[20];
				        new text4[20];
				        new text5[20];
				        new text6[20];
				        if(PlayerInfo[playerid][pPassport]) { text0 = "Approved"; } else { text1 = "Not Approved"; }
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Passed"; } else { text1 = "Not Passed"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text2 = "Passed"; } else { text4 = "Not Passed"; }
						if(PlayerInfo[playerid][pBoatLic]) { text3 = "Passed"; } else { text2 = "Not Passed"; }
				        if(PlayerInfo[playerid][pFishLic]) { text4 = "Passed"; } else { text3 = "Not Passed"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = "Passed"; } else { text5 = "Not Passed"; }
				        if(PlayerInfo[playerid][pCopLic]) { text6 = "Passed"; } else { text5 = "Not Passed"; }
				        format(string, sizeof(string), "|__________ Licenses of %s __________|", sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "Passport Documents: %s.", text0);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
				        format(string, sizeof(string), "Drivers License: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "Flying License: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "Sailing License: %s.", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "Fishing License: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "Weapon License: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "æ¸πŸ License: %s.", text6);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s has shown his Licenses to you.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* You have shown your Licenses to %s.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
	            return 1;
	        }
		}
	    return 1;
 	}
	if(strcmp(cmd, "/dumpdrugs", true) == 0 || strcmp(cmd, "/dropdrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pLevel] > 0)
		    {
		        {
		            if(PlayerInfo[playerid][pDrugs] >= 0)
					{
         			    PlayerInfo[playerid][pDrugs] = 0;
					    
			            format(string, sizeof(string), "* %s throws the drugs away.", sendername);
			            ProxDetector(15.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
					else if(PlayerInfo[playerid][pDrugs] == 0)
					{
					SendClientMessage(playerid, COLOR_GREY, " You dont have any drugs on you!");
					}
				 }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You aren't high enough to get rid of your drugs!");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmd,"/frisk",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /frisk [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					    new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20];
					    if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "| Drugs."; } else { text1 = "| Empty Pocket."; }
					    if(PlayerInfo[giveplayerid][pMats] > 0) { text2 = "| Materials."; } else { text2 = "| Empty Pocket."; }
					    if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text3 = "| Fishes."; } else { text3 = "| Empty Pocket."; }
					    if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text4 = "| Phone Book."; } else { text4 = "| Empty Pocket."; }
					    if(PlayerInfo[giveplayerid][pWatch] > 0) { text5 = "| Watch."; } else { text5 = "| Empty Pocket."; }
					    new sweapon, sammo;
					    text6 = "| Empty Pocket.";
					    for (new i=0; i<9; i++)
					    {
					        GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
					        if(sweapon != 0 && sammo != 0)
					        {
					            text6 = "| Weapon.";
					        }
					    }
					    format(string, sizeof(string), "|__________ Items with %s __________|", giveplayer);
				        SendClientMessage(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "%s.", text1);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text2);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text3);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text4);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text6);
						SendClientMessage(playerid, COLOR_GREY, string);
						if(giveplayerid == playerid) {	format(string, sizeof(string), "%s Revises his Pockets", sendername); }
						else if(PlayerInfo[giveplayerid][pSex] == 1) { format(string, sizeof(string), "* %s taps %s all over his body and searches for some items.", sendername ,giveplayer); }
						else { format(string, sizeof(string), "* %s taps %s all over her body and searches for some items.", sendername ,giveplayer); }
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
	            return 1;
	        }
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/friskinv",true)==0 || strcmp(cmd,"/friskinventory",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: (/friskinv)entory [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Frisk yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

                        format(string, sizeof(string), "|__________ %s ø‚¥Ê __________|", giveplayer);
				        SendClientMessage(playerid, COLOR_WHITE, string);
				        if(PlayerInfo[giveplayerid][pInvWeapon] != 0)
				        {
				            new gunname[100];
				            GetWeaponName(PlayerInfo[giveplayerid][pInvWeapon], gunname, sizeof(gunname));
				        	format(string, sizeof(string), "| Weapon: %s, µØ“©: %d |", gunname, PlayerInfo[giveplayerid][pInvAmmo]);
							SendClientMessage(playerid, COLOR_GREY, string);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "| Inventory is empty.");
						}
						format(string, sizeof(string), "  %s has frisked your inventory.", sendername);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/sellcar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 10)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ƒ„≤ª «“ª√˚∆˚≥µæ≠œ˙…Ã !");
			    return 1;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ƒ„≤ª‘⁄“ª¡æ≥µ¿Ô !");
			    return 1;
			}
			if(IsAnOwnableCar(idcar))
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Use /v sellto to sell you car to other person !");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sellcar [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /sellcar [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				return 1;
			}
			new money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not below $1 or above $99999 !"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Cant sell to yourself!");
					        return 1;
					    }
					    if(CarCalls[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   That player has already bought a car, has to use /callcar first !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					    format(string, sizeof(string), "* ƒ„Ω´≥µ≥ˆ €∏¯ %s ≥ˆ €º€∏Ò: $%d .", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ∆˚≥µæ≠œ˙…Ã %s wants to sell you his Car for $%d, (º¸»Î /accept car) to buy.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						CarOffer[giveplayerid] = playerid;
						CarPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name !");
			    return 1;
			}
	    }
		return 1;
	}
	if(strcmp(cmd,"/portable",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have shutdowned your Laptop, and Disconnected from your Agency.");
			        ConnectedToPC[playerid] = 0;
			        return 1;
			    }
			    
			    SendClientMessage(playerid, COLOR_GREY, "* You have booted up your Laptop, and Connected to your Agency.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___ …± ÷ª˙ππ ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "** You are not a Member of the …± ÷ª˙ππ !");
		        return 1;
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/steal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 8 || PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
	        {
	            if(PlayerInfo[playerid][pRank] < 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** You need to be a Rank 4 organization member or higher to do this command!");
	                return 1;
	            }
	            new x_nr[24];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Steal Victim's Items _______________|");
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /steal [itemname] [ÕÊº“ID/ÕÊº“√˚◊÷]");
			  		SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Phone, Weapons");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"phone",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /steal phone [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(3.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "    Can't steal from yourself!"); return 1; }
						        format(string, sizeof(string), "* You have taken away %s's Phone.", giveplayer);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* %s has taken away your Phone.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        PlayerInfo[giveplayerid][pPnumber] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapons",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /steal weapons [ÕÊº“ID/ÕÊº“√˚◊÷]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(3.0, playerid, giveplayerid))
							{
							    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "    Can't steal from yourself!"); return 1; }
						        format(string, sizeof(string), "* You have taken away %s's Weapons.", giveplayer);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						        format(string, sizeof(string), "* %s has taken away your Weapons.", sendername);
						        SendClientMessage(giveplayerid, COLOR_WHITE, string);
						        SafeResetPlayerWeapons(giveplayerid);
			        		}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not online!");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Œ¥÷™œÓƒø!");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not in organization");
	            return 1;
	        }
	    }
	    return 1;
	}

	if(strcmp(cmd,"/materials",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 22)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   ƒ„≤ª «“ª√˚Materials supplier !");
			    return 1;
			}
			new x_nr[24];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /materials [name]");
				SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: Get, Deliver.");
				return 1;
			}
			if(strcmp(x_nr,"get",true) == 0)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 3,597.1277,-1248.6479,18.2734))
			    {
			        if(MatsHolding[playerid] >= 10)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You can't hold any more Materials Packages !");
				        return 1;
			        }
			        tmp = strtok(cmdtext, idx);
			        if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /materials get [ammount]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 10) { SendClientMessage(playerid, COLOR_GREY, "   Package Number can't be below 1 or higher then 10 !"); return 1; }
					new price = moneys * 100;
					if(GetPlayerMoney(playerid) > price)
					{
					    format(string, sizeof(string), "* You bought %d Materials Packages for $%d.", moneys, price);
					    SendClientMessage(playerid, COLOR_WHITE, string);
					    SafeGivePlayerMoney(playerid, - price);
					    MatsHolding[playerid] = moneys;
					}
					else
					{
					    format(string, sizeof(string), "   You can't afford the $%d !", price);
					    SendClientMessage(playerid, COLOR_GREY, string);
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "** You are not at the Materials Package Building in ¬Â…ºÌ∂…£Õ–Àπ !");
			        return 1;
			    }
			}
   			else if(strcmp(x_nr,"deliver",true) == 0)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 3,2146.3523,-2267.7498,14.2344))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (50)*(MatsHolding[playerid]);
			            format(string, sizeof(string), "* The Factory Gave You %d Materials from your %d Packages.", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COLOR_WHITE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Materials Packages!");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not at the Willowfield Gun Factory.");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid Materials Name !");
			    return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd,"/sellmats",true)==0) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 22)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "  ƒ„≤¢≤ª «materials dealer ! ");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /sellmats [ÕÊº“ID/ÕÊº“√˚◊÷] [ammount]");
	            return 1;
	        }
	        giveplayerid = ReturnUser(tmp);
	        if(IsPlayerConnected(giveplayerid))
	        {
	            if(giveplayerid != INVALID_PLAYER_ID)
	            {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
					    tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
					    {
					        SendClientMessage(playerid, COLOR_WHITE, "Ã· æ: /sellmats [ÕÊº“ID/ÕÊº“√˚◊÷] [ammount]");
	            			return 1;
					    }
					    new ammount = strval(tmp);
					    if(ammount < 1) { SendClientMessage(playerid, COLOR_GREY, "  Wrong ammount ! "); return 1; }
					    if(ammount > PlayerInfo[playerid][pMats]) { SendClientMessage(playerid, COLOR_GREY, "  ƒ„√ª”–ƒ«√¥∂‡µƒ≤ƒ¡œ≥ˆ € !"); return 1; }
					    PlayerInfo[playerid][pMats] -= ammount;
					    PlayerInfo[giveplayerid][pMats] += ammount;

						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* %s gives a package of materials to %s", sendername, giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ ! ");
					    return 1;
					}
	            }
	        }
	    }
	    return 1;
	}

    if(strcmp(cmd,"/creategun",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 23)
			{
			    SendClientMessage(playerid,COLOR_GREY,"** ƒ„≤ª «“ª√˚Œ‰∆˜÷∆‘Ï…Ã !");
			    return 1;
			}
			new x_weapon[128],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    if(PlayerInfo[playerid][pRegularRank] == 0)
			    {
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /creategun [ÕÊº“ID/ÕÊº“√˚◊÷] [weaponname]");
					SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(50) bat(25) flowers(25) silenced(100) deagle (225) Molotovs (800)");
					SendClientMessage(playerid, COLOR_GREY, "Weapons: mp5(350) combat (600) shotgun(200) ak47(500) m4(650) country (450)");
					SendClientMessage(playerid, COLOR_GREY, "Weapons: TEC9(200) MAC10 (275) Sniper(800) Colt45(125) sawnoff(300) RPG (1000)");
					return 1;
				}
				else
				{
   					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /creategun [ÕÊº“ID/ÕÊº“√˚◊÷] [weaponname]");
					SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(50) bat(25) flowers(25) silenced(100) deagle (225) Molotovs (800)");
					SendClientMessage(playerid, COLOR_GREY, "Weapons: mp5(350) combat (600) shotgun(200) ak47(500) m4(650) country (450)");
					SendClientMessage(playerid, COLOR_GREY, "Weapons: TEC9(200) MAC10 (275) Sniper(800) Colt45(125) sawnoff(300) RPG (1000)");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext, idx);
					if(!strlen(x_weapon))
					{
					    if(PlayerInfo[playerid][pRegularRank] == 0)
					    {
							SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /creategun [ÕÊº“ID/ÕÊº“√˚◊÷] [weaponname]");
							SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(50) bat(25) flowers(25) silenced(100) deagle (225) Molotovs (800)");
							SendClientMessage(playerid, COLOR_GREY, "Weapons: mp5(350) combat (600) shotgun(200) ak47(500) m4(650) country (450)");
							SendClientMessage(playerid, COLOR_GREY, "Weapons: TEC9(200) MAC10 (275) Sniper(800) Colt45(125) sawnoff(300) RPG (1000)");
							return 1;
						}
						else
						{
		   					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /creategun [ÕÊº“ID/ÕÊº“√˚◊÷] [weaponname]");
							SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(50) bat(25) flowers(25) silenced(100) deagle (225) Molotovs (800)");
							SendClientMessage(playerid, COLOR_GREY, "Weapons: mp5(350) combat (600) shotgun(200) ak47(500) m4(650) country (450)");
							SendClientMessage(playerid, COLOR_GREY, "Weapons: TEC9(200) MAC10 (275) Sniper(800) Colt45(125) sawnoff(300) RPG (1000)");
							return 1;
						}
					}
				}
				if(strcmp(x_weapon,"knife",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 49)
					{
						weapon[playerid] = 4;
						price[playerid] = 50;
						ammo[playerid] = 1;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"bat",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 24)
					{
						weapon[playerid] = 5;
						price[playerid] = 25;
						ammo[playerid] = 1;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"silenced",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 99)
					{
						weapon[playerid] = 23;
						price[playerid] = 100;
						ammo[playerid] = 110;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"flowers",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 24)
					{
						weapon[playerid] = 14;
						price[playerid] = 25;
						ammo[playerid] = 1;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"deagle",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 224)
					{
						weapon[playerid] = 24;
						price[playerid] = 225;
						ammo[playerid] = 175;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"mp5",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pMats] > 349)
					{
						weapon[playerid] = 29;
						price[playerid] = 350;
						ammo[playerid] = 325;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
						}
					}
				else if(strcmp(x_weapon,"shotgun",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 199)
					{
						weapon[playerid] = 25;
						price[playerid] = 200;
						ammo[playerid] = 250;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"combat",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pMats] > 599)
					{
						weapon[playerid] = 27;
						price[playerid] = 600;
						ammo[playerid] = 350;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"ak47",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pMats] > 499)
					{
						weapon[playerid] = 30;
						price[playerid] = 500;
						ammo[playerid] = 400;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"m4",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pMats] > 649)
					{
						weapon[playerid] = 31;
						price[playerid] = 650;
						ammo[playerid] = 666;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"country",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 449)
					{
						weapon[playerid] = 33;
						price[playerid] = 450;
						ammo[playerid] = 125;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"tec9",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 199)
					{
						weapon[playerid] = 32;
						price[playerid] = 200;
						ammo[playerid] = 350;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"mac10",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 199)
					{
						weapon[playerid] = 28;
						price[playerid] = 275;
						ammo[playerid] = 450;
					}
					else
					{
				 		SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
				 		return 1;
				 	}
				 }
				else if(strcmp(x_weapon,"sniper",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pMats] > 699)
					{
						weapon[playerid] = 34;
						price[playerid] = 700;
						ammo[playerid] = 150;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"molotovs",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pRegularRank] == 0) return SendClientMessage(playerid, COLOR_GREY,"Only ≥£øÕ must Create this!");
					if(PlayerInfo[playerid][pMats] > 799)
					{
						weapon[playerid] = 18;
						price[playerid] = 800;
						ammo[playerid] = 3;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"colt45",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 124)
					{
						weapon[playerid] = 22;
						price[playerid] = 125;
						ammo[playerid] = 200;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"sawnoff",true) == 0)
				{
					if(PlayerInfo[playerid][pMats] > 299)
					{
						weapon[playerid] = 26;
						price[playerid] = 300;
						ammo[playerid] = 125;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else if(strcmp(x_weapon,"rpg",true) == 0)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
					{
						SendClientMessage(playerid, COLOR_GREY, "** You can sell this gun only at black market !");
						return 1;
					}
					if(PlayerInfo[playerid][pRegularRank] == 0) return SendClientMessage(playerid, COLOR_GREY,"Only ≥£øÕ must Create this!");
					if(PlayerInfo[playerid][pMats] > 999)
					{
						weapon[playerid] = 35;
						price[playerid] = 1000;
						ammo[playerid] = 5;
					}
					else
					{
						SendClientMessage(playerid,COLOR_GREY,"** Not enough Materials for that Weapon!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY,"** Invalid Weapon name!");
					return 1;
				}
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					//ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "** You have given %s, a %s with %d ammo, for %d Materials.", giveplayer,x_weapon, ammo[playerid], price[playerid]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "** You have recieved a %s with %d ammo from %s.", x_weapon, ammo[playerid], sendername);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					new gunname[100];
					GetWeaponName(weapon[playerid], gunname, sizeof(gunname));
					format(string, sizeof(string), "* %s hands a %s to %s.", sendername, gunname,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					SafeGivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "** ƒ„¿ÎµƒÃ´‘∂¡À.");
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "** %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/get",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[128];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Get __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /get [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Drugs, Fuel");
				SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
				return 1;
			}

		    if(strcmp(x_job,"drugs",true) == 0)
			{
		        if(PlayerInfo[playerid][pDrugs] > 15)
		        {
		            format(string, sizeof(string), "** You still have %d grams with you, sell them first !", PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_GREY, string);
		            return 1;
		        }
		        new tel;
			    new price;
			    new ammount;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /get drugs [ammount]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrugsSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 200; if(ammount < 1 || ammount > 6) { SendClientMessage(playerid, COLOR_GREY, "** You cant go below 1 or above 6 at your Skill Level!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 150; if(ammount < 1 || ammount > 12) { SendClientMessage(playerid, COLOR_GREY, "**  You cant go below 1 or above 12 at your Skill Level!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 100; if(ammount < 1 || ammount > 20) { SendClientMessage(playerid, COLOR_GREY, "** You cant go below 1 or above 20 at your Skill Level!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 50; if(ammount < 1 || ammount > 30) { SendClientMessage(playerid, COLOR_GREY, "**  You cant go below 1 or above 30 at your Skill Level!"); return 1; } }
				else if(level >= 401)
				{ tel = 10; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY,"**   You cant go below 1 or above 99 at your Skill Level!"); return 1; } }
			    if (PlayerInfo[playerid][pJob] == 4 && IsPlayerInRangeOfPoint(playerid, 2, 523.6057,-1812.9794,6.5713) || IsPlayerInRangeOfPoint(playerid, 2, 1424.1729,-1317.9955,13.5547))
				{
				    price = ammount * tel;
				    if(GetPlayerMoney(playerid) > price)
				    {
				        format(string, sizeof(string), "* You bought %d grams for $%d.", ammount, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        SafeGivePlayerMoney(playerid, -price);
						PlayerInfo[playerid][pDrugs] = PlayerInfo[playerid][pDrugs]+ammount;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "** You cant afford the Drugs !");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «“ª√˚∂æ∑∑, or not near the Drug Package !");
				    return 1;
				}
			}
			if(strcmp(x_job,"fuel",true) == 0)
			{
			    if(IsAtGasStation(playerid))
				{
				    new price = 20 * SBizzInfo[3][sbEntranceCost];
				    format(string, sizeof(string), "* You filled your Gas Can with 20% Fuel for $%d",price);
				    SendClientMessage(playerid, COLOR_WHITE, string);
				    PlayerInfo[playerid][pFuel] = 20;
					SafeGivePlayerMoney(playerid, - price);
					return 1;
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY,"** You're not at a Gas Station!");
					return 1;
				}
			}
			else { return 1; }
		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/fill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsAtGasStation(playerid))
			{
			    if(Gas[idcar] <= 99)
			    {
			    	TogglePlayerControllable(playerid, 0);
			    	GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Fueling Vehicle, please wait",2000,3);
					SetTimer("Fillup",RefuelWait,0);
					Refueling[playerid] = 1;
				}
				else
				{
				    GameTextForPlayer(playerid,"~r~~n~~n~~n~~n~~n~~n~~n~~n~~n~Gas can is full",2000,3);
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"** You're not at a Gas Station!");
			}
		}
    	return 1;
	}

	if(strcmp(cmd, "/fillcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pFuel] > 0)
		    {
		        if(Gas[gLastCar[playerid]] < 81)
		        {
			        SendClientMessage(playerid, COLOR_WHITE, "** You filled your car with 20 percent Fuel from your Gas Can.");
			        Gas[gLastCar[playerid]] += 20;
			        PlayerInfo[playerid][pFuel] = 0;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "** Your Car still got enough Fuel to drive with !");
				}
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "** You have no Fuel left in your Gas Can !");
		    }
		}
		return 1;
	}
	if(strcmp(cmd, "/tazer", true) ==0 || strcmp(cmd, "/ta", true) ==0)
	{
	    if(IsACop(playerid) && PlayerInfo[playerid][pDuty] == 1)
	    {
	        new weapons[13][2];
			for (new i = 0; i < 13; i++)
			{
			    GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
			}
	        
			if(Tazer[playerid] == 0)
			{
				if(PlayerInfo[playerid][pTazerBullets] != 0)
				{
				    new ammo = weapons[2][1];
					PreTazerAmmo[playerid] = ammo;
					SafeGivePlayerWeapon(playerid, 23, PlayerInfo[playerid][pTazerBullets]);
					Tazer[playerid] = 1;
					//AttachWeaponCorrectly(playerid, 24);
					SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 500);
	    			OnePlayAnim(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
					format(string, sizeof(string), "* %s ÃÕ≥ˆ“ª∞— ÷«πΩ¯––ø÷œ≈π•ª˜.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”– ÷«π!");
				    return 1;
				}
			}
			else
			{
				new ammo = weapons[2][1];
				PlayerInfo[playerid][pTazerBullets] = ammo;
				SafeGivePlayerWeapon(playerid, 24, PreTazerAmmo[playerid]);
				//AttachWeaponCorrectly(playerid, 23);
				Tazer[playerid] = 0;
				ClearAnimations(playerid);
				SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pSilenSkill]);
				format(string, sizeof(string), "* %s Ω‚≥˝¡ÀΩÙº±◊¥Ã¨.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/agent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
	        {
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
				if (IsPlayerInRangeOfPoint(playerid, 10, 223.6328,186.8251,1003.0313))
				{
				    new Agentlist[] = "1\t¡™∞Óµ˜≤Èæ÷Õ‚Ã◊\n2\t±„“¬\n3\t¿Ò“«∑˛\n4\tŒ‘µ◊ƒ–1\n5\tŒ‘µ◊ƒ–2\n6\tŒ‘µ◊≈Æ1\n7\tŒ‘µ◊≈Æ2\n8\t µ—È “Õ‚Ã◊\n9\t≈ÆÃÿπ§1\n10\t≈ÆÃÿπ§2\n11\tƒ¨»œ∑˛◊∞";
				    ShowPlayerDialog(playerid,56,DIALOG_STYLE_LIST,"List of F.B.I Clothes:",Agentlist,"—°‘Ò","»°œ˚");
				}
				else
                {
                   	SendClientMessage(playerid, COLOR_GRAD2, "You are not in the HQ!");
                   	return 1;
                }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "You are not an FBI agent!");
                return 1;
 			}
   		}
		return 1;
   	}
   	if(strcmp(cmd, "/soldier", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember]== 3 ||PlayerInfo[playerid][pLeader]== 3)
	        {
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
				if (IsPlayerInRangeOfPoint(playerid, 10, 233.4989,123.6518,1003.2188))
				{
				    new Armylist[] = "1\t ø±¯÷∆∑˛\n2\t¡Ì“ª÷÷ ø±¯÷∆∑˛\n3\t¿Ò“«∑˛\n4\t µ—È “Õ‚Ã◊\n5\tÃÿ÷÷≤ø∂”÷∆∑˛ 2\n6\tFemale Soldier\n7\tFemale Soldier II\n8\tƒ¨»œ∑˛◊∞";
                    ShowPlayerDialog(playerid,57,DIALOG_STYLE_LIST,"List of The Army Clothes:",Armylist,"—°‘Ò","»°œ˚");
				}
				else
                {
                   	SendClientMessage(playerid, COLOR_GRAD2, "You are not in the Base!");
                   	return 1;
                }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "ƒ„≤ª «“ª√˚ ø±¯!");
                return 1;
 			}
   		}
		return 1;
   	}
   	if(strcmp(cmd, "/undercover", true) == 0)
    {
    	if(IsPlayerConnected(playerid))
     	{
      		if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1||PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
        	{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "   You need to be Rank 3 or Higher for this action!");
     				return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
    			if (IsPlayerInRangeOfPoint(playerid, 6,255.3,77.4,1003.6) || IsPlayerInRangeOfPoint(playerid, 6,223.6328,186.8251,1003.0313) || PlayerInfo[playerid][pLocal] != 255)
     			{
      				new undercover[] = "1\tÃÿπ§\n2\tπ§◊˜»À‘±\n3\tÕ¨–‘¡µƒ–◊”\n4\tºÀ≈Æ\n5\tÀÊª˙µƒƒ––‘\n6\t’”‘ÛÊ“∆§ ø\n7\tæ∆µÍ∑˛ŒÒ‘±\n8\tÀÊª˙µƒ≈Æ–‘\n9\t√◊–™∂˚Í©ƒ…\n10\tø≠µŸ’≤\n11\t∑µªÿƒ„µƒ’˝≥£÷∆∑˛";
					ShowPlayerDialog(playerid,55,DIALOG_STYLE_LIST,"List of Undercover Clothes:",undercover,"—°‘Ò","»°œ˚");

				}
				else
    			{
	               	SendClientMessage(playerid, COLOR_GRAD2, "You are not in the locker room!");
                	return 1;
       			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "ƒ„≤ª «æØ≤Ï!");
	            return 1;
 			}
   		}
		return 1;
  	}
	if(strcmp(cmd, "/cuff", true) == 0 || strcmp(cmd, "/cu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsACop(playerid) || IsAFreecop(playerid))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cuff [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "* ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}
				if(PlayerInfo[playerid][pDuty] == 0)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–…œ∞‡ƒÿ!");
			    	return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(IsACop(giveplayerid) || IsAFreecop(giveplayerid))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ªƒ‹∏¯æØ≤Ï¥¯…œ ÷ÓÌ !");
					        return 1;
				        }
				        if(GaveUp[giveplayerid] == 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆ»Àæ–≤∂!");
					        return 1;
					    }
					    if(PlayerCuffed[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆ»À“—æ≠¥¯…œ¡À ÷ÓÌ¡À !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªƒ‹∞—◊‘º∫ÓÌ◊°!");
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
     	 					format(string, sizeof(string), "* ƒ„±ª %s øΩ◊°¡À,≥˝∑« ÷ÓÌΩ‚À¯.", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* ƒ„ÓÌ◊°¡À %s, ƒ„ø…“‘ π”√/uncuffŒ™À˚Ω‚À¯.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s ÓÌ◊°¡À %s, À˘“‘À˚≤ªƒ‹»•»Œ∫Œµÿ∑Ω.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
							GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
							PlayerCuffed[giveplayerid] = 1;
							TogglePlayerControllable(giveplayerid, 0);
							//cufftimer[giveplayerid] = SetTimerEx("CheckDist",10000,true,"ii",giveplayerid,playerid);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª «“ª√˚æØ≤Ï / FBI / π˙√ÒæØŒ¿∂” !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsACop(playerid))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /uncuff [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªƒ‹∏¯◊‘º∫Ω‚≥˝ ÷ÓÌ!"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							    format(string, sizeof(string), "* ƒ„±ª %s Ω‚ø™¡À ÷ÓÌ, ƒ„œ÷‘⁄ø…“‘◊ﬂ¡À.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* ƒ„∏¯ %sΩ‚ø™¡À ÷ÓÌ.", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
								GaveUp[giveplayerid] = 0;
								SetPlayerColor(giveplayerid, 0xFF990000);
								//KillTimer(cufftimer[giveplayerid]);
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆ»À≤¢√ª”– ÷ÓÌ !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª «“ª√˚æØ≤Ï / FBI / π˙√ÒæØŒ¿∂” !");
			}
		}//not connected
		return 1;
	}
    if(strcmp(cmd, "/find", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚’ÏÃΩ !");
				return 1;
		    }
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   «Îƒ„µ»¥˝ 2 ∑÷÷”≤≈ø…“‘‘Ÿ¥Œ’“œ¬“ª∏ˆ»À !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /find [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªƒ‹’“◊‘º∫!"); return 1; }
			        new points;
			        new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 4; }
					else if(level >= 51 && level <= 100)
					{ points = 6; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 12; }
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ’ÏÃΩµ»º∂œ÷‘⁄ « 2."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ’ÏÃΩµ»º∂œ÷‘⁄ « 3."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ’ÏÃΩµ»º∂œ÷‘⁄ « 4."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ’ÏÃΩµ»º∂œ÷‘⁄ « 5."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Œﬁ–ßÕÊº“ID !");
			}
		}
	    return 1;
	}
	if(strcmp(cmd,"/removegps",true)==0)
 	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
			{
				DisablePlayerCheckpoint(playerid);
			}
			else if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4)
			{
				DisablePlayerCheckpoint(playerid);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/guard", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 8)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚±£Ô⁄!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /guard [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Cant offer protection to yourself !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					    format(string, sizeof(string), "* You offerd protection to %s for $%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* ±£Ô⁄ %s wants to protect you for $%d, (º¸»Î /accept bodyguard) to accept.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/free", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚¬… ¶!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 401)
		    {
		        ApprovedLawyer[playerid] = 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /free [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ªƒ‹ Õ∑≈◊‘º∫!"); return 1; }
					if(PlayerInfo[giveplayerid][pJailed] == 1 && ApprovedLawyer[playerid] == 1)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "* ƒ„ Õ∑≈¡À %s ≥ˆ”¸¡À.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* ƒ„±ª Õ∑≈≥ˆº‡”¸, Õ®π˝¬… ¶ %s.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						ApprovedLawyer[playerid] = 0;
						WantLawyer[giveplayerid] = 0;
						CallLawyer[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						PlayerInfo[giveplayerid][pJailTime] = 1;
						PlayerInfo[playerid][pLawSkill] ++;
						if(PlayerInfo[playerid][pLawSkill] == 50)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ¬… ¶µ»º∂œ÷‘⁄ « 2."); }
						else if(PlayerInfo[playerid][pLawSkill] == 100)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ¬… ¶µ»º∂œ÷‘⁄ « 3."); }
						else if(PlayerInfo[playerid][pLawSkill] == 200)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ¬… ¶µ»º∂œ÷‘⁄ « 4."); }
						else if(PlayerInfo[playerid][pLawSkill] == 400)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒ¬… ¶µ»º∂œ÷‘⁄ « 5."); }
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ÕÊº“≤ª–Ì–Ë“™“ª∏ˆ¬… ¶/ªÚ’‚∏ˆÕÊº“≤¢≤ª‘⁄º‡”¸/≤ªƒ‹±ª±£ Õ!");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd,"/cancel",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[64];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /cancel [name]");
				SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Sex, Drugs, License, Repair, Lawyer, Bodyguard, Live, Refill, Car, Boxing");
				SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Taxi, Bus, Medic, Mechanic, Paper, Ticket, Witness, Marriage, Divorce, OwnableCar");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
			if(strcmp(x_job,"sex",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_job,"drugs",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_job,"license",true) == 0) { LicenseOffer[playerid] = 999; LicensePrice[playerid] = 0; LicenseType[playerid] = 0; }
			else if(strcmp(x_job,"repair",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_job,"lawyer",true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
			else if(strcmp(x_job,"bodyguard",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_job,"live",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_job,"refill",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_job,"car",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_job,"boxing",true) == 0) { BoxOffer[playerid] = 999; }
			else if(strcmp(x_job,"paper",true) == 0) { PaperOffer[playerid] = 999; }
			else if(strcmp(x_job,"witness",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_job,"marriage",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_job,"divorce",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_job,"ownablecar",true) == 0) { OwnableCarOffer[playerid] = 999; OwnableCarID[playerid] = 0; OwnableCarPrice[playerid] = 0; }
			else if(strcmp(x_job,"ticket",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_job,"medic",true) == 0) { if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller !"); return 1; } } }
			else if(strcmp(x_job,"mechanic",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller !"); return 1; } } }
			else if(strcmp(x_job,"Pizza",true) == 0) { if(IsPlayerConnected(PizzaCall)) { if(PizzaCall == playerid) { PizzaCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller!"); return 1; } } }
			else if(strcmp(x_job,"taxi",true) == 0)
			{
			    if(TaxiCall < 999)
			    {
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Canceled the call", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
							        }
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_job,"bus",true) == 0)
			{
			    if(BusCall < 999)
			    {
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
						BusCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Bus Caller~n~~r~Canceled the call", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
							        }
						        }
						    }
						}
					}
				}
			}
			else { return 1; }
			format(string, sizeof(string), "* You have canceled: %s.", x_job);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}//not connected
		return 1;
	}
//ACCEPT COMMANDS (Cops)
	if(strcmp(cmd,"/accept",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[64];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "”√∑®: accept [name]");
				SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Sex, Drugs, Repair, Lawyer, Bodyguard, Live, Refill, OwnableCar");
				SendClientMessage(playerid, COLOR_GREY, "ø…”√√˚≥∆: Taxi, Bus, Boxing, Medic, Mechanic, Paper, Ticket, Pizza");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
	        if(strcmp(x_job,"car",true) == 0)
			{
			    if(CarOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(CarOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > CarPrice[playerid])
			            {
			                if(IsPlayerInVehicle(CarOffer[playerid], CarID[playerid]))
			                {
				                GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));

				                new points;
				                PlayerInfo[CarOffer[playerid]][pCarSkill] ++;
				                if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 50)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µæ≠œ˙…Ãµ»º∂œ÷‘⁄ « 2, Players that buy Cars from you can call it more often."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 100)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µæ≠œ˙…Ãµ»º∂œ÷‘⁄ « 3, Players that buy Cars from you can call it more often."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 200)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µæ≠œ˙…Ãµ»º∂œ÷‘⁄ « 4, Players that buy Cars from you can call it more often."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 400)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µæ≠œ˙…Ãµ»º∂œ÷‘⁄ « 5, Players that buy Cars from you can call it more often."); }
								new level = PlayerInfo[CarOffer[playerid]][pCarSkill];
								if(level >= 0 && level <= 50) { points = 1; }
								else if(level >= 51 && level <= 100) { points = 2; }
								else if(level >= 101 && level <= 200) { points = 3; }
								else if(level >= 201 && level <= 400) { points = 4; }
								else if(level >= 401) { points = 4; }
				                format(string, sizeof(string), "* You bought a Car for $%d, from ∆˚≥µæ≠œ˙…Ã %s. (You can use /callcar %d times)",CarPrice[playerid],giveplayer,points);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* You sold your Car to %s for $%d, the player can use /callcar %d times.",sendername,CarPrice[playerid],points);
								SendClientMessage(CarOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[CarOffer[playerid]][pPayCheck] += CarPrice[playerid] * 5;
								SafeGivePlayerMoney(playerid, -CarPrice[playerid]);
								SafeRemovePlayerFromVehicle(CarOffer[playerid]);
								CarCalls[playerid] = points;
						        CarOffer[playerid] = 999;
								CarPrice[playerid] = 0;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   The ∆˚≥µæ≠œ˙…Ã is not in the offerd Car !");
						    	return 1;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Car !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À offered to buy a Car !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"divorce",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));

							format(string, sizeof(string), "* You have accepted %s's request to be his Marriage Witness.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s has accepted your request to be your Marriage Witness.", sendername);
							SendClientMessage(DivorceOffer[playerid], COLOR_WHITE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPhousekey] = 9999;
							PlayerInfo[playerid][pPbiskey] = 9999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The player that sent you the Divorce Papers is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À sent you any Divorce Papers !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"witness",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));

							format(string, sizeof(string), "* You have accepted %s's request to be his Marriage Witness.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s has accepted your request to be your Marriage Witness.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_WHITE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The player that requested you to be his Marriage Witness is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À asked you to be his Marriage Witness !");
				    return 1;
				}
			}
	        else if(strcmp(x_job,"marriage",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!IsPlayerInRangeOfPoint(playerid, 10, 2232.3047,-1333.1543,23.9815))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You are not at the Church in Jefferson !");
			            return 1;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   The proposer doesn't have a Marriage Witness !");
						        return 1;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));

									format(string, sizeof(string), "* You have accepted %s's request to be your Husband.", giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* %s has accepted your request to be your Wife.", sendername);
									SendClientMessage(ProposeOffer[playerid], COLOR_WHITE, string);
									format(string, sizeof(string), "Priest: %s do you take %s as your lovely Husband? (º¸»Î 'yes', anything else will reject the Marriage)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return 1;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "   The Marriage Witness is not near your proposer !");
								    return 1;
								}
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The player that proposed to you is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À Proposed to you !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"Pizza",true) == 0)
   			{
       			if(PlayerInfo[playerid][pJob] != 17)
       			{
           			SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚≈˚»¯µÍÕ‚ÀÕ‘±!");
        			return 1;
       			}
        		if(PizzaCallTime[playerid] > 0)
             	{
					SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Pizza order!");
        			return 1;
             	}
             	if(PizzaCall < 999)
             	{
					if(IsPlayerConnected(PizzaCall))
					{

                  		GetPlayerName(PizzaCall, giveplayer, sizeof(giveplayer));
                  		format(string, sizeof(string), "* You have accepted the Pizza Order from %s, you have 90√Î to get there.",giveplayer);
      					SendClientMessage(playerid, COLOR_WHITE, string);
      					SendClientMessage(playerid, COLOR_WHITE, "* After the 90√Î the Red Marker will dissapear.");
                        format(string, sizeof(string), "* ≈˚»¯µÍÕ‚ÀÕ‘± %s has accepted your Pizza Order please wait at your current Position.",sendername);
      					SendClientMessage(PizzaCall, COLOR_WHITE, string);
      					new Float:X,Float:Y,Float:Z;
      					GetPlayerPos(PizzaCall, X, Y, Z);
      					SetPlayerCheckpoint(playerid, X, Y, Z, 5);
      					GameTextForPlayer(playerid, "~w~Pizza Caller~n~~r~Goto redmarker", 5000, 1);
      					PizzaCallTime[playerid] = 1;
      					PizzaCall = 999;
						return 1;
     				}
             	}
             	else
             	{
              		SendClientMessage(playerid, COLOR_GREY, "   √ª»À ordered a Pizza yet!");
        			return 1;
             	}
   			}
			else if(strcmp(x_job,"ticket",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));

							format(string, sizeof(string), "* You have paid the Ticket of $%d to æ¸πŸ %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s has paid your Ticket of $%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
							SafeGivePlayerMoney(playerid, - TicketMoney[playerid]);
							SafeGivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The æ¸πŸ is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À offered you a Ticket !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"paper",true) == 0)
			{
			    if(PaperOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(PaperOffer[playerid]))
			        {
			            if(BringingPaper[PaperOffer[playerid]] > 0)
			            {
			                if (ProxDetectorS(5.0, playerid, PaperOffer[playerid]))
							{
				            	GetPlayerName(PaperOffer[playerid], giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You have accepted a Newspaper from ±®ÕØ %s ( π”√ /read paper, to read).", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has accepted your Newspaper.", sendername);
								SendClientMessage(PaperOffer[playerid], COLOR_WHITE, string);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pTitle]);
								strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pMaker]);
								strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine1]);
								strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine2]);
								strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine3]);
								strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine4]);
								strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine5]);
								strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine6]);
								strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine7]);
								strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
								GotPaper[playerid] = 1;
								PaperOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   The ±®ÕØ is not near you !");
							    return 1;
							}
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À offered you a Newspaper !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"boxing",true) == 0)
			{
			    if(BoxOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(BoxOffer[playerid]))
			        {
			            new points;
			            new mypoints;
			            GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));

			            new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
						if(level >= 0 && level <= 50) { points = 40; }
						else if(level >= 51 && level <= 100) { points = 50; }
						else if(level >= 101 && level <= 200) { points = 60; }
						else if(level >= 201 && level <= 400) { points = 70; }
						else if(level >= 401) { points = 80; }
						if(PlayerInfo[playerid][pJob] == 12)
						{
							new clevel = PlayerInfo[playerid][pBoxSkill];
							if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
							else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
							else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
							else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
							else if(clevel >= 401) { mypoints = 80; }
						}
						else
						{
						    mypoints = 30;
						}
						format(string, sizeof(string), "* You have accepted the Boxing Challenge from %s, and will fight with %d Health.",giveplayer,mypoints);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s has accepted your Boxing Challenge Request, you will fight with %d Health.",sendername,points);
						SendClientMessage(BoxOffer[playerid], COLOR_WHITE, string);
						SetPlayerHealth(playerid, mypoints);
						SetPlayerHealth(BoxOffer[playerid], points);
						SafeSetPlayerInterior(playerid, 5); SafeSetPlayerInterior(BoxOffer[playerid], 5);
						SafeSetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
						SafeSetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
						TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
						GameTextForPlayer(playerid, "~r~Waiting", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
						new name[MAX_PLAYER_NAME];
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "»≠ª˜–¬Œ≈: Boxing Champion %s will fight VS %s, in 60√Î (Gantom Gym).",  sendername, giveplayer);
							OOCOff(COLOR_WHITE,string);
							TBoxer = playerid;
							BoxDelay = 60;
						}
						GetPlayerName(BoxOffer[playerid], name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "»≠ª˜–¬Œ≈: Boxing Champion %s will fight VS %s, in 60√Î (Gantom Gym).",  giveplayer, sendername);
							OOCOff(COLOR_WHITE,string);
							TBoxer = BoxOffer[playerid];
							BoxDelay = 60;
						}
						BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
						if(BoxDelay < 1) { BoxDelay = 20; }
						InRing = 1;
						Boxer1 = BoxOffer[playerid];
						Boxer2 = playerid;
						PlayerBoxing[playerid] = 1;
						PlayerBoxing[BoxOffer[playerid]] = 1;
						BoxOffer[playerid] = 999;
						return 1;
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À offered you a Boxing Challenge !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"taxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚≥ˆ◊‚≥µÀæª˙ !");
				    return 1;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Taxi Call !");
				    return 1;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* You have accepted the Taxi Call from %s, you will see the marker untill you have reached it.",giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* ≥ˆ◊‚≥µÀæª˙ %s has accepted your Taxi Call please wait at your current Position.",sendername);
						SendClientMessage(TaxiCall, COLOR_WHITE, string);
						GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Goto redmarker", 5000, 1);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   √ª»À called for a Taxi yet !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"bus",true) == 0)
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚π´≥µÀæª˙ !");
				    return 1;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Bus Call !");
				    return 1;
	            }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* You have accepted the Bus Call from %s, you will see the marker untill you have reached it.",giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
                        format(string, sizeof(string), "* π´≥µÀæª˙ %s has accepted your Bus Call please wait at your current Position.",sendername);
						SendClientMessage(BusCall, COLOR_WHITE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Bus Caller~n~~r~Goto redmarker", 5000, 1);
						BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   √ª»À called for a Bus yet !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"medic",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			    {
		            if(MedicCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Medic Call !");
					    return 1;
		            }

		            if(MedicCall < 999)
		            {
		                if(IsPlayerConnected(MedicCall))
		                {
		                    
		                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
		                	format(string, sizeof(string), "* You have accepted the Medic Call from %s, you have 30√Î to get there.",giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							SendClientMessage(playerid, COLOR_WHITE, "* After the 30√Î the Red Marker will dissapear.");
	                        format(string, sizeof(string), "* Medic %s has accepted your Medic Call please wait at your current Position.",sendername);
							SendClientMessage(MedicCall, COLOR_WHITE, string);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(MedicCall, X, Y, Z);
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							GameTextForPlayer(playerid, "~w~Medic Caller~n~~r~Goto redmarker", 5000, 1);
							MedicCallTime[playerid] = 1;
							MedicCall = 999;
							return 1;
						}
		            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   √ª»À called for a Medic yet !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚Medic !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"mechanic",true) == 0)
			{
			    if(PlayerInfo[playerid][pJob] != 7)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚∆˚≥µ–ﬁ¿Ìπ§ !");
				    return 1;
			    }
	            if(MechanicCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Mechanic Call !");
				    return 1;
	            }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* You have accepted the ∆˚≥µ–ﬁ¿Ìπ§ Call from %s, you have 90√Î to get there.",giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SendClientMessage(playerid, COLOR_WHITE, "* After the 90√Î the Red Marker will dissapear.");
                        format(string, sizeof(string), "* ∆˚≥µ–ﬁ¿Ìπ§ %s has accepted your ∆˚≥µ–ﬁ¿Ìπ§ Call please wait at your current Position.",sendername);
						SendClientMessage(MechanicCall, COLOR_WHITE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
						MechanicCallTime[playerid] = 1;
						MechanicCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   √ª»À called for a ∆˚≥µ–ﬁ¿Ìπ§ yet !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"refill",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > RefillPrice[playerid])
			            {
			                GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));

			                new car = gLastCar[playerid];
			                new fuel;
			                PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 2, you can add more Fuel to any Players Cars."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 3, you can add more Fuel to any Players Cars."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 4, you can add more Fuel to any Players Cars."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 5, you can add more Fuel to any Players Cars."); }
							new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
							if(level >= 0 && level <= 50)
							{ fuel = 15; }
							else if(level >= 51 && level <= 100)
							{ fuel = 40; }
							else if(level >= 101 && level <= 200)
							{ fuel = 60; }
							else if(level >= 201 && level <= 400)
							{ fuel = 80; }
							else if(level >= 401)
							{ fuel = 100; }
			                format(string, sizeof(string), "* You refilled your car with %d%, for $%d by ∆˚≥µ–ﬁ¿Ìπ§ %s.",fuel,RefillPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* You refilled %s's car with %d%, the $%d has been added to your PayCheck.",sendername,fuel,RefillPrice[playerid]);
							SendClientMessage(RefillOffer[playerid], COLOR_WHITE, string);
							PlayerInfo[RefillOffer[playerid]][pPayCheck] += RefillPrice[playerid] * 5;
							SafeGivePlayerMoney(playerid, -RefillPrice[playerid]);
							if(Gas[car] < 110) { Gas[car] += fuel; }
					        RefillOffer[playerid] = 999;
							RefillPrice[playerid] = 0;
							return 1;
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Refill !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À offered to Refill your Car !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"live",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "* You are frozen till the Live Conversation ends.");
							SendClientMessage(LiveOffer[playerid], COLOR_WHITE, "* You are frozen till the Live Conversation ends ( π”√ /live again).");
							TogglePlayerControllable(playerid, 0);
							TogglePlayerControllable(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You are to far away from the News Reporter !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   √ª»À gave you a Live Conversation offer !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"lawyer",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /accept lawyer [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (gTeam[playerid] == 2)
				{
				    if(IsPlayerConnected(giveplayerid))
				    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
 			            	if(PlayerInfo[playerid][pJob] == 2)//if(PlayerInfo[giveplayerid][pJob] == 2)
				            {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								format(string, sizeof(string), "* ƒ„»›–Ì±£ Õ%s’‚∏ˆÕÊº“.( π”√ /free±£ Õ’‚∏ˆÕÊº“)", giveplayer);
								SendClientMessage(playerid, COLOR_WHITE,string);
								format(string, sizeof(string), "* æ¸πŸ %s ≈˙◊º¬… ¶±£ Õƒ„¡À.", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE,string);
								ApprovedLawyer[playerid] = 1;
								//ApprovedLawyer[giveplayerid] = 1;
							    return 1;
							}
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Œﬁ–ßµƒ≤Ÿ◊˜!(ƒ„≤ª «“ª√˚¬… ¶/√ª”–”√∫œ‘º)");
				    return 1;
				}
			}
			else if(strcmp(x_job,"bodyguard",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));

							format(string, sizeof(string), "* You accepted the Protection for $%d from ±£Ô⁄ %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s accepted your Protection, and the $%d was added to your PayCheck.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_WHITE, string);
							PlayerInfo[GuardOffer[playerid]][pPayCheck] += GuardPrice[playerid] * 5;
							SafeGivePlayerMoney(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Protection !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   √ª»À offerd you any Protection !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"drugs",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrugs] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You bought %d gram for $%d from ∂æ∑∑ %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your %d gram, the $%d was added to your PayCheck.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid] * 5;
								PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
								SafeGivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∂æ∑∑µ»º∂œ÷‘⁄ « 2, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∂æ∑∑µ»º∂œ÷‘⁄ « 3, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∂æ∑∑µ»º∂œ÷‘⁄ « 4, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∂æ∑∑µ»º∂œ÷‘⁄ « 5, you can buy more Grams and Cheaper."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You are fully loaded with Drugs, use them first !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford those Drugs !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   √ª»À offerd you any Drugs !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"ownablecar",true) == 0)
			{
			    if(OwnableCarOffer[playerid] < 999)
			    {
			        if(OwnableCarID[playerid] == 0) { return 1; }
			        if(OwnableCarPrice[playerid] == 0 || OwnableCarPrice[playerid] > 1500001) { return 1; }
			        
			        if(OwnableCarID[playerid] == PlayerInfo[OwnableCarOffer[playerid]][pPcarkey]) { }
			        else if(OwnableCarID[playerid] == PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2]) { }
			        else { SendClientMessage(playerid, COLOR_GREY, "  Offer is no longer available"); return 1; }

			        if(GetPlayerMoney(playerid) >= OwnableCarPrice[playerid])
			        {
						if(IsPlayerConnected(OwnableCarOffer[playerid]))
						{
						    GetPlayerName(OwnableCarOffer[playerid], giveplayer, sizeof(giveplayer));
						    
						    if(PlayerInfo[playerid][pPcarkey] == 9999)
							{
								if(GetPlayerVehicleID(OwnableCarOffer[playerid]) == PlayerInfo[OwnableCarOffer[playerid]][pPcarkey])
								{
									PlayerInfo[playerid][pPcarkey] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey];
						    		PlayerInfo[OwnableCarOffer[playerid]][pPcarkey] = 9999;
								}
								else if(GetPlayerVehicleID(OwnableCarOffer[playerid]) == PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2])
								{
									PlayerInfo[playerid][pPcarkey] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2];
						    		PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2] = 9999;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "  Vehicle seller needs to be at his car !");
									return 1;
								}
								format(string, sizeof(string), "* You bought a car for $%d from %s.",OwnableCarPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your car for $%d.",sendername,OwnableCarPrice[playerid]);
								SendClientMessage(OwnableCarOffer[playerid], COLOR_WHITE, string);
						    	SafeRemovePlayerFromVehicle(OwnableCarOffer[playerid]);
						    	SafeGivePlayerMoney(playerid, - OwnableCarPrice[playerid]);
						    	SafeGivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
						    	strmid(CarInfo[OwnableCarID[playerid]][cOwner], sendername, 0, strlen(sendername), 999);
							}
							else if(PlayerInfo[playerid][pPcarkey2] == 9999)
							{
							    if(GetPlayerVehicleID(OwnableCarOffer[playerid]) == PlayerInfo[OwnableCarOffer[playerid]][pPcarkey])
								{
									PlayerInfo[playerid][pPcarkey2] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey];
						    		PlayerInfo[OwnableCarOffer[playerid]][pPcarkey] = 9999;
								}
								else if(GetPlayerVehicleID(OwnableCarOffer[playerid]) == PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2])
								{
									PlayerInfo[playerid][pPcarkey2] = PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2];
						    		PlayerInfo[OwnableCarOffer[playerid]][pPcarkey2] = 9999;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "  Vehicle seller needs to be at his car !");
									return 1;
								}
								format(string, sizeof(string), "* You bought a car for $%d from %s.",OwnableCarPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your car for $%d.",sendername,OwnableCarPrice[playerid]);
								SendClientMessage(OwnableCarOffer[playerid], COLOR_WHITE, string);
						    	RemovePlayerFromVehicle(OwnableCarOffer[playerid]);
						    	SafeGivePlayerMoney(playerid, - OwnableCarPrice[playerid]);
						    	SafeGivePlayerMoney(OwnableCarOffer[playerid], OwnableCarPrice[playerid]);
						    	strmid(CarInfo[OwnableCarID[playerid]][cOwner], sendername, 0, strlen(sendername), 999);
							}
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "  You already have 2 cars ! ");
						        return 1;
							}
							OnPropUpdate(4,OwnableCarOffer[playerid]);
							OnPlayerUpdateEx(playerid);
							OnPlayerUpdateEx(OwnableCarOffer[playerid]);
						    OwnableCarOffer[playerid] = 999;
							OwnableCarID[playerid] = 0;
							OwnableCarPrice[playerid] = 0;
							GameTextForPlayer(playerid, "~w~Congratulations~n~Don't forget to /v park it!", 5000, 3);
							SendClientMessage(playerid, COLOR_GRAD2, "πßœ≤ƒ„!");
							SendClientMessage(playerid, COLOR_GRAD2, "º¸»Î /vehiclemanual ≤Èø¥∆˚≥µ π”√ ÷≤·!");
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Car seller is Offline !");
			        		return 1;
						}
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   √ª»À offerd you any Ownable Car !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"license",true) == 0)
			{
			    if(LicenseOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > LicensePrice[playerid])
				    {
				        /*if(PlayerInfo[playerid][pDrugs] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You bought %d gram for $%d from Drug Dealer %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s has bought your %d gram, the $%d was added to your PayCheck.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid] * 5;
								PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
								SafeGivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealerµ»º∂œ÷‘⁄ « 2, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealerµ»º∂œ÷‘⁄ « 3, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealerµ»º∂œ÷‘⁄ « 4, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealerµ»º∂œ÷‘⁄ « 5, you can buy more Grams and Cheaper."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You are fully loaded with Drugs, use them first !");
						    return 1;
						}*/
						if(LicenseType[playerid] == 0 || LicenseType[playerid] > 5)
						{
						    return 1;
						}
						if(IsPlayerConnected(LicenseOffer[playerid]))
						{
						    GetPlayerName(LicenseOffer[playerid], giveplayer, sizeof(giveplayer));

							if(LicenseType[playerid] == 1)
							{
							    if(PlayerInfo[playerid][pCarLic] == 1)
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   You have drivers license already.");
							    }
							    else
							    {
							    	format(string, sizeof(string), "* You bought Drivers License for $%d from ∏®µº‘± %s.",LicensePrice[playerid],giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* %s has bought your Drivers License for $%d and it was added to your PayCheck.",sendername,LicensePrice[playerid]);
									SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
									PlayerInfo[playerid][pCarLic] = 1;
									SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
									PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
								}
							}
							if(LicenseType[playerid] == 2)
							{
							    if(PlayerInfo[playerid][pFlyLic] == 1)
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   You have flying license already.");
							    }
							    else
							    {
							    	format(string, sizeof(string), "* You bought Flying License for $%d from ∏®µº‘± %s.",LicensePrice[playerid],giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* %s has bought your Flying License for $%d and it was added to your PayCheck.",sendername,LicensePrice[playerid]);
									SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
									PlayerInfo[playerid][pFlyLic] = 1;
									SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
									PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
								}
							}
							if(LicenseType[playerid] == 3)
							{
							    if(PlayerInfo[playerid][pBoatLic] == 1)
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   You have Sailing license already.");
							    }
							    else
							    {
							    	format(string, sizeof(string), "* You bought Sailing License for $%d from ∏®µº‘± %s.",LicensePrice[playerid],giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* %s has bought your Sailing License for $%d and it was added to your PayCheck.",sendername,LicensePrice[playerid]);
									SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
									PlayerInfo[playerid][pBoatLic] = 1;
									SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
									PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
								}
							}
							if(LicenseType[playerid] == 4)
							{
							    if(PlayerInfo[playerid][pFishLic] == 1)
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   You have Fishing license already.");
							    }
							    else
							    {
							    	format(string, sizeof(string), "* You bought Fishing License for $%d from ∏®µº‘± %s.",LicensePrice[playerid],giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* %s has bought your Fishing License for $%d and it was added to your PayCheck.",sendername,LicensePrice[playerid]);
									SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
									PlayerInfo[playerid][pFishLic] = 1;
									SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
									PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
								}
							}
							if(LicenseType[playerid] == 5)
							{
							    if(PlayerInfo[playerid][pGunLic] == 1)
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   You have Weapon license already.");
								}
								else
								{
							    	format(string, sizeof(string), "* You bought Weapon License for $%d from ∏®µº‘± %s.",LicensePrice[playerid],giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									format(string, sizeof(string), "* %s has bought your Weapon License for $%d and it was added to your PayCheck.",sendername,LicensePrice[playerid]);
									SendClientMessage(LicenseOffer[playerid], COLOR_WHITE, string);
									PlayerInfo[playerid][pGunLic] = 1;
									SafeGivePlayerMoney(playerid, -LicensePrice[playerid]);
									PlayerInfo[LicenseOffer[playerid]][pPayCheck] += LicensePrice[playerid] * 5;
								}
							}
							LicenseOffer[playerid] = 999;
							LicensePrice[playerid] = 0;
							LicenseType[playerid] = 0;
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford that License !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   √ª»À offerd you any License !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"sex",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You had sex with ºÀ≈Æ %s, for $%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s had sex with you, the $%d was added to your PayCheck.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[SexOffer[playerid]][pPayCheck] += SexPrice[playerid] * 5;
								SafeGivePlayerMoney(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ƒ„µƒSexµ»º∂œ÷‘⁄ « 2, you offer better Sex (health) and less chance on STD."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ƒ„µƒSexµ»º∂œ÷‘⁄ « 3, you offer better Sex (health) and less chance on STD."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ƒ„µƒSexµ»º∂œ÷‘⁄ « 4, you offer better Sex (health) and less chance on STD."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* ƒ„µƒSexµ»º∂œ÷‘⁄ « 5, you offer better Sex (health) and less chance on STD."); }
								if(STDPlayer[playerid] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 30.0); }
											new rand = random(sizeof(STD1));
											STDPlayer[playerid] = STD1[rand];
											STDPlayer[SexOffer[playerid]] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + a “¬‘≠ÃÂ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a “¬‘≠ÃÂ because of the Sex."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + a ¡‹≤° because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a ¡‹≤° because of the Sex."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 30 Health + a √∑∂æ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a √∑∂æ because of the Sex."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 60.0); }
											new rand = random(sizeof(STD2));
											STDPlayer[playerid] = STD2[rand];
											STDPlayer[SexOffer[playerid]] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + a “¬‘≠ÃÂ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a “¬‘≠ÃÂ because of the Sex."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + a ¡‹≤° because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a ¡‹≤° because of the Sex."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 60 Health + a √∑∂æ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a √∑∂æ because of the Sex."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 90.0); }
											new rand = random(sizeof(STD3));
											STDPlayer[playerid] = STD3[rand];
											STDPlayer[SexOffer[playerid]] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + a “¬‘≠ÃÂ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a “¬‘≠ÃÂ because of the Sex."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + a ¡‹≤° because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a ¡‹≤° because of the Sex."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 90 Health + a √∑∂æ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a √∑∂æ because of the Sex."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 120.0); }
											new rand = random(sizeof(STD4));
											STDPlayer[playerid] = STD4[rand];
											STDPlayer[SexOffer[playerid]] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You haven't got a STD while having Sex."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + a “¬‘≠ÃÂ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a “¬‘≠ÃÂ because of the Sex."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + a ¡‹≤° because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a ¡‹≤° because of the Sex."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_WHITE, "* You got 120 Health + a √∑∂æ because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* You got a √∑∂æ because of the Sex."); }
										}
										else if(level >= 401)
										{
										    if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 150.0); }
											SendClientMessage(playerid, COLOR_WHITE, "* ƒ„µƒSex Skill Level is so high you gave high health and No STD.");
											SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* The ºÀ≈Æ's Sex Skill Level is so high you got high health and No STD.");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_WHITE, "* The player used a Condom.");
									    SendClientMessage(playerid, COLOR_WHITE, "* You used a Condom.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_GREY, "* That player was already infected with a STD, can't get another one.");
								    return 1;
								}
								SexOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   You or the ºÀ≈Æ are not both in a Car !");
							    return 1;
							}
						}//Connected or not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Sex!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You dont have any Sex offerd by a ºÀ≈Æ !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"repair",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));

						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
								format(string, sizeof(string), "* You repaired your car for $%d by ∆˚≥µ–ﬁ¿Ìπ§ %s.",RepairPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* You fixed %s's car, the $%d has been added to your PayCheck.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_WHITE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 2, you can add more Fuel to any Players Cars."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 3, you can add more Fuel to any Players Cars."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 4, you can add more Fuel to any Players Cars."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* ƒ„µƒ∆˚≥µ–ﬁ¿Ìπ§µ»º∂œ÷‘⁄ « 5, you can add more Fuel to any Players Cars."); }
								PlayerInfo[RepairOffer[playerid]][pPayCheck] += RepairPrice[playerid] * 5;
								SafeGivePlayerMoney(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Repair !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   √ª»À offerd you to Repair your Car !");
			        return 1;
			    }
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚∆˚≥µ–ﬁ¿Ìπ§!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /refill [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't do that!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

					    format(string, sizeof(string), "* You offerd %s to refill his car for $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* ∆˚≥µ–ﬁ¿Ìπ§ %s wants to refill your car for $%d, (º¸»Î /accept refill) to accept.",sendername,money);
						SendClientMessage(playa, COLOR_WHITE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ / not in a car.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/repair", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚∆˚≥µ–ﬁ¿Ìπ§!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /repair [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't do that!"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));

					    format(string, sizeof(string), "* You offerd %s to fix his car for $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* ∆˚≥µ–ﬁ¿Ìπ§ %s wants to repair your car for $%d, (º¸»Î /accept repair) to accept.",sendername,money);
						SendClientMessage(playa, COLOR_WHITE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ / not in a car.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/callcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(CarCalls[playerid] > 0)
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
	            GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz);
				SendClientMessage(playerid, COLOR_WHITE, "* Bought Car has arrived.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* You can call your Bought Car for %d times more.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_WHITE, string);
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Invalid action !");
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0 || strcmp(cmd, "/faction", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
				return 1;
			}

			new year, month, day;
			new hour, minute, second;
			gettime(hour,minute,second);
			getdate(day,month,year);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[128];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: (/f)action [faction chat]");
				return 1;
			}
			if (PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pFMember] < 255)
			{
			    new leader = PlayerInfo[playerid][pLeader];
			    new member = PlayerInfo[playerid][pMember];
			    if(member==1)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( æ÷≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( ∏±æ÷≥§ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( ∏ﬂº∂∂Ω≤Ï %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ∂Ω≤Ï %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( æØ≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( —≤æØ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( ΩªæØ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( —ßæØ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( —ßæØ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==2)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( æ÷≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( ∏±æ÷≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( æ÷≥§÷˙¿Ì %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Division Cheif %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Ãÿ±ÃΩ‘±∏∫‘»À %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Ãÿ±ÃΩ‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Ãÿπ§ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( FBI —ßæØ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( FBI —ßæØ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==3)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( …œΩ´ %s: %s )) **", sendername, result); }
			        else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( ∏±…œΩ´ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( …œŒæ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ÷–Œæ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( …Ÿ–£ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( æ¸ ø %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ((  ø±¯ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( ¡–±¯ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( ¡–±¯ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==4)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆‘∫≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆∏±‘∫≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆÷–Œæ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆…œŒæ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( «¿æ»“Ω¡∆∑˛ŒÒ“Ω…˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( ª˘±æ«¿æ»“Ω¡∆“Ω…˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆ µœ∞…˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆ª§¿Ì %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆ª§¿Ì %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==12)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( FD ‘∫≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( ‘∫≥§÷˙¿Ì %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( …œŒæ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Lieuteantn %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Àæª˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( œ˚∑¿‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ((  µœ∞…˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( µ˜≤È‘± %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( µ˜≤È‘± %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==5)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Corona %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Mano derecha %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Proscrito %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Miembro %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Asociado %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Forastero %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( Forastero %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
			    }
			    if(member==6)
			    {
			        if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( Capo Crimini %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Capo Bastone %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Consiglieri %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Capo Regime %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Sgarrista %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Piciotto %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Giovane D'honore %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Õ‚»À %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( Õ‚»À %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==7)
				{
					if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ((  –≥§ %s: %s )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ((  –≥§÷˙¿Ì %s: %s )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ((  –≥§µƒ±£Œ¿ø∆≥§ %s: %s )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ((  –≥§÷˜Àæª˙ %s: %s )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ((  –≥§±£Ô⁄ %s: %s )) **", sendername, result); }
				    else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ((  –≥§Àæª˙ %s: %s )) **", sendername, result); }
				    else { format(string, sizeof(string), "** ((  –≥§Àæª˙ %s: %s )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==8)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( æ÷≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ∏±æ÷≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Ãÿ±ÃΩ‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Agent %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( …Ò«π ÷…± ÷ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( ◊‘”……± ÷ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( ◊‘”……± ÷ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==9)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( √¿π˙π„≤•π´Àæ∂≠ ¬≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( √¿π˙π„≤•π´Àææ≠¿Ì %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( π´Àæ√ÿ È %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( º«’ﬂ◊‹π‹ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( º«’ﬂ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ((  µœ∞π§◊˜»À‘± %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ((  µœ∞π§◊˜»À‘± %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==10)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( ≥ˆ◊‚≥µπ´Àæ“µ÷˜ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ÷µ∞‡æ≠¿Ì %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( µ˜∂»‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( ≥ˆ◊‚≥µÀæª˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( ≥ˆ◊‚≥µ–¬ ÷ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ((  µœ∞…˙ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ((  µœ∞…˙ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==11)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( ¿œ∞Â %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ∏±¿œ∞Â %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( æ≠¿Ì %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( ∏ﬂº∂∏®µº‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( ∏®µº‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ((  µœ∞…˙ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ((  µœ∞…˙ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==12)
				{
				    if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( FD ‘∫≥§ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( ‘∫≥§÷˙¿Ì %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( FD …œŒæ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( FD ÷–Œæ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Àæª˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( œ˚∑¿‘± %s: %s ))  **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ((  µœ∞…˙ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( µ˜≤È‘± %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( µ˜≤È‘± %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==13)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Father of Anarchy %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Son of Anarchy %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( ∏ﬂº∂≥…‘± %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( ±©ÕΩ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Rider of Fight %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( –°µ‹ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( –°µ‹ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==14)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Don %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Don's right hand %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( –°Õ∑ƒø %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Shatei %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Wakashu %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Gaij in %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( Gaij in %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==15)
				{
				    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Don %s: %s )) **", sendername, result); }
                    else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Pakhan %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ∏±¿œ¥Û %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( –°Õ∑ƒø %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Byki %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Patsani %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Shestiorka  %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( Shestiorka %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(member==16)
				{
        			if(PlayerInfo[playerid][pRank] == 9) { format(string, sizeof(string), "** (( ¿œ∞Â %s: %s )) **", sendername, result); }
			        else if(PlayerInfo[playerid][pRank] == 8) { format(string, sizeof(string), "** (( Lower Boss %s: %s )) **", sendername, result); }
			        else if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** (( Elite Advisor %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( Loyal Advisor %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( Advisor %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( Made Man %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (( Elite Member %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Loyal Member %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Member %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( Member %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x7BDDA5AA, string);
				}
				else if(leader==1)
				{
				    format(string, sizeof(string), "** (( ≥§πŸ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==2)
				{
				    format(string, sizeof(string), "** (( æ÷≥§ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==3)
				{
				    format(string, sizeof(string), "** (( …œΩ´ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==4)
				{
				    format(string, sizeof(string), "** (( æ»‘Æ“Ω¡∆‘∫≥§ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==5)
				{
				    format(string, sizeof(string), "** (( Jefe %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==6)
				{
				    format(string, sizeof(string), "** (( ΩÃ∏∏ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==7)
				{
				    format(string, sizeof(string), "** ((  –≥§ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==8)
				{
				    format(string, sizeof(string), "** (( æ÷≥§ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==9)
				{
				    format(string, sizeof(string), "** (( √¿π˙π„≤•π´Àæ∂≠ ¬≥§ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==10)
				{
				    format(string, sizeof(string), "** (( ≥ˆ◊‚≥µπ´Àæ“µ÷˜ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==11)
				{
				    format(string, sizeof(string), "** (( ¿œ∞Â %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==12)
				{
				    format(string, sizeof(string), "** (( FD ‘∫≥§ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==13)
				{
				    format(string, sizeof(string), "** (( Father of Anarchy %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==14)
				{
				    format(string, sizeof(string), "** (( Don %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==15)
				{
				    format(string, sizeof(string), "** (( Don %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(leader==16)
				{
				    format(string, sizeof(string), "** (( Boss %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x7BDDA5AA, string);
				}
				else if(PlayerInfo[playerid][pFMember] < 255)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (( ΩÃ∏∏ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (( ∏±¿œ¥Û %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (( –°Õ∑ƒø %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ((  ø±¯ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (( Õ¨∞È %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (( Õ‚»À %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** (( Õ‚»À %s: %s )) **", sendername, result); }
					SendNewFamilyMessage(PlayerInfo[playerid][pFMember], 0x7BDDA5AA, string);
				}
				printf("%s", string);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Family): (%s)",day,month,year,hour,minute,second,sendername,result);
				FamilyChatLog(string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   you are not part of a Family!");
				return 1;
			}
		}//not connected
		return 1;
	}
	if (strcmp(cmd, "/familylist", true) == 0 || strcmp(cmd, "/flist", true) == 0 || strcmp(cmd, "/factionlist", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "PD æ¸πŸs online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** ≥§πŸ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** ∏±æ÷≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
                            }
							else if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** …œŒæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
			                }
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ÷–Œæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** æ¸ ø ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** œ¬ ø ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Police æ¸πŸ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** —ßæØ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** —ßæØ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "FBI online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 2 || PlayerInfo[i][pLeader] == 2)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** æ÷≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** ∏±æ÷≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** Assistant of Driector ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ø∆≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** Ãÿ±ÃΩ‘±∏∫‘»À ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Ãÿ±ÃΩ‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Ãÿπ§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** —ßæØ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** —ßæØ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "National Guards online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** …œΩ´ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** ∏±…œΩ´ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** …œŒæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ÷–Œæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** …Ÿ–£ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** æ¸ ø ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "**  ø±¯ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** ¡–±¯ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** ¡–±¯ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Paramedics online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 4 || PlayerInfo[i][pLeader] == 4)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆‘∫≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆∏±‘∫≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
    	        			else if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆÷–Œæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆…œŒæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** «¿æ»“Ω¡∆∑˛ŒÒ“Ω…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** ª˘±æ«¿æ»“Ω¡∆“Ω…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆ µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆ª§¿Ì ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** æ»‘Æ“Ω¡∆ª§¿Ì ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
	        if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Gang members online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 5 || PlayerInfo[i][pLeader] == 5)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** ΩÃ∏∏ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ∏±¿œ¥Û ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** –°Õ∑ƒø ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "**  ø±¯ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Õ¨∞È ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** Õ‚»À ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** Õ‚»À ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Family members online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 6 || PlayerInfo[i][pLeader] == 6)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** Capo Crimini ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** Capo Bastone ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** Consiglieri ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
			                }
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** Capo Regime ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** Sgarrista ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Piciotto ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Giovane D'honore ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** Õ‚»À ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** Õ‚»À ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Government online:");
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 7 || PlayerInfo[i][pLeader] == 7)
				    	{
				    	    if(PlayerInfo[i][pRank] == 6)
				    	    {
				    	        format(string, 256, "**  –≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	    else if(PlayerInfo[i][pRank] == 5)
				    	    {
				    	        format(string, 256, "**  –≥§÷˙¿Ì ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	    else if(PlayerInfo[i][pRank] == 4)
				    	    {
				    	        format(string, 256, "** ±£Œ¿ø∆≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	    else if(PlayerInfo[i][pRank] == 3)
				    	    {
				    	        format(string, 256, "** ÷˜Àæª˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	    else if(PlayerInfo[i][pRank] == 2)
				    	    {
				    	        format(string, 256, "** ±£Ô⁄ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	    else if(PlayerInfo[i][pRank] == 1)
				    	    {
				    	        format(string, 256, "** Àæª˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	    else
				    	    {
				    	        format(string, 256, "** …–Œ¥∑÷≈‰÷∞ŒÒ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
				    	    }
				    	}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Hitmans online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 8 || PlayerInfo[i][pLeader] == 8)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** æ÷≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ∏±æ÷≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** Ãÿ±ÃΩ‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Ãÿπ§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** …Ò«π ÷…± ÷ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** ◊‘”……± ÷ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** ◊‘”……± ÷ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "News Reporters online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pLeader] == 9)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** √¿π˙π„≤•π´Àæ∂≠ ¬≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** Network Editor ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** Network Anchor ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Local Editor ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Local Reporter ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Taxi drivers online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 10 || PlayerInfo[i][pLeader] == 10)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** ≥ˆ◊‚≥µπ´Àæ“µ÷˜ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ÷µ∞‡æ≠¿Ì ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** µ˜∂»‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** ≥ˆ◊‚≥µÀæª˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** ≥ˆ◊‚≥µ–¬ ÷ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Licensers online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 11 || PlayerInfo[i][pLeader] == 11)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** ¿œ∞Â ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ∏±¿œ∞Â ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** æ≠¿Ì ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** ∏ﬂº∂∏®µº‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** ∏®µº‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Firemen online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 12 || PlayerInfo[i][pLeader] == 12)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** FD ‘∫≥§ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						 	if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** ‘∫≥§÷˙¿Ì ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						 	if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** FD …œŒæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** FD ÷–Œæ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** Àæª˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** œ˚∑¿‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "**  µœ∞…˙ ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** µ˜≤È‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** µ˜≤È‘± ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Gang members online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 14 || PlayerInfo[i][pLeader] == 14)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** Don ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** Don's right hand ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** –°Õ∑ƒø ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Shatei ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Wakashu ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** Gaij In ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** Gaij in ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Mafia members online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 15 || PlayerInfo[i][pLeader] == 15)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** Don ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** Pakhan ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
			                }
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** ∏±¿œ¥Û ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** –°Õ∑ƒø ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Byki ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Patsani ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** Shestiorka ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** Shestiorka ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
	        {
				SendClientMessage(playerid, COLOR_GRAD1, "Gang members online:");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
				    	if(PlayerInfo[i][pMember] == 16 || PlayerInfo[i][pLeader] == 16)
				    	{
				    	    GetPlayerName(i, sendername, sizeof(sendername));
				    	    if(PlayerInfo[i][pRank] == 9)
							{
				    	        format(string, 256, "** ¿œ∞Â ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 8)
							{
				    	        format(string, 256, "** Lower Boss ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 7)
							{
				    	        format(string, 256, "** Elite Advisor ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 6)
							{
				    	        format(string, 256, "** Loyal Advisor ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
			                }
							else if(PlayerInfo[i][pRank] == 5)
							{
				    	        format(string, 256, "** Advisor ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 4)
							{
				    	        format(string, 256, "** Made Man ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 3)
							{
				    	        format(string, 256, "** Elite Member ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 2)
							{
				    	        format(string, 256, "** Loyal Member ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else if(PlayerInfo[i][pRank] == 1)
							{
				    	        format(string, 256, "** Member ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
							else
							{
				    	        format(string, 256, "** Dumb Hoe ** %s", sendername);
							    SendClientMessage(playerid, COLOR_GRAD2, string);
							}
						}
					}
				}
			}
			else { SendClientMessage(playerid, COLOR_GRAD2, "You're not in the family/organisation."); }
		}
		return 1;
	}
	if(strcmp(cmd, "/news", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
		        if(PlayerInfo[playerid][pMuted] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
					return 1;
				}
				new counter = 0;
    			for(new i = 71; i <= 73; i++)
    			{
    			    new dist = CheckPlayerDistanceToVehicle(7, playerid, i);
    			    if(dist)
    			    {
    			        counter++;
    			    }
    			}
    			if(counter == 0)
    			{
					SendClientMessage(playerid, COLOR_GREY, "   You're not near/in your news van/chopper !");
					return 1;
    			}
    			else
    			{

					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[128];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /news [newstext]");
						return 1;
					}
					new rtext[64];
					if(PlayerInfo[playerid][pRank] == 1) { rtext = " µœ∞π§◊˜»À‘±"; }
					else if(PlayerInfo[playerid][pRank] == 2) { rtext = "º«’ﬂ"; }
					else if(PlayerInfo[playerid][pRank] == 3) { rtext = "º«’ﬂ◊‹π‹"; }
					else if(PlayerInfo[playerid][pRank] == 4) { rtext = "π´Àæ√ÿ È"; }
					else if(PlayerInfo[playerid][pRank] == 5) { rtext = "√¿π˙π„≤•π´Àææ≠¿Ì"; }
		    		else if(PlayerInfo[playerid][pRank] == 6) { rtext = "√¿π˙π„≤•π´Àæ∂≠ ¬≥§"; }
					else { rtext = " µœ∞π§◊˜»À‘±"; }
					format(string, sizeof(string), "[ABC News] %s %s: %s", rtext, sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒNews Reporterµ»º∂œ÷‘⁄ « 2, soon you are able to Fly the News Chopper and talk Live."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒNews Reporterµ»º∂œ÷‘⁄ « 3, soon you are able to Fly the News Chopper and talk Live."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒNews Reporterµ»º∂œ÷‘⁄ « 4, you can fly the News Chopper now."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* ƒ„µƒNews Reporterµ»º∂œ÷‘⁄ « 5, you can now talk Live with any person you want."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚News Reporter !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/live", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* Live Conversation ended.");
			        SendClientMessage(TalkingLive[playerid], COLOR_WHITE, "* Live Conversation ended.");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(PlayerInfo[playerid][pNewsSkill] < 50)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Your News Reporter Skill is to low to talk Live with people !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /live [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Talk Live with yourself!"); return 1; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

							format(string, sizeof(string), "* You offered %s to have a Live Conversation.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s offered you to have a Live Conversation, º¸»Î (/accept live) to accept.", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You are to far away from that player !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚News Reporter !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚∂æ∑∑!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /selldrugs [ÕÊº“ID/ÕÊº“√˚◊÷] [ammount] [º€∏Ò]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Grams not lower then 1, or above 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡ Drugs with you!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Cant sell to yourself!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

					    format(string, sizeof(string), "* You offerd %s to buy %d gram of drugs for $%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* ∂æ∑∑ %s wants to sell you %d gram for $%d, (º¸»Î /accept drugs) to buy.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸!");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ.");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/selldrugsto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 20)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   ƒ„≤ª «“ª√˚∂æ∆∑◊ﬂÀΩ∑∑!");
				return 1;
		    }
		    if(!IsPlayerInRangeOfPoint(playerid, 15,1484.3933,-1731.2124,6.7213))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You are not at black market!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /selldrugsto [ÕÊº“ID/ÕÊº“√˚◊÷] [ammount] [º€∏Ò]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Grams not lower then 1, or above 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   ƒ„√ª”–ƒ«√¥∂‡ Drugs with you !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Cant sell to yourself!");
					        return 1;
					    }
					    if(PlayerInfo[playa][pJob] != 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "You can sell drugs only to drugs dealers!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

					    format(string, sizeof(string), "* You offerd %s to buy %d gram of drugs for $%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* Drug Smuggler %s wants to sell you %d gram for $%d, (º¸»Î /accept drugs) to buy.", sendername, needed, money);
						SendClientMessage(playa, COLOR_WHITE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ’‚∏ˆÕÊº“≤ª‘⁄œﬂ.");
			}
		}
		return 1;
    }
    /*if(strcmp(cmdtext, "/usedrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Cant use Drugs while you are fighting !");
	            return 1;
	        }
	        if(UsingDrugs[playerid] == 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are high already !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrugs] > 1)
			{
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid, PlayersArmour);
			    if(PlayerInfo[playerid][pDrugPerk] > 0)
			    {
			        SafeSetPlayerArmour(playerid, PlayersArmour + 10.0);
			    }
			    SendClientMessage(playerid, COLOR_GREY, "   2 Drug Grams used !");
			    PlayerInfo[playerid][pDrugs] -= 2;
			    SafeSetPlayerArmour(playerid, PlayersArmour + 6.0);
			    SetPlayerWeather(playerid, -68);
			    UsingDrugs[playerid] = 1;
			    //SetTimer("DrugEffectGone", 25000, 0);
			    SetTimerEx("DrugEffectGone", 25000, false, "i", playerid);
			    if(STDPlayer[playerid]==1)
				{
				     STDPlayer[playerid] = 0;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are no longer infected with a STD anymore because of the Drugs !");
				}
				else if(STDPlayer[playerid]==2)
				{
				     STDPlayer[playerid] = 1;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You lowered the STD to Chlamydia because of the Drugs !");
				}
				else if(STDPlayer[playerid]==3)
				{
				     STDPlayer[playerid] = 2;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You lowered the STD to Gonorrhea because of the Drugs !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You dont have any Drug Grams left !");
			}
		}//not connected
		return 1;
	}*/
	if(strcmp(cmd, "/usedrugs", true) == 0) // Drug system
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** Cant use Drugs while you are fighting !");
	            return 1;
	        }
	        if(UsingDrugs[playerid] == 1)
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "** You are high already !");
	            return 1;
	        }
	        new x_nr[24];
	        x_nr = strtok(cmdtext, idx);
	        if(!strlen(x_nr))
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /usedrugs [name]");
	            SendClientMessage(playerid, COLOR_WHITE, "ø…”√√˚≥∆: weed, heroin");
	            return 1;
	        }
	        if(strcmp(x_nr,"weed",true) == 0)
	        {
	            if(PlayerInfo[playerid][pDrugs] > 1)
	            {
	                PlayerStoned[playerid] += 1;
	                if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
	                new Float:PlayersArmour;
	                GetPlayerArmour(playerid, PlayersArmour);
	                if(PlayerInfo[playerid][pDrugPerk] > 0)
			    	{
			        	SafeSetPlayerArmour(playerid, PlayersArmour + 10.0);
			    	}
			    	PlayerInfo[playerid][pDrugs] -= 2;
			    	SafeSetPlayerArmour(playerid, PlayersArmour + 10.0);
			    	SetPlayerWeather(playerid, 2230);
			    	UsingDrugs[playerid] = 1;
			    	
			    	SetTimerEx("DrugEffectGone", 10000, false, "i", playerid);
			    	SetTimerEx("UsingDrugsUnset", 50000, false, "i", playerid);

			    	format(string, sizeof(string), "* %s takes some weed from his jacket and starts smoking.", sendername);
			    	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			    	ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
			    	if(STDPlayer[playerid]==1)
					{
				    	STDPlayer[playerid] = 0;
				    	SendClientMessage(playerid, COLOR_WHITE, "* You are no longer infected with a STD anymore because of the Drugs !");
					}
					else if(STDPlayer[playerid]==2)
					{
    					STDPlayer[playerid] = 1;
				    	SendClientMessage(playerid, COLOR_WHITE, "* You lowered the STD to “¬‘≠ÃÂ because of the Drugs !");
					}
					else if(STDPlayer[playerid]==3)
					{
				    	STDPlayer[playerid] = 2;
				    	SendClientMessage(playerid, COLOR_WHITE, "* You lowered the STD to ¡‹≤° because of the Drugs !");
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** You dont have any Drug Grams left !");
	            }
	        }
	        else if(strcmp(x_nr,"heroin",true) == 0)
	        {
	            if(PlayerInfo[playerid][pDrugs] > 2)
	            {
	                PlayerStoned[playerid] += 1;
	                if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
	                new Float:PlayersArmour;
	                GetPlayerArmour(playerid, PlayersArmour);
	                if(PlayerInfo[playerid][pDrugPerk] > 0)
			    	{
			        	SafeSetPlayerArmour(playerid, PlayersArmour + 15.0);
			    	}
			    	PlayerInfo[playerid][pDrugs] -= 3;
			    	SafeSetPlayerArmour(playerid, PlayersArmour + 15.0);
			    	SetPlayerWeather(playerid, 2238);
			    	UsingDrugs[playerid] = 1;
			    	SetTimerEx("DrugEffectGone", 15000, false, "i", playerid);
			    	SetTimerEx("UsingDrugsUnset", 75000, false, "i", playerid);

			    	format(string, sizeof(string), "* %s uses some heroin.", sendername);
			    	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			    	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
			    	if(STDPlayer[playerid]==1)
					{
				    	STDPlayer[playerid] = 0;
				    	SendClientMessage(playerid, COLOR_WHITE, "* You are no longer infected with a STD anymore because of the Drugs !");
					}
					else if(STDPlayer[playerid]==2)
					{
    					STDPlayer[playerid] = 1;
				    	SendClientMessage(playerid, COLOR_WHITE, "* You lowered the STD to “¬‘≠ÃÂ because of the Drugs !");
					}
					else if(STDPlayer[playerid]==3)
					{
				    	STDPlayer[playerid] = 2;
				    	SendClientMessage(playerid, COLOR_WHITE, "* You lowered the STD to ¡‹≤° because of the Drugs !");
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "** You dont have any Drug Grams left !");
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "”√∑®: /usedrugs [name]");
	            SendClientMessage(playerid, COLOR_WHITE, "Availible names: weed, heroin");
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/healme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (IsPlayerInRangeOfPoint(playerid, 3,349.5560,161.6693,1019.9912)||IsPlayerInRangeOfPoint(playerid, 3,2029.5945,-1404.6426,17.2512))
			{
	            if(STDPlayer[playerid] > 0)
	            {
					STDPlayer[playerid] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "* You are no longer infected with a STD anymore because of the Hospital's help !");
					SafeGivePlayerMoney(playerid, -200);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "“Ω…˙: Your medical bill contained $200,-. Have a nice day!");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "** You dont have a STD to heal !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "** You are not at a Hospital !");
	        }
        }
		return 1;
	}
	if(strcmp(cmd, "/eject", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"** You can only eject people as the driver !");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /eject [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				new i = IsPlayerInEVehicle[playa];
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Eject yourself!"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* You have thrown %s out of the car!", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* You have been thrown out the car by %s !", PName);
							SendClientMessage(playa, COLOR_WHITE, string);
							SafeRemovePlayerFromVehicle(playa);
						}
						else if(IsPlayerInEVehicle[playa] == test)
						{
						    new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* You have thrown %s out of the car!", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* You have been thrown out the car by %s !", PName);
							SendClientMessage(playa, COLOR_WHITE, string);
							new Float:cX,Float:cY,Float:cZ;
						    GetPlayerPos(playa, cX,cY,cZ);
						    if(IsAnEnterableHeli(i) && cZ >= 80)
						    {
						        SafeGivePlayerWeapon(playa, 46, 1);
							}
							else if(IsAnEnterablePlane(i) && cZ >= 80)
						    {
						        SafeGivePlayerWeapon(playa, 46, 1);
							}
						    SafeSetPlayerPos(playa, cX+5,cY,cZ);
						    Seats[i] --;
						    IsPlayerInEVehicle[playa] = 9999;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "** That player is not in your Car !");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "** Invalid ID/Name!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** You need to be in a Vehicle to use this !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sex", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pJob] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "** You can only have Sex in a Car !");
					return 1;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /sex [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot have Sex with yourself!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

								format(string, sizeof(string), "* You offerd %s to have Sex with you, for $%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* ºÀ≈Æ %s has offerd you to have Sex with her, for $%d (º¸»Î /accept sex) to accept.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "** You or the other player must be in a Car together !");
				                return 1;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «“ª√˚ºÀ≈Æ !");
			}
		}//not connected
		return 1;
		}
	if(strcmp(cmd, "/wanted", true) == 0)
	{
	    new string2[128];
	    if(IsPlayerConnected(playerid))
	   	{
  			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
			if(PlayerInfo[playerid][pDuty] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„√ª”–…œ∞‡ƒÿ!");
			    return 1;
			}
			if(IsACop(playerid) || IsAFreecop(playerid))
			{
				new x;
				SendClientMessage(playerid, COLOR_GREEN, "Current Wanted Suspects:");
			    for(new i=0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(WantedLevel[i] > 1)
					    {
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string2, sizeof(string2), "%s %s: %d", string,giveplayer,WantedLevel[i]);
							x++;
							if(x > 3)
							{
							    SendClientMessage(playerid, COLOR_YELLOW, string);
							    x = 0;
								format(string2, sizeof(string2), " ");
							}
							else
							{
								format(string2, sizeof(string2), "%s, ", string);
							}
						}
					}
				}
				if(x <= 3 && x > 0)
				{
					string[strlen(string2)-2] = '.';
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You're not a Cop / FBI / π˙√ÒæØŒ¿∂” !");
			}
		}//not connected
		return 1;
	}
	

	if(strcmp(cmd, "/bail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(GetPlayerMoney(playerid) > JailPrice[playerid])
			        {
			            format(string, sizeof(string), "You bailed yourself out for: $%d", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SafeGivePlayerMoney(playerid, -JailPrice[playerid]);
						JailPrice[playerid] = 0;
						WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "** You can't afford the Bail Price !");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "** You don't have a Bail Price !");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "** You are not in Jail !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/clear", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			new member = PlayerInfo[playerid][pMember];
			new leader = PlayerInfo[playerid][pLeader];
			new rank = PlayerInfo[playerid][pRank];
	 		if(gTeam[playerid] == 2)
			{
				if (!IsPlayerInRangeOfPoint(playerid, 3, 253.9280,69.6094,1003.6406))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "** You are to not inside the Police Station!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /clear [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Clear yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s.", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* æ¸πŸ %s has cleared your Records and Wanted Points.", sendername);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						WantedPoints[giveplayerid] = 0;
						WantedLevel[giveplayerid] = 0;
						ClearCrime(giveplayerid);
						SetPlayerColor (giveplayerid, TEAM_HIT_COLOR);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "** Invalid ID/Name!");
				}
			}
			else if(member == 6||leader == 6)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /clear [ÕÊº“ID/ÕÊº“√˚◊÷]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Clear yourself!"); return 1; }
					    if(rank < 4) { SendClientMessage(playerid, COLOR_GREY, "   You need Rank 4 to clear someone's Wanted Points + Records !"); return 1; }
					    if(GetPlayerMoney(playerid) < 5000) { SendClientMessage(playerid, COLOR_GREY, "   You need $5000 to Clear your Family Member !"); return 1; }
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

					    if(member > 0)
					    {
						    if(PlayerInfo[giveplayerid][pMember] != member)
							{
								SendClientMessage(playerid, COLOR_GREY, "** That player is not in your Family !");
								return 1;
							}
							format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s for $5000.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Family Member %s with Rank %d, has cleared your Records and Wanted Points.", sendername, rank);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
						}
						else if(leader > 0)
						{
			                if(PlayerInfo[giveplayerid][pMember] != leader)
							{
								SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
								return 1;
							}
						    format(string, sizeof(string), "* You cleared the Records and Wanted Points of %s for $5000.", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* Family Leader %s, has cleared your Records and Wanted Points.", sendername);
							SendClientMessage(giveplayerid, COLOR_WHITE, string);
						}
						WantedPoints[giveplayerid] = 0;
						WantedLevel[giveplayerid] = 0;
						ClearCrime(giveplayerid);
						SafeGivePlayerMoney(playerid, - 5000);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "** Invalid ID/Name!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** You are not an Cop / FBI / π˙√ÒæØŒ¿∂” / Family Member !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/ticket", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gTeam[playerid] != 2)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «æØ≤Ï!");
			    return 1;
			}
			if(PlayerInfo[playerid][pDBanned] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    return 1;
			}
	        if(PlayerInfo[playerid][pDuty] != 1 && PlayerInfo[playerid][pMember] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–…œ∞‡!");
			    return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ticket [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ticket [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò] [reason]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Ticket Money can't be below 1 or higher then 99999 !"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));

						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[128];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /ticket [ÕÊº“ID/ÕÊº“√˚◊÷] [º€∏Ò] [reason]");
							return 1;
						}
						format(string, sizeof(string), "* You gave %s a Ticket costing $%d, reason: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* æ¸πŸ %s has given you a Ticket costing $%d, reason: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						SendClientMessage(giveplayerid, COLOR_WHITE, "* º¸»Î /accept ticket, to accept it.");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄ƒ„∏ΩΩ¸ !");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ’‚∏ˆÕÊº“≤ª‘⁄œﬂ !");
			    return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/arrest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid) || IsAFreecop(playerid))
			{
				if(PlayerInfo[playerid][pDuty] == 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–…œ∞‡!");
				    return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}

				if(IsPlayerInRangeOfPoint(playerid, 6, 255.4480,85.8236,1002.4453))
				{//New arrest system æØ≤Ïæ÷

					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /arrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 20000) { SendClientMessage(playerid, COLOR_GREY, "   ∑£øÓ≤ªƒ‹µÕ”⁄ $1 ∏ﬂ”⁄$20000!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /arrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new time = strval(tmp);
					if(time < 5 || time > 30) { SendClientMessage(playerid, COLOR_GREY, "   º‡Ω˚ ±º‰≤ªƒ‹µÕ”⁄ 5 ªÚ¥Û”⁄ 30 ∑÷÷”!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /arrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new bail = strval(tmp);
					if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, " «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /arrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new bailprice = strval(tmp);
					if(bailprice < 1000 || bailprice > 10000) { SendClientMessage(playerid, COLOR_GREY, "** ±£ ÕΩ≤ªƒ‹…Ÿ”⁄1000ªÚ¥Û”⁄10000!"); return 1; }
					new suspect = GetClosestPlayer(playerid);
					if(IsPlayerConnected(suspect))
					{
						if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));

							if(WantedLevel[suspect] < 1)
							{
						    	SendClientMessage(playerid, COLOR_GREY, "** ÕÊº“±ÿ–Î”–Õ®º©!");
						    	return 1;
							}
							format(string, sizeof(string), "* ƒ„±ª¥˛≤∂ %s!", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							SafeGivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "arrested by %s ~n~    for $%d", sendername, moneys);
							GameTextForPlayer(suspect, string, 5000, 5);
							SafeResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
							{
							    new currank[64];
		    					if(PlayerInfo[playerid][pRank] == 1) { currank = "—ßæØ"; }
								else if(PlayerInfo[playerid][pRank] == 2) { currank = "ΩªæØ"; }
								else if(PlayerInfo[playerid][pRank] == 3) { currank = "—≤æØ"; }
								else if(PlayerInfo[playerid][pRank] == 4) { currank = "æØ≥§"; }
								else if(PlayerInfo[playerid][pRank] == 5) { currank = "∂Ω≤Ï"; }
	        					else if(PlayerInfo[playerid][pRank] == 6) { currank = "∏ﬂº∂∂Ω≤Ï"; }
	        					else if(PlayerInfo[playerid][pRank] == 7) { currank = "∏±æ÷≥§"; }
	        					else if(PlayerInfo[playerid][pRank] == 8) { currank = "æ÷≥§"; }
								else { currank = "—ßæØ"; }
								format(string, sizeof(string), "[æØ≤Ï] %s %s ∏’∏’¥˛≤∂¡À %s", currank ,sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
							{
								format(string, sizeof(string), "[æØ≤Ï] Agent %s ∏’∏’¥˛≤∂¡À %s", sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							else if(PlayerInfo[playerid][pMember]==3||PlayerInfo[playerid][pLeader]==3)
							{
								format(string, sizeof(string), "[æØ≤Ï]  ø±¯ %s ∏’∏’¥˛≤∂¡À %s", sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							else if(IsAFreecop(playerid))
							{
							    format(string, sizeof(string), "[æØ≤Ï] “ÂŒÒ %s ∏’∏’¥˛≤∂¡À %s", sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							SafeSetPlayerInterior(suspect, 6);
							SafeSetPlayerPos(suspect,264.6288,77.5742,1001.0391);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_WHITE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: Œﬁ∑®±£ Õ", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_WHITE, string);
							}
							PlayerInfo[suspect][pJailed] = 1;
				     	   	PlayerInfo[suspect][pArrested] += 1;
							SetPlayerFree(suspect,playerid, "±ª¥˛≤∂");
							TextDrawShowForPlayer(suspect, Textdraw1[suspect]);
							WantedPoints[suspect] = 0;
							WantedLevel[suspect] = 0;
							WantLawyer[suspect] = 1;
							PlayerCuffed[suspect] = 0;
							GaveUp[suspect] = 0;
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Arrested %s for %s√Î. ±£ ÕΩ∂Ó: $%d, ≥ˆ €º€∏Ò: $%d",d,m,y,h,mi,s,sendername,giveplayer, PlayerInfo[suspect][pJailTime],JailPrice[suspect],moneys);
							JailLog(string);
							//KillTimer(cufftimer[suspect]);
						}//distance
					}//not connected
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª « FBI!");
			    return 1;
			}
		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/farrest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
				if(PlayerInfo[playerid][pDuty] != 1 && PlayerInfo[playerid][pMember] == 2)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–…œ∞‡!");
				    return 1;
				}
				if(PlayerInfo[playerid][pDuty] != 1 && PlayerInfo[playerid][pMember] == 2)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–…œ∞‡!");
				    return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}

				if(IsPlayerInRangeOfPoint(playerid, 6, 201.0256,168.3393,1003.0234))
				{//New arrest system FBI

					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    //”√∑®: /arrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /farrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 20000) { SendClientMessage(playerid, COLOR_GREY, "   ∑£øÓ≤ªƒ‹µÕ”⁄ $1 ∏ﬂ”⁄$20000!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /farrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new time = strval(tmp);
					if(time < 5 || time > 30) { SendClientMessage(playerid, COLOR_GREY, "   º‡Ω˚ ±º‰≤ªƒ‹µÕ”⁄ 5 ªÚ¥Û”⁄ 30 ∑÷÷”!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /farrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new bail = strval(tmp);
					if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, " «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /farrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new bailprice = strval(tmp);
					if(bailprice < 1000 || bailprice > 10000) { SendClientMessage(playerid, COLOR_GREY, "** ±£ ÕΩ≤ªƒ‹…Ÿ”⁄1000ªÚ¥Û”⁄10000!"); return 1; }
					new suspect = GetClosestPlayer(playerid);
					if(IsPlayerConnected(suspect))
					{
						if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));

							if(WantedLevel[suspect] < 1)
							{
						    	SendClientMessage(playerid, COLOR_GREY, "** ÕÊº“±ÿ–Î”–Õ®º©!");
						    	return 1;
							}
							format(string, sizeof(string), "* ƒ„¥˛≤∂¡À %s!", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							SafeGivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "arrested by %s ~n~    for $%d", sendername, moneys);
							GameTextForPlayer(suspect, string, 5000, 5);
							SafeResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
							{
							    new currank[64];
		    					if(PlayerInfo[playerid][pRank] == 1) { currank = "FBI —ßæØ"; }
								else if(PlayerInfo[playerid][pRank] == 2) { currank = "Ãÿπ§"; }
								else if(PlayerInfo[playerid][pRank] == 3) { currank = "Ãÿ±ÃΩ‘±"; }
								else if(PlayerInfo[playerid][pRank] == 4) { currank = "Ãÿ±ÃΩ‘±∏∫‘»À"; }
								else if(PlayerInfo[playerid][pRank] == 5) { currank = "ø∆≥§"; }
	        					else if(PlayerInfo[playerid][pRank] == 6) { currank = "æ÷≥§÷˙¿Ì"; }
	        					else if(PlayerInfo[playerid][pRank] == 7) { currank = "∏±æ÷≥§"; }
	        					else if(PlayerInfo[playerid][pRank] == 8) { currank = "æ÷≥§"; }
								else { currank = "—ßæØ"; }
								format(string, sizeof(string), "[æØ≤Ï] %s %s ∏’∏’¥˛≤∂¡À %s", currank ,sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							else if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
							{
								format(string, sizeof(string), "[æØ≤Ï] æ¸πŸ %s ∏’∏’¥˛≤∂¡À %s", sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							SafeSetPlayerInterior(suspect, 3);
							SafeSetPlayerPos(suspect,197.7956,175.0676,1003.0234);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_WHITE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: Œﬁ∑®±£ Õ", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_WHITE, string);
							}
							PlayerInfo[suspect][pJailed] = 3;
				     	   	PlayerInfo[suspect][pArrested] += 1;
							SetPlayerFree(suspect,playerid, "±ª¥˛≤∂");
							WantedPoints[suspect] = 0;
							WantedLevel[suspect] = 0;
							WantLawyer[suspect] = 1;
							TextDrawShowForPlayer(suspect, Textdraw1[suspect]);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Arrested %s for %s√Î. ±£ ÕΩ∂Ó: $%d, ≥ˆ €º€∏Ò: $%d",d,m,y,h,mi,s,sendername,giveplayer, PlayerInfo[suspect][pJailTime],JailPrice[suspect],moneys);
							JailLog(string);
							//KillTimer(cufftimer[suspect]);
						}//distance
					}//not connected
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª « FBI!");
			    return 1;
			}
		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/sarrest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			{
				if(PlayerInfo[playerid][pDuty] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "** ƒ„ªπ√ª”–…œ∞‡!");
				    return 1;
				}
				if(PlayerInfo[playerid][pDBanned] == 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "** ƒ„±ªΩ˚÷πæØ≤Ï÷∞ŒÒ!");
			    	return 1;
				}

				if(IsPlayerInRangeOfPoint(playerid, 6, 222.2311,121.3434,999.0239))
				{//New arrest system Army

					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sarrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 20000) { SendClientMessage(playerid, COLOR_GREY, "** ∑£øÓ≤ªƒ‹µÕ”⁄ $1 ∏ﬂ”⁄$20000!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sarrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new time = strval(tmp);
					if(time < 5 || time > 30) { SendClientMessage(playerid, COLOR_GREY, "** º‡Ω˚ ±º‰≤ªƒ‹µÕ”⁄ 5 ªÚ¥Û”⁄ 30 ∑÷÷”!"); return 1; }// /TU
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sarrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new bail = strval(tmp);
					if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, " «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)!"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "”√∑®: /sarrest [∑£øÓ] [ ±º‰(∑÷÷”)] [ «∑ÒÕ¨“‚±£ Õ(0=≤ªø…“‘±£ Õ 1=ø…“‘±£ Õ)] [±£ ÕΩ]");
						return 1;
					}
					new bailprice = strval(tmp);
					if(bailprice < 1000 || bailprice > 10000) { SendClientMessage(playerid, COLOR_GREY, "** ±£ ÕΩ≤ªƒ‹…Ÿ”⁄1000ªÚ¥Û”⁄10000!"); return 1; }
					new suspect = GetClosestPlayer(playerid);
					if(IsPlayerConnected(suspect))
					{
						if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));

							if(WantedLevel[suspect] < 1)
							{
						    	SendClientMessage(playerid, COLOR_GREY, "** ÕÊº“±ÿ–Î”–Õ®º©!");
						    	return 1;
							}
							format(string, sizeof(string), "* ƒ„¥˛≤∂¡À %s!", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							SafeGivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "arrested by %s ~n~ for $%d", sendername, moneys);
							GameTextForPlayer(suspect, string, 5000, 5);
							SafeResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMember]==3||PlayerInfo[playerid][pLeader]==3)
							{
							    new currank[64];
		    					if(PlayerInfo[playerid][pRank] == 1) { currank = "¡–±¯"; }
								else if(PlayerInfo[playerid][pRank] == 2) { currank = " ø±¯"; }
								else if(PlayerInfo[playerid][pRank] == 3) { currank = "æ¸ ø"; }
								else if(PlayerInfo[playerid][pRank] == 4) { currank = "…Ÿ–£"; }
								else if(PlayerInfo[playerid][pRank] == 5) { currank = "÷–Œæ"; }
	        					else if(PlayerInfo[playerid][pRank] == 6) { currank = "…œŒæ"; }
	        					else if(PlayerInfo[playerid][pRank] == 7) { currank = "∏±…œΩ´"; }
	        					else if(PlayerInfo[playerid][pRank] == 8) { currank = "…œΩ´"; }
								else { currank = "¡–±¯"; }
								format(string, sizeof(string), "[æØ≤Ï] %s %s ∏’∏’¥˛≤∂¡À %s", currank ,sendername, giveplayer);
								OOCNews(COLOR_BLUE, string);
							}
							SafeSetPlayerInterior(suspect, 10);
							SafeSetPlayerPos(suspect,214.8052,108.9046,999.0156);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_WHITE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "ƒ„±ª≈–»Î”¸ %d √Î.   ±£ ÕΩ∂Ó: Œﬁ∑®±£ Õ", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_WHITE, string);
							}
							PlayerInfo[suspect][pJailed] = 4;
				     	   	PlayerInfo[suspect][pArrested] += 1;
							SetPlayerFree(suspect,playerid, "±ª¥˛≤∂æ¸∂”");
							WantedPoints[suspect] = 0;
							WantedLevel[suspect] = 0;
							WantLawyer[suspect] = 1;
							TextDrawShowForPlayer(suspect, Textdraw1[suspect]);
							new y, m, d;
							new h,mi,s;
							getdate(y,m,d);
							gettime(h,mi,s);
							format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has Arrested %s for %s√Î. ≥ˆ €º€∏Ò: $%d, ±£ ÕΩ∂Ó: $%d",d,m,y,h,mi,s,sendername,giveplayer, PlayerInfo[suspect][pJailTime],moneys,JailPrice[suspect]);
							JailLog(string);
							//KillTimer(cufftimer[suspect]);
						}//distance
					}//not connected
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "** ƒ„≤ª «“ª√˚ ø±¯!");
			    return 1;
			}
		}//not connected
		return 1;
	}

	if(strcmp(cmd, "/contract", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /contract [ÕÊº“ID/ÕÊº“√˚◊÷] [amount]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: /contract [ÕÊº“ID/ÕÊº“√˚◊÷] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1000 || moneys > 1000000) { SendClientMessage(playerid, COLOR_GREY, "   Contract money must be atleast $1000, and not more then $1000000!"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "You must be level 2 to place a Contract.");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMember] == 8 && PlayerInfo[playerid][pMember] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* Cannot place Contracts on your own Agency!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pLeader] == 8 && PlayerInfo[playerid][pMember] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* Cannot place Contracts on your own Agency!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pMember] == 8||PlayerInfo[giveplayerid][pLeader] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* Can't contract a Hitman !");
				        return 1;
				    }
				    if(PlayerInfo[playerid][pAdminDuty] == 1 || PlayerInfo[playerid][pTesterDuty] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* You may not place a contract on admin/testers on duty");
				        return 1;
				    }
				    if(IsACop(giveplayerid) && moneys < 30000)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "* Only $30000 or above can be placed as a Contract on Cops !");
				        return 1;
				    }
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "* You cannot Contract yourself!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					playermoney = GetPlayerMoney(playerid);
					if (moneys > 0 && playermoney >= moneys)
					{
						SafeGivePlayerMoney(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), "%s ‘⁄À˚µƒŒª÷√∑≈÷√¡Àcontract on %s, for $%d.",sendername, giveplayer, moneys);
						SendFamilyMessage(8, COLOR_YELLOW, string);
						format(string, sizeof(string), "* You placed a contract on %s, for $%d.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "[–≈œ¢]: %s (%d) ‘⁄À˚µƒŒª÷√∑≈÷√¡Àcontract on %s (%d) for $%d", sendername, playerid, giveplayer,giveplayerid, moneys);
						SendAdminMessage(COLOR_YELLOW,string);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Someone ‘⁄À˚µƒŒª÷√∑≈÷√¡Àhit contract on you, you might want protection!");
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Ωª“◊Ω∂Ó≤ª’˝»∑.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d œ÷‘⁄¥¶”⁄π“ª˙◊¥Ã¨.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	SendClientMessage(playerid,COLOR_GREY, "{FFF0FF}∑˛ŒÒ∆˜: {FFFFF0}ƒ„ ‰»Îµƒ÷∏¡Ó≤ª¥Ê‘⁄, ‰»Î/helpªÚ/askq{F0000F}œÚπ‹¿Ì‘±—∞«Û∞Ô÷˙!");
	return 1;
}
//∞◊»’ƒø±Í º””Õ
//------------------------------------------------------------------------------------------------------
public HouseLevel(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new h = PlayerInfo[playerid][pPhousekey];
		if(h == 255) { return 0; }
		if(h <= 4) { return 1; }
		if(h >= 5 && h <= 9)  { return 2; }
		if(h >= 10 && h <= 18) { return 3; }
		if(h >= 19 && h <= 22) { return 4; }
		if(h >= 23 && h <= 25) { return 5; }
		if(h == 26) { return 6; }
		if(h == 27) { return 7; }
		if(h >= 28 && h <= 31) { return 7; }
	}
	return 0;
}

public CHouseLevel(houseid)
{
	if(houseid <= 4) { return 3; }
	if(houseid >= 29 && houseid <= 30) { return 4; }
	if(houseid >= 5 && houseid <= 9) { return 5; }
	if(houseid >= 10 && houseid <= 18 || houseid == 28) { return 7; }
	if(houseid >= 19 && houseid <= 22) { return 8; }
	if(houseid >= 23 && houseid <= 25) { return 9; }
	if(houseid == 26) { return 10; }
	if(houseid == 27) { return 11; }
	if(houseid >= 28 && houseid <= 31) { return 12; }
	return 0;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i)))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}


public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			new tmpcar = GetPlayerVehicleID(i);
			if(oldposx!=0.0 && oldposy!=0.0 && oldposz!=0.0)
			{
				for(new h = 0; h < sizeof(SBizzInfo); h++)
				{
					if(IsATruck(tmpcar) && IsPlayerInRangeOfPoint(i, 10, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",SBizzInfo[h][sbMessage],(SBizzInfo[h][sbMaxProducts]-SBizzInfo[h][sbProducts]),SBizzInfo[h][sbPriceProd],SBizzInfo[h][sbTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(IsATruck(tmpcar) && IsPlayerInRangeOfPoint(i, 10, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",BizzInfo[h][bMessage],(BizzInfo[h][bMaxProducts]-BizzInfo[h][bProducts]),BizzInfo[h][bPriceProd],BizzInfo[h][bTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
			}
			else if (GetPlayerState(i) == 1 && IsPlayerInRangeOfPoint(i, 2,1099.3762,1601.5387,12.5469))
			{
			    if(PlayerInfo[i][pDSTK] == 1 || PlayerInfo[i][pDM] == 1)
			    {
   					GameTextForPlayer(i, "~g~Raven's Roleplay Destruction Derby~n~~w~Type ~r~/enter ~w~to get inside and spectate.", 5000, 3);
				}
				else
				{
				    GameTextForPlayer(i, "~g~Raven's Roleplay Destruction Derby~n~~w~You ~r~Do Not ~w~Have a Ticket to Spectate!", 5000, 3);
				}
			}
			else if (GetPlayerState(i) == 2 && IsPlayerInRangeOfPoint(i, 10,1099.3762,1601.5387,12.5469))
			{
   				if(PlayerInfo[i][pDTK] == 1 || PlayerInfo[i][pDM] == 1)
			    {
   					GameTextForPlayer(i, "~g~Raven's Roleplay Destruction Derby~n~~w~Type ~r~/enter ~w~to get inside and play!.", 5000, 3);
				}
				else
				{
				    GameTextForPlayer(i, "~g~Raven's Roleplay Destruction Derby~n~~w~You ~r~Do Not ~w~Have a Ticket to Play!", 5000, 3);
			    }
			}
		}
	}
	return 1;
}

public IdleKick()
{
	if(AntiAfk == 1)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				GetPlayerPos(i, PlayerPos[i][0], PlayerPos[i][1], PlayerPos[i][2]);
				if(PlayerPos[i][0] == PlayerPos[i][3] && PlayerPos[i][1] == PlayerPos[i][4] && PlayerPos[i][2] == PlayerPos[i][5])
				{
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        if(AFK[i] == 0)
				        {
							afkadmins ++;
							AFK[i] = 1;
							TogglePlayerControllable(i, 0);
				 			TextDrawShowForPlayer(i, Textdraw5);
							TextDrawShowForPlayer(i, Textdraw50);
							TextDrawHideForPlayer(i, Textdraw44);
							TextDrawHideForPlayer(i, Textdraw45);
							TextDrawHideForPlayer(i, Textdraw55);
							TextDrawHideForPlayer(i, Textdraw49[i]);
							TextDrawHideForPlayer(i, Textdraw51[i]);
							if(PlayerInfo[i][pWatch] == 1)
							{
								TextDrawHideForPlayer(i, Textdraw56);
								TextDrawHideForPlayer(i, Textdraw57);
								TextDrawHideForPlayer(i, Textdraw58);
							}
							SendClientMessage(i, COLOR_GREY, "* ƒ„Ω¯»Î¡Àπ“ª˙◊¥Ã¨, ∞¥œ¬ªÿ≥µΩ‚≥˝π“ª˙◊¥Ã¨");
       						if(!IsPlayerInAnyVehicle(i))
							{
								 GetPlayerPos(i,TeleportDest[i][0],TeleportDest[i][1],TeleportDest[i][2]);
								 SafeSetPlayerPos(i, 0,0,2500);
							}
                    		else
							{
								GetVehiclePos(GetPlayerVehicleID(i), TeleportDest[i][0],TeleportDest[i][1],TeleportDest[i][2]);
								SetVehiclePos(GetPlayerVehicleID(i), 0,0,2500);
							}
						}
					}
					else
					{
						new plname[64];
						new string[128];
						GetPlayerName(i, plname, sizeof(plname));
						format(string, sizeof(string), "%s “ÚŒ™π“ª˙‘› ±Ãﬂ≥ˆ∑˛ŒÒ∆˜", plname);
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						Kick(i);
					}
				}
				PlayerPos[i][3] = PlayerPos[i][0];
				PlayerPos[i][4] = PlayerPos[i][1];
				PlayerPos[i][5] = PlayerPos[i][2];
			}
		}
	}
}

public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success)
    {
        new pip[16];
        new string[176];
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i))
            {
	            GetPlayerIp(i, pip, sizeof(pip));
	            if(!strcmp(ip, pip, true))
	            {
	                new sendername[MAX_PLAYER_NAME];
					GetPlayerName(i, sendername, sizeof(sendername));
	                if(LogingAttempts[i] != 3)
	                {
						format(string, sizeof(string),"[PETER]: %s (%d) ≥¢ ‘µ«¬º RCON !!!",sendername,i);
						SendAdminMessage(COLOR_LIGHTRED,string);
						LogingAttempts[i] ++;
						PlayerSuspicious[i] = 1;
				    	PlayerFailedToLogin[i] = 1;
						PlayerGotSpottedRecently[i] = 1;
						SetTimerEx("ResetAcWarn", 300000, 0, "i", i);
					}
					else
					{
					    new d,m,y,h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
		        		format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ ‘Õºπ•ª˜RCON±ªÃﬂ≥ˆ.", sendername, i);
						SendClientMessageToAll(COLOR_NICERED, string);
						SendClientMessage(i,COLOR_LIGHTBLUE, "ƒ„±ªÃﬂ≥ˆ¡À∑˛ŒÒ∆˜Õ®π˝ ∑¥Õ‚π“ºÏ≤‚ ‘Õºπ•ª˜RCON±ªÃﬂ≥ˆ");
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for Attempting to hack into RCON",d,m,y,h,mi,s,sendername);
						KickLog(string);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by the ∑¥Õ‚π“ºÏ≤‚ - Too many Failed Logins at RCON.",d,m,y,h,mi,s,sendername);
						AddPunishment(i, string);
						Kick(i);
					}
	            }
			}
        }
    }
    return 1;
}

public OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[128];
	new string[156];
	new giveplayerid;
	new y,m,d;
	new h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
		return 0;
	}
	if(text[0] == '#' && PlayerInfo[playerid][pAdmin] >= 1)
	{
		GetPlayerName(playerid,sendername,sizeof(sendername));

		new arank[24];
		if(PlayerInfo[playerid][pAdmin] == 1) { arank = "Moderator"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 2) { arank = "Global Moderator"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 3) { arank = "Administrator"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 4) { arank = "Senior Admin"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Main Admin"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Developer"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 1337) { arank = "Scripter"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 1338) { arank = "Owner"; } // By CuervO_NegrO
		else { arank = "Unknown"; }

		format(string, sizeof(string), "[%s] %s (%d): %s", arank, sendername, playerid, text[1]);
		SendAdminMessage(COLOR_LIGHTRED, string);
		
		printf("%s %s: %s",arank, sendername, text[1]);

		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s %s: %s",arank,d,m,y,h,mi,s,sendername, text[1]);
		AdminChatLog(string);
	    return 0;
	}
	if(text[0] == '@' && (PlayerInfo[playerid][pTester] >= 1 || PlayerInfo[playerid][pAdmin] >= 1))
	{
		GetPlayerName(playerid,sendername,sizeof(sendername));

		new arank[24];
		if(PlayerInfo[playerid][pTester] == 1) { arank = "Trial Tester"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pTester] == 2) { arank = "Tester"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pTester] == 3) { arank = "Lead Tester"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 1) { arank = "Moderator"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 2) { arank = "Global Moderator"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 3) { arank = "Administrator"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 4) { arank = "Senior Admin"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 5) { arank = "Main Admin"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 6) { arank = "Developer"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 1337) { arank = "Scripter"; } // By CuervO_NegrO
		else if(PlayerInfo[playerid][pAdmin] == 1338) { arank = "Owner"; } // By CuervO_NegrO
		else { arank = "Unknown"; }

		format(string, sizeof(string), "[%s] %s (%d): %s", arank, sendername, playerid, text[1]);
		SendTesterAdminMessage(COLOR_YELLOW, string);

		printf("%s %s: %s",arank, sendername, text[1]);

		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s %s: %s",arank,d,m,y,h,mi,s,sendername, text[1]);
		AdminChatLog(string);
	    return 0;
	}
	
	if(PlayerInfo[playerid][pAdmin] == 0) Text[playerid] ++;
	if(Text[playerid] >= 1)
	{
	    KillTimer(TextTimer[playerid]);
		TextTimer[playerid] = SetTimerEx("ResetText",1500,false,"i",playerid);
	}
	if(Text[playerid] == 5) SendClientMessage(playerid, COLOR_LIGHTBLUE,"* «Îºı¬˝Àµª∞µƒÀŸ∂»∑Ò‘Úƒ„Ω´ª·±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	if(Text[playerid] == 10)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s (%d), “—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜Õ®π˝∑¥Õ‚π“ºÏ≤‚ ‘≠“Ú:À¢∆¡.", sendername, playerid);
		SendClientMessageToAll(COLOR_NICERED, string);
		SendClientMessage(playerid,COLOR_LIGHTBLUE, "ƒ„±ªÃﬂ≥ˆ¡À∑˛ŒÒ∆˜Õ®π˝ ∑¥Õ‚π“ºÏ≤‚  ‘≠“Ú:À¢∆¡.");
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] ∑¥Õ‚π“ºÏ≤‚ Has Kicked %s for: Flooding the chat.",d,m,y,h,mi,s,sendername);
		KickLog(string);
		format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by the ∑¥Õ‚π“ºÏ≤‚ - Flooding the chat.",d,m,y,h,mi,s,sendername);
		AddPunishment(playerid, string);
		Kick(playerid);

		KillTimer(TextTimer[playerid]);
	}
	
	if(OnOfficerTest[playerid] == 1)
	{
	    if(TestStep[playerid] == 1)
	    {
	        if(strcmp(text, "c", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 2;
			    SendClientMessage(playerid, COLOR_YELLOW,"2 - Ω«…´∞Á—›ø…“‘∏… ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ“∞Á—›“ª∏ˆΩ«…´.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
			    return 0;
			}
			else
			{
			    TestPoints[playerid] --;
			   	ClearChatbox(playerid, 10);
			   	TestStep[playerid] = 1;
				SendClientMessage(playerid, COLOR_YELLOW,"1 - Ω«…´∞Á—›¥˙±Ì ≤√¥ƒÿ?");
				ClearChatbox(playerid, 4);
				SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
				SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
				SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ““™œÒ“ª∏ˆ∫œ∑®µƒπ´√Ò,◊Ò ÿ’‚¿ÔµƒπÊ‘Ú.");
				SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
				SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
                return 0;
			}
		}
		else if(TestStep[playerid] == 2)
	    {
	        if(strcmp(text, "c", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 3;
			    SendClientMessage(playerid, COLOR_YELLOW,"3 - ‘⁄Ω«…´∞Á—›÷–ƒ„‘ı√¥µ±“ª∏ˆ  ∫œ◊‘º∫µƒΩ«…´?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ‘⁄’‚¿ÔŒ“ø…“‘…±À¿√ø∏ˆ»À,»ª∫Û¿Îø™∑˛ŒÒ∆˜.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¿ƒ”√Œ“µƒΩ«…´÷∏¡Ó,∆€∏∫∆‰À˚»À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ“ø…“‘œÚπ‹¿Ì‘±À˜“™÷∞ŒÒ»®œﬁ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. Œ“ø…“‘∞¥◊‘º∫µƒ–‘∏Òœ≤∫√æˆ∂®µ±“ª∏ˆ ≤√¥—¯µƒΩ«…´.");
			    return 0;
			}
			else
			{
               	TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 2;
			    SendClientMessage(playerid, COLOR_YELLOW,"2 - Ω«…´∞Á—›ø…“‘∏… ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ“∞Á—›“ª∏ˆΩ«…´.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 3)
	    {
	        if(strcmp(text, "e", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 4;
			    SendClientMessage(playerid, COLOR_YELLOW,"4 - ◊˜Œ™“ª√˚æØ≤Ïµƒ‘»Œ « ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. …±À¿√ø“ª∏ˆ»À,»ª∫ÛÕÀ≥ˆ∑˛ŒÒ∆˜,‘Ÿ“≤≤ª¿¥¡À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. ∑¢≥ˆ±®∏Ê≤¢«“¥˛≤∂œ”“…»À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ”√Œ“µƒ÷±…˝∑…ª˙»•◊‘”…≥«Õµ«‘“ªº‹’Ω∂∑ª˙.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ø™≥µ—πÀ¿À˘”–ÕÊº“.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ”√Œ“µƒ’‚Ã◊÷∆∑˛◊ﬂÀΩ∂æ∆∑,“ÚŒ™±»Àæ¯∂‘≤ªª·ª≥“…µΩ.");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 3;
			    SendClientMessage(playerid, COLOR_YELLOW,"3 - ‘⁄Ω«…´∞Á—›÷–ƒ„‘ı√¥µ±“ª∏ˆ  ∫œ◊‘º∫µƒΩ«…´?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ‘⁄’‚¿ÔŒ“ø…“‘…±À¿√ø∏ˆ»À,»ª∫Û¿Îø™∑˛ŒÒ∆˜.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¿ƒ”√Œ“µƒΩ«…´÷∏¡Ó,∆€∏∫∆‰À˚»À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ“ø…“‘œÚπ‹¿Ì‘±À˜“™÷∞ŒÒ»®œﬁ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. Œ“ø…“‘∞¥◊‘º∫µƒ–‘∏Òœ≤∫√æˆ∂®µ±“ª∏ˆ ≤√¥—¯µƒΩ«…´.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 4)
	    {
	        if(strcmp(text, "b", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 5;
			    SendClientMessage(playerid, COLOR_YELLOW,"5 - Œ“”¶∏√‘ı√¥∂‘¥˝ÓÌ◊°µƒœ”“…»À?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ∂™µΩ∫£¿ÔªÚ’ﬂ»”µΩ¥Û…≥ƒÆ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Õµ¡ÀÀ˚µƒ«Æ,»ª∫Û◊ˆµÙÀ˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ¿ƒ”√Œ“µƒ√¸¡Ó√ª ’À˚µƒ≤ƒ¡œ,»ª∫Û◊ˆµÙÀ˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Ω´À˚¥¯µΩæØ≤Ïæ÷◊ˆ¥¶¿Ì");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ¥¯À˝»•º‡”¸πÿÀ˚99999999999∏ˆ–° ±");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 4;
			    SendClientMessage(playerid, COLOR_YELLOW,"4 - ◊˜Œ™“ª√˚æØ≤Ïµƒ‘»Œ « ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. …±À¿√ø“ª∏ˆ»À,»ª∫ÛÕÀ≥ˆ∑˛ŒÒ∆˜,‘Ÿ“≤≤ª¿¥¡À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. ∑¢≥ˆ±®∏Ê≤¢«“¥˛≤∂œ”“…»À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ”√Œ“µƒ÷±…˝∑…ª˙»•◊‘”…≥«Õµ«‘“ªº‹’Ω∂∑ª˙.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ø™≥µ—πÀ¿À˘”–ÕÊº“.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ”√Œ“µƒ’‚Ã◊÷∆∑˛◊ﬂÀΩ∂æ∆∑,“ÚŒ™±»Àæ¯∂‘≤ªª·ª≥“…µΩ.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 5)
	    {
	        if(strcmp(text, "d", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 6;
			    SendClientMessage(playerid, COLOR_YELLOW,"6 - æØ≤Ïæ÷‘⁄ƒ«?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. …Ã“µ, ¬Â…ºÌ∂…£Õ–Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b.  –÷––ƒπ„≥°, ¬Â…ºÌ∂…£Õ–Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. –°∫”, ¿≠ÀπŒ¨º”Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d.  •∑∆“Æ¬ﬁ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ¿≠ÀπŒ¨º”Àπ.");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 5;
			    SendClientMessage(playerid, COLOR_YELLOW,"5 - Œ“”¶∏√‘ı√¥∂‘¥˝ÓÌ◊°µƒœ”“…»À?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ∂™µΩ∫£¿ÔªÚ’ﬂ»”µΩ¥Û…≥ƒÆ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Õµ¡ÀÀ˚µƒ«Æ,»ª∫Û◊ˆµÙÀ˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ¿ƒ”√Œ“µƒ√¸¡Ó√ª ’À˚µƒ≤ƒ¡œ,»ª∫Û◊ˆµÙÀ˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Ω´À˚¥¯µΩæØ≤Ïæ÷◊ˆ¥¶¿Ì");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ¥¯À˝»•º‡”¸πÿÀ˚99999999999∏ˆ–° ±");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 6)
	    {
	        if(strcmp(text, "b", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 7;
			    SendClientMessage(playerid, COLOR_YELLOW,"7 - µ±Œ“±ª»Àπ•ª˜Œ“∏√‘ı√¥◊ˆ?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a.  π”√±®∏Êπ¶ƒ‹»Ë¬ÓŒÍ»ËÀ˚/report.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. ”√Œ“◊‘º∫µƒŒ‰∆˜’˝µ±∑¿Œ¿.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. À¢Œ‰∆˜…±À¿À˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ’““ª∏ˆ…± ÷◊ˆµÙÀ˚/departments.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e.  π”√/adœÚæØ≤Ï—∞«Û∞Ô÷˙.");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 6;
			    SendClientMessage(playerid, COLOR_YELLOW,"6 - æØ≤Ïæ÷‘⁄ƒ«?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. …Ã“µ, ¬Â…ºÌ∂…£Õ–Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b.  –÷––ƒπ„≥°, ¬Â…ºÌ∂…£Õ–Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. –°∫”, ¿≠ÀπŒ¨º”Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d.  •∑∆“Æ¬ﬁ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ¿≠ÀπŒ¨º”Àπ.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 7)
	    {
	        if(strcmp(text, "b", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 8;
			    SendClientMessage(playerid, COLOR_YELLOW,"8 - »Áπ˚Œ“≤ª◊Ò ÿ÷∞‘,Œ“Ã∞Œ€Ω” ‹ªﬂ¬∏ª·‘ı√¥—˘?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ƒ„Ω´ªÒµ√56487∏ˆΩ±≈∆.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ª·ªÒµ√∏¸∂‡µƒ«Æ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. Œ“Ω´ª·±ªΩ˚÷π÷¥––π§◊˜‘»Œ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ“Ω´ ß»•Œ“µƒ∑ø◊”.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. Œ“ª·µ√µΩ¥Û–ÕŒ‰∆˜…±À¿∆‰À˚ÕÊº“.");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 7;
			    SendClientMessage(playerid, COLOR_YELLOW,"7 - µ±Œ“±ª»Àπ•ª˜Œ“∏√‘ı√¥◊ˆ?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a.  π”√±®∏Êπ¶ƒ‹»Ë¬ÓŒÍ»ËÀ˚/report.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. ”√Œ“◊‘º∫µƒŒ‰∆˜’˝µ±∑¿Œ¿.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. À¢Œ‰∆˜…±À¿À˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ’““ª∏ˆ…± ÷◊ˆµÙÀ˚/departments.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e.  π”√/adœÚæØ≤Ï—∞«Û∞Ô÷˙.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 8)
	    {
	        if(strcmp(text, "c", true) == 0)
			{
			    TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 9;
			    SendClientMessage(playerid, COLOR_YELLOW,"9 - µ±¥ıÕΩ“ª¥±∑øŒ›Œ“”¶∏√◊ˆ ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a.  π”√/adπ„∏ÊŒ“√«“™»•¥˛≤∂À˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. PMœ”“…∑∏»∞À˚≤ª“™∑∏◊Ô,µΩæØ≤Ïæ÷◊‘ ◊.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ”√À¢≥ˆ¿¥µƒ ÷¡ÒµØ≥ÂΩ¯»•’®À¿À˚√«.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ≥ÂΩ¯»•◊ˆµÙ¥ıÕΩ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ±£≥÷¿‰æ≤,∏˙ÀÊƒ„µƒÕ≈∂”,“ª∆∫œ◊˜÷∆∑˛¥ıÕΩ.");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 8;
			    SendClientMessage(playerid, COLOR_YELLOW,"8 - »Áπ˚Œ“≤ª◊Ò ÿ÷∞‘,Œ“Ã∞Œ€Ω” ‹ªﬂ¬∏ª·‘ı√¥—˘?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ƒ„Ω´ªÒµ√56487∏ˆΩ±≈∆.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ª·ªÒµ√∏¸∂‡µƒ«Æ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. Œ“Ω´ª·±ªΩ˚÷π÷¥––π§◊˜‘»Œ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ“Ω´ ß»•Œ“µƒ∑ø◊”.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. Œ“ª·µ√µΩ¥Û–ÕŒ‰∆˜…±À¿∆‰À˚ÕÊº“.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 9)
	    {
	        if(strcmp(text, "e", true) == 0)
			{
       			TestPoints[playerid] ++;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 10;
			    SendClientMessage(playerid, COLOR_YELLOW,"10 - Œ“ø…“‘◊˜Œ™“ª∏ˆÀΩ»ÀµƒæØŒ¿√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘µƒŒ“ø…“‘∞¥◊‘º∫µƒ“‚Àº¿¥.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“≤ªø…“‘’‚ «±£Ô⁄µƒπ§◊˜.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. Œ“ø…“‘µƒµ´ «Œ“÷ªÃ˝√¸”⁄±ª±£ª§µƒ∂‘œÛ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ“ø…“‘µƒµ´ «“™µ√µΩ…œº∂πŸ‘±µƒ ⁄»®.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. Œ“ø…“‘µƒ÷ª“™À˚∏¯µƒπ§◊ ∏ﬂ,¥˝”ˆ∫√‘€æÕ∏˙À˚");
			    return 0;
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 9;
			    SendClientMessage(playerid, COLOR_YELLOW,"9 - µ±¥ıÕΩ“ª¥±∑øŒ›Œ“”¶∏√◊ˆ ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a.  π”√/adπ„∏ÊŒ“√«“™»•¥˛≤∂À˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. PMœ”“…∑∏»∞À˚≤ª“™∑∏◊Ô,µΩæØ≤Ïæ÷◊‘ ◊.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ”√À¢≥ˆ¿¥µƒ ÷¡ÒµØ≥ÂΩ¯»•’®À¿À˚√«.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ≥ÂΩ¯»•◊ˆµÙ¥ıÕΩ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ±£≥÷¿‰æ≤,∏˙ÀÊƒ„µƒÕ≈∂”,“ª∆∫œ◊˜÷∆∑˛¥ıÕΩ.");
			    return 0;
			}
		}
		else if(TestStep[playerid] == 10)
	    {
	        if(strcmp(text, "d", true) == 0)
			{
			    TestPoints[playerid] ++;
			    SafeGivePlayerMoney(playerid, -5000);
			    if(TestPoints[playerid] >= 9)
			    {
	                ClearChatbox(playerid, 10);
	                TestStep[playerid] = 0;
				    SendClientMessage(playerid, COLOR_GREEN,"ƒ„“—Ω¸Õ®π˝¡À≤‚ ‘ƒ„œ÷‘⁄ «“ª√˚±£∞≤»À‘±!");
				    SendClientMessage(playerid, COLOR_WHITE,"»•æØ≤Ïæ÷, ‘⁄…œ∞‡ “ π”√/dutyø…“‘…œ∞‡¡À");
				    PlayerInfo[playerid][pCopLic] = 1;
				    OnOfficerTest[playerid] = 0;
				    TestPoints[playerid] = 0;
				    return 0;
				}
				else
				{
					ClearChatbox(playerid, 10);
	                TestStep[playerid] = 0;
				    SendClientMessage(playerid, COLOR_GREEN,"ƒ„√ªÕ®π˝≤‚ ‘ƒ„–Ë“™µ»¥˝5∏ˆ–° ±≤≈ø…“‘ºÃ–¯≤‚ ‘");
					format(string, sizeof(string),"ƒ„ªπ“™µ» %d∑÷÷”, ƒ„÷¡…Ÿ“™¥∂‘9~10µ¿Ã‚",TestPoints[playerid]);
					SendClientMessage(playerid, COLOR_GREY, string);
					PlayerInfo[playerid][pOfficerTime] = 18000;
				    OnOfficerTest[playerid] = 0;
				    TestPoints[playerid] = 0;
				    return 0;
				}
			}
			else
			{
                TestPoints[playerid] --;
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 10;
			    SendClientMessage(playerid, COLOR_YELLOW,"10 - µ±¥ıÕΩ“ª¥±∑øŒ›Œ“”¶∏√◊ˆ ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a.  π”√/adπ„∏ÊŒ“√«“™»•¥˛≤∂À˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. PMœ”“…∑∏»∞À˚≤ª“™∑∏◊Ô,µΩæØ≤Ïæ÷◊‘ ◊.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ”√À¢≥ˆ¿¥µƒ ÷¡ÒµØ≥ÂΩ¯»•’®À¿À˚√«.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ≥ÂΩ¯»•◊ˆµÙ¥ıÕΩ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ±£≥÷¿‰æ≤,∏˙ÀÊƒ„µƒÕ≈∂”,“ª∆∫œ◊˜÷∆∑˛¥ıÕΩ.");
			    return 0;
			}
		}
	}
	if(OnPassportTest[playerid] == 1)
	{
	    if(TestStep[playerid] == 1)
	    {
	        if(strcmp(text, "c", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 2;
			    SendClientMessage(playerid, COLOR_YELLOW,"2 - Ω«…´∞Á—›ø…“‘∏… ≤√¥?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. Œ“ø…“‘ø™◊≈Œ“µƒˆ¶≥µµΩ¥¶—πÀ¿∆‰À˚»À");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ‘⁄’‚¿ÔŒ“∞Á—›“ª∏ˆΩ«…´.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ‘⁄’‚¿ÔŒ“ø…“‘ÕÊ¥Ãº§µƒDM∞—∆‰À˚ÕÊº“…±µ√ªÍ∑…∆«…¢.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄’‚¿ÔŒ““™µ∑¬“π‹¿Ì‘±µƒ÷»–Ú.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 2)
	    {
	        if(strcmp(text, "c", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 3;
			    SendClientMessage(playerid, COLOR_YELLOW,"3 - ‘⁄Ω«…´∞Á—›÷–ƒ„‘ı√¥µ±“ª∏ˆ  ∫œ◊‘º∫µƒΩ«…´?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ‘⁄’‚¿ÔŒ“ø…“‘…±À¿√ø∏ˆ»À,»ª∫Û¿Îø™∑˛ŒÒ∆˜.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Œ“ø…“‘¿ƒ”√Œ“µƒΩ«…´÷∏¡Ó,∆€∏∫∆‰À˚»À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. Œ“ø…“‘¬“À¢«Æ,≤¢«“∏¯∆‰À˚ÕÊº““ª∆∑÷œÌ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ“ø…“‘œÚπ‹¿Ì‘±À˜“™÷∞ŒÒ»®œﬁ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. Œ“ø…“‘∞¥◊‘º∫µƒ–‘∏Òœ≤∫√æˆ∂®µ±“ª∏ˆ ≤√¥—˘µƒΩ«…´.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 3)
	    {
	        if(strcmp(text, "e", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 4;
			    SendClientMessage(playerid, COLOR_YELLOW,"4 - ƒ„ø…“‘‘ı√¥ªÒµ√Ω«Æ?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ”√Õ‚π“À¢«Æ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. π§◊˜◊¨«Æ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. »√±»Àø™π“À¢ƒ„»•“™.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. Œ π‹¿Ì‘±“™.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. …±»À‘Ωªı.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 4)
	    {
	        if(strcmp(text, "b", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 5;
			    SendClientMessage(playerid, COLOR_YELLOW,"5 - »Á∫ŒœÚπ‹¿Ì‘±«Û÷˙?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. Õ®π˝æØ≤Ïæ÷«Û÷˙π‹¿Ì‘±.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. ”√/ad∑¢±Ìπ„∏Ê’“π‹¿Ì‘±.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. /PMπ‹¿Ì‘±—∞«Û∞Ô÷˙.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d.  π”√/askqœÚπ‹¿Ì‘±«Û÷˙.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ‘⁄”Œœ∑¿Ô’“π‹¿Ì‘±’“µΩ∫ÕÀ˚Àµ.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 5)
	    {
	        if(strcmp(text, "d", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 6;
			    SendClientMessage(playerid, COLOR_YELLOW,"6 - æØ≤Ïæ÷‘⁄ƒ«?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. …Ã“µ, ¬Â…ºÌ∂…£Õ–Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b.  –÷––ƒπ„≥°, ¬Â…ºÌ∂…£Õ–Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. –°∫”, ¿≠ÀπŒ¨º”Àπ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d.  •∑∆“Æ¬ﬁ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ¿≠ÀπŒ¨º”Àπ.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 6)
	    {
	        if(strcmp(text, "b", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 7;
			    SendClientMessage(playerid, COLOR_YELLOW,"7 - µ±Œ“±ª»Àπ•ª˜Œ“∏√‘ı√¥◊ˆ?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ±®∏¥À˚,Ω´À˚¥Ú≈øœ¬.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. «Û÷˙æØ≤Ï∞Ô÷˙ƒ„.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ”√ƒ„µƒŒ‰∆˜—∞≥.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ≤ª¿ÌÀ˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e.  π”√/adœÚæØ≤Ï—∞«Û∞Ô÷˙.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 7)
	    {
	        if(strcmp(text, "b", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 8;
			    SendClientMessage(playerid, COLOR_YELLOW,"8 - µ±π‹¿Ì‘±“™Œ“»•“ª–© ¬Œ“∏√‘ı√¥∞Ï?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ≤ªƒÒÀ˚ºÃ–¯ÕÊ");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. ÕÀ≥ˆ‘Ÿ“≤≤ª¿¥¡À.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ±£≥÷¿‰æ≤∞¥À˚Àµµƒ»•◊ˆ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. PM÷±Ω”¡Àµ±µƒ∏ÊÀﬂÀ˚Œ“≤≈≤ªÃ˝ƒÿ,ƒ„“‘Œ™ƒ„ «À≠.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. À¢Œ‰∆˜…±À¿À˚.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 8)
	    {
	        if(strcmp(text, "c", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 9;
			    SendClientMessage(playerid, COLOR_YELLOW,"9 - µ±“ª∏ˆπ‹¿Ì‘±≥Õ∑£Œ“µƒ≈Û”— ±Œ“∏√‘ı√¥◊ˆ?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a.  π”√/adπ„∏Ê¥¶∑£Ω·π˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. PMπ‹¿Ì‘±≤¢«“±ß‘πÀ˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"c. ∑¢ÀÕ/askq±ß‘π¥¶∑£Ω·π˚.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ±®∏Ê¬€Ã≥,Œ‹œ›π‹¿Ì‘±‘⁄ ©±©.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ±£≥÷¿‰Ω˛,≤ª“™∆¿¬€¥¶∑£Ω·π˚.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 9)
	    {
	        if(strcmp(text, "e", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 10;
			    SendClientMessage(playerid, COLOR_YELLOW,"10 - »Áπ˚∆‰À˚À¢«ÆµƒÕÊº“∏¯Œ“«ÆŒ“”¶∏√‘ı√¥◊ˆ?");
			    ClearChatbox(playerid, 4);
			    SendClientMessage(playerid, COLOR_YELLOW,"a. ¡Ùœ¬’‚± «Æ,¿¥¬Ú∂´Œ˜,¬Ú∑ø◊”,¬Ú≥µµ»....");
			    SendClientMessage(playerid, COLOR_YELLOW,"b. Ω´’‚± «Æªπ∏¯À˚,≤ª∏¯π‹¿Ì‘±…œ±®");
			    SendClientMessage(playerid, COLOR_YELLOW,"c.  π”√/charityæË∏¯¥»…∆ª˙ππ≤ªÃ·À¢«Æµƒ ¬.");
			    SendClientMessage(playerid, COLOR_YELLOW,"d. ∞—À˘”–µƒ«Æ…œΩªπ‹¿Ì‘±≤¢«“…œ±®’‚“ª◊¥øˆ.");
			    SendClientMessage(playerid, COLOR_YELLOW,"e. ÕÀ≥ˆ,º∏∏ˆ–° ±∫Ûªÿ¿¥,ª®∑—’‚± «Æ.");
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
		else if(TestStep[playerid] == 10)
	    {
	        if(strcmp(text, "d", true) == 0)
			{
                ClearChatbox(playerid, 10);
                TestStep[playerid] = 0;
			    SendClientMessage(playerid, COLOR_GREEN,"ƒ„Õ®π˝¡Àøº ‘œ÷‘⁄ «“ª∏ˆ∫œ∑®π´√Ò¡À,≤¢«“ªÒµ√“ª±æ{FFFFF0}ª§’’!");
			    PlayerInfo[playerid][pPassport] = 1;
			    return 0;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW,"* ƒ„√ª”–Õ®π˝øº ‘ƒ„30∑÷÷”∫Ûø…“‘‘Ÿ¿¥.");
                PlayerInfo[playerid][pPassportTime] = 1800;
                OnPassportTest[playerid] = 0;
                TestStep[playerid] = 0;
                return 0;
			}
		}
	}
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("next", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("next")))
		{
		    switch (SelectCharID[playerid])
			{
				case 1: //Police Force
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[0][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[1][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[2][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[3][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[4][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[5][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[6][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = JoinPed[7][0]; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = JoinPed[8][0]; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = JoinPed[9][0]; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[10][0]; }
				}
				case 2: //FBI/ATF
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[11][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[12][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[12][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[13][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[13][0]; }
    			}
				case 3: //π˙√ÒæØŒ¿∂”
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[14][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[14][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[15][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[15][0]; }
				}
				case 4: //Fire&Ambulance
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[16][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[17][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[18][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[19][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[20][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[21][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[22][0]; }
				}
				case 5: //»˝∫œª·
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[25][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[26][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[27][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[28][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[29][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[30][0]; }
				}
				case 6: //¬Ûµ¬¡÷∞Ô
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[31][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[32][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[33][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[34][0]; }
				}
				case 8: //…± ÷ª˙ππ
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[38][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[39][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[40][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[40][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[41][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[42][0]; }
				}
				case 9: //News Reporters
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[43][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[44][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[45][0]; }
				}
				case 10: //Taxi Cab Company
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[46][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[47][0]; }
				}
				case 11: //Driving/Flying School
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[48][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[49][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[50][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[50][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[51][0]; }
				}
				case 14: //…Ωø⁄◊È
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 122); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 122; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 118; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 186); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 186; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 123); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 123; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 113); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 113; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 169); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 169; }
				}

				case 15: //¥Û»¶∞Ô
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[58][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[59][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[60][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[61][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[62][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[63][0]; }
				}
				case 16: //¿≠∏±
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 28); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 28; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 67); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 67; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 22); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 22; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 180); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 180; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 144); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 144; }
				}
				case 20: //Male civilian (by Ellis)
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivMalePeds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivMalePeds[1][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivMalePeds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivMalePeds[2][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivMalePeds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivMalePeds[3][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivMalePeds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivMalePeds[4][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivMalePeds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivMalePeds[5][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivMalePeds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivMalePeds[6][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivMalePeds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivMalePeds[7][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivMalePeds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivMalePeds[8][0]; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivMalePeds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivMalePeds[9][0]; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivMalePeds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivMalePeds[10][0]; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivMalePeds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivMalePeds[11][0]; }
				    else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivMalePeds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivMalePeds[12][0]; }
				    else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivMalePeds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivMalePeds[13][0]; }
				    else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivMalePeds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivMalePeds[14][0]; }
				    else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivMalePeds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivMalePeds[15][0]; }
				    else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivMalePeds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivMalePeds[16][0]; }
				    else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivMalePeds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivMalePeds[17][0]; }
				    else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivMalePeds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivMalePeds[18][0]; }
				    else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivMalePeds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivMalePeds[19][0]; }
				    else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivMalePeds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivMalePeds[20][0]; }
				    else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivMalePeds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivMalePeds[21][0]; }
				    else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivMalePeds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivMalePeds[22][0]; }
				    else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivMalePeds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivMalePeds[23][0]; }
				    else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivMalePeds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivMalePeds[24][0]; }
				    else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivMalePeds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivMalePeds[25][0]; }
				    else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivMalePeds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivMalePeds[26][0]; }
				    else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivMalePeds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivMalePeds[27][0]; }
				    else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivMalePeds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivMalePeds[28][0]; }
				    else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivMalePeds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivMalePeds[29][0]; }
				    else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivMalePeds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivMalePeds[30][0]; }
				    else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivMalePeds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivMalePeds[31][0]; }
				    else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivMalePeds[32][0]); SelectCharPlace[playerid] = 33; ChosenSkin[playerid] = CivMalePeds[32][0]; }
				    else if(SelectCharPlace[playerid] == 33) { SetPlayerSkin(playerid, CivMalePeds[33][0]); SelectCharPlace[playerid] = 34; ChosenSkin[playerid] = CivMalePeds[33][0]; }
				    else if(SelectCharPlace[playerid] == 34) { SetPlayerSkin(playerid, CivMalePeds[34][0]); SelectCharPlace[playerid] = 35; ChosenSkin[playerid] = CivMalePeds[34][0]; }
				    else if(SelectCharPlace[playerid] == 35) { SetPlayerSkin(playerid, CivMalePeds[35][0]); SelectCharPlace[playerid] = 36; ChosenSkin[playerid] = CivMalePeds[35][0]; }
				    else if(SelectCharPlace[playerid] == 36) { SetPlayerSkin(playerid, CivMalePeds[36][0]); SelectCharPlace[playerid] = 37; ChosenSkin[playerid] = CivMalePeds[36][0]; }
				    else if(SelectCharPlace[playerid] == 37) { SetPlayerSkin(playerid, CivMalePeds[37][0]); SelectCharPlace[playerid] = 38; ChosenSkin[playerid] = CivMalePeds[37][0]; }
				    else if(SelectCharPlace[playerid] == 38) { SetPlayerSkin(playerid, CivMalePeds[38][0]); SelectCharPlace[playerid] = 39; ChosenSkin[playerid] = CivMalePeds[38][0]; }
				    else if(SelectCharPlace[playerid] == 39) { SetPlayerSkin(playerid, CivMalePeds[39][0]); SelectCharPlace[playerid] = 40; ChosenSkin[playerid] = CivMalePeds[39][0]; }
				    else if(SelectCharPlace[playerid] == 40) { SetPlayerSkin(playerid, CivMalePeds[40][0]); SelectCharPlace[playerid] = 41; ChosenSkin[playerid] = CivMalePeds[40][0]; }
				    else if(SelectCharPlace[playerid] == 41) { SetPlayerSkin(playerid, CivMalePeds[41][0]); SelectCharPlace[playerid] = 42; ChosenSkin[playerid] = CivMalePeds[41][0]; }
				    else if(SelectCharPlace[playerid] == 42) { SetPlayerSkin(playerid, CivMalePeds[42][0]); SelectCharPlace[playerid] = 43; ChosenSkin[playerid] = CivMalePeds[42][0]; }
				    else if(SelectCharPlace[playerid] == 43) { SetPlayerSkin(playerid, CivMalePeds[43][0]); SelectCharPlace[playerid] = 44; ChosenSkin[playerid] = CivMalePeds[43][0]; }
				    else if(SelectCharPlace[playerid] == 44) { SetPlayerSkin(playerid, CivMalePeds[44][0]); SelectCharPlace[playerid] = 45; ChosenSkin[playerid] = CivMalePeds[44][0]; }
				    else if(SelectCharPlace[playerid] == 45) { SetPlayerSkin(playerid, CivMalePeds[45][0]); SelectCharPlace[playerid] = 46; ChosenSkin[playerid] = CivMalePeds[45][0]; }
				    else if(SelectCharPlace[playerid] == 46) { SetPlayerSkin(playerid, CivMalePeds[46][0]); SelectCharPlace[playerid] = 47; ChosenSkin[playerid] = CivMalePeds[46][0]; }
				    else if(SelectCharPlace[playerid] == 47) { SetPlayerSkin(playerid, CivMalePeds[47][0]); SelectCharPlace[playerid] = 48; ChosenSkin[playerid] = CivMalePeds[47][0]; }
				    else if(SelectCharPlace[playerid] == 48) { SetPlayerSkin(playerid, CivMalePeds[48][0]); SelectCharPlace[playerid] = 49; ChosenSkin[playerid] = CivMalePeds[48][0]; }
				    else if(SelectCharPlace[playerid] == 49) { SetPlayerSkin(playerid, CivMalePeds[49][0]); SelectCharPlace[playerid] = 50; ChosenSkin[playerid] = CivMalePeds[49][0]; }
				    else if(SelectCharPlace[playerid] == 50) { SetPlayerSkin(playerid, CivMalePeds[50][0]); SelectCharPlace[playerid] = 51; ChosenSkin[playerid] = CivMalePeds[50][0]; }
				    else if(SelectCharPlace[playerid] == 51) { SetPlayerSkin(playerid, CivMalePeds[51][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivMalePeds[51][0]; }
				}
				case 30: //Female civilian (by Ellis)
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, CivFemalePeds[1][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = CivFemalePeds[1][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, CivFemalePeds[2][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = CivFemalePeds[2][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, CivFemalePeds[3][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = CivFemalePeds[3][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, CivFemalePeds[4][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = CivFemalePeds[4][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, CivFemalePeds[5][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = CivFemalePeds[5][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, CivFemalePeds[6][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = CivFemalePeds[6][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, CivFemalePeds[7][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = CivFemalePeds[7][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, CivFemalePeds[8][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = CivFemalePeds[8][0]; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, CivFemalePeds[9][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = CivFemalePeds[9][0]; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, CivFemalePeds[10][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = CivFemalePeds[10][0]; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, CivFemalePeds[11][0]); SelectCharPlace[playerid] = 12; ChosenSkin[playerid] = CivFemalePeds[11][0]; }
				    else if(SelectCharPlace[playerid] == 12) { SetPlayerSkin(playerid, CivFemalePeds[12][0]); SelectCharPlace[playerid] = 13; ChosenSkin[playerid] = CivFemalePeds[12][0]; }
				    else if(SelectCharPlace[playerid] == 13) { SetPlayerSkin(playerid, CivFemalePeds[13][0]); SelectCharPlace[playerid] = 14; ChosenSkin[playerid] = CivFemalePeds[13][0]; }
				    else if(SelectCharPlace[playerid] == 14) { SetPlayerSkin(playerid, CivFemalePeds[14][0]); SelectCharPlace[playerid] = 15; ChosenSkin[playerid] = CivFemalePeds[14][0]; }
				    else if(SelectCharPlace[playerid] == 15) { SetPlayerSkin(playerid, CivFemalePeds[15][0]); SelectCharPlace[playerid] = 16; ChosenSkin[playerid] = CivFemalePeds[15][0]; }
				    else if(SelectCharPlace[playerid] == 16) { SetPlayerSkin(playerid, CivFemalePeds[16][0]); SelectCharPlace[playerid] = 17; ChosenSkin[playerid] = CivFemalePeds[16][0]; }
				    else if(SelectCharPlace[playerid] == 17) { SetPlayerSkin(playerid, CivFemalePeds[17][0]); SelectCharPlace[playerid] = 18; ChosenSkin[playerid] = CivFemalePeds[17][0]; }
				    else if(SelectCharPlace[playerid] == 18) { SetPlayerSkin(playerid, CivFemalePeds[18][0]); SelectCharPlace[playerid] = 19; ChosenSkin[playerid] = CivFemalePeds[18][0]; }
				    else if(SelectCharPlace[playerid] == 19) { SetPlayerSkin(playerid, CivFemalePeds[19][0]); SelectCharPlace[playerid] = 20; ChosenSkin[playerid] = CivFemalePeds[19][0]; }
				    else if(SelectCharPlace[playerid] == 20) { SetPlayerSkin(playerid, CivFemalePeds[20][0]); SelectCharPlace[playerid] = 21; ChosenSkin[playerid] = CivFemalePeds[20][0]; }
				    else if(SelectCharPlace[playerid] == 21) { SetPlayerSkin(playerid, CivFemalePeds[21][0]); SelectCharPlace[playerid] = 22; ChosenSkin[playerid] = CivFemalePeds[21][0]; }
				    else if(SelectCharPlace[playerid] == 22) { SetPlayerSkin(playerid, CivFemalePeds[22][0]); SelectCharPlace[playerid] = 23; ChosenSkin[playerid] = CivFemalePeds[22][0]; }
				    else if(SelectCharPlace[playerid] == 23) { SetPlayerSkin(playerid, CivFemalePeds[23][0]); SelectCharPlace[playerid] = 24; ChosenSkin[playerid] = CivFemalePeds[23][0]; }
				    else if(SelectCharPlace[playerid] == 24) { SetPlayerSkin(playerid, CivFemalePeds[24][0]); SelectCharPlace[playerid] = 25; ChosenSkin[playerid] = CivFemalePeds[24][0]; }
				    else if(SelectCharPlace[playerid] == 25) { SetPlayerSkin(playerid, CivFemalePeds[25][0]); SelectCharPlace[playerid] = 26; ChosenSkin[playerid] = CivFemalePeds[25][0]; }
				    else if(SelectCharPlace[playerid] == 26) { SetPlayerSkin(playerid, CivFemalePeds[26][0]); SelectCharPlace[playerid] = 27; ChosenSkin[playerid] = CivFemalePeds[26][0]; }
				    else if(SelectCharPlace[playerid] == 27) { SetPlayerSkin(playerid, CivFemalePeds[27][0]); SelectCharPlace[playerid] = 28; ChosenSkin[playerid] = CivFemalePeds[27][0]; }
				    else if(SelectCharPlace[playerid] == 28) { SetPlayerSkin(playerid, CivFemalePeds[28][0]); SelectCharPlace[playerid] = 29; ChosenSkin[playerid] = CivFemalePeds[28][0]; }
				    else if(SelectCharPlace[playerid] == 29) { SetPlayerSkin(playerid, CivFemalePeds[29][0]); SelectCharPlace[playerid] = 30; ChosenSkin[playerid] = CivFemalePeds[29][0]; }
				    else if(SelectCharPlace[playerid] == 30) { SetPlayerSkin(playerid, CivFemalePeds[30][0]); SelectCharPlace[playerid] = 31; ChosenSkin[playerid] = CivFemalePeds[30][0]; }
				    else if(SelectCharPlace[playerid] == 31) { SetPlayerSkin(playerid, CivFemalePeds[31][0]); SelectCharPlace[playerid] = 32; ChosenSkin[playerid] = CivFemalePeds[31][0]; }
				    else if(SelectCharPlace[playerid] == 32) { SetPlayerSkin(playerid, CivFemalePeds[32][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = CivFemalePeds[32][0]; }
				}

			}
		    return 0;
		}
		else if ((strcmp("done", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("done")))
		{
		    if(ChangePos2[playerid][1] == 1)
		    {
		        SafeSetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        SafeSetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        //return 0;
		    }
		    PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
		    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			MedicBill[playerid] = 0;
			//SetPlayerSpawn(playerid);
			SetCameraBehindPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    SetTimerEx("backtoclothes", 500, false, "i", playerid);
			TogglePlayerControllable(playerid, 1);
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "* ”√∑®'next'œ¬“ª∏ˆ,'done'»∑∂®.");
		    return 0;
		}
	}

	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "…Ò∏∏: %s ƒ„‘∏“‚ %s ◊˜Œ™ƒ„µƒ∆ﬁ◊”¬? («Î ‰»Îyes).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "…Ò∏∏: %s ∫Õ %s –˚≤ºƒ„√«œ÷‘⁄∑Ú∆ﬁ¡À£¨ƒ„ø…“‘«◊Œ«–¬ƒÔ¡À.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "…Ò∏∏: %s ∫Õ %s –˚≤ºƒ„√«œ÷‘⁄∑Ú∆ﬁ¡À£¨ƒ„ø…“‘«◊Œ«–¬¿…¡À.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Ω·ªÈœ˚œ¢:  %s”Î%sΩ‚Œ™∑Ú∆ﬁ£¨»√Œ“√«◊£‘∏À˚√«.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "…Ò∏∏: %s ∫Õ %s –˚≤ºƒ„√«Õ¨–‘œ÷‘⁄∑Ú∆ﬁ¡À£¨ƒ„√«ø…“‘«◊Œ«¡À.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "…Ò∏∏: %s ∫Õ %s –˚≤ºƒ„√«Õ¨–‘œ÷‘⁄∑Ú∆ﬁ¡À£¨ƒ„√«ø…“‘«◊Œ«¡À.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Ω·ªÈœ˚œ¢:  %s”Î%sΩ‚Œ™Õ¨–‘∑Ú∆ﬁ£¨»√Œ“√«£°@#£§.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "…Ò∏∏: %s ∫Õ %s –˚≤ºƒ„√«Õ¨–‘œ÷‘⁄∑Ú∆ﬁ¡À£¨ƒ„√«ø…“‘«◊Œ«¡À.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "…Ò∏∏: %s ∫Õ %s –˚≤ºƒ„√«Õ¨–‘œ÷‘⁄∑Ú∆ﬁ¡À£¨ƒ„√«ø…“‘«◊Œ«¡À.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Ω·ªÈœ˚œ¢:  %s”Î%sΩ‚Œ™Õ¨–‘∑Ú∆ﬁ£¨»√Œ“√«£°@#£§.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					SafeGivePlayerMoney(playerid, - 20000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.",sendername);
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.",sendername);
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(WritingPaper[playerid] > 0)
	{
	    new line;
        new nstring[128];
        new idx;
        new length = strlen(text);
		while ((idx < length) && (text[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = text[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
		    if(WritingLine[playerid] == 1) { SendClientMessage(playerid, COLOR_GRAD2, "* Please type in the Title of your Newspaper."); }
		    else { SendClientMessage(playerid, COLOR_LIGHTRED, "* Please type in a Text Line of your Newspaper."); }
			return 0;
		}
		format(nstring, sizeof(nstring), "%s", text);
		switch(WritingLine[playerid])
		{
		    case 1:
		    {
		        new fstring[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(fstring, sizeof(fstring), "%s", sendername);
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperMaker], fstring, 0, strlen(fstring), 255);
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperTitle], nstring, 0, strlen(nstring), 255);
		        line = 0; WritingLine[playerid] = 2;
		        SendClientMessage(playerid, COLOR_LIGHTRED, "* Now you can write down the News Lines, 7 remaining.");
		    }
		    case 2:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText1], nstring, 0, strlen(nstring), 255);
		        line = 1; WritingLine[playerid] = 3;
		    }
		    case 3:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText2], nstring, 0, strlen(nstring), 255);
		        line = 2; WritingLine[playerid] = 4;
		    }
		    case 4:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText3], nstring, 0, strlen(nstring), 255);
		        line = 3; WritingLine[playerid] = 5;
		    }
		    case 5:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText4], nstring, 0, strlen(nstring), 255);
		        line = 4; WritingLine[playerid] = 6;
		    }
		    case 6:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText5], nstring, 0, strlen(nstring), 255);
		        line = 5; WritingLine[playerid] = 7;
		    }
		    case 7:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText6], nstring, 0, strlen(nstring), 255);
		        line = 6; WritingLine[playerid] = 8;
		    }
		    case 8:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText7], nstring, 0, strlen(nstring), 255);
		        PaperInfo[WritingPaperNumber[playerid]][PaperUsed] = 1;
		        SavePapers();
		        line = 7; WritingLine[playerid] = 0; WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999;
		    }
		}
		if(line > 0)
		{
			format(string, sizeof(string), "* You wrote Line %d of the Newspaper.", line);
			SendClientMessage(playerid, COLOR_WHITE, string);
			if(line == 7)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "* Your Newspaper has been added to the News List (for Paper Boys).");
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contracts", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contracts")))
		{
		    if(PlayerInfo[playerid][pRank] < 4)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Only Hitman with Rank 4 or above can search and assign Contracts !");
		        return 0;
		    }
		    SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("News", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("News")))
		{
		    	new x_nr[24];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ …± ÷ª˙ππ News __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "”√∑®: News [number] or News delete [number] or News delete all");
					format(string, sizeof(string), "1: %s :: Hitman: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: Hitman: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: Hitman: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: Hitman: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: Hitman: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
					return 0;
				}//lets start
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the …± ÷ª˙ππ's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 1 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the …± ÷ª˙ππ's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 2 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the …± ÷ª˙ππ's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 3 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the …± ÷ª˙ππ's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 4 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "* You placed a News Message on the …± ÷ª˙ππ's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 5 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"delete",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 4 to delete messages from the News Channel !");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[64];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, "”√∑®: News delete [number] or News delete all.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (1) from the …± ÷ª˙ππ's News Channel.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (2) from the …± ÷ª˙ππ's News Channel.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (3) from the …± ÷ª˙ππ's News Channel.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (4) from the …± ÷ª˙ππ's News Channel.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "* You deleted News Message (5) from the …± ÷ª˙ππ's News Channel.");
						return 0;
                    }
                    else if(strcmp(x_tel,"all",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "√ª»À");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_WHITE, "* You deleted all the News Message from the …± ÷ª˙ππ's News Channel.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "”√∑®: News delete [number] or News delete all.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("Givehit", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Givehit")))
		{
		    if(PlayerInfo[playerid][pRank] < 4)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You need Rank 4 to Give Contracts to Hitmans !");
		        return 0;
		    }
		    if(hitfound == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   There is no Hit Founded yet, use Contracts in the Portable first !");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "”√∑®: Givehit [ÕÊº“ID/ÕÊº“√˚◊÷]");
				return 0;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMember] == 8 || PlayerInfo[giveplayerid][pLeader] == 8)
				    {
					    if(GoChase[giveplayerid] < 999)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   That Hitman is already busy with a Contract !");
							return 0;
					    }
					    if(IsPlayerConnected(hitid))
				    	{
				        	GetPlayerName(playerid, sendername, sizeof(sendername));
				        	GetPlayerName(giveplayerid, giver, sizeof(giver));
				        	GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
				        	//format(string, sizeof(string), "* You assigned%s to kill: %s(ID:%d), for $%d.", giver, giveplayer, hitid, PlayerInfo[hitid][pValue]);
		    				//SendClientMessage(playerid, COLOR_YELLOW, string);
				        	//format(string, sizeof(string), "* Hitman %s has assigned you to kill: %s(ID:%d), for $%d.", sendername, giveplayer, hitid, PlayerInfo[hitid][pValue]);
		    				//SendClientMessage(giveplayerid, COLOR_YELLOW, string);
		    				format(string, sizeof(string), "* Hitman %s, assigned Hitman %s to kill: %s(ID:%d), for $%d.", sendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		    				SendFamilyMessage(8, COLOR_YELLOW, string);
		    				GoChase[giveplayerid] = hitid;
		    				GetChased[hitid] = giveplayerid;
		    				GotHit[hitid] = 1;
		    				hitid = 0;
		    				hitfound = 0;
				        	return 0;
				    	}
				    	else
				    	{
				        	SendClientMessage(playerid, COLOR_GREY, "   The Contracted Person is offline, use Contracts in the Portable again !");
				        	return 0;
				    	}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not a Hitman !");
						return 0;
					}
				}
				return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That Hitman is not Online, or ain't a Hitman !");
			    return 0;
			}
		}
		else if ((strcmp("Ranks", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Ranks")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Agency's Ranks __________________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMember] == 8||PlayerInfo[i][pLeader] == 8)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* %s: Rank %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("Order", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Order")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You already Ordered a Package, pick it up at your Head Quarter's Front Door first !");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pRank] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 4999)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 1 ($5000), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 5999)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 2 ($6000), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 5999)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 3 ($6000), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 7999)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 4 ($8000), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 7999)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 5 ($8000), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 8499)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 6 ($8500), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   Your Rank is not high enough to Order that Package !"); return 0; }
			    if(GetPlayerMoney(playerid) > 8499)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "* You have Ordered Package 7 ($8500), it will be delivered at your Head Quarter's Front Door.");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   You can't afford that Package !");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Available Packages __________________|");
			    if(PlayerInfo[playerid][pRank] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) ($5000 ) Rank 1 - 5: Knife, Desert Eagle, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) ($6000 ) Rank 2 - 5: Knife, Desert Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) ($6000 ) Rank 2 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) ($8000) Rank 3 - 5: Knife, Desert Eagle, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) ($8000) Rank 3 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) ($8500) Rank 4 - 5: Knife, Desert Eagle, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) ($8500) Rank 4 - 5: Knife, Desert Eagle, AK47, MP5, Shotgun, Sniper"); }
			    SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
			    return 0;
			}
		}
		else if ((strcmp("Logout", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Logout")))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "* You have shutdowned your Laptop, and Disconnected from your Agency.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "|___ …± ÷ª˙ππ ___|");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Backup");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
		    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
		    return 0;
		}
	    return 0;
	}
	if(CallLawyer[playerid] == 111)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "** %s ‘⁄º‡”¸¿Ô, –Ë“™“ª∏ˆ¬… ¶. «∞Õ˘æØæ÷.", sendername);
	    	SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
	    	SendJobMessage(2, TEAM_AZTECAS_COLOR, "* µ±ƒ„‘⁄æØ≤Ïæ÷, Œ “ª∏ˆæØπŸ≈˙◊º π”√ /accept lawyer Ω” ‹¬… ¶.");
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "ƒ„µƒ«Î«Û“—æ≠∑¢ÀÕµΩ¬… ¶ƒ«¿Ô,«ÎƒÕ–ƒµ»¥˝.");
	    	WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "œ÷‘⁄√ª”–¬… ¶Ã·π©∏¯ƒ„, ƒ„µƒº‡”¸…˙ªÓø™ º.");
		    WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pJob] == 6)
		{
		    format(string, sizeof(string), "LiveNR %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
		    format(string, sizeof(string), "œ÷≥°≤…∑√ %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(UnidentifedCall[playerid] == 1)
		{
		    format(string, sizeof(string), "ƒ∞…˙»ÀÀµ( ÷ª˙): %s", text);
		}
		else
		{
			format(string, sizeof(string), "%sÀµ( ÷ª˙): %s", sendername, text);
		}
        ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if(Mobile[playerid] == 914)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "µ˜∂»: ±ß«∏,Œ“√ª”–√˜∞◊?");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "µ˜∂»: Œ““—Õ®÷™∏√µÿ«¯µƒÀ˘”–µ•Œª.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "–ª–ª∫œ◊˜");
			format(wanted, sizeof(wanted), "µ˜∂»: À˘”–IAµ•Œª: ¿¥µÁ: %s",turner);
			format(wanted, sizeof(wanted), "µ˜∂»:  ¬º˛: %s",text);
			SendRadioMessage(1, TEAM_CYAN_COLOR, wanted);
			SendRadioMessage(2, TEAM_CYAN_COLOR, wanted);
			SendRadioMessage(3, TEAM_CYAN_COLOR, wanted);
			SendRadioMessage(4, TEAM_CYAN_COLOR, wanted);
			SendRadioMessage(12, TEAM_CYAN_COLOR, wanted);
			new Float:trace_x, Float:trace_y, Float:trace_z;
			GetPlayerPos(playerid, trace_x, trace_y, trace_z);
			emdtrace = 1; emdtrace_x = trace_x; emdtrace_y = trace_y; emdtrace_z = trace_z;
			SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ΩÙº±◊¥øˆ: ±ß«∏,Œ“√ª”–√˜∞◊?");
				return 0;
			}
			if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "æØ≤Ïµ˜∂»: Œ““—Õ®÷™∏√µÿ«¯µƒÀ˘”–µ•Œª.");
				SendClientMessage(playerid, COLOR_DBLUE, "–ª–ª∫œ◊˜");
				format(wanted, sizeof(wanted), "◊‹≤ø: À˘”–APBµ•Œª: ±®∏Ê»À: %s",turner);
				format(wanted, sizeof(wanted), "◊‹≤ø: ◊Ô––: %s, ∑∏◊Ôœ”“…»À: Œ¥÷™",PlayerCrime[playerid][pAccusing]);
				SendRadioMessage(1, TEAM_CYAN_COLOR, wanted);
				SendRadioMessage(2, TEAM_CYAN_COLOR, wanted);
				SendRadioMessage(3, TEAM_CYAN_COLOR, wanted);
				new Float:trace_x, Float:trace_y, Float:trace_z;
				GetPlayerPos(playerid, trace_x, trace_y, trace_z);
				pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
				SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "æØ≤Ïµ˜∂»: ƒ„Ω´¡™œµƒ⁄ŒÒ≤ø,’‚ «“ª∏ˆΩÙº±◊¥øˆ");
						SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "æØ≤Ïµ˜∂»: ∏˜µ•Œª“—æ≠Ω”µΩ’‚∏ˆ∞∏«È");
						SendClientMessage(playerid, COLOR_DBLUE, "–ª–ª∫œ◊˜");
						SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "æØ≤Ïµ˜∂»: ≤ª“™Àƒ¥¶◊ﬂ∂Ø,’‚ «“ª∏ˆΩÙº±œﬂ.");
						SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "æØ≤Ïµ˜∂»: Œ““—Õ®÷™∏√µÿ«¯µƒÀ˘”–µ•Œª.");
					SendClientMessage(playerid, COLOR_DBLUE, "–ª–ª∫œ◊˜");
					new Float:trace_x, Float:trace_y, Float:trace_z;
					GetPlayerPos(playerid, trace_x, trace_y, trace_z);
					pdtrace = 1; pdtrace_x = trace_x; pdtrace_y = trace_y; pdtrace_z = trace_z;
					SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "æØ≤Ïµ˜∂»: Œ“√«’‚¿Ô√ª”– %s …Ì∑›–≈œ¢, ƒ„»∑∂®’‚ «’˝»∑µƒ√˚≥∆√¥?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ΩÙº±◊¥øˆ: ±ß«∏,Œ“√ª”–√˜∞◊?");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "æØ≤Ïæ÷: ƒ„÷™µ¿œÆª˜’ﬂµƒ√˚◊÷ªÚ≤ø∑÷◊ ¡œ«Î∏ÊÀﬂŒ“.");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 911)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ΩÙº±◊¥øˆ: ±ß«∏Œ“√ª”–√˜∞◊,ƒ„ «–Ë“™æØ≤Ï ªπ « “ΩŒÒ»À‘±?");
				return 0;
			}
			else if ((strcmp("æØ≤Ï", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("æØ≤Ï")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ΩÙº±◊¥øˆ: Œ“Œ™ƒ„◊™Ω”æØ≤Ïæ÷,«Î…‘µ».");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "◊‹≤ø: «ÎºÚµ•√Ë ˆœ¬ ¬º˛∫Õƒ„µ±«∞µƒŒª÷√.");
				return 0;
			}
			else if ((strcmp("“ΩŒÒ»À‘±", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("“ΩŒÒ»À‘±")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ΩÙº±◊¥øˆ: Œ“Œ™ƒ„◊™Ω”“Ω‘∫,«Î…‘µ».");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "µ˜∂»: «ÎºÚµ•√Ë ˆœ¬ ¬º˛∫Õƒ„µ±«∞µƒŒª÷√.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ΩÙº±◊¥øˆ: ±ß«∏Œ“√ª”–√˜∞◊,ƒ„ «–Ë“™æØ≤Ï ªπ « “ΩŒÒ»À‘±?");
				return 0;
			}
		}
		if(Mobile[playerid] == 3900)
		{
			SendFamilyMessage(9, COLOR_GREEN, "ƒ„”–“ªÃı–¬œ˚œ¢:");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[ID:%d] %s Àµ: %s", playerid, sendername, text);
			SendFamilyMessage(9, COLOR_GREEN, string);
			SendClientMessage(playerid, COLOR_GREEN, "π„≤•π´Àæ: ∏––ªƒ„µƒ¿¥µÁ !");
			SendClientMessage(playerid, COLOR_SEA, "∂‘∑Ωπ“µÁª∞¡À...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 1180)
		{
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GREEN, "π„∏Ê“µŒÒ: «ÎŒ ƒ˙œÎøØµ«π„∏Ê¬?");
				return 0;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(text);
			while ((idx < length) && (text[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = text[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1))
			{
				format(string, sizeof(string), "   «Î…‘∫Ú‘Ÿ ‘,–Ë“™º‰∏Ù%d√Îπ„∏Ê !",  (addtimer/1000));
				SendClientMessage(playerid, COLOR_GRAD2, string);
				return 1;

			}
			new payout = idx * 10;
			if(GetPlayerMoney(playerid) < payout + 200)
	        {
	            format(string, sizeof(string), "* ƒ„ π”√¡À %d ◊÷∑˚,–Ë“™ª®∑— $%d,ƒ„√ª”–◊„πªµƒ«Æ.", offset, payout);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	            return 1;
	        }
	        SafeGivePlayerMoney(playerid, - payout);
	        SafeGivePlayerMoney(playerid, - 200);
			SBizzInfo[7][sbTill] += payout + 200;
			ExtortionSBiz(7, payout + 200);

 			new pnumber[128];
			if(PlayerInfo[playerid][pPnumber] != 0)
			{
				format(pnumber,sizeof(pnumber), "%d",PlayerInfo[playerid][pPnumber]);
			}
			else
			{
		    	pnumber = "Œﬁ";
			}

			format(string, sizeof(string), "π„∏Ê: %s, ¡™œµ %s (µÁª∞: %s)",  result,sendername, pnumber);
			OOCNews(TEAM_GROVE_COLOR,string);
			format(string, sizeof(string), "~r~Paid $%d~n~~w~Message contained: %d Characters~n~~w~Plus ~g~100$~w~ for ad through phone", payout, idx);
			GameTextForPlayer(playerid, string, 5000, 1);
			if (PlayerInfo[playerid][pAdmin] < 1){SetTimer("AddsOn", addtimer, 0);adds = 0;}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				if(PlayerInfo[Mobile[playerid]][pSpeaker] == 1)
				{
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
				    SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"”–»À√¥");
		}
		format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %sÀµ( ÷ª˙): %s", d,m,y,h,mi,s, sendername, text);
		ChatLog(string);
		return 0;
	}
	if (BusShowLocation[playerid][0] == 1)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
			SetPlayerCheckpoint(playerid, BusShowLocation[playerid][1], BusShowLocation[playerid][2], BusShowLocation[playerid][3], 3.0);
			SendClientMessage(playerid, COLOR_YELLOW, "Œª÷√(∫Ï…´ºÏ≤È’æ), ƒ„◊Ó∫√øÏµ„!");
			BusShowLocation[playerid][0] = 0;
			BusShowLocationC[playerid] = 1;
			return 0;
		}
		else
		{
			BusShowLocation[playerid][0] = 0;
			return 0;
		}
	}
	if (PlayerInfo[playerid][pChatMode] == 0) // By CuervO_NegrO
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
      	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
			return 0;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new playercar = GetPlayerVehicleID(playerid);
		new y1,m1,d1;
		new h1,mi1,s1;
		getdate(y1,m1,d1);
		gettime(h1,mi1,s1);
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
			    format(string, sizeof(string), "π‹¿ÌÀµ: %s", text);
			    SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
		    	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local Admin): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
				ChatLog(string);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
			{
				format(string, sizeof(string), "ƒ∞…˙»À Àµ: %s", text);
                SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local Masked): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
				ChatLog(string);
			}
   			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
 				if(KillSpawnStart[playerid] == 1)
    			{
    				format(string, sizeof(string), "%s –È»ıµƒÀµ: %s {EEEE88}(ƒ„ø…“‘ π”√/helpbz∞Ô÷˙À˚)", sendername, text);
		    		SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
					ChatLog(string);
				}else
				{
		    		format(string, sizeof(string), "%s Àµ: %s", sendername, text);
		    		SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
					ChatLog(string);
				}
			}
		}
		else
		{
		    if(IsModelAPlane(playercar) || IsModelABike(playercar) || IsModelAHeli(playercar) || IsModelABoat(playercar) || IsModelASpecial(playercar))
		    {

				if(PlayerInfo[playerid][pAdminDuty] == 1)
				{
				    format(string, sizeof(string), "π‹¿ÌÀµ: %s", text);
				    SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
				    ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
					ChatLog(string);
				}
				if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
				{
					format(string, sizeof(string), "ƒ∞…˙»À Àµ: %s", text);
					SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
					ChatLog(string);
				}
				if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
				{
 					if(KillSpawnStart[playerid] == 1)
    				{
    					format(string, sizeof(string), "%s –È»ıµƒÀµ: %s {EEEE88}(ƒ„ø…“‘ π”√/helpbz∞Ô÷˙À˚)", sendername, text);
		    			SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
						ChatLog(string);
					}else
					{
		    			format(string, sizeof(string), "%s Àµ: %s", sendername, text);
		    			SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
						ChatLog(string);
					}
				}
		    }
		    else
		    {
		    	if(VehicleWindows[GetPlayerVehicleID(playerid)] == 0)
		    	{

					if(PlayerInfo[playerid][pAdminDuty] == 1)
					{
				    	format(string, sizeof(string), "(¥∞ø⁄πÿ±’) Admin Àµ: %s", text);
				    	SetPlayerChatBubble(playerid, string, COLOR_NICERED, 10.0, 8000);
				    	ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Windows Shut): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(¥∞ø⁄πÿ±’) ƒ∞…˙»À Àµ: %s", text);
						SetPlayerChatBubble(playerid, string, COLOR_WHITE, 10.0, 8000);
						ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Windows Shut): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
					{
 						if(KillSpawnStart[playerid] == 1)
    					{
    						format(string, sizeof(string), "%s –È»ıµƒÀµ: %s {EEEE88}(ƒ„ø…“‘ π”√/helpbz∞Ô÷˙À˚)", sendername, text);
		    				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
							ChatLog(string);
						}else
	  					{
		    				format(string, sizeof(string), "(¥∞ø⁄πÿ±’) %s Àµ: %s", sendername, text);
		    				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 10.0, 8000);
		    				ProxDetector(10.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (¥∞ø⁄πÿ±’): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
							ChatLog(string);
						}
					}
				}
				else
				{

					if(PlayerInfo[playerid][pAdminDuty] == 1)
					{
				    	format(string, sizeof(string), "(¥∞ø⁄¥Úø™) π‹¿ÌÀµ: %s", text);
				    	SetPlayerChatBubble(playerid, string, COLOR_NICERED, 20.0, 8000);
				    	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Admin Windows Open): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 1)
					{
						format(string, sizeof(string), "(¥∞ø⁄¥Úø™) ƒ∞…˙»À Àµ: %s", text);
						SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
						ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
						format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Masked Windows Open): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
						ChatLog(string);
					}
					if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
					{
 						if(KillSpawnStart[playerid] == 1)
    					{
    						format(string, sizeof(string), "%s –È»ıµƒÀµ: %s {EEEE88}(ƒ„ø…“‘ π”√/helpbz∞Ô÷˙À˚)", sendername, text);
		    				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (Local): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
							ChatLog(string);
						}else
						{
		    				format(string, sizeof(string), "(¥∞ø⁄¥Úø™) %s Àµ: %s", sendername, text);
		    				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 20.0, 8000);
		    				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
							format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (¥∞ø⁄¥Úø™): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
							ChatLog(string);
						}
					}
				}
			}
		}
		return 0;
	}
	else if (PlayerInfo[playerid][pChatMode] == 1) // By CuervO_NegrO
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
      	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„±ªΩ˚—‘¡À,–Ë“™±£≥÷≥¡ƒ¨");
			return 0;
		}
		if(noooc == 1 && PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "ƒ„≤ªø…“‘Àµª∞,OOC∆µµ¿“—æ≠πÿ±’¡À");
			return 0;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new y1,m1,d1;
		new h1,mi1,s1;
		getdate(y1,m1,d1);
		gettime(h1,mi1,s1);
		if(PlayerInfo[playerid][pAdmin] == 0)
		{
			format(string, sizeof(string), "(( %s ))", text);
		}
		else
		{
		    format(string, sizeof(string), "[[ %s ]]", text);
		}
   		SendPlayerMessageToAll(playerid, string);
		format(string, sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s (OOC): %s",d1,m1,y1,h1,mi1,s1, sendername, text);
		PublicLog(string);
		return 0;
	}
	return 1;
}

dcmd_xgoto(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new Float:x, Float:y, Float:z;
		new string[100];
		if (sscanf(params, "fff", x, y, z)) SendClientMessage(playerid, 0xFF0000AA, "”√∑®: \"/xgoto <X ◊¯±Í> <Y ◊¯±Í> <Z ◊¯±Í>\"");
		else
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
		        SetVehiclePos(GetPlayerVehicleID(playerid), x,y,z);
			}
			else
			{
		    	SafeSetPlayerPos(playerid, x, y, z);
			}
		    format(string, sizeof(string), "ƒ„…Ë÷√µƒ◊¯±Í: %f, %f, %f", x, y, z);
		    SendClientMessage(playerid, 0xBBBBBBAA, string);
	 	}
	}
 	return 1;
}

dcmd_gpsfind(playerid, params[])
{
	new Float:x, Float:y;
	new string[100];
	if(PlayerInfo[playerid][pGPS] == 1)
 	{
		if (sscanf(params, "ff", x, y))
		{
			SendClientMessage(playerid, 0xBBBBBBAA, "Ã· æ: /gpsfind <X> <Y>");
			SendClientMessage(playerid, 0xBBBBBBAA, "Ã· æ: /gpsfind 0 0 Ω´À˚πÿ±’.");
			return 1;
		}
		else
		{
		    if((x == 0 && y == 0) && Gps[playerid] == 1)
			{
			    Gps[playerid] = 0;
			    SendClientMessage(playerid, 0xFFFFFFFF, "ƒ„πÿ±’¡Àƒ„µƒGPS");
			    TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
			}
		    else
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			        Gps[playerid] = 1;
			        SetPlayerRouting(playerid, x,y);
				    format(string, sizeof(string), "ƒ„…Ë÷√µƒ◊¯±Í: %f, %f", x, y);
				    SendClientMessage(playerid, 0xFFFFFFFF, string);
				    TextDrawShowForPlayer(playerid, Textdraw53[playerid]);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ƒ„≤ª‘⁄≥µ…œ");
				    return 1;
				}
			}
	 	}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GREY, "* ƒ„√ª”–GPS,ƒ„ø…“‘µΩ…ÃµÍπ∫¬Ú");
	    return 1;
	}
 	return 1;
}

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SafeSetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SafeSetPlayerInterior(playerid,14);
	}
}

public AddsOn()
{
	adds=1;
	return 1;
}

public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid) || IsAFreecop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerInfo[i][pDuty] == 1)
					    {
							if(IsACop(i) || IsAFreecop(i))
							{
								SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
							}
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "ƒ„µƒ±∏∑›“™«Û“—±ª«Â≥˝.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "ƒ„µƒ±∏∑›“™«Û“—◊‘∂Ø«Â≥˝.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_DARKNICERED, "ƒ˙√ª”–“ª∏ˆªÓ‘æ±∏”√«Î«Û!");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª «æØ≤Ï!");
			}
		}
	}
	return 1;
}

/*public ResetRoadblockTimer()
{
	roadblocktimer = 0;
	return 1;
}*/

public RemoveRoadblock(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
			{
				DisablePlayerCheckpoint(i);
			}
		}
	}
	DestroyDynamicObject(PlayerInfo[playerid][pRoadblock]);
	PlayerInfo[playerid][pRoadblock] = 0;
	return 1;
}

public IsPlayerInArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy)
{
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    if (x > minx && x < maxx && y > miny && y < maxy) return 1;
    return 0;
}

public AdvertiseToPlayersAtBusStop(Float:stopX, Float:stopY, Float:stopZ, eastorwest)
{
	for (new i; i<=MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i) && BusrouteWest[i][0] == 0 && BusrouteEast[i][0] == 0)
		{
			if (IsPlayerInRangeOfPoint(i, 100, stopX, stopY, stopZ))
			{
				SendClientMessage(i, TEAM_AZTECAS_COLOR, "π´Ωª≥µµΩ’æ¡À. œﬂ¬∑»Áœ¬:");
				if (eastorwest == 0) SendBusRoute(i, 0);
				else SendBusRoute(i, 1);
				SendClientMessage(i, TEAM_AZTECAS_COLOR, "ƒ„œÎø¥’‚“ª’æµƒŒª÷√√¥? (yes/no)");
				BusShowLocation[i][0] = 1;
				BusShowLocation[i][1] = stopX;
				BusShowLocation[i][2] = stopY;
				BusShowLocation[i][3] = stopZ;
			}
		}
	}
	return 1;
}

public SendBusRoute(playerid, eastorwest)
{
	if (eastorwest == 0)
	{
		// East
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "π´Ωª≥µ’æ >> ª˙≥° >> Œ÷∑Úπ§≥ß >> ¬Âøﬂ >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "6Ω÷π„≥° >> 10∫≈Ω÷«¯ >> ÷Ì»¶ >> Ω…´◊ÿóo…ÁÖ^ >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "Ω‹Ï≥—∑∆˚≥µ¬√π› >> ∏Ò¬◊π´‘∞ >> ªÿπ´Ωª≥µ’æ <<");
	}
	else
	{
		// West
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "π´Ωª≥µ’æ >> ∞¢¿º≤º¿≠æ∆∞… >> ∏Ò¬◊π´‘∞ >> ∫√¿≥ŒÎ∫∫±§µÍ >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "∑∏◊ÔæÁ‘∫ >> “¯–– >> »¶µÿ >>  •¬Í¿˚—«∫£Ã≤ >> Œ¨¬ﬁƒ…∫£Ã≤ >>");
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, " –÷––ƒπ„≥° >> ªÿπ´Ωª≥µ’æ <<");
	}
	return 1;
}

public IsInBusrouteZone(playerid)
{
	if (IsPlayerInArea(playerid, 1722.3599, 2901.8652, -2694.5417, -904.3515)) return 0; // east
	else if (IsPlayerInArea(playerid, 127.4722, 1722.3599, -2694.5417, -904.3515)) return 1; // west
	return 1;
}

public BusrouteEnd(playerid, vehicleid)
{
	if (BusrouteEast[playerid][0] != 0 || BusrouteWest[playerid][0] != 0)
	{
		SendClientMessage(playerid, COLOR_BLUE, "π´Ωª≥µ¬∑œﬂµΩ÷’µ„’æ¡À.");
		GameTextForPlayer(playerid, "~r~Bus Route Ended", 5000, 3);
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
	}
	DisablePlayerCheckpoint(playerid);
	if (vehicleid != 0) SetVehicleToRespawn(vehicleid);
	BusrouteEast[playerid][0] = 0;
	BusrouteEast[playerid][1] = 0;
	//BusrouteEast[playerid][2] = 0;
	BusrouteWest[playerid][0] = 0;
	BusrouteWest[playerid][1] = 0;
	//BusrouteWest[playerid][2] = 0;
	return 1;
}

public CreateFoodMenus() //
{
	// Burger Shot
	burgermenu = CreateMenu("Burger Shot", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(burgermenu,0,"Meals");
	AddMenuItem(burgermenu,0,"Sharp Shooter");
	AddMenuItem(burgermenu,0,"Cheeseburger");
	AddMenuItem(burgermenu,0,"Double Patty Sandwich");
	AddMenuItem(burgermenu,0,"Beefy Salad");
	AddMenuItem(burgermenu,0," ");
	AddMenuItem(burgermenu,0,"Drinks");
	AddMenuItem(burgermenu,0,"Bottle of Water");
	AddMenuItem(burgermenu,0,"Sprunk");
	AddMenuItem(burgermenu,0," ");
	AddMenuItem(burgermenu,0,"Leave");
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1,"$2"); // Sharp Shooter
	AddMenuItem(burgermenu,1,"$4"); // Cheeseburger
	AddMenuItem(burgermenu,1,"$5"); // DP Sandwich
	AddMenuItem(burgermenu,1,"$3"); // Beefy Salad
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1,"$1"); // Water
	AddMenuItem(burgermenu,1,"$1"); // Sprunk
	AddMenuItem(burgermenu,1," ");
	AddMenuItem(burgermenu,1," ");
	DisableMenuRow(burgermenu, 0);
	DisableMenuRow(burgermenu, 5);
	DisableMenuRow(burgermenu, 6);
	DisableMenuRow(burgermenu, 9);

	// Cluckin Bell
	chickenmenu = CreateMenu("Cluckin' Bell", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(chickenmenu,0,"Meals");
	AddMenuItem(chickenmenu,0,"Little Clucker");
	AddMenuItem(chickenmenu,0,"Chicken Nuggets");
	AddMenuItem(chickenmenu,0,"Chicken Sandwich");
	AddMenuItem(chickenmenu,0,"Chicken Salad");
	AddMenuItem(chickenmenu,0," ");
	AddMenuItem(chickenmenu,0,"Drinks");
	AddMenuItem(chickenmenu,0,"Bottle of Water");
	AddMenuItem(chickenmenu,0,"Sprunk");
	AddMenuItem(chickenmenu,0," ");
	AddMenuItem(chickenmenu,0,"Leave");
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1,"$2"); // Little Clucker
	AddMenuItem(chickenmenu,1,"$4"); // Nuggets
	AddMenuItem(chickenmenu,1,"$5"); // C Sandwich
	AddMenuItem(chickenmenu,1,"$3"); // Salad
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1,"$1"); // Water
	AddMenuItem(chickenmenu,1,"$1"); // Sprunk
	AddMenuItem(chickenmenu,1," ");
	AddMenuItem(chickenmenu,1," ");
	DisableMenuRow(chickenmenu, 0);
	DisableMenuRow(chickenmenu, 5);
	DisableMenuRow(chickenmenu, 6);
	DisableMenuRow(chickenmenu, 9);

	// Pizza Stack
	pizzamenu = CreateMenu("Well Stacked Pizza", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(pizzamenu,0,"Meals");
	AddMenuItem(pizzamenu,0,"Little Sicilian");
	AddMenuItem(pizzamenu,0,"Personal Pan Pizza");
	AddMenuItem(pizzamenu,0,"Sheet Pizza");
	AddMenuItem(pizzamenu,0,"Pepperoni Salad");
	AddMenuItem(pizzamenu,0," ");
	AddMenuItem(pizzamenu,0,"Drinks");
	AddMenuItem(pizzamenu,0,"Bottle of Water");
	AddMenuItem(pizzamenu,0,"Sprunk");
	AddMenuItem(pizzamenu,0," ");
	AddMenuItem(pizzamenu,0,"Leave");
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1,"$2"); // Sicilian
	AddMenuItem(pizzamenu,1,"$4"); // Personal Pan
	AddMenuItem(pizzamenu,1,"$5"); // Sheet
	AddMenuItem(pizzamenu,1,"$3"); // Salad
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1,"$1"); // Water
	AddMenuItem(pizzamenu,1,"$1"); // Sprunk
	AddMenuItem(pizzamenu,1," ");
	AddMenuItem(pizzamenu,1," ");
	DisableMenuRow(pizzamenu, 0);
	DisableMenuRow(pizzamenu, 5);
	DisableMenuRow(pizzamenu, 6);
	DisableMenuRow(pizzamenu, 9);

	// Jim's sticky ring
	donutshop = CreateMenu("Jim's sticky ring", 2, 200.0, 100.0, 150.0, 150.0);
	AddMenuItem(donutshop,0,"Donuts");
	AddMenuItem(donutshop,0,"Little Donut");
	AddMenuItem(donutshop,0,"Regular Donut");
	AddMenuItem(donutshop,0,"Chief Donut");
	AddMenuItem(donutshop,0,"Extra large Donut");
	AddMenuItem(donutshop,0," ");
	AddMenuItem(donutshop,0,"Drinks");
	AddMenuItem(donutshop,0,"Bottle of Water");
	AddMenuItem(donutshop,0,"Sprunk");
	AddMenuItem(donutshop,0," ");
	AddMenuItem(donutshop,0,"Leave");
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1,"$2"); // Little Donut
	AddMenuItem(donutshop,1,"$4"); // Regular Donut
	AddMenuItem(donutshop,1,"$5"); // Chief Donut
	AddMenuItem(donutshop,1,"$4"); // Extra large Donut
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1,"$1"); // Water
	AddMenuItem(donutshop,1,"$1"); // Sprunk
	AddMenuItem(donutshop,1," ");
	AddMenuItem(donutshop,1," ");
	DisableMenuRow(donutshop, 0);
	DisableMenuRow(donutshop, 5);
	DisableMenuRow(donutshop, 6);
	DisableMenuRow(donutshop, 9);
}

public OnPlayerEnterFood(playerid, foodid)
{
	switch (foodid)
	{
		case 1: // chicken
		{
			SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.5);
			GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
			InAFoodPlace[playerid] = 1;
		}
		case 2: // burger
		{
			SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.5);
			GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
			InAFoodPlace[playerid] = 2;
		}
		case 3: // pizza
		{
			SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
			GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
			InAFoodPlace[playerid] = 3;
		}
		case 4: // donuts
		{
			SetPlayerCheckpoint(playerid, 379.0611,-186.6032,1000.6328, 0.8);
			GameTextForPlayer(playerid, "~w~Jim's sticky ring", 5000, 1);
			InAFoodPlace[playerid] = 4;
		}
	}
	return 1;
}

public OnPlayerExitFood(playerid)
{
	DisablePlayerCheckpoint(playerid);
	InAFoodPlace[playerid] = 0;
	return 1;
}

public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}

public CreateLicensesMenus()
{
	Licenses = CreateMenu("Licenses", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(Licenses, 0, "Driving Licenses");
	AddMenuItem(Licenses, 0, "Flying Licenses");
	AddMenuItem(Licenses, 0, "Sailing Licenses");
	AddMenuItem(Licenses, 0, "[Exit]");

}

public CreateLegalJobsMenus()
{
	LegalJobs = CreateMenu("Legal Jobs", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(LegalJobs, 0, "Detective");
	AddMenuItem(LegalJobs, 0, "Lawyer");
	AddMenuItem(LegalJobs, 0, "Waiter");
	AddMenuItem(LegalJobs, 0, "Boxer");
	AddMenuItem(LegalJobs, 0, "Trucker");
	AddMenuItem(LegalJobs, 0, "Farmer");
	AddMenuItem(LegalJobs, 0, "Stuntman");
	AddMenuItem(LegalJobs, 0, "[Next Page]");
	AddMenuItem(LegalJobs, 0, "[Exit]");

	LegalJobs2 = CreateMenu("Legal Jobs", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(LegalJobs2, 0, "Taxi Driver");
	AddMenuItem(LegalJobs2, 0, "Bus Driver");
	AddMenuItem(LegalJobs2, 0, "Paper Boy");
	AddMenuItem(LegalJobs2, 0, "Pizza Boy");
	AddMenuItem(LegalJobs2, 0, "Street Sweeper");
	AddMenuItem(LegalJobs2, 0, "Car Mechanic");
	AddMenuItem(LegalJobs2, 0, "Body Guard");
	AddMenuItem(LegalJobs2, 0, "[Previous Page]");
	AddMenuItem(LegalJobs2, 0, "[Exit]");

}

public CreateGuideMenus()
{
	Guide = CreateMenu("newspaper", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(Guide, 0, "Rules");
	AddMenuItem(Guide, 0, "Job locations");
	AddMenuItem(Guide, 0, "License center");
	AddMenuItem(Guide, 0, "Car rental");
	AddMenuItem(Guide, 0, "Clothes shop");
	AddMenuItem(Guide, 0, "Bank");
	AddMenuItem(Guide, 0, "[Exit]");

	JobLocations = CreateMenu("JobLocations", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(JobLocations, 0, "Detective");
	AddMenuItem(JobLocations, 0, "Lawyer");
	AddMenuItem(JobLocations, 0, "Waiter");
	AddMenuItem(JobLocations, 0, "Boxer");
	AddMenuItem(JobLocations, 0, "Trucker");
	AddMenuItem(JobLocations, 0, "Farmer");
	AddMenuItem(JobLocations, 0, "Taxi Driver");
	AddMenuItem(JobLocations, 0, "Bus Driver");
	AddMenuItem(JobLocations, 0, "[Next Page]");
	AddMenuItem(JobLocations, 0, "[Exit]");

	JobLocations2 = CreateMenu("JobLocations", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(JobLocations2, 0, "Paper Boy");
	AddMenuItem(JobLocations2, 0, "Pizza Boy");
	AddMenuItem(JobLocations2, 0, "Street Sweeper");
	AddMenuItem(JobLocations2, 0, "Car Mechanic");
	AddMenuItem(JobLocations2, 0, "Body Guard");
	AddMenuItem(JobLocations2, 0, "Stuntman");
	AddMenuItem(JobLocations2, 0, "Whore");
	AddMenuItem(JobLocations2, 0, "[Next Page]");
	AddMenuItem(JobLocations2, 0, "[Previous Page]");
	AddMenuItem(JobLocations2, 0, "[Exit]");

 	JobLocations3 = CreateMenu("JobLocations", 1, 50.0, 180.0, 200.0, 200.0);
	AddMenuItem(JobLocations3, 0, "Drugs Dealer");
	AddMenuItem(JobLocations3, 0, "Drugs Farmer");
	AddMenuItem(JobLocations3, 0, "Drugs Smuggler");
	AddMenuItem(JobLocations3, 0, "Materials Smuggler");
	AddMenuItem(JobLocations3, 0, "Gun Maker");
	AddMenuItem(JobLocations3, 0, "[Previous Page]");
	AddMenuItem(JobLocations3, 0, "[Exit]");

}

public Startup(playerid, vehicleid)
{
    new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
    new newcar = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER || engineOn[vehicleid])
	{
		//I do nothing!
	}
	else if(PlayerInfo[playerid][pAdminDuty] == 1)
	{
	    if(engineOn[vehicleid] == 0)
	    {
	    	engineOn[vehicleid] = 1;
		}
	    TogglePlayerControllable(playerid, true);
	}
	else if(IsModelAPlane(vehicleid) || IsModelAHeli(vehicleid))
	{
	    if(engineOn[vehicleid] == 0)
	    {
	    	engineOn[vehicleid] = 1;
		}
	    TogglePlayerControllable(playerid, true);
	}
	else if(IsPlayerInAnyVehicle(playerid) && !engineOn[vehicleid] && !vehicleEntered[playerid][vehicleid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pveh != 510 && newcar != 59 && newcar != 60 && !IsAHarvest(newcar) && !IsADrugHarvest(newcar) && !IsASweeper(newcar) && !IsASalesVehicle(newcar))
	{
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "{0FFFFF}◊¢“‚!{FFFFF0}«Î∞¥{0F21FF}C{FFFFF0}¿¥∆Ù∂Ø∑¢∂Øª˙{0F21FF}H{FFFFF0}πÿ±’∑¢∂Øª˙!");
		TogglePlayerControllable(playerid, false);
		vehicleEntered[playerid][vehicleid] = true;
		if(PlayerInfo[playerid][pSpeedo] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„”–ÀŸ∂»±Ìƒ„ø…“‘ ‰»Î/speedo∆Ù∂ØªÚπÿ±’ÀŸ∂»±Ì!");
		}
		if(IsModelABike(GetPlayerVehicleID(playerid)))
		{
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "º«◊°: ¥¯…œ∞≤»´Õ∑ø¯∏¸∞≤»´! (/helmet)");
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "º«◊°: ƒ„‘⁄ø™≥µº«µ√π“…œ∞≤»´¥¯∏¸∞≤»´! (/belt)");
		}
	}
	else if(IsPlayerInAnyVehicle(playerid) && !engineOn[vehicleid] && vehicleEntered[playerid][vehicleid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && pveh != 510 && newcar != 59 && newcar != 60 && !IsAHarvest(newcar) && !IsADrugHarvest(newcar) && !IsASweeper(newcar))
	{
		SendClientMessage(playerid, COLOR_LIGHT_BLUE, "{0FFFFF}◊¢“‚!{FFFFF0}«Î∞¥{0F21FF}C{FFFFF0}¿¥∆Ù∂Ø∑¢∂Øª˙{0F21FF}H{FFFFF0}πÿ±’∑¢∂Øª˙!");
		TogglePlayerControllable(playerid, false);
		if(PlayerInfo[playerid][pSpeedo] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„”–ÀŸ∂»±Ìƒ„ø…“‘ ‰»Î/speedo∆Ù∂ØªÚπÿ±’ÀŸ∂»±Ì!");
		}
		if(IsModelABike(GetPlayerVehicleID(playerid)))
		{
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "º«◊°: ¥¯…œ∞≤»´Õ∑ø¯∏¸∞≤»´! (/helmet)");
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHT_BLUE, "º«◊°: ƒ„‘⁄ø™≥µº«µ√π“…œ∞≤»´¥¯∏¸∞≤»´! (/belt)");
		}
	}
}

public engine2(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    TogglePlayerControllable(playerid, 1);
	}
}

public busroutestoptimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new newcar = GetPlayerVehicleID(playerid);
	    if(IsABus(newcar))
	    {
	        TogglePlayerControllable(playerid, 1);
	        SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "ƒ„œ÷‘⁄ø…“‘◊ﬂ¡À!");
	    }
	}
}

stock strvalEx( const string[] ) // fix for strval-bug with > 50 letters.
{
	// written by mabako in less than a minute :X
	if( strlen( string ) >= 50 ) return 0; // It will just return 0 if the string is too long
	return strval(string);
}

public CheckCarHealth()
{
    new string[128];
    new sendername[MAX_PLAYER_NAME];
    for (new i=0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
        {
             new Float:health;
             GetVehicleHealth(GetPlayerVehicleID(i),health);
             new newcar = GetPlayerVehicleID(i);
             if (health <= 350 && !IsModelABoat(newcar) && !IsModelABike(newcar) && !IsModelAPlane(newcar) && !IsAHarvest(newcar) && !IsADrugHarvest(newcar) && !IsASweeper(newcar) && !IsModelAHeli(newcar))
             {
                 if(engineOn[GetPlayerVehicleID(i)] == 1)
                 {
                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
                    {
                    	TogglePlayerControllable(i, 0);
                 		SendClientMessage(i, COLOR_LIGHT_BLUE, "ƒ„µƒ≥µÀªµ—œ÷ÿ,¥Úª◊∞÷√Œﬁ∑®’˝≥£π§◊˜,”–±¨’®µƒŒ£œ’!,«ÎΩ–“ª∏ˆ∆˚≥µ–ﬁ¿Ìπ§¿¥–ﬁ≥µ! ( π”√/exitªÚ¿Îø™∆˚≥µ)");
                 		engineOn[GetPlayerVehicleID(i)] = false;
                 		GetPlayerName(i, sendername, sizeof(sendername));
                 		format(string, sizeof(string), "* ∆˚≥µœ®ª¡À (( %s ))", sendername);
						ProxDetector(30.0, i, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					}
				 }
             }
         }
    }
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new string[128];
	new sendername[MAX_PLAYER_NAME];
	new pveh = GetVehicleModel(GetPlayerVehicleID(playerid));
	new newcar = GetPlayerVehicleID(playerid);
	new gun1 = GetPlayerWeapon(playerid);
	new gunname1[24];
	GetWeaponName(gun1,gunname1,sizeof(gunname1));
	if(IsKeyJustDown(KEY_HANDBRAKE,newkeys,oldkeys))
	{
	    StopLoopingAnim(playerid);
        TextDrawHideForPlayer(playerid,txtAnimHelper);
        animation[playerid] = 0;
    }
    else if (PRESSED(KEY_SPRINT))
    {
		if(IsPlayerConnected(playerid))
		{
		    if(IsWanking[playerid] == 1)
	        {
	            if(JustWanked[playerid] == 0)
	            {
	                JustWanked[playerid] = 1;
	                ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,1,1,1,0);
	                TimesWanked[playerid] ++;
	                SetTimerEx("ResetWank",2000,0,"i",playerid);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "* ƒ„◊ÓΩ¸∏’≈‹π˝¬Ì, «Îµ»¥˝º∏√Î÷”!");
				    return 1;
				}
			}
			else if(GivingBlowjob[playerid] == 1)
			{
			   	ApplyAnimation(playerid,"BLOWJOBZ","BJ_COUCH_LOOP_W",4.1,0,0,0,1,0);
			}
		    else if (OfficerCourseStep[playerid] != 255)
		    {
          		if(OfficerCourseStep[playerid] == 1)
		        {
		            OfficerCourseStep[playerid] = 1;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"---------------------------------  –’˛Ã¸æØ–£ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"ª∂”≠±æ¥Œ≤‚ ‘ƒ⁄»›”…’˛∏ÆÃ·π©");
					SendClientMessage(playerid, COLOR_WHITE,"‘⁄’‚¿Ô£¨ƒ„Ω´”–≤ª≥¨π˝15∑÷÷”£¨“ª∏ˆøŒ≥Ã£¨—ßœ∞»Á∫Œ≥…Œ™“ª√˚±£∞≤‘±");
					SendClientMessage(playerid, COLOR_WHITE,"ΩÃƒ„»Á∫Œ¥˛≤∂œ”“…»À,∏√◊ˆ ≤√¥,≤ª∏√◊ˆ ≤√¥,ª·∑¢…˙ ≤√¥...");
					SendClientMessage(playerid, COLOR_WHITE,"«Î◊–œ∏‘ƒ∂¡’‚∏ˆΩÃ≥Ã,øº ‘∫Ûƒ„Ω´ª·µ√µΩ“ª∏ˆ”÷æØπŸ—ß‘∫∞‰∑¢µƒæØ≤Ï÷¥’’");
					SendClientMessage(playerid, COLOR_WHITE,"øº ‘Ω´”–10∏ˆŒ Ã‚,ƒ„±ÿ–Î¥∂‘9µ¿Œ Ã‚,∑Ò‘Úƒ„Ω´≤ªª·Õ®π˝øº ‘");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 2)
		        {
		            OfficerCourseStep[playerid] = 1;
              		ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ºÚ∂Ãµƒ÷∞“µÀµ√˜ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚∞≤»´»À‘±, ƒ„”–»®¿˚¥©…œ±£Ô⁄÷∆∑˛∫Õ–Ø¥¯’˛∏Æ∑¢∑≈µƒŒ‰∆˜.");
					SendClientMessage(playerid, COLOR_WHITE,"¿ƒ”√ƒ„µƒŒ‰∆˜ (”√À¸√«¿¥DM) Ω´µº÷¬¥”æØ∂”±ªÕ£÷∞(Ω˚÷π…œ∞‡).");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„±ªΩ˚÷π…œ∞‡, ƒ„Ω´≤ªƒ‹–– πƒ„µƒ»®¿˚÷™µ¿±ªΩ‚≥˝Ω˚÷π.");
					SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™∞≤»´»À‘±, ƒ„±ÿ–Î¥˛≤∂À˘”–◊Ô∑∏ (≥»…´ÕÊº“), µ´ «–°–ƒ!≤ª“™Metagame!");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„ø…“‘ø™∆ÙLSPDµƒ¥Û√≈, º› ªÀ˚√«µƒ≥µªÚ π”√¿‡À∆ /radio’‚—˘µƒÃÿ ‚÷∏¡Ó");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 3)
		        {
		            OfficerCourseStep[playerid] = 2;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ◊˜Œ™∞≤»´»À‘±”¶∏√◊ˆ ≤√¥ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚∞≤»´»À‘±, ƒ„µƒπ§◊˜ «Ω´◊Ô∑∏ø€¡ÙªÚ’ﬂ π”√ƒ„µƒŒ‰∆˜ª˜…±À˚√« (»Áπ˚–Ë“™µƒª∞).");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„“≤”–»®¿˚∏¯”ËÀ˚»À∑£µ•, ’‚ «ƒ„‘⁄¥˛≤∂◊Ô∑∏Õ‚µƒ÷˜“™π§◊˜.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„ø…“‘±ªπÕ”∂Œ™±£Ô⁄¿¥∞¸Œßƒ≥∏ˆµÿ«¯, µ´ «±ÿ–Î «∫œ∑®≤ø√≈µƒ“™«Û.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„±ÿ–Î∞—◊Ô∑∏ÀÕΩ¯º‡”¸, »Áπ˚◊Ô∑∏Õ∂Ωµ(µ≠≥»…´ÕÊº“)ƒ„≤ªƒ‹π•ª˜À˚√«.");
					SendClientMessage(playerid, COLOR_WHITE,"µ±ƒ„”ˆµΩ¬È∑≥ ±£¨ƒ„±ÿ–Î π”√ƒ„µƒ∂‘Ω≤ª˙(/r)¿¥“™—∞«Û∆‰À˚∂”‘±µƒ‘Æ÷˙.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 4)
		        {
		            OfficerCourseStep[playerid] = 3;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ◊˜Œ™∞≤»´»À‘±≤ª∏√◊ˆ ≤√¥ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚∞≤»´»À‘±, ƒ„≤ªƒ‹ π”√Œ‰∆˜∞Ô÷˙◊Ô∑∏¿¥∏…Œ•∑®µƒ ¬«ÈªÚ’ﬂ”ÎæØ≤Ï∂‘øπ.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªø…“‘‘⁄√ª”–¿Ì”…µƒ«Èøˆœ¬∏¯±»Àø™∑£µ•ªÚ’ﬂ « π”√/su¿¥Õ®º©∆‰À˚»À.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªø…“‘‘⁄ π”√ÕÍ◊È÷Øµƒ∆˚≥µ∫ÛΩ´À¸√«ÀÊ±„µƒÕ£‘⁄¬∑±ﬂ.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªƒ‹”√◊È÷ØÃ·π©µƒŒ‰∆˜¿¥DMªÚ’ﬂ”√◊È÷Øµƒ≥µ¿¥≥µ…±∆‰À˚ÕÊº“£¨ƒ«Ω´ª·±ªBan≥ˆ.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªƒ‹œÒ¿∂≤®ƒ«—˘…±À¿»Œ∫Œ“ª∏ˆƒ„‘⁄Tab¿Ôø¥µΩµƒ◊Ô∑∏, º«◊°’‚ «RP∑˛ŒÒ∆˜.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 5)
		        {
		            OfficerCourseStep[playerid] = 4;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ≥…Œ™“ª∏ˆ∏Ø∞‹µƒæØ≤Ïª·‘ı√¥—˘ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„‘⁄¥©◊≈÷∆∑˛£¨…œ∞‡÷¥«⁄∆⁄º‰Œ•∑¥∑˛ŒÒ∆˜ªÚæØ∂”πÊ‘ÚæÕª·±ª»œŒ™ «∏Ø∞‹µƒ.");
					SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª∏ˆ∏Ø∞‹µƒæØ≤Ï£¨ƒ„ª·≥…Œ™æ÷≥§…ı÷¡ «FBi∫Õæ¸»Àµƒœ˚√∂‘œÛ.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚æØ≤Ï√ª∑®◊•◊°ƒ„, «∞Ã®π‹¿Ì‘±ªÚ∆‰À˚∏ﬂ≤„µƒπ‹¿Ì‘±ª·Ω˚÷πƒ„…œ∞‡.");
					SendClientMessage(playerid, COLOR_WHITE,"π˝∑÷µƒ¿˚”√Œ‰¡¶DM,¿˚”√»®¿˚Œ™◊‘º∫ªÒµ√¿˚”√«ÈΩ⁄—œ÷ÿΩ´±ªBan≥ˆ∑˛ŒÒ∆˜.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„ø…ƒ‹ª·±ªπ‹¿Ì‘±Ω˚÷π…œ∞‡“ª∏ˆ‘¬ªÚ’ﬂ±ªæ÷≥§Ãﬂ≥ˆæØ∂”£¨À˘“‘ŒÒ±ÿ◊Ò ÿπÊ‘Ú.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 6)
		        {
		            OfficerCourseStep[playerid] = 5;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ≥…Œ™“ª∏ˆ∫√æØ≤Ïª·‘ı√¥—˘ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„‘⁄µ±∞‡÷µ«⁄ ±±Ìœ÷¡º∫√≤¢«“∑˛¥”√¸¡Ó≤ªŒ•∑¥ºÕ¬…ª·±ª»œŒ™ «“ª√˚∫√æØ≤Ï.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„ «“ª√˚”–æ≠—Èµƒ∫√æØ≤Ï£¨ƒ„Ω´”–∏¸∂‡ª˙ª·±ª…˝÷∞ªÚΩ±¿¯.");
					SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚¡ÆΩ‡µƒ∫√æØ≤Ï£¨π‹¿Ì‘±ª·ø¥∫√ƒ„£¨«“–≈»Œƒ„£¨Ωª∏¯ƒ„¥¯–¬ ÷µƒ»ŒŒÒ.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚◊‹π‹»œŒ™ƒ„◊ˆµΩπª∫√ø…ƒ‹ª·Ã·∞Œƒ„≥…Œ™vipÕÊº“ªÚ’ﬂGM÷˙¿ÌªÚ«∞Ã®π‹¿Ì‘±.");
					SendClientMessage(playerid, COLOR_WHITE,"À˘“‘√øµ±ƒ„¥¶¿Ì ¬«Èµƒ ±∫Ú“ª∂®“™øº¬««Â≥˛ ≤√¥ «∂‘µƒ ≤√¥ «¥Ìµƒ£¨ŒÒ±ÿ!.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 7)
		        {
		            OfficerCourseStep[playerid] = 6;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- »Á∫Œ¥˛≤∂“ª√˚◊Ô∑∏ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE," ◊œ»“™«Û∂‘∑ΩÕ∂Ωµ, »Áπ˚À˚‘⁄√ª”–Ω¯––∑¥øπªÚ∂‘÷¥∑®’ﬂΩ¯––÷¬√¸Œ‰¡¶¥Úª˜ ±.");
					SendClientMessage(playerid, COLOR_WHITE,"µ±À˚Õ∂Ωµ ±£¨À˚µƒ√˚◊÷ª·±‰≥…µ≠≥»…´, ≤ª“™»√À˚√«∆€∆≠ƒ„, ø¥«Â≥˛À˚√«µƒ√˚◊÷.");
					SendClientMessage(playerid, COLOR_WHITE,"œÚÀ˚–˚∂¡√◊¿º¥ÔπÊ‘Ú(/mir)»ª∫Û¥¯À˚µΩæØ≤Ïæ÷, »Áπ˚À˚…Ë∑®Ã”≈‹ø…“‘Ω´À˚ª˜±–.");
					SendClientMessage(playerid, COLOR_WHITE,"µ±ƒ„◊ˆµΩ¡À“‘…œº∏µ„, Ω´À˚πÿΩ¯º‡”¸£¨“¿’’◊Ô––«·÷ÿ∏¯”Ë1-10∑÷÷”µƒπÿ—∫.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚À˚–Ë“™¬… ¶ƒ„±ÿ–Îµ»¬… ¶µΩ¥ÔæØ≤Ï»ª∫Û‘Ÿø™ ºΩ¯––Ã÷¬€.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 8)
		        {
		            OfficerCourseStep[playerid] = 7;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- »Á∫Œ÷∆∑˛“ª√˚◊Ô∑∏ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚◊Ô∑∏æˆ∂®”√Œ‰¡¶∑¥ª˜£¨∂‘ƒ„…‰ª˜£¨ƒ„ø…“‘‘⁄√ª”–Ω¯––æØ∏Êµƒ«Èøˆœ¬ªπª˜.");
					SendClientMessage(playerid, COLOR_WHITE,"“ÚŒ™sampµƒ—”≥Ÿπÿœµ£¨ƒ„“ª∂®“™—ßª·¥Úping(œÍœ∏ø…“‘—ØŒ ¿œÕÊº“)£¨’‚—˘≤≈ƒ‹≥…π¶’Ω §◊Ô∑∏.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚”–2∏ˆ“‘…œµƒ◊Ô∑∏∂‘ƒ„Ω¯––∑¥ª˜, “˛±Œ∆¿¥»ª∫Û“™«Û÷ß‘Æ, »Áπ˚ƒ„”–ƒ‹¡¶µƒª∞œÒ¿∂≤®“ª—˘∞—À˚√«Õ≥Õ≥∑≈µπ.");
					SendClientMessage(playerid, COLOR_WHITE,"≤ª“™¿À∑—ƒ„µƒ◊”µØ≥˝∑«ƒ„”ˆµΩΩÙº±«Èøˆæˆ∂®“™”√Œ‰¡¶’Ú—π◊Ô∑∏.");
					SendClientMessage(playerid, COLOR_WHITE,"Œ™¡À∑¿÷π◊Ô∑∏Ã”≈‹ƒ„ø…“‘…‰ª˜∆∆ªµÀ˚√«µƒ‘ÿæﬂªÚ’ﬂÕ∏π˝≥µ¥∞…‰ª˜À˚√«.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 9)
		        {
		            OfficerCourseStep[playerid] = 8;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- »Á∫Œ∂‘“ª∏ˆµÿ«¯Ω¯––ÕªœÆ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚◊Ô∑∏Ω¯»ÎΩ®÷˛ŒÔ∑¥øπ£¨ƒ„”¶∏√œ»—∞«Û÷ß‘Æ£¨»Áπ˚ƒ„√∞»ªΩ¯»Îø…ƒ‹ª·‘‚µΩ∑¸ª˜.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚‘ˆ‘ÆµΩ¥Ô¡À, “ª∂®“™Ã˝…œº∂µƒ÷∏ª”, »Áπ˚À˚√«“™«Ûƒ„‘⁄Õ‚√Êµ»¥˝, ƒ«æÕµ»◊≈±œÒ¿∂≤®ƒ«—˘≥—”¢–€.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚À˚√«“™«Ûƒ„“ª∆ÕªœÆƒ«∏ˆµÿ«¯¥¯…œƒ„µƒŒ‰∆˜«“≤ª“™¿Îø™À˚√«, “™Õ≈Ω·∫œ◊˜.");
					SendClientMessage(playerid, COLOR_WHITE,"‘⁄Ω¯»Î«∞, ø…“‘»√∆‰À˚∂”‘±∞Ô÷˙ƒ„√«Ω´◊Ô∑∏µƒ≥µ¡æ≥∑◊ﬂªÚ’ﬂ∆∆ªµ£¨“‘∑¿À˚√«‘Ÿ¥ŒÃ”≈‹.");
					SendClientMessage(playerid, COLOR_WHITE,"◊Ó∫Û£¨»Áπ˚À˚√«¥ÚÀ„Ã”≈‹£¨…‰ª˜À˚√«÷±µΩÀ˚√«Õ∂Ωµ£¨»Áπ˚À˚√«∑¥ª˜£¨∫¡≤ª”Ã‘•µƒª˜±–À˚√«.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 10)
		        {
		            OfficerCourseStep[playerid] = 9;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- “ª–©»√ƒ„≥…Œ™∫√æØ≤ÏµƒΩ®“È ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"≤ª“™∏¯ ˝∂ÓÃ´∏ﬂµƒ∑£µ•£¨µ´“≤≤ªƒ‹Ã´…Ÿ£¨Ã´∂‡ª·»√±»ÀÃ÷—·ƒ„£¨Ã´…Ÿª·»√±»Àæıµ√ƒ„ «∏ˆ…µ±∆.");
					SendClientMessage(playerid, COLOR_WHITE,"‘⁄◊∑÷÷–£¨—ßª·”√≥µ¡æ◊≤ª˜◊Ô∑∏≥µ¡æµƒŒ≤≤ø»√À˚√«ª¨≥ˆµ¿¬∑£¨¿¥ºı¬˝À˚√«µƒÀŸ∂».");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„‘⁄º› ª÷±…˝ª˙£¨±Õ¸º«±®∏Ê◊‹≤øƒ„µƒŒª÷√£¨≤ª“™∑…µƒÃ´µÕ£¨’‚—˘ª·ŒÛ…À∆‰À˚Œﬁπºµƒ»À.");
					SendClientMessage(playerid, COLOR_WHITE,"±£≥÷ƒ„µƒ”ƒƒ¨∏–£¨—ßª·”Î±»À∂‡Ωª¡˜£¨’‚—˘±»Àª·æıµ√ƒ„∫‹»›“◊«◊Ω¸¥”∂¯œ≤ª∂ƒ„.");
					SendClientMessage(playerid, COLOR_WHITE,"≤ª“™‘⁄√ª”–¿Ì”…µƒ«Èøˆœ¬∂‘±»À π”√’Ω ı÷∏¡Ó£¨’‚—˘ª·»√»À Æ∑÷Ã÷—·ƒ„.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 11)
		        {
		            OfficerCourseStep[playerid] = 10;
		            ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ‘ı√¥◊ˆª·»√±»ÀÃ÷—·ƒ„ ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"»À√«ª·Ã÷—·ƒ„»Áπ˚ƒ„“ª÷±Œ•∑¥πÊ‘Ú£¨±»»Á∫˙¬“ø™«πªÚ’ﬂŒ£œ’º› ª.");
					SendClientMessage(playerid, COLOR_WHITE,"‘⁄ƒ„“Ú∂‘∑Ωµƒ¥ÌŒÛ∏¯∂‘∑Ω≥Õ∑£ ±,ƒ„±ÿ–Î±£÷§◊‘º∫“≤ƒ‹◊ˆµƒ∫√£¨∑Ò‘Ú±»Àª·ø¥≤ª∆ƒ„.");
					SendClientMessage(playerid, COLOR_WHITE,"≤ª“™º‡Ω˚±»ÀÃ´æ√ªÚ’ﬂø™∫‹¥Û ˝∂Óµƒ∑£µ•£¨±»»Á»Àº“‘⁄π„≥°…œ–°±„ƒ„≤ªƒ‹“ÚŒ™’‚÷÷ ¬«ÈπÿÀ˚10∑÷÷”.");
					SendClientMessage(playerid, COLOR_WHITE,"≤ªƒ‹ŒÍ»Ë◊Ô∑∏£¨±»»Á‘⁄À˚Õ∂Ωµ∫Ûπ•ª˜À˚£¨ªÚ’ﬂ‘⁄À˚±ªº‡Ω˚∫Û≥∞–¶»Ë¬ÓÀ˚");
					SendClientMessage(playerid, COLOR_WHITE,"◊ˆŒ•∑®µƒ ¬«È£¨ªÚ’ﬂ”Î∫⁄∞Ô∑›◊””–Ã´∂‡µƒΩ”¥•ª·±ª»ÀÃ÷—·£¨»œŒ™ƒ„√ª”–◊ ∏Òµ±Œ¨ª§’˝“Â.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
				else if(OfficerCourseStep[playerid] == 12)
				{
				    OfficerCourseStep[playerid] = 11;
				    ClearChatbox(playerid, 10);
					SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ∏…µ√∫√£¨ΩÃ≥ÃΩ· ¯¡À ---------------------------------");
					SendClientMessage(playerid, COLOR_WHITE,"÷’”⁄µΩ¡À◊Ó∫Û£¨’‚¥˙±Ìƒ„“—æ≠¡ÀΩ‚¡Àª˘±æµƒ÷¥∑®÷™ ∂£¨ø…“‘ø™ º≤‚ ‘¡À.");
					SendClientMessage(playerid, COLOR_WHITE,"øº»°÷¥∑®◊ ∏Ò÷§ Èµƒº€∏Ò « 5000$, ≤ªπ‹ƒ„Õ®π˝ªπ « ß∞‹.");
					SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„≥…π¶Õ®π˝øº ‘£¨ƒ„ø…“‘¥©…œ÷∆∑˛≤¢«“∏ÊÀﬂ±»Àƒ„ «“ª√˚÷¥∑®»À‘±.");
					SendClientMessage(playerid, COLOR_WHITE,"ƒ„–Ë“™æ”◊°÷§∫Õº›’’£¨ƒ« «øº ‘«∞±ÿ–Îµƒ£¨«ßÕÚ≤ªƒ‹Õ¸º«.");
					SendClientMessage(playerid, COLOR_WHITE,"◊£ƒ„∫√‘Àƒ‹Õ®π˝≤‚ ‘£¨œ£Õ˚ƒ‹‘⁄Œ¥¿¥ø¥µΩƒ„’æ‘⁄¥ÛΩ÷…œπ‹¿Ì÷Œ∞≤!.");
					ClearChatbox(playerid, 3);
					SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
				}
			}
            if (IsPlayerInRangeOfPoint(playerid, 2, 358.2500,180.3491,1008.3828))
			{// freecop test
				//GameTextForPlayer(playerid, "~w~Type ~g~/officertest ~w~to take the officer test ~g~($5000)", 5000, 5);
				new listitems[] = "ƒ„»∑∂®“™øº»°æØ≤Ïµƒ÷∞“µ√¥?";
  				ShowPlayerDialog(playerid,8532,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			}
			else if (IsPlayerInRangeOfPoint(playerid, 2, 358.2368,165.3652,1008.3828))
			{// officer information
				GameTextForPlayer(playerid, "~w~Type ~g~/officercourse ~w~to take the officer lesson ~g~($2500)", 5000, 5);
			}
    		else if (IsPlayerInRangeOfPoint(playerid, 2, 2029.5945,-1404.6426,17.2512))
			{// Hospital near speedway
				GameTextForPlayer(playerid, "~w~Type /healme to cure yourself", 5000, 5);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 2, 349.5560,161.6693,1019.9912))
			{// All Saints hospital
				GameTextForPlayer(playerid, "~w~Type /healme to cure yourself", 5000, 5);
			}
  			else if (IsPlayerInRangeOfPoint(playerid, 2, 523.6057,-1812.9794,6.5713) || IsPlayerInRangeOfPoint(playerid, 2, 1424.1729,-1317.9955,13.5547))
			{//Buyable Drugs for Drug Dealers
			    GameTextForPlayer(playerid, "~w~Type /get drugs, to get some ~r~Drugs~y~~n~Skill Level matters to price", 5000, 3);
			}
   			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,-792.9693,500.5572,1367.3672))
			{
			    if(PlayerInfo[playerid][pJob] > 18) {}
			    else { GameTextForPlayer(playerid, "~y~Waiter ~w~Skin Change Location ~r~2 ~n~~y~Type /cookuniform list", 5000, 3); }
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,-779.3134,497.8989,1371.7490))
			{
			    if(PlayerInfo[playerid][pJob] > 18) {}
			    else { GameTextForPlayer(playerid, "~y~Waiter ~w~Skin Change Location ~r~1 ~n~~y~Type /cookuniform list", 5000, 3); }
			}
			else if (IsPlayerInRangeOfPoint(playerid, 2, 1488.6949,-1721.7136,8.2067))
			{
			    GameTextForPlayer(playerid, "~w~Black ~r~Market", 5000, 3);
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2, 358.2374,161.3243,1008.3828))
			{
			    //GameTextForPlayer(playerid, "~y~-City Hall- ~n~~n~~w~Type ~g~/taketest ~w~to take the passport test. (Free)", 5000, 3);
   				new listitems[] = "ƒ„»∑∂®“™øº»°ª§’’√¥?";
  				ShowPlayerDialog(playerid,8533,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,1215.1304,-11.8431,1000.9219))
			{
			    //GameTextForPlayer(playerid, "~g~Welcome,~n~~y~you can become a ~r~Whore~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3);
			    GetFfJob(playerid);
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,1793.02,-1296.56,13.44))
			{
			    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) { GameTextForPlayer(playerid, "~w~Type ~r~/paper ~w~to create a newspaper",5000,3); }
			    else if(PlayerInfo[playerid][pJob] == 15) { GameTextForPlayer(playerid, "~w~Type ~r~/papers ~w~to see all the made newspapers",5000, 3); }
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,213.8549,-230.5761,1.7786))
			{
			    //GameTextForPlayer(playerid, "~g~Welcome,~n~~y~you can become a ~r~Materials smuggler~n~~w~Type /join if you wish to become one", 5000, 3);
			    GetFfJob(playerid);
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,2072.5486,-1582.8029,13.4741))
			{
			    //GameTextForPlayer(playerid, "~g~Welcome,~n~~y~you can become a ~r~Drugs Dealer~y~~n~~w~Type /join if you wish to become one", 5000, 3);
			    GetFfJob(playerid);
			}
  			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,-86.1251,2.6412,3.1172))
			{
			    //GameTextForPlayer(playerid, "~g~Welcome,~n~~y~you can become a ~r~Drugs Farmer~y~~n~~w~Type /join if you wish to become one", 5000, 3);
			    GetFfJob(playerid);
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,2137.6624,-2282.3455,20.6719))
			{
			    //GameTextForPlayer(playerid, "~g~Welcome,~n~~y~you can become a ~r~Gun Maker~y~~n~~w~Type /join if you wish to become one", 5000, 3);
			    GetFfJob(playerid);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 2,379.1396,-114.2661,1001.4922))
   			{// Pizza Pickup
        		if (PlayerInfo[playerid][pJob] != 17)
    			{
    			    SendClientMessage(playerid, COLOR_GREY, "ƒ„ «≤ª «∆§»¯µÍµƒπ§◊˜»À‘±");
     				return 1;
    			}
    			if (sPizza[playerid] != 1)
    			{
     				SendClientMessage(playerid, COLOR_WHITE, "ƒ„“—æ≠—°‘Ò¡À“ª∏ˆ÷Û Ïµƒ∆§»¯,«Îµ»∫Ú∂©µ•");
       				sPizza[playerid] = 1;
      			}
   			}
			else if (IsPlayerInRangeOfPoint(playerid, 2,1174.9100,-1365.7330,13.9876))
			{
			    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { SetTimerEx("elevator1", 1000, false, "i", playerid); }
			    else { GameTextForPlayer(playerid, "~r~You can not use an elevator", 5000, 3); }
			}
			else if (IsPlayerInRangeOfPoint(playerid, 2,1174.9591,-1369.8761,23.9736))
			{
			    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4) { SetTimerEx("elevator2", 1000, false, "i", playerid); }
			    else { GameTextForPlayer(playerid, "~r~You can not use an elevator", 5000, 3); }
			}
			/*
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,1505.2416,-1694.5597,14.0469))
			{
			    GameTextForPlayer(playerid, "~y~You found the newspaper~n~Type ~r~/newspaper ~y~to read it", 5000, 3);
			}*/
  			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,362.1231,173.6424,1008.3828))
			{
			    //GameTextForPlayer(playerid, "~w~For Legal Job list~n~ Type: ~r~/Legaljobs", 5000, 3);//’“π§◊˜∏ƒ≤Àµ•
    			if(PlayerInfo[playerid][pJob] == 0)
				{
					new listitems[] = "’ÏÃΩ\n¬… ¶\n∑˛ŒÒ‘±\n»≠ª˜ ÷\nø®≥µÀæª˙\n≈©√Ò\nÃÿºº—›‘±\n≥ˆ◊‚≥µÀæª˙\nπ´≥µÀæª˙\n±®ÕØ\n≈˚»¯µÍÕ‚ÀÕ‘±\nµ¿¬∑«Â…®π§\n∆˚≥µ–ﬁ¿Ìπ§\n±£Ô⁄";
					ShowPlayerDialog(playerid,8528,DIALOG_STYLE_LIST,"«Î—°‘Òƒ„–Ë“™µƒπ§◊˜:",listitems,"»∑∂®","»°œ˚");
				}
				else
				{
      				new listitems[] = "ƒ„“—æ≠”–“ª∑›π§◊˜¡À\nƒ„–Ë“™»°œ˚µ±«∞µƒπ§◊˜≤≈ø…“‘’“∆‰À˚π§◊˜\nƒ„»∑∂®»°œ˚ƒ„µ±«∞µƒπ§◊˜√¥?";
		    		ShowPlayerDialog(playerid,8529,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");
				}
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,1490.3195,1305.6976,1093.2964))
			{
			    //GameTextForPlayer(playerid, "~w~For Buyable License~n~ Type: ~r~/License", 5000, 3);
	    		//SendClientMessage(playerid, COLOR_LIGHTRED, "* [º› ª÷¥’’∑—: 3,500$] *");
	    		//SendClientMessage(playerid, COLOR_LIGHTRED, "* [∑…––÷¥’’∑—: 10,500$] *");
	    		//SendClientMessage(playerid, COLOR_LIGHTRED, "* [¥¨≤∞÷¥’’∑—: 5,500$] *");
				new listitems[] = "{FFFFFF}1\tº› ª÷¥’’\t{55EE55}[∞Ï¿Ìº€∏Ò:3,500$]\n{FFFFFF}2\t∑…––÷¥’’\t{55EE55}[∞Ï¿Ìº€∏Ò:10,500$]\n{FFFFFF}3\t¥¨≤∞÷¥’’\t{55EE55}[∞Ï¿Ìº€∏Ò:5,500$]";
				ShowPlayerDialog(playerid,8531,DIALOG_STYLE_LIST,"«Î—°‘Òƒ„–Ë“™÷¥’’:",listitems,"»∑∂®","»°œ˚");
			}
  			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 1,249.8574,67.8508,1003.6406))
			{
			    //GameTextForPlayer(playerid, "~w~Buyable Weapon Licenses~n~ Type: ~r~/buygunlic ~n~~w~[Costs ~g~20,500$~w~]", 5000, 3);
   				new listitems[] = "ƒ„»∑∂®“™ª®∑—$20,500øº»°Œ‰∆˜÷¥’’¬?";
  				ShowPlayerDialog(playerid,8534,DIALOG_STYLE_MSGBOX,"«Î—°‘Ò",listitems,"»∑∂®","»°œ˚");

			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,359.6820,207.0294,1008.3828))
			{
			    GameTextForPlayer(playerid, "~w~Advertisment business~n~Owner: ABC Studio~n~Post your ~g~/ad~w~ here", 5000, 3);
			}
			else if (IsPlayerInRangeOfPoint(playerid, 3,-38.8664,56.3031,3.1172))
			{
			    if(PlayerInfo[playerid][pJob] == 19)
			    {
			    	format(string, sizeof(string), "~r~Drugs ammount: %d", drugsys[DrugAmmount]);
					GameTextForPlayer(playerid, string, 5000, 3);
				}
				else if(PlayerInfo[playerid][pJob] == 20)
				{
					format(string, sizeof(string), "~w~Drugs Farm~n~Farm Owner: La Famiglia Sinatra~n~Drugs ammount:~r~ %d~n~~w~You can /smuggledrugs here", drugsys[DrugAmmount]);
					GameTextForPlayer(playerid, string, 5000, 3);
				}
				else
				{
				    GameTextForPlayer(playerid, "~r~Staff only!", 5000, 3);
				}
			}

			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,2022.1492,-1108.7837,26.2031))
			{
   				//GameTextForPlayer(playerid, "~g~Welcome,~n~~y~you can become a ~r~Drugs Smuggler~y~~n~~w~Type /join if you wish to become one", 5000, 3);
   				GetFfJob(playerid);
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 2,242.7591,66.4315,1003.6406))
			{
			    if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1)
			    {
			        GameTextForPlayer(playerid, "~g~Police Department elevator~n~~w~Type ~r~/pdup ~w~to go up~n~Type ~r~/pddown ~w~to go down", 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(playerid, "~r~Staff only!", 5000, 3);
			    }
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,25.1811,1968.5167,17.6406))
			{
			    GameTextForPlayer(playerid, "~w~Welcome,~n~~w~You can fly to ~r~Los Santos. ~n~~w~Type ~y~/flyls ~w~if you wish to Take this Plane. ~g~$250", 5000, 3);
			}
			//-----------------------------------------------------------------------------------------------------------------------------------------------
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 1,231.4331,140.4850,1003.0234))
			{
			    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1)
			    {
			        GameTextForPlayer(playerid, "~g~FBI Headquarters elevator~n~~w~Type ~r~/hqroof ~w~to go up~n~Type ~r~/hqdown ~w~to go down", 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(playerid, "~r~Staff only!", 5000, 3);
			    }
			}

			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 1,1510.6852,-1458.0654,9.5000))
			{
			    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1)
			    {
			        GameTextForPlayer(playerid, "~g~FBI Headquarters elevator~n~~w~Type ~r~/hqin ~w~to go inside~n~Type ~r~/hqroof ~w~to go to the roofs", 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(playerid, "~r~Staff only!", 5000, 3);
			    }
			}

			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 1,1494.3761,-1467.0068,40.5234))
			{
			    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAdminDuty] == 1)
			    {
			        GameTextForPlayer(playerid, "~g~FBI Headquarters elevator~n~~w~Type ~r~/hqin ~w~to go inside~n~Type ~r~/hqdown ~w~to go to the garage", 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(playerid, "~r~Staff only!", 5000, 3);
			    }
			}
			//-----------------------------------------------------------------------------------------------------------------------------------------------
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,255.4480,85.8236,1002.4453))
			{
			    if(IsACop(playerid))
			    {
			        GameTextForPlayer(playerid, "~b~Los Santos Police Department~n~~w~Type ~r~/arrest ~w~To arrest your Suspect.", 5000, 3);
				}
				else
				{
					GameTextForPlayer(playerid,"~r~You are not a Cop, What are you Doing Here?!",4000,4);
				}
			}
			//-----------------------------------------------------------------------------------------------------------------------------------------------
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,201.0256,168.3393,1003.0234))
			{
			    if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			    {
   					GameTextForPlayer(playerid, "~b~Federal Bureau of ivnestigation~n~~w~Type ~r~/farrest ~w~To arrest your Suspect.", 5000, 3);
				}
				else
				{
				    GameTextForPlayer(playerid,"~r~You are not an FBI, What are you Doing Here?!",4000,4);
				}
			}
			//-----------------------------------------------------------------------------------------------------------------------------------------------
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 3,222.2311,121.3434,999.0239))
			{
			    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		    	{
   					GameTextForPlayer(playerid, "~b~Los Santos Army~n~~w~Type ~r~/sarrest ~w~To arrest your Suspect.", 5000, 3);
				}
				else
				{
					GameTextForPlayer(playerid,"~r~You are not a  ø±¯, What are you Doing Here?!",4000,4);
				}
			}
			//-----------------------------------------------------------------------------------------------------------------------------------------------
			else if (GetPlayerState(playerid) == 2 && IsPlayerInRangeOfPoint(playerid, 3,2073.2979,-1831.1228,13.5469) || GetPlayerState(playerid) == 2 && IsPlayerInRangeOfPoint(playerid, 3,1024.9756,-1030.7930,32.0257) || GetPlayerState(playerid) == 2 && IsPlayerInRangeOfPoint(playerid, 3,488.3819,-1733.0563,11.1752) || GetPlayerState(playerid) == 2 && IsPlayerInRangeOfPoint(playerid, 3,719.8940,-464.8272,16.3359))
			{
			    format(string, sizeof(string), "~y~Pay ~r~& ~g~Spray~w~~n~Owner : %s~n~Entrance Fee : ~g~$%d ~w~~n~to enter type /enter",SBizzInfo[5][sbOwner],SBizzInfo[5][sbEntranceCost]);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 1.5, 248.4994,-33.1366,1.5781))
			{
			    if(PlayerInfo[playerid][pJob] == 22)
			    {
			        GameTextForPlayer(playerid, "~w~Materials factory~n~You can ~r~/smugglemats ~w~here", 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(playerid, "~r~Staff only !", 5000, 3);
			    }
			}
			else if (GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid, 1.5, 2230.3579,-2286.2107,14.3751))
			{
			    if(PlayerInfo[playerid][pJob] == 22)
			    {
			        format(string, sizeof(string), "~w~Materials Bank~n~Materials ammount: ~r~%d", matssys[MatsAmmount]);
			        GameTextForPlayer(playerid, string, 5000, 3);
			    }
			    else if(PlayerInfo[playerid][pJob] == 23)
			    {
			        format(string, sizeof(string), "~w~Materials Bank~n~Materials ammount: ~r~%d ~n~~w~You can ~g~/buymats ~w~here", matssys[MatsAmmount]);
			        GameTextForPlayer(playerid, string, 5000, 3);
			    }
			    else
			    {
			        GameTextForPlayer(playerid, "~r~Staff only !", 5000, 3);
			    }
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,1073.0619,-344.5148,73.9922))
			{
			    if(OrderReady[playerid] > 0)
			    {
			        switch (OrderReady[playerid])
			        {
			            case 1:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 4, 1);
			                SafeGivePlayerMoney(playerid, - 5000);
			                SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			            case 2:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 31, 500); SafeGivePlayerWeapon(playerid, 4, 1);
			                SafeGivePlayerMoney(playerid, - 6000);
			                SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			            case 3:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 30, 500); SafeGivePlayerWeapon(playerid, 4, 1);
			                SafeGivePlayerMoney(playerid, - 6000);
			                SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			            case 4:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 31, 500); SafeGivePlayerWeapon(playerid, 4, 1); SafeGivePlayerWeapon(playerid, 34, 20);
			                SafeGivePlayerMoney(playerid, - 8000);
			                SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			            case 5:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 30, 500); SafeGivePlayerWeapon(playerid, 4, 1); SafeGivePlayerWeapon(playerid, 34, 20);
			                SafeGivePlayerMoney(playerid, - 8000);
			                SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			            case 6:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 31, 500); SafeGivePlayerWeapon(playerid, 4, 1); SafeGivePlayerWeapon(playerid, 34, 20);
							SafeGivePlayerMoney(playerid, - 8500);
							SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			            case 7:
			            {
			                SafeGivePlayerWeapon(playerid, 24, 50); SafeGivePlayerWeapon(playerid, 29, 500); SafeGivePlayerWeapon(playerid, 25, 50); SafeGivePlayerWeapon(playerid, 30, 500); SafeGivePlayerWeapon(playerid, 4, 1); SafeGivePlayerWeapon(playerid, 34, 20);
			                SafeGivePlayerMoney(playerid, - 8500);
			                SendClientMessage(playerid, COLOR_WHITE, "* ƒ„ƒ√∆¡Àƒ„∂©µƒ∞¸π¸.");
			            }
			        }
			        OrderReady[playerid] = 0;
			    }
			}
		}
	}
	else if ( PRESSED(KEY_SECONDARY_ATTACK) )
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
            if(gEngine[playerid] == 0 && engineOn[newcar] == 0)
            {
				SafeRemovePlayerFromVehicle(playerid);
				TogglePlayerControllable(playerid, 1);
				return 1;
            }
            else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				SafeRemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 0;
				return 1;
			}
        }
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
	        if(GetPlayerSpecialAction(playerid) == 20)
			{
				PlayerDrankBeer[playerid] = 0;
			}
	        else if(GetPlayerSpecialAction(playerid) == 22)
			{
				PlayerDrankWine[playerid] = 0;
			}
	        else if(GetPlayerSpecialAction(playerid) == 23)
			{
				PlayerDrankSprunk[playerid] = 0;
			}
	        else if(GetPlayerSpecialAction(playerid) == 21)
			{
				PlayerSmokedCig[playerid] = 0;
				IsSmoking[playerid] = 0;
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            if(PlayerInfo[playerid][pSex] == 1) { format(string, sizeof(string), "* %s Ω´◊Ï¿Ôµƒœ„—Ã,∂™∆˙¡À.", sendername); }
	            else { format(string, sizeof(string), "* %s Ω´◊Ï¿Ôµƒœ„—Ã,∂™∆˙¡À.", sendername); }
	            ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
	            if(UsingSmokeAnim[playerid] == 1)
	            {
	                ClearAnimations(playerid);
	            }
			}
		}
	    if(IsAtCandySprunk(playerid))
        {
            if(TookSprunk[playerid] == 0)
            {
                new Float:health;
                GetPlayerHealth(playerid, health);
                if(health != 0)
                {
		            SetRealMoney(playerid, (ScriptMoney[playerid] - 25));
		            SendClientMessage(playerid, COLOR_GREY, "* ƒ„÷ß∏∂¡À 25$ ∏¯◊‘∂Ø €ªıª˙");
					TookSprunk[playerid] = 1;
		            SetTimerEx("SetHP",3750,false, "i", playerid);
				}
			}
		}
	    if (OfficerCourseStep[playerid] != 255)
		{
			if(OfficerCourseStep[playerid] == 1)
		    {
      			OfficerCourseStep[playerid] = 2;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ºÚ∂Ãµƒ÷∞“µÀµ√˜ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚∞≤»´»À‘±, ƒ„”–»®¿˚¥©…œ±£Ô⁄÷∆∑˛∫Õ–Ø¥¯’˛∏Æ∑¢∑≈µƒŒ‰∆˜.");
				SendClientMessage(playerid, COLOR_WHITE,"¿ƒ”√ƒ„µƒŒ‰∆˜ (”√À¸√«¿¥DM) Ω´µº÷¬¥”æØ∂”±ªÕ£÷∞(Ω˚÷π…œ∞‡).");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„±ªΩ˚÷π…œ∞‡, ƒ„Ω´≤ªƒ‹–– πƒ„µƒ»®¿˚÷™µ¿±ªΩ‚≥˝Ω˚÷π.");
				SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™∞≤»´»À‘±, ƒ„±ÿ–Î¥˛≤∂À˘”–◊Ô∑∏ (≥»…´ÕÊº“), µ´ «–°–ƒ!≤ª“™Metagame!");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„ø…“‘ø™∆ÙLSPDµƒ¥Û√≈, º› ªÀ˚√«µƒ≥µªÚ π”√¿‡À∆ /radio’‚—˘µƒÃÿ ‚÷∏¡Ó");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 2)
		    {
		       	OfficerCourseStep[playerid] = 3;
		       	ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ◊˜Œ™∞≤»´»À‘±”¶∏√◊ˆ ≤√¥ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚∞≤»´»À‘±, ƒ„µƒπ§◊˜ «Ω´◊Ô∑∏ø€¡ÙªÚ’ﬂ π”√ƒ„µƒŒ‰∆˜ª˜…±À˚√« (»Áπ˚–Ë“™µƒª∞).");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„“≤”–»®¿˚∏¯”ËÀ˚»À∑£µ•, ’‚ «ƒ„‘⁄¥˛≤∂◊Ô∑∏Õ‚µƒ÷˜“™π§◊˜.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„ø…“‘±ªπÕ”∂Œ™±£Ô⁄¿¥∞¸Œßƒ≥∏ˆµÿ«¯, µ´ «±ÿ–Î «∫œ∑®≤ø√≈µƒ“™«Û.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„±ÿ–Î∞—◊Ô∑∏ÀÕΩ¯º‡”¸, »Áπ˚◊Ô∑∏Õ∂Ωµ(µ≠≥»…´ÕÊº“)ƒ„≤ªƒ‹π•ª˜À˚√«.");
				SendClientMessage(playerid, COLOR_WHITE,"µ±ƒ„”ˆµΩ¬È∑≥ ±£¨ƒ„±ÿ–Î π”√ƒ„µƒ∂‘Ω≤ª˙(/r)¿¥“™—∞«Û∆‰À˚∂”‘±µƒ‘Æ÷˙.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 3)
		    {
		        OfficerCourseStep[playerid] = 4;
		       	ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ◊˜Œ™∞≤»´»À‘±≤ª∏√◊ˆ ≤√¥ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚∞≤»´»À‘±, ƒ„≤ªƒ‹ π”√Œ‰∆˜∞Ô÷˙◊Ô∑∏¿¥∏…Œ•∑®µƒ ¬«ÈªÚ’ﬂ”ÎæØ≤Ï∂‘øπ.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªø…“‘‘⁄√ª”–¿Ì”…µƒ«Èøˆœ¬∏¯±»Àø™∑£µ•ªÚ’ﬂ « π”√/su¿¥Õ®º©∆‰À˚»À.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªø…“‘‘⁄ π”√ÕÍ◊È÷Øµƒ∆˚≥µ∫ÛΩ´À¸√«ÀÊ±„µƒÕ£‘⁄¬∑±ﬂ.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªƒ‹”√◊È÷ØÃ·π©µƒŒ‰∆˜¿¥DMªÚ’ﬂ”√◊È÷Øµƒ≥µ¿¥≥µ…±∆‰À˚ÕÊº“£¨ƒ«Ω´ª·±ªBan≥ˆ.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„≤ªƒ‹œÒ¿∂≤®ƒ«—˘…±À¿»Œ∫Œ“ª∏ˆƒ„‘⁄Tab¿Ôø¥µΩµƒ◊Ô∑∏, º«◊°’‚ «RP∑˛ŒÒ∆˜.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 4)
		    {
		        OfficerCourseStep[playerid] = 5;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ≥…Œ™“ª∏ˆ∏Ø∞‹µƒæØ≤Ïª·‘ı√¥—˘ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„‘⁄¥©◊≈÷∆∑˛£¨…œ∞‡÷¥«⁄∆⁄º‰Œ•∑¥∑˛ŒÒ∆˜ªÚæØ∂”πÊ‘ÚæÕª·±ª»œŒ™ «∏Ø∞‹µƒ.");
				SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª∏ˆ∏Ø∞‹µƒæØ≤Ï£¨ƒ„ª·≥…Œ™æ÷≥§…ı÷¡ «FBi∫Õæ¸»Àµƒœ˚√∂‘œÛ.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚æØ≤Ï√ª∑®◊•◊°ƒ„, «∞Ã®π‹¿Ì‘±ªÚ∆‰À˚∏ﬂ≤„µƒπ‹¿Ì‘±ª·Ω˚÷πƒ„…œ∞‡.");
				SendClientMessage(playerid, COLOR_WHITE,"π˝∑÷µƒ¿˚”√Œ‰¡¶DM,¿˚”√»®¿˚Œ™◊‘º∫ªÒµ√¿˚”√«ÈΩ⁄—œ÷ÿΩ´±ªBan≥ˆ∑˛ŒÒ∆˜.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„ø…ƒ‹ª·±ªπ‹¿Ì‘±Ω˚÷π…œ∞‡“ª∏ˆ‘¬ªÚ’ﬂ±ªæ÷≥§Ãﬂ≥ˆæØ∂”£¨À˘“‘ŒÒ±ÿ◊Ò ÿπÊ‘Ú.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 5)
		    {
		        OfficerCourseStep[playerid] = 6;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ≥…Œ™“ª∏ˆ∫√æØ≤Ïª·‘ı√¥—˘ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„‘⁄µ±∞‡÷µ«⁄ ±±Ìœ÷¡º∫√≤¢«“∑˛¥”√¸¡Ó≤ªŒ•∑¥ºÕ¬…ª·±ª»œŒ™ «“ª√˚∫√æØ≤Ï.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„ «“ª√˚”–æ≠—Èµƒ∫√æØ≤Ï£¨ƒ„Ω´”–∏¸∂‡ª˙ª·±ª…˝÷∞ªÚΩ±¿¯.");
				SendClientMessage(playerid, COLOR_WHITE,"◊˜Œ™“ª√˚¡ÆΩ‡µƒ∫√æØ≤Ï£¨π‹¿Ì‘±ª·ø¥∫√ƒ„£¨«“–≈»Œƒ„£¨Ωª∏¯ƒ„¥¯–¬ ÷µƒ»ŒŒÒ.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚◊‹π‹»œŒ™ƒ„◊ˆµΩπª∫√ø…ƒ‹ª·Ã·∞Œƒ„≥…Œ™vipÕÊº“ªÚ’ﬂGM÷˙¿ÌªÚ«∞Ã®π‹¿Ì‘±.");
				SendClientMessage(playerid, COLOR_WHITE,"À˘“‘√øµ±ƒ„¥¶¿Ì ¬«Èµƒ ±∫Ú“ª∂®“™øº¬««Â≥˛ ≤√¥ «∂‘µƒ ≤√¥ «¥Ìµƒ£¨ŒÒ±ÿ!.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 6)
		    {
		        OfficerCourseStep[playerid] = 7;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- »Á∫Œ¥˛≤∂“ª√˚◊Ô∑∏ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE," ◊œ»“™«Û∂‘∑ΩÕ∂Ωµ, »Áπ˚À˚‘⁄√ª”–Ω¯––∑¥øπªÚ∂‘÷¥∑®’ﬂΩ¯––÷¬√¸Œ‰¡¶¥Úª˜ ±.");
				SendClientMessage(playerid, COLOR_WHITE,"µ±À˚Õ∂Ωµ ±£¨À˚µƒ√˚◊÷ª·±‰≥…µ≠≥»…´, ≤ª“™»√À˚√«∆€∆≠ƒ„, ø¥«Â≥˛À˚√«µƒ√˚◊÷.");
				SendClientMessage(playerid, COLOR_WHITE,"œÚÀ˚–˚∂¡√◊¿º¥ÔπÊ‘Ú(/mir)»ª∫Û¥¯À˚µΩæØ≤Ïæ÷, »Áπ˚À˚…Ë∑®Ã”≈‹ø…“‘Ω´À˚ª˜±–.");
				SendClientMessage(playerid, COLOR_WHITE,"µ±ƒ„◊ˆµΩ¡À“‘…œº∏µ„, Ω´À˚πÿΩ¯º‡”¸£¨“¿’’◊Ô––«·÷ÿ∏¯”Ë1-10∑÷÷”µƒπÿ—∫.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚À˚–Ë“™¬… ¶ƒ„±ÿ–Îµ»¬… ¶µΩ¥ÔæØ≤Ï»ª∫Û‘Ÿø™ ºΩ¯––Ã÷¬€.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 7)
		    {
		        OfficerCourseStep[playerid] = 8;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- »Á∫Œ÷∆∑˛“ª√˚◊Ô∑∏ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚◊Ô∑∏æˆ∂®”√Œ‰¡¶∑¥ª˜£¨∂‘ƒ„…‰ª˜£¨ƒ„ø…“‘‘⁄√ª”–Ω¯––æØ∏Êµƒ«Èøˆœ¬ªπª˜.");
				SendClientMessage(playerid, COLOR_WHITE,"“ÚŒ™sampµƒ—”≥Ÿπÿœµ£¨ƒ„“ª∂®“™—ßª·¥Úping(œÍœ∏ø…“‘—ØŒ ¿œÕÊº“)£¨’‚—˘≤≈ƒ‹≥…π¶’Ω §◊Ô∑∏.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚”–2∏ˆ“‘…œµƒ◊Ô∑∏∂‘ƒ„Ω¯––∑¥ª˜, “˛±Œ∆¿¥»ª∫Û“™«Û÷ß‘Æ, »Áπ˚ƒ„”–ƒ‹¡¶µƒª∞œÒ¿∂≤®“ª—˘∞—À˚√«Õ≥Õ≥∑≈µπ.");
				SendClientMessage(playerid, COLOR_WHITE,"≤ª“™¿À∑—ƒ„µƒ◊”µØ≥˝∑«ƒ„”ˆµΩΩÙº±«Èøˆæˆ∂®“™”√Œ‰¡¶’Ú—π◊Ô∑∏.");
				SendClientMessage(playerid, COLOR_WHITE,"Œ™¡À∑¿÷π◊Ô∑∏Ã”≈‹ƒ„ø…“‘…‰ª˜∆∆ªµÀ˚√«µƒ‘ÿæﬂªÚ’ﬂÕ∏π˝≥µ¥∞…‰ª˜À˚√«.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 8)
		    {
		        OfficerCourseStep[playerid] = 9;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- »Á∫Œ∂‘“ª∏ˆµÿ«¯Ω¯––ÕªœÆ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚◊Ô∑∏Ω¯»ÎΩ®÷˛ŒÔ∑¥øπ£¨ƒ„”¶∏√œ»—∞«Û÷ß‘Æ£¨»Áπ˚ƒ„√∞»ªΩ¯»Îø…ƒ‹ª·‘‚µΩ∑¸ª˜.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚‘ˆ‘ÆµΩ¥Ô¡À, “ª∂®“™Ã˝…œº∂µƒ÷∏ª”, »Áπ˚À˚√«“™«Ûƒ„‘⁄Õ‚√Êµ»¥˝, ƒ«æÕµ»◊≈±œÒ¿∂≤®ƒ«—˘≥—”¢–€.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚À˚√«“™«Ûƒ„“ª∆ÕªœÆƒ«∏ˆµÿ«¯¥¯…œƒ„µƒŒ‰∆˜«“≤ª“™¿Îø™À˚√«, “™Õ≈Ω·∫œ◊˜.");
				SendClientMessage(playerid, COLOR_WHITE,"‘⁄Ω¯»Î«∞, ø…“‘»√∆‰À˚∂”‘±∞Ô÷˙ƒ„√«Ω´◊Ô∑∏µƒ≥µ¡æ≥∑◊ﬂªÚ’ﬂ∆∆ªµ£¨“‘∑¿À˚√«‘Ÿ¥ŒÃ”≈‹.");
				SendClientMessage(playerid, COLOR_WHITE,"◊Ó∫Û£¨»Áπ˚À˚√«¥ÚÀ„Ã”≈‹£¨…‰ª˜À˚√«÷±µΩÀ˚√«Õ∂Ωµ£¨»Áπ˚À˚√«∑¥ª˜£¨∫¡≤ª”Ã‘•µƒª˜±–À˚√«.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 9)
		    {
		        OfficerCourseStep[playerid] = 10;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- “ª–©»√ƒ„≥…Œ™∫√æØ≤ÏµƒΩ®“È ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"≤ª“™∏¯ ˝∂ÓÃ´∏ﬂµƒ∑£µ•£¨µ´“≤≤ªƒ‹Ã´…Ÿ£¨Ã´∂‡ª·»√±»ÀÃ÷—·ƒ„£¨Ã´…Ÿª·»√±»Àæıµ√ƒ„ «∏ˆ…µ±∆.");
				SendClientMessage(playerid, COLOR_WHITE,"‘⁄◊∑÷÷–£¨—ßª·”√≥µ¡æ◊≤ª˜◊Ô∑∏≥µ¡æµƒŒ≤≤ø»√À˚√«ª¨≥ˆµ¿¬∑£¨¿¥ºı¬˝À˚√«µƒÀŸ∂».");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„‘⁄º› ª÷±…˝ª˙£¨±Õ¸º«±®∏Ê◊‹≤øƒ„µƒŒª÷√£¨≤ª“™∑…µƒÃ´µÕ£¨’‚—˘ª·ŒÛ…À∆‰À˚Œﬁπºµƒ»À.");
				SendClientMessage(playerid, COLOR_WHITE,"±£≥÷ƒ„µƒ”ƒƒ¨∏–£¨—ßª·”Î±»À∂‡Ωª¡˜£¨’‚—˘±»Àª·æıµ√ƒ„∫‹»›“◊«◊Ω¸¥”∂¯œ≤ª∂ƒ„.");
				SendClientMessage(playerid, COLOR_WHITE,"≤ª“™‘⁄√ª”–¿Ì”…µƒ«Èøˆœ¬∂‘±»À π”√’Ω ı÷∏¡Ó£¨’‚—˘ª·»√»À Æ∑÷Ã÷—·ƒ„.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 10)
		    {
		        OfficerCourseStep[playerid] = 11;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ‘ı√¥◊ˆª·»√±»ÀÃ÷—·ƒ„ ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"»À√«ª·Ã÷—·ƒ„»Áπ˚ƒ„“ª÷±Œ•∑¥πÊ‘Ú£¨±»»Á∫˙¬“ø™«πªÚ’ﬂŒ£œ’º› ª.");
				SendClientMessage(playerid, COLOR_WHITE,"‘⁄ƒ„“Ú∂‘∑Ωµƒ¥ÌŒÛ∏¯∂‘∑Ω≥Õ∑£ ±,ƒ„±ÿ–Î±£÷§◊‘º∫“≤ƒ‹◊ˆµƒ∫√£¨∑Ò‘Ú±»Àª·ø¥≤ª∆ƒ„.");
				SendClientMessage(playerid, COLOR_WHITE,"≤ª“™º‡Ω˚±»ÀÃ´æ√ªÚ’ﬂø™∫‹¥Û ˝∂Óµƒ∑£µ•£¨±»»Á»Àº“‘⁄π„≥°…œ–°±„ƒ„≤ªƒ‹“ÚŒ™’‚÷÷ ¬«ÈπÿÀ˚10∑÷÷”.");
				SendClientMessage(playerid, COLOR_WHITE,"≤ªƒ‹ŒÍ»Ë◊Ô∑∏£¨±»»Á‘⁄À˚Õ∂Ωµ∫Ûπ•ª˜À˚£¨ªÚ’ﬂ‘⁄À˚±ªº‡Ω˚∫Û≥∞–¶»Ë¬ÓÀ˚");
				SendClientMessage(playerid, COLOR_WHITE,"◊ˆŒ•∑®µƒ ¬«È£¨ªÚ’ﬂ”Î∫⁄∞Ô∑›◊””–Ã´∂‡µƒΩ”¥•ª·±ª»ÀÃ÷—·£¨»œŒ™ƒ„√ª”–◊ ∏Òµ±Œ¨ª§’˝“Â.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
			else if(OfficerCourseStep[playerid] == 11)
		    {
		        OfficerCourseStep[playerid] = 12;
		        ClearChatbox(playerid, 10);
				SendClientMessage(playerid, COLOR_GREEN,"--------------------------------- ∏…µ√∫√£¨ΩÃ≥ÃΩ· ¯¡À ---------------------------------");
				SendClientMessage(playerid, COLOR_WHITE,"÷’”⁄µΩ¡À◊Ó∫Û£¨’‚¥˙±Ìƒ„“—æ≠¡ÀΩ‚¡Àª˘±æµƒ÷¥∑®÷™ ∂£¨ø…“‘ø™ º≤‚ ‘¡À.");
				SendClientMessage(playerid, COLOR_WHITE,"øº»°÷¥∑®◊ ∏Ò÷§ Èµƒº€∏Ò « 5000$, ≤ªπ‹ƒ„Õ®π˝ªπ « ß∞‹.");
				SendClientMessage(playerid, COLOR_WHITE,"»Áπ˚ƒ„≥…π¶Õ®π˝øº ‘£¨ƒ„ø…“‘¥©…œ÷∆∑˛≤¢«“∏ÊÀﬂ±»Àƒ„ «“ª√˚÷¥∑®»À‘±.");
				SendClientMessage(playerid, COLOR_WHITE,"ƒ„–Ë“™æ”◊°÷§∫Õº›’’£¨ƒ« «øº ‘«∞±ÿ–Îµƒ£¨«ßÕÚ≤ªƒ‹Õ¸º«.");
				SendClientMessage(playerid, COLOR_WHITE,"◊£ƒ„∫√‘Àƒ‹Õ®π˝≤‚ ‘£¨œ£Õ˚ƒ‹‘⁄Œ¥¿¥ø¥µΩƒ„’æ‘⁄¥ÛΩ÷…œπ‹¿Ì÷Œ∞≤!.");
				ClearChatbox(playerid, 3);
				SendClientMessage(playerid, COLOR_WHITE,"∞¥ªÿ≥µº¸ºÃ–¯, ∞¥º”ÀŸ≈‹º¸∑µªÿ…œ“ªÃı.");
			}
		}
	    if(AFK[playerid] == 1)
		{
			afkadmins --;
			AFK[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
 			TextDrawHideForPlayer(playerid, Textdraw5);
			TextDrawHideForPlayer(playerid, Textdraw50);
			TextDrawShowForPlayer(playerid, Textdraw44);
			TextDrawShowForPlayer(playerid, Textdraw45);
			TextDrawShowForPlayer(playerid, Textdraw55);
			TextDrawShowForPlayer(playerid, Textdraw49[playerid]);
			TextDrawShowForPlayer(playerid, Textdraw51[playerid]);
			if(PlayerInfo[playerid][pWatch] == 1)
			{
				TextDrawShowForPlayer(playerid, Textdraw56);
				TextDrawShowForPlayer(playerid, Textdraw57);
				TextDrawShowForPlayer(playerid, Textdraw58);
			}
			if(!IsPlayerInAnyVehicle(playerid)) SafeSetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
            else SetVehiclePos(GetPlayerVehicleID(playerid), TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
 		}
		if(IsPlayerInRangeOfPoint(playerid, 1, -1423.8018,934.8103,1036.4380))
		{//DD Exit By CuervO_NegrO
			GameTextForPlayer(playerid, "~w~Blackfield, ~y~Las Venturas", 5000, 1);
			SafeSetPlayerInterior(playerid, 0);
			SafeSetPlayerPos(playerid,1090.9735,1606.6628,12.5469);
			SendClientMessage(playerid, TEAM_VAGOS_COLOR, "We Hope that You had Fun in the Stadium.");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1,1462.1191,-1013.2958,26.8438))
		{//Bank enter.
			GameTextForPlayer(playerid, "~g~The Bank", 5000, 1);
			SafeSetPlayerInterior(playerid, 0);
			SafeSetPlayerPos(playerid,2306.4106,-13.9335,26.7422);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 2305.3479,-16.1179,26.7496))
		{//Bank exit.
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SafeSetPlayerInterior(playerid, 0);
			SafeSetPlayerPos(playerid,1457.3992,-1012.5910,26.8438);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1554.9537,-1675.6584,16.1953))
		{//æØ≤Ïæ÷ Entrance
			PlayerInfo[playerid][pInteriorNr] = 1;
			GameTextForPlayer(playerid, "~w~Police Department", 5000, 1);
			SafeSetPlayerInterior(playerid, 6);
			SafeSetPlayerPos(playerid,246.7079,66.2239,1003.6406);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 246.5325,62.4251,1003.6406))
		{//æØ≤Ïæ÷ Exit
		    PlayerInfo[playerid][pInteriorNr] = 0;
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SafeSetPlayerInterior(playerid, 0);
			SafeSetPlayerPos(playerid,1552.3231,-1674.6780,16.1953);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1154.0857,-1770.9600,16.5992))
		{//π˙∑¿≤ø Entrance
			PlayerInfo[playerid][pInteriorNr] = 41;
			GameTextForPlayer(playerid, "~w~Ministery of Defense", 5000, 1);
			SafeSetPlayerInterior(playerid, 6);
			SafeSetPlayerPos(playerid,-667.9032,2615.0208,70.7787);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, -667.9032,2615.0208,70.7787))
		{//π˙∑¿≤ø Exit
			PlayerInfo[playerid][pInteriorNr] = 0;
			GameTextForPlayer(playerid, "~w~Los Santos", 5000, 1);
			SafeSetPlayerInterior(playerid, 0);
			SafeSetPlayerPos(playerid,1154.0857,-1770.9600,16.5992);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 478.0687,-1498.9708,20.4831))
		{//RPC Enter
			if(PlayerInfo[playerid][pRegularRank] >= 1 || PlayerInfo[playerid][pAdmin] >= 1)
			{
			    PlayerInfo[playerid][pInteriorNr] = 10;
				GameTextForPlayer(playerid, "~y~Welcome to... ~n~~w~The Regular Players Lounge ~n~~n~~n~~n~~n~~n~~n~~n~~n~ ~r~Crimes are Not Tolerated Here", 8500,3);
				SendClientMessage(playerid, COLOR_WHITE, "** ª∂”≠π‚¡Ÿ,‘⁄∞…Ã®∏ΩΩ¸º¸»Î/drinksµ√µΩ“˚¡œ√˚µ•");
				SendClientMessage(playerid, COLOR_WHITE, "** ’‚¿Ôªπ”–“ª–©≥£øÕÕÊº“◊º±∏µƒÃÿ ‚ŒÔ∆∑");
	            SendClientMessage(playerid, COLOR_NICERED, "** Ω˚÷π‘⁄’‚¿Ô∑∏◊Ô,’‚¿Ô◊ˆµƒÀ˘”–◊Ô––µ»”⁄∂˛∏ˆ–° ±º‡Ω˚◊Ô––.");
				SafeSetPlayerInterior(playerid, 3);
				SafeSetPlayerPos(playerid,-2638.7832,1403.1351,906.4609);
				SetPlayerVirtualWorld(playerid, 20);
				PlayerInfo[playerid][pVirWorld] = 20;
			}
			else return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ª «“ª√˚≥£øÕÕÊº“!");
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, -2636.8042,1402.9908,906.4609))
		{//RPC Exit
		PlayerInfo[playerid][pInteriorNr] = 0;
		GameTextForPlayer(playerid, "~w~Los Santos", 5000,1);
		SafeSetPlayerInterior(playerid, 0);
		SafeSetPlayerPos(playerid,478.9689,-1495.9681,20.4098);
		PlayerInfo[playerid][pVirWorld] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		}

		else if (IsPlayerInRangeOfPoint(playerid, 1, 488.2531,-82.7632,998.7578))
		{
			//Misty/10 Green Toilets
			PlayerInfo[playerid][pInteriorNr] = 26;
			SafeSetPlayerPos(playerid, 2277.5942,-1139.8883,1050.8984);
			GameTextForPlayer(playerid, "~w~Restroom", 5000, 3);
			SafeSetPlayerInterior(playerid,11);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 2280.0476,-1139.5413,1050.8984))
		{
			//Misty/10 Green Toilets
			PlayerInfo[playerid][pInteriorNr] = 26;
			SafeSetPlayerPos(playerid, 490.9059,-81.4256,998.7578);
			GameTextForPlayer(playerid, "~w~Ten Green Bottles", 5000, 3);
			SafeSetPlayerInterior(playerid,11);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 306.2120,-141.8780,1004.0547))
		{
			GameTextForPlayer(playerid, "~w~Ammunation Training", 5000, 1);
			SafeSetPlayerPos(playerid, 301.2120,-141.8780,1004.0547);
			SetPlayerCheckpoint(playerid, 300.5705,-134.0464,1004.0625, 3);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1,304.2120,-141.8780,1004.0547))
		{
			GameTextForPlayer(playerid, "~w~Ammunation", 5000, 1);
			SafeSetPlayerPos(playerid, 308.2120,-141.8780,1004.0547);
			DisablePlayerCheckpoint(playerid);
		}

		else if (IsPlayerInRangeOfPoint(playerid, 1, 1518.5179,-1452.9224,14.2031))
		{
			//FBI Enter front
			PlayerInfo[playerid][pInteriorNr] = 4;
			SafeSetPlayerPos(playerid, 235.7598,142.4089,1003.0300);
			GameTextForPlayer(playerid, "~w~FBI Department",5000,1);
			SafeSetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1540.3314,-1484.3126,13.5493))
		{
			//FBI Enter back
			PlayerInfo[playerid][pInteriorNr] = 4;
			SafeSetPlayerPos(playerid, 288.7287,167.0377,1007.1719);
			GameTextForPlayer(playerid, "~w~FBI Department",5000,1);
			SafeSetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 288.7287,167.0377,1007.1719))
		{
			//FBI Exit back
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1540.3314,-1484.3126,13.54939);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 238.3001,138.9406,1003.0234))
		{
			//FBI Exit front
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1518.4724,-1450.2354,13.5469);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1,1173.2563,-1323.3102,15.3943))
		{
			//Hospital enter
			PlayerInfo[playerid][pInteriorNr] = 29;
			SafeSetPlayerPos(playerid, 1222.0614,-1250.3997,1287.8243);
			GameTextForPlayer(playerid, "~w~All Saints Hospital",5000,1);
			SafeSetPlayerInterior(playerid,6);
			SetPlayerFacingAngle(playerid, 0);
			TogglePlayerControllable(playerid, 0);
			SetTimerEx("Unfreezeply",3000,false,"i",playerid);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1,1219.6620,-1250.0331,1287.8243))
		{
			//Hospital exit
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1174.2563,-1323.3102,15.3943);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1,1298.7075,-798.5981,84.1406))
		{
			//La Famiglia Sinatra  gang hq
			if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
				SafeSetPlayerPos(playerid, 1254.3436,-789.3809,1084.0078);
				GameTextForPlayer(playerid, "~w~La Famiglia Sinatra HQ",5000,1);
				SafeSetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 181);
				PlayerInfo[playerid][pInteriorNr] = 31;
			}
			else if(hqlock[luclock] == 0)
			{
			    SafeSetPlayerPos(playerid, 1254.3436,-789.3809,1084.0078);
				GameTextForPlayer(playerid, "~w~La Famiglia Sinatra HQ",5000,1);
				SafeSetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 181);
				PlayerInfo[playerid][pInteriorNr] = 31;
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1252.5208,-789.2282,1084.0078))
		{
			//La Famiglia Sinatra gang hq
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1298.6263,-801.5491,84.1406);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 1);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1,691.5770,-1276.0026,13.5607))
		{
			//…Ωø⁄◊È  gang hq
			if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
			{
			    PlayerInfo[playerid][pInteriorNr] = 6;
				SafeSetPlayerPos(playerid, 962.0352,-53.4519,1001.1246);
				GameTextForPlayer(playerid, "~w~Yamaguchi HQ",5000,1);
				SafeSetPlayerInterior(playerid,3);
				SetPlayerFacingAngle(playerid, 181);
			}
			else if(hqlock[guclock] == 0)
			{
			    PlayerInfo[playerid][pInteriorNr] = 6;
			    SafeSetPlayerPos(playerid, 962.0352,-53.4519,1001.1246);
				GameTextForPlayer(playerid, "~w~Yamaguchi HQ",5000,1);
				SafeSetPlayerInterior(playerid,3);
				SetPlayerFacingAngle(playerid, 181);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1,967.6099,-53.1411,1001.1246))
		{
			//Yamaguchi gang hq
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 689.8694,-1276.0619,13.5595);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 1);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1122.7406,-2037.0421,69.8942))
		{
			//¥Û»¶∞Ô gang hq
			if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
			{
			    PlayerInfo[playerid][pInteriorNr] = 8;
				SafeSetPlayerPos(playerid, 2576.5076,-1300.3403,1060.9844);
				GameTextForPlayer(playerid, "~w~¥Û»¶∞Ô HQ",5000,1);
				SafeSetPlayerInterior(playerid,2);
				SetPlayerFacingAngle(playerid, 181);
			}
			else if(hqlock[stlock] == 0)
			{
			    PlayerInfo[playerid][pInteriorNr] = 8;
			    SafeSetPlayerPos(playerid, 2576.5076,-1300.3403,1060.9844);
				GameTextForPlayer(playerid, "~w~Chornaya Bratva HQ",5000,1);
				SafeSetPlayerInterior(playerid,2);
				SetPlayerFacingAngle(playerid, 181);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 2576.7900,-1284.8854,1054.6406))
		{
			//Chornaya Bratva gang hq
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1123.9808,-2037.0841,69.8855);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 1);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 168.2048,-1769.3395,4.4728))
		{
			//¿≠∏± gang hq
			if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
			    PlayerInfo[playerid][pInteriorNr] = 7;
				SafeSetPlayerPos(playerid, 446.9658,1399.1479,1084.3047);
				GameTextForPlayer(playerid, "~w~La Vice HQ",5000,1);
				SafeSetPlayerInterior(playerid,2);
				SetPlayerFacingAngle(playerid, 1);
			}
			else if(hqlock[iolock] == 0)
			{
			    PlayerInfo[playerid][pInteriorNr] = 7;
			    SafeSetPlayerPos(playerid, 446.9658,1399.1479,1084.3047);
				GameTextForPlayer(playerid, "~w~La Vice HQ",5000,1);
				SafeSetPlayerInterior(playerid,2);
				SetPlayerFacingAngle(playerid, 0);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 447.0208,1397.4796,1084.3047))
		{
			//La Vice gang hq
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 172.9946,-1769.8417,4.4319);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 179);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1828.1594,-1980.4380,13.5469))
		{
			//»˝∫œª· HQ
			if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
			{
			    PlayerInfo[playerid][pInteriorNr] = 9;
				SafeSetPlayerPos(playerid, 2351.0479,-1180.8905,1027.9766);
				GameTextForPlayer(playerid, "~w~Los Surenos 13 HQ",5000,1);
				SafeSetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 90);
			}
			else if(hqlock[surlock] == 0)
			{
			    PlayerInfo[playerid][pInteriorNr] = 9;
			    SafeSetPlayerPos(playerid, 2351.0479,-1180.8905,1027.9766);
				GameTextForPlayer(playerid, "~w~Los Surenos 13 HQ",5000,1);
				SafeSetPlayerInterior(playerid,5);
				SetPlayerFacingAngle(playerid, 90);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Locked",5000,1);
			}
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 2352.9187,-1180.9679,1027.9766))
		{
			//Surenos HQ
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1830.1904,-1983.0223,13.5469);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 179);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1481.0206,-1771.1138,18.7958))
		{
			// –’˛Ã¸
			PlayerInfo[playerid][pInteriorNr] = 2;
			SafeSetPlayerPos(playerid, 386.2978,173.8582,1008.3828);
			SafeSetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 390.0630,173.5741,1008.3828))
		{
			// –’˛Ã¸
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1481.0206,-1769.5138,18.7958);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 681.6054,-473.7628,16.5363))
		{
			//anarchy hq
			PlayerInfo[playerid][pInteriorNr] = 40;
			SafeSetPlayerPos(playerid, 679.3209,-452.7324,-25.6172);
			GameTextForPlayer(playerid, "~w~Sons of Anarchy HQ",5000,1);
			SafeSetPlayerInterior(playerid, 1);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 681.5295,-450.8412,-25.6172))
		{
			//anarchy hq
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 683.2062,-473.8727,16.5363);
			GameTextForPlayer(playerid, "~w~Dillimore",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1784.58,-1297.52,13.37))
		{
			//π„≤•π´Àæ
			PlayerInfo[playerid][pInteriorNr] = 32;
			SafeSetPlayerPos(playerid, 1817.0708,-1297.3933,109.2669);
			GameTextForPlayer(playerid, "~w~ABC studio",5000,1);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1817.6517,-1294.2751,109.2697))
		{
			//π„≤•π´Àæ
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1787.6311,-1297.4938,13.3793);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1752.8452,-1894.1328,13.5573))
		{
			//LA ≥ˆ◊‚≥µπ´Àæ
	        PlayerInfo[playerid][pInteriorNr] = 33;
			SafeSetPlayerPos(playerid, 371.8502,182.0368,1014.1875);
			GameTextForPlayer(playerid, "~w~LA Yellow Cab Co.",5000,1);
			SafeSetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 371.4523,180.2195,1014.1875))
		{
			//LA Yellow Cab Co.
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 1755.7578,-1894.1992,13.5566);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 2045.3928,-1908.0372,13.5469))
		{
			//DMW
	        PlayerInfo[playerid][pInteriorNr] = 11;
			SafeSetPlayerPos(playerid, 1494.6207,1305.2336,1093.2891);
			GameTextForPlayer(playerid, "~w~License center",5000,1);
			SafeSetPlayerInterior(playerid,3);
			SetPlayerFacingAngle(playerid, 0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1494.2778,1303.7288,1093.2891))
		{
			//DMW Exit
			PlayerInfo[playerid][pInteriorNr] = 0;
			SafeSetPlayerPos(playerid, 2046.8928,-1908.0372,13.5469);
			GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
			SafeSetPlayerInterior(playerid,0);
			SetPlayerFacingAngle(playerid, 280);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1524.5724,-1677.8043,6.2188))
		{
		    //PD Elevator
		    PlayerInfo[playerid][pInteriorNr] = 1;
		    SafeSetPlayerPos(playerid, 244.0099,66.4152,1003.6406);
		    GameTextForPlayer(playerid, "~w~Police Department",5000,1);
		    SafeSetPlayerInterior(playerid,6);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 1557.7257,-1675.2711,28.3955))
		{
		    //PD Elevator
		    PlayerInfo[playerid][pInteriorNr] = 1;
		    SafeSetPlayerPos(playerid, 244.0099,66.4152,1003.6406);
		    GameTextForPlayer(playerid, "~w~Police Department",5000,1);
		    SafeSetPlayerInterior(playerid,6);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 2730.4297,-2451.5000,17.5937))
		{
		    //Army Entrance
		    PlayerInfo[playerid][pInteriorNr] = 5;
		    SafeSetPlayerPos(playerid, 249.9911,108.3193,1003.2188);
		    GameTextForPlayer(playerid, "~g~Army Barracks",5000,1);
		    SafeSetPlayerInterior(playerid,10);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 246.7823,107.8988,1003.2188))
		{
		    //Army Exit
		    PlayerInfo[playerid][pInteriorNr] = 0;
		    SafeSetPlayerPos(playerid, 2734.6604,-2450.5486,17.5938);
		    GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		    SafeSetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 616.7385,-1542.1398,15.3345))
		{
		    //Firemen Entrance
		    PlayerInfo[playerid][pInteriorNr] = 23;
		    SafeSetPlayerPos(playerid, 2807.619873,-1171.899902,1025.570312);
		    GameTextForPlayer(playerid, "~r~Firemen Barracks",5000,1);
		    SafeSetPlayerInterior(playerid,8);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 2807.6807,-1174.5410,1025.5703))
		{
		    //Firemen Exit
		    PlayerInfo[playerid][pInteriorNr] = 0;
		    SafeSetPlayerPos(playerid, 618.3007,-1537.3007,15.2589);
		    GameTextForPlayer(playerid, "~w~Los Santos",5000,1);
		    SafeSetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 3, 2812.3806,-1163.9534,1029.1719))
		{
		    //Firemen Roof Entrance
		    SafeSetPlayerPos(playerid, 574.9918,-1491.9247,30.8906);
		    GameTextForPlayer(playerid, "~r~Firemen Barracks Roof",5000,1);
		    SafeSetPlayerInterior(playerid,0);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1, 571.4652,-1522.2427,30.8906))
		{
		    //Firemen Roof Entrance
		    PlayerInfo[playerid][pInteriorNr] = 23;
		    SafeSetPlayerPos(playerid, 2806.7979,-1161.3995,1029.1646);
		    GameTextForPlayer(playerid, "~r~Firemen Barracks",5000,1);
		    SafeSetPlayerInterior(playerid,8);
		    SetPlayerFacingAngle(playerid, 270);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1.5, 1570.3828,-1333.8882,16.4844))
		{
		    //Next to PD building
		    SafeSetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
		    GameTextForPlayer(playerid, "~w~Roof of News building",5000,1);
		    SafeSetPlayerInterior(playerid,0);
		}
		else if (IsPlayerInRangeOfPoint(playerid, 1.5, 1548.8167,-1366.2247,326.2109))
		{
		    //Next to PD building
		    SafeSetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
		    GameTextForPlayer(playerid, "~w~News building",5000,1);
		    SafeSetPlayerInterior(playerid,0);
		}
	}
    else if ( PRESSED(KEY_LOOK_BEHIND) )
    {
		if(IsAnNg(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 4,238.9703,112.8155,1003.2188))
			{
			    if(armyw1 == 0)
			    {
		      		MoveDynamicObject(armywindows1, 239.774,111.511,1000.61, 1.7500);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		armyw1 = 1;
				}
				else
				{
		      		MoveDynamicObject(armywindows1, 239.774,111.511,1002.31, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		armyw1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,253.8096,117.3113,1003.2188))
			{
			    if(armyw2 == 0)
			    {
		      		MoveDynamicObject(armywindows2, 253.050,116.195,1000.61, 1.7500);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		armyw2 = 1;
				}
				else
				{
				    MoveDynamicObject(armywindows2, 253.050,116.195,1002.31, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥∞ø⁄“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      		        armyw2 = 0;
				}
			}
		}
		if(IsAPDMember(playerid) || PlayerInfo[playerid][pAdmin] >= 6 || IsAFreecop(playerid))
		{
		    if(IsPlayerInRangeOfPoint(playerid, 4,251.2575,67.6536,1003.6406))
			{
			    if(lspdw == 0)
			    {
		      		MoveDynamicObject(lspdwindows, 250.524,67.650,1001.08, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥∞ø⁄“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					lspdw = 1;
				}
				else
				{
				    MoveDynamicObject(lspdwindows, 250.524,67.650,1002.58, 3.0000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥∞ø⁄“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥∞ø⁄.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					lspdw = 0;
				}
			}
		}
   		if(IsAPDMember(playerid) || IsAFreecop(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 2,250.611,63.2995,1003.18))
			{
			    if(lspd1 == 0)
			    {
		      		MoveDynamicObject(lspddoor1, 250.611,63.2995,1000.64, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd1 = 1;
				}
				else
				{
		      		MoveDynamicObject(lspddoor1, 250.611,63.2995,1003.04, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,246.228,72.4962,1003.04))
			{
			    if(lspd2 == 0)
			    {
		      		MoveDynamicObject(lspddoor2, 246.228,72.4962,1000.63, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷ ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd2 = 1;
				}
	      		else
				{
				    MoveDynamicObject(lspddoor2, 246.228,72.4962,1003.18, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷π‹¿Ì¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd2 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,1582.6205,-1638.0587,12.3776))
			{
			    if(lspd3 == 0)
			    {
		      		MoveDynamicObject(pdgate4, 1582.6205,-1638.0587,7.3776, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷≥µø‚¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd3 = 1;
				}
	      		else
				{
				    MoveDynamicObject(pdgate4, 1582.6205,-1638.0587,12.3776, 4.5000);
		      		SendClientMessage(playerid, COLOR_BLUE,"æØ≤Ïæ÷≥µø‚¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		lspd3 = 0;
				}
			}
		}
		if(IsAnNg(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
		{
		 	if(IsPlayerInRangeOfPoint(playerid, 2,239.5503,117.5205,1003.2188))
			{
				if(army1 == 0)
				{
		      		MoveDynamicObject(armydoor1, 239.591,118.098,1000.21, 4.0);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army1 = 1;
				}
				else
				{
		      		MoveDynamicObject(armydoor1, 239.591,118.098,1003.01, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,239.5794,125.0337,1003.2188))
			{
				if(army2 == 0)
				{
		      		MoveDynamicObject(armydoor2, 239.635,125.544,1000.21, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army2 = 1;
				}
				else
				{
				    MoveDynamicObject(armydoor2, 239.635,125.544,1003.21, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		     		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army2 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2,253.1278,109.1392,1003.2188))
			{
			    if(army3 == 0)
			    {
		      		MoveDynamicObject(armydoor3, 253.146,108.902,1000.21, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army3 = 1;
				}
				else
				{
				    MoveDynamicObject(armydoor3, 253.146,108.902,1003.01, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		army3 = 0;
				}
			}
		}
		if(IsAnFbi(playerid) || PlayerInfo[playerid][pAdmin] >= 6)
		{
		 	if(IsPlayerInRangeOfPoint(playerid, 3,228.250,151.334,1002.67))
			{
			    if(fbi1 == 0)
			    {
		      		MoveDynamicObject(fbidoor1, 228.250,151.334,1000.02, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi1 = 1;
				}
				else
				{
		      		MoveDynamicObject(fbidoor1, 228.250,151.334,1002.67, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi1 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3,271.140,191.185,1008.97))
			{
			    if(fbi2 == 0)
				{
		      		MoveDynamicObject(fbidoor2, 271.140,191.185,1005.17, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi2 = 1;
				}
				else
				{
		      		MoveDynamicObject(fbidoor2, 271.140,191.185,1008.97, 4.5);
		      		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
		      		GetPlayerName(playerid, sendername, sizeof(sendername));
		      		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
		      		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      		fbi2 = 0;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 3,238.784,193.768,1008.97))
			{
			    if(fbi3 == 0)
			    {
			   		MoveDynamicObject(fbidoor3, 238.784,193.768,1005.17, 4.5);
			   		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ª¥Úø™,«Îº«µ√πÿ…œÀ˚!");
			   		GetPlayerName(playerid, sendername, sizeof(sendername));
			  		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜¥Úø™¡À¥Û√≈.", sendername);
			   		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			   		fbi3 = 1;
				}
				else
				{
			   		MoveDynamicObject(fbidoor3, 238.784,193.768,1008.97, 4.5);
			   		SendClientMessage(playerid, COLOR_BLUE,"FBI ¥Û√≈“—±ªπÿ±’,–ª–ªƒ„!");
			   		GetPlayerName(playerid, sendername, sizeof(sendername));
			   		format(string, sizeof(string), "* %s ”√À˚µƒ“£øÿ∆˜πÿ±’¡À¥Û√≈.", sendername);
			   		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			   		fbi3 = 0;
				}
			}
		}
	}
	else if ( PRESSED(KEY_SUBMISSION) && PRESSED(KEY_ACTION) )
	{
	    if(IsAPDMember(playerid) || IsAFreecop(playerid))
		{
		   	if (IsPlayerInRangeOfPoint(playerid, 15,1589.053344,-1638.123168,14.122960))
			{
	  			if(lspdg == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
	   			MoveDynamicObject(pdgate1,1599.053344,-1638.123168,14.122960, 0.8);
		      	SetTimer("GateClose", 12000, 0);
		     	SendClientMessage(playerid, COLOR_BLUE,"≥µø‚¥Û√≈ ¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
		     	GetPlayerName(playerid, sendername, sizeof(sendername));
		   		format(string, sizeof(string), "* %s ¥Úø™¡À ≥µø‚¥Û√≈.", sendername);
		   		ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		   		PlayerPlaySound(playerid, 1153, 1589.053344,-1638.123168,14.122960);
		     	lspdg = 1;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 15,1544.700317,-1630.735717,13.096980))
			{
			    if(lspdg2 == 1) { SendClientMessage(playerid, COLOR_GREY, "** ¬∑’œ“—±ª¥Úø™"); return 1; }
	    		DestroyDynamicObject( pdgate2 );
	      		pdgate3 = CreateDynamicObject(968,1544.700317,-1630.735717,12.924660,0.000000,0.000000,270.972869);
	      		SetTimer("GateClose5", 6000, 0);
		   		SendClientMessage(playerid, COLOR_BLUE,"√≈±ª¥Úø™¡À,Ω´‘⁄6√Î∫Û◊‘∂Øπÿ±’.");
		   		GetPlayerName(playerid, sendername, sizeof(sendername));
		   		format(string, sizeof(string), "* %s ¥Úø™¡À¥Û√≈.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
				lspdg2 = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„∏ΩΩ¸√ª”–ø…“‘¥Úø™µƒ√≈.");
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
	 		if (IsPlayerInRangeOfPoint(playerid, 15,2720.3772,-2409.7523,12.6))
			{
			    if(armyg == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		     	MoveDynamicObject(armygate1,2720.3772, -2401.2523, 12.6, 3.5);
		     	SetTimer("GateClose2", 7000, 0);
	    		SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈Nr. 1 ¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
		      	GetPlayerName(playerid, sendername, sizeof(sendername));
		      	format(string, sizeof(string), "* %s ¥Úø™¡Àæ¸∂”¥Û√≈#1.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	armyg = 1;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 15,2720.3772,-2508.3069,12.6))
			{
				if(armyg2 == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		      	MoveDynamicObject(armygate2,2720.3772, -2499.8069, 12.6, 3.5);
		      	SetTimer("GateClose2", 7000, 0);
		      	SendClientMessage(playerid, COLOR_BLUE,"æ¸∂”¥Û√≈Nr. 2 ¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
		      	GetPlayerName(playerid, sendername, sizeof(sendername));
		      	format(string, sizeof(string), "* %s ¥Úø™¡Àæ¸∂”¥Û√≈#2.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	armyg2 = 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10, 2773.2056,-2494.8267,13.6681))
	  		{
	  		    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	  		    {
		    		if(PlayerInfo[playerid][pRank] >= 5)
					{
						MoveDynamicObject(armygate3, 2774.4670,-2494.5842,8.2665, 2.5);
						SetTimer("GateClose2", 7000, 0);
						SendClientMessage(playerid, COLOR_BLUE,"¥Û√≈¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
			        	format(string, sizeof(string), "* %s ¥Úø™¡À Rhino¥Û√≈.", sendername);
		      			ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„∏ΩΩ¸√ª”–ø…“‘¥Úø™µƒ√≈.");
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
	 		if (IsPlayerInRangeOfPoint(playerid, 15,1473.0992,-1496.9677,15.3232))
			{
				if(fbig2 == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		      	MoveDynamicObject(fbigate2,1473.0992,-1496.9677,5.3232, 1.5);
		      	SetTimer("GateClose3", 7000, 0);
		      	SendClientMessage(playerid, COLOR_BLUE,"FBI¥Û√≈¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");

		      	format(string, sizeof(string), "* %s ¥Úø™¡À fbi¥Û√≈.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	fbig2 = 1;
			}
			else if (IsPlayerInRangeOfPoint(playerid, 15,1534.9020,-1451.5979,14.4882))
			{
				if(fbig == 1) { SendClientMessage(playerid, COLOR_GREY, "** √≈“—æ≠¥Úø™¡À"); return 1; }
		      	MoveDynamicObject(fbigate,1534.9020,-1451.5979,5.4882, 1.5);
		      	SetTimer("GateClose3", 7000, 0);
		      	SendClientMessage(playerid, COLOR_BLUE,"FBI¥Û√≈¥Úø™¡À≤¢Ω´‘⁄7√Î∫Ûπÿ±’.");

		      	format(string, sizeof(string), "* %s ¥Úø™¡À fbi¥Û√≈.", sendername);
		      	ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
		      	fbig = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY,"* ƒ„∏ΩΩ¸√ª”–ø…“‘¥Úø™µƒ√≈.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY,"* ƒ„√ª”–ø™√≈µƒ“£øÿ∆˜.");
			return 1;
		}
	}
	else if ( PRESSED(KEY_FIRE) )
    {
        if(IsACop(playerid) && GetPlayerWeapon(playerid) == 23 && Tazer[playerid] == 1)
        {
            new Float:X,Float:Y,Float:Z,Float:pX,Float:pY,Float:pZ;
            GetPlayerPos(playerid, pX,pY,pZ);
            for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(IsPlayerInRangeOfPoint(i,60, pX,pY,pZ))
				    {
				        if(i != playerid)
				        {
					        GetPlayerPos(i, X,Y,Z);
					        new iname[MAX_PLAYER_NAME];
					        GetPlayerName(i, iname, sizeof(iname));
	            			if(IsPlayerAimingAt(playerid, X,Y,Z,1.5))
	            			{
	            			    GameTextForPlayer(i,"~r~BEING TAZED",9000,4);
	            			    GameTextForPlayer(playerid, "~b~USING THE TAZER",2000,4);
	            			    TogglePlayerControllable(i, 0);
	            			    TogglePlayerControllable(playerid, 0);
	            			    ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	            			    SetTimerEx("Unfreezeply",9000,0,"i",i);
	            			    ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
	            			    SetTimerEx("Unfreezeply",1500,0,"i",playerid);
	            			    format(string, sizeof(string),"* %s”√À˚µƒµÁ∞Ù∂‘◊º %s≤¢«“”√¡¶ª˜¥Ú",sendername,iname);
	            			}
	            			else return GameTextForPlayer(playerid, "~b~Missed the Shoot",3750,4);
						}
					}
				}
			}
		}
        new Drunk = GetPlayerDrunkLevel(playerid);
        new Float:Health;
		GetPlayerHealth(playerid, Health);
		if(ViewingRules[playerid] == 1)
		{
			HideRules(playerid);
			ViewingRules[playerid] = 0;
		}
		if(ViewingWelcome[playerid] == 1)
		{
			HideWelcome(playerid);
			ViewingWelcome[playerid] = 0;
		}
        if(GetPlayerSpecialAction(playerid) == 22) // Wine
        {
			if(PlayerDrankWine[playerid] == 0)
			{
			    SetTimerEx("DrankWine",2000, false, "i", playerid);
				SetPlayerDrunkLevel(playerid, Drunk+350);
				SetPlayerHealth(playerid, Health+5);
    			if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankWine[playerid] == 1)
			{
			    SetTimerEx("DrankWine",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+350);
                SetPlayerHealth(playerid, Health+5);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankWine[playerid] == 2)
			{
			    SetTimerEx("DrankWine",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+350);
                SetPlayerHealth(playerid, Health+5);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankWine[playerid] == 3)
			{
			    SetTimerEx("DrankWine",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+350);
                SetPlayerHealth(playerid, Health+5);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankWine[playerid] == 4)
			{
			    SetTimerEx("DrankWine",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+350);
                SetPlayerHealth(playerid, Health+5);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankWine[playerid] == 5)
			{
			    SetTimerEx("DrankWine",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+350);
                SetPlayerSpecialAction(playerid, 0);
                SetPlayerHealth(playerid, Health+5);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
		}
		else if(GetPlayerSpecialAction(playerid) == 20) // Beer
        {
			if(PlayerDrankBeer[playerid] == 0)
			{
			    SetTimerEx("DrankBeer",2000, false, "i", playerid);
				SetPlayerDrunkLevel(playerid, Drunk+250);
				SetPlayerHealth(playerid, Health+3);
				if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankBeer[playerid] == 1)
			{
			    SetTimerEx("DrankBeer",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+250);
                SetPlayerHealth(playerid, Health+3);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankBeer[playerid] == 2)
			{
			    SetTimerEx("DrankBeer",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+250);
                SetPlayerHealth(playerid, Health+3);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankBeer[playerid] == 3)
			{
			    SetTimerEx("DrankBeer",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+250);
                SetPlayerHealth(playerid, Health+3);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankBeer[playerid] == 4)
			{
			    SetTimerEx("DrankBeer",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+250);
                SetPlayerHealth(playerid, Health+3);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
			else if(PlayerDrankBeer[playerid] == 5)
			{
			    SetTimerEx("DrankBeer",2000, false, "i", playerid);
                SetPlayerDrunkLevel(playerid, Drunk+250);
                SetPlayerSpecialAction(playerid, 0);
                SetPlayerHealth(playerid, Health+3);
                if(GetPlayerDrunkLevel(playerid) >= 6000) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
			}
		}
		else if(GetPlayerSpecialAction(playerid) == 23) // Sprunk
        {
			if(PlayerDrankSprunk[playerid] == 0)
			{
			    SetTimerEx("DrankSprunk",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+10);
			}
			else if(PlayerDrankSprunk[playerid] == 1)
			{
			    SetTimerEx("DrankSprunk",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+10);
			}
			else if(PlayerDrankSprunk[playerid] == 2)
			{
			    SetTimerEx("DrankSprunk",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+10);
			}
			else if(PlayerDrankSprunk[playerid] == 3)
			{
			    SetTimerEx("DrankSprunk",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+10);
			}
			else if(PlayerDrankSprunk[playerid] == 4)
			{
			    SetTimerEx("DrankSprunk",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+10);
			}
			else if(PlayerDrankSprunk[playerid] == 5)
			{
			    SetTimerEx("DrankSprunk",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+10);
                SetPlayerSpecialAction(playerid, 0);
			}
		}
		else if(GetPlayerSpecialAction(playerid) == 21) // Ciggy
        {
			if(PlayerSmokedCig[playerid] == 0)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 1)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 2)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 3)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 4)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 5)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 6)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 7)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 8)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 9)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 10)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
			}
			else if(PlayerSmokedCig[playerid] == 11)
			{
			    SetTimerEx("SmokedCig",2000, false, "i", playerid);
				SetPlayerHealth(playerid, Health+2);
                SetPlayerSpecialAction(playerid, 0);
			}
		}
	}

    else if(PRESSED(KEY_CROUCH))
    {
        if(IsPlayerConnected(playerid))
        {
			if(IsPlayerInAnyVehicle(playerid))
			{
	    		if(!engineOn[GetPlayerVehicleID(playerid)])
	    		{
	    		    new idcar = GetPlayerVehicleID(playerid);
	        		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 1;
					if(pveh == 510 || pveh == 481 || pveh == 509) return 1;
					if(IsARentableCar(idcar))
					{
					    if(HireCar[playerid] != idcar) return 1;
					}
					if(IsAHarvest(idcar)) return 1;
					if(IsADrugHarvest(idcar)) return 1;
					if(IsASweeper(idcar)) return 1;
					
					if(CanTurnEngine[playerid] != idcar && CanTurnEngine[playerid] == 9999) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹¥Úø™’‚≥µµƒ∑¢∂Øª˙!");
					new plname[MAX_PLAYER_NAME];
					GetPlayerName(playerid, plname, sizeof(plname));
					if(IsASalesVehicle(idcar)) return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªø…“‘∆Ù∂Ø’πœ˙∆˚≥µ!");
					format(string, sizeof(string), "* %s –˝◊™¡À∆˚≥µµƒ‘ø≥◊ø◊, ‘Õº∆Ù∂Ø∆˚≥µ.", plname);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					SetTimerEx("StartingTheVehicle",3500,0,"i",playerid);
					GameTextForPlayer(playerid, "~w~Starting vehicle engine...",3500,3);
					gEngine[playerid] = 1;
					return 1;
				}
				else if(engineOn[GetPlayerVehicleID(playerid)])
	    		{
	    		    new idcar = GetPlayerVehicleID(playerid);
	        		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 1;
					if(pveh == 510 || pveh == 481 || pveh == 509) return 1;
					if(IsARentableCar(idcar))
					{
					    if(HireCar[playerid] != idcar) return 1;
					}
					if(IsAHarvest(idcar)) return 1;
					if(IsADrugHarvest(idcar)) return 1;
					if(IsASweeper(idcar)) return 1;
					if(CanTurnEngine[playerid] != idcar && CanTurnEngine[playerid] == 9999)	return SendClientMessage(playerid, COLOR_GREY,"* ƒ„≤ªƒ‹¥Úø™’‚≥µµƒ∑¢∂Øª˙!");
					new plname[MAX_PLAYER_NAME];
					GetPlayerName(playerid, plname, sizeof(plname));
					format(string, sizeof(string), "* %s –˝◊™¡À∆˚≥µµƒ‘ø≥◊ø◊,πÿ±’¡À∑¢∂Øª˙.", plname);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					GameTextForPlayer(playerid, "~w~Engine Shat Down.",3500,3);
					engineOn[GetPlayerVehicleID(playerid)] = false;//πÿ±’∑¢∂Øª˙
					gEngine[playerid] = 0;
					TogglePlayerControllable(playerid, 0);
					return 1;
				}
			}
		}
		else if(!IsPlayerInAnyVehicle(playerid) && IsPlayerOnSpecialAction(playerid) == 0 || PlayerInfo[playerid][pAdminDuty] == 0)
		{
		    if(AntiBunnyJump == 1)
		    {
				GetPlayerName(playerid, sendername, sizeof(sendername));
			    if(GivingBlowjob[playerid] == 0 || GettingBlowjob[playerid] == 0)
			    {
				    if(BunnyJump[playerid] == 0)
					{
					    BunnyJump[playerid] = 1;
					    ResetJumpTimer = SetTimerEx("ResetJump1",2000,0,"i",playerid);
					}
					else if(BunnyJump[playerid] == 1)
					{
					    if(PlayerInfo[playerid][pAdminDuty] >= 1) return 1;
					    if(PlayerGotSpottedRecently[playerid] == 0)
					    {
				   			PlayerSuspicious[playerid] = 1;
				   			PlayerBunnyJumping[playerid] = 1;
							PlayerGotSpottedRecently[playerid] = 1;
							format(string, 128, "[PETER]: %s (%d)ø…ƒ‹ «Õ√◊”Ã¯,øÏ»•ºÏ≤ÈÀ˚!!", sendername, playerid);
							SendAdminMessage(COLOR_YELLOW, string);
							SetTimerEx("ResetAcWarn", 600000, 0, "i", playerid);
						}
						PlayerBunnyJumped[playerid] ++;
						KillTimer(ResetJumpTimer);
						ResetJumpTimer = SetTimerEx("ResetJump1",2000,0,"i",playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been Found Bunny jumping.",d,m,y,h,mi,s,sendername);
						AdminLog(string);
						return 1;
					}
				}
			}
		}
    }
   	else if ( PRESSED(KEY_JUMP) )
	{
	    if(AntiBunnyJump == 1)
	    {
			if(!IsPlayerInAnyVehicle(playerid) && IsPlayerOnSpecialAction(playerid) == 0 || PlayerInfo[playerid][pAdminDuty] == 0)
			{
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    if(GivingBlowjob[playerid] == 0 || GettingBlowjob[playerid] == 0)
			    {
				    if(BunnyJump[playerid] == 0)
					{
					    BunnyJump[playerid] = 1;
					    ResetJumpTimer = SetTimerEx("ResetJump1",2000,0,"i",playerid);
					}
					else if(BunnyJump[playerid] == 1)
					{
					    if(PlayerInfo[playerid][pAdminDuty] >= 1) return 1;
					    if(PlayerGotSpottedRecently[playerid] == 0)
					    {
				   			PlayerSuspicious[playerid] = 1;
				   			PlayerBunnyJumping[playerid] = 1;
							PlayerGotSpottedRecently[playerid] = 1;
							format(string, 128, "[PETER]: %s (%d)ø…ƒ‹ «Õ√◊”Ã¯,øÏ»•ºÏ≤ÈÀ˚!!", sendername, playerid);
							SendAdminMessage(COLOR_YELLOW, string);
							SetTimerEx("ResetAcWarn", 600000, 0, "i", playerid);
						}
						PlayerBunnyJumped[playerid] ++;
						KillTimer(ResetJumpTimer);
						ResetJumpTimer = SetTimerEx("ResetJump1",2000,0,"i",playerid);
						new y, m, d;
						new h,mi,s;
						getdate(y,m,d);
						gettime(h,mi,s);
						format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been Found Bunny jumping.",d,m,y,h,mi,s,sendername);
						AdminLog(string);
						return 1;
					}
				}
			}
		}
	}
    return 1;
}

public StartingTheVehicle(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        if(IsPlayerInAnyVehicle(playerid))
        {
            new RandomStart;
    		new string[128];
    		new sendername[MAX_PLAYER_NAME];
            RandomStart = random(4);
            switch(RandomStart)
            {
                case 0,1,2,3:
                {
                    engineOn[GetPlayerVehicleID(playerid)] = true;
                    TogglePlayerControllable(playerid, true);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "* ∆˚≥µ“˝«Ê∆Ù∂Ø¡À{FFFFF0} (( %s )).", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
                    gEngine[playerid] = 0;
                }
                case 4:
                {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "* ∆˚≥µ“˝«Ê√ª”–∆Ù∂Ø{FFFFF0}(( %s )).", sendername);
					ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
					gEngine[playerid] = 0;
                }
            }
        }
		else
		{
		    gEngine[playerid] = 0;
		}
    }
    return 1;
}

public FarmerExit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsAHarvest(vehicleid))
	    {
	        return 1;
	    }
	    if(FarmerVar[playerid] == 0)
	    {
	        return 1;
	    }
	    if(FarmerPickup[playerid][0] >= 1 && FarmerPickup[playerid][0] <= 22)
		{
			FarmerPickup[playerid][0]--;
		}
    	DisablePlayerCheckpoint(playerid);
    	FarmerVar[playerid] = 0;
	}
	return 1;
}

public DrugFarmerExit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsADrugHarvest(vehicleid))
	    {
	        return 1;
	    }
	    if(DrugFarmerVar[playerid] == 0)
	    {
	        return 1;
	    }
	    if(DrugFarmerPickup[playerid][0] >= 1 && DrugFarmerPickup[playerid][0] <= 37)
		{
			DrugFarmerPickup[playerid][0]--;
		}
    	DisablePlayerCheckpoint(playerid);
    	DrugFarmerVar[playerid] = 0;
	}
	return 1;
}

public LoadDrugSystem()
{
	new arrCoords[1][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/drugs_system.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		drugsys[DrugAmmount] = strval(arrCoords[0]);
		fclose(file);
	}
	return 1;
}

public SaveDrugSystem()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d", drugsys[DrugAmmount]);
	new File: file2 = fopen("LARP/drugs_system.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadMatsSystem()
{
	new arrCoords[1][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/mats_system.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		matssys[MatsAmmount] = strval(arrCoords[0]);
		fclose(file);
	}
	return 1;
}

public SaveMatsSystem()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d", matssys[MatsAmmount]);
	new File: file2 = fopen("LARP/mats_system.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadingDrugsForSmugglers(playerid)
{
    new idcar = GetPlayerVehicleID(playerid);
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pJob] != 20)
     	{
      		SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª «∂æ∆∑◊ﬂÀΩ∑∑.");
        	return 1;
		}
		if(!IsPlayerInRangeOfPoint(playerid, 7,-38.8664,56.3031,3.1172))
		{
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„≤ª‘⁄∂æ∆∑≈©≥°.");
		    return 1;
		}
		if(GetPlayerMoney(playerid) < 299)
		{
		    SendClientMessage(playerid, COLOR_GREY, "ƒ„÷¡…Ÿ“™”–300$≤≈ø…“‘◊ﬂÀΩ∂æ∆∑.");
		    return 1;
		}
		if(IsASmuggleCar(idcar))
		{
		    if(drugsys[DrugAmmount] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "√ª”–∂æ∆∑‘⁄∂æ∆∑≈©≥°.");
		        TogglePlayerControllable(playerid, true);
		        return 1;
		    }
		    if(drugsys[DrugAmmount] == 1)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ1øÀ∂æ∆∑... (º€÷µ 25$)");
		        SmuggledDrugs[playerid] = 1;
		        drugsys[DrugAmmount]--;
		        SafeGivePlayerMoney(playerid, -25);
		    }
		    if(drugsys[DrugAmmount] == 2)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ2øÀ∂æ∆∑... (º€÷µ 50$)");
		        SmuggledDrugs[playerid] = 2;
		        drugsys[DrugAmmount] -= 2;
		        SafeGivePlayerMoney(playerid, -50);
		    }
		    if(drugsys[DrugAmmount] == 3)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ3øÀ∂æ∆∑... (º€÷µ 75$)");
		        SmuggledDrugs[playerid] = 3;
		        drugsys[DrugAmmount] -= 3;
		        SafeGivePlayerMoney(playerid, -75);
		    }
		    if(drugsys[DrugAmmount] == 4)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ4øÀ∂æ∆∑... (º€÷µ 100$)");
		        SmuggledDrugs[playerid] = 4;
		        drugsys[DrugAmmount] -= 4;
		        SafeGivePlayerMoney(playerid, -100);
		    }
		    if(drugsys[DrugAmmount] == 5)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ5øÀ∂æ∆∑... (º€÷µ 125$)");
		        SmuggledDrugs[playerid] = 5;
		        drugsys[DrugAmmount] -= 5;
		        SafeGivePlayerMoney(playerid, -125);
		    }
		    if(drugsys[DrugAmmount] == 6)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ6øÀ∂æ∆∑... (º€÷µ 150$)");
		        SmuggledDrugs[playerid] = 6;
		        drugsys[DrugAmmount] -= 6;
		        SafeGivePlayerMoney(playerid, -150);
		    }
		    if(drugsys[DrugAmmount] == 7)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ7øÀ∂æ∆∑... (º€÷µ 175$)");
		        SmuggledDrugs[playerid] = 7;
		        drugsys[DrugAmmount] -= 7;
		        SafeGivePlayerMoney(playerid, -175);
		    }
		    if(drugsys[DrugAmmount] == 8)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ8øÀ∂æ∆∑... (º€÷µ 200$)");
		        SmuggledDrugs[playerid] = 8;
		        drugsys[DrugAmmount] -= 8;
		        SafeGivePlayerMoney(playerid, -200);
		    }
		    if(drugsys[DrugAmmount] == 9)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ9øÀ∂æ∆∑... (º€÷µ 225$)");
		        SmuggledDrugs[playerid] = 9;
		        drugsys[DrugAmmount] -= 9;
		        SafeGivePlayerMoney(playerid, -225);
		    }
		    if(drugsys[DrugAmmount] >= 10)
		    {
		        SendClientMessage(playerid, COLOR_YELLOW, "◊∞‘ÿ10øÀ∂æ∆∑... (º€÷µ 250$)");
		        SmuggledDrugs[playerid] = 10;
		        drugsys[DrugAmmount] -= 10;
		        SafeGivePlayerMoney(playerid, -250);
		    }
		    SetPlayerCheckpoint(playerid, 1135.2180,-1325.2274,13.6277, 5.0);
		    SendClientMessage(playerid, COLOR_YELLOW, "≥…π¶µƒ◊∞…œ∆˚≥µ.");
		    SendClientMessage(playerid, COLOR_YELLOW, "øÏ»•! ∂æ∆∑“¯––Ã·π©∂æ∆∑(–°µÿÕº∫Ï…´±Í÷æ).");
		    SendClientMessage(playerid, COLOR_YELLOW, "‘⁄’‚÷Æ«∞æØ≤ÏΩ´◊¢“‚ƒ„.");
		    SaveDrugSystem();
		    SetPlayerCriminal(playerid,255, "Drugs smuggling");
		    TogglePlayerControllable(playerid, true);
		}
	}
	return 1;
}

public SmugglerExit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsASmuggleCar(vehicleid))
	    {
	        return 1;
	    }
	    if(SmugglerWork[playerid] == 0)
	    {
	        return 1;
	    }
    	DisablePlayerCheckpoint(playerid);
    	SmugglerWork[playerid] = 0;
	}
	return 1;
}


public SafeSetPlayerArmour(playerid, Float:armour)
{
	PlayerInfo[playerid][pArmour] = armour;
	SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
	return 1;
}

public SafeGivePlayerMoney(plyid, amounttogive)
{
	ScriptMoneyUpdated[plyid] = 1;
	new RemoveMoney = ScriptMoney[plyid] + amounttogive;
	new AddMoney = ScriptMoney[plyid] + amounttogive;
	new string[20];
	format(string, sizeof(string),"$%d",amounttogive);
	if (amounttogive < 0)
	{
	    if(ReceivedMoney[plyid] == 0)
		{
		    if(!IsAtTransfender(plyid) && !IsAtPaySpray(plyid))
		    {
			    TextDrawHideForPlayer(plyid, Textdraw52[plyid]);
				ReceivedMoney[plyid] = 1;
				TextDrawColor(Textdraw52[plyid], 0xFF0000FF);
				TextDrawSetString(Textdraw52[plyid], string);
				TextDrawShowForPlayer(plyid, Textdraw52[plyid]);
				MoneyTimer[plyid] = SetTimerEx("RedMoney",125,true,"i",plyid);
			}
		}
		else
		{
		    if(!IsAtTransfender(plyid) && !IsAtPaySpray(plyid))
		    {
		 		KillTimer(MoneyTimer[plyid]);
		 		ReceivedMoney[plyid] = 1;
		 		TextDrawHideForPlayer(plyid, Textdraw52[plyid]);
			    TextDrawColor(Textdraw52[plyid], 0xFF0000FF);
			    TextDrawSetString(Textdraw52[plyid], string);
			    TextDrawShowForPlayer(plyid, Textdraw52[plyid]);
			    MoneyTimer[plyid] = SetTimerEx("RedMoney",125,true,"i",plyid);
			}
		}
		GivePlayerMoney(plyid, amounttogive);
		ScriptMoney[plyid] = RemoveMoney;
	}
	else
	{
		if(ReceivedMoney[plyid] == 0)
		{
		    if(!IsAtTransfender(plyid) && !IsAtPaySpray(plyid))
		    {
			    TextDrawHideForPlayer(plyid, Textdraw52[plyid]);
				ReceivedMoney[plyid] = 1;
				TextDrawColor(Textdraw52[plyid], 0x00FF00FF);
				TextDrawSetString(Textdraw52[plyid], string);
				TextDrawShowForPlayer(plyid, Textdraw52[plyid]);
				MoneyTimer[plyid] = SetTimerEx("GreenMoney",125,true,"i",plyid);
			}
		}
		else
		{
		    if(!IsAtTransfender(plyid) && !IsAtPaySpray(plyid))
		    {
		 		KillTimer(MoneyTimer[plyid]);
		 		ReceivedMoney[plyid] = 1;
		 		TextDrawHideForPlayer(plyid, Textdraw52[plyid]);
			    TextDrawColor(Textdraw52[plyid], 0x00FF00FF);
			    TextDrawSetString(Textdraw52[plyid], string);
			    TextDrawShowForPlayer(plyid, Textdraw52[plyid]);
			    MoneyTimer[plyid] = SetTimerEx("GreenMoney",125,true,"i",plyid);
			}
		}
		ScriptMoney[plyid] = AddMoney;
		GivePlayerMoney(plyid, amounttogive);
	}
 	ScriptMoneyUpdated[plyid] = 0;
	return 1;
}

public SafeSetPlayerInterior(plyid, interiorid)
{
	SetPlayerInterior(plyid, interiorid);
	PlayerInfo[plyid][pInt] = interiorid;
	
	if(interiorid == 0)
	{
		PlayerInfo[plyid][pInteriorNr] = 0;
		
		if(HouseEntered[plyid] != 9999)
	 		HouseEntered[plyid] = 9999;

	    if(BizzEntered[plyid] != 9999)
	 		BizzEntered[plyid] = 9999;
	}
 		
	return 1;
}

public SafeResetPlayerMoney(plyid)
{
	ResetPlayerMoney(plyid);
	ScriptMoney[plyid] = 0;
	return 1;
}

public SafeGivePlayerWeapon(playerid, weaponid, ammo)
{
	ScriptWeaponsUpdated[playerid] = 1;
	GivePlayerWeapon(playerid, weaponid, ammo);
    SetTimerEx("UpdateWeapons",2500,false,"i",playerid);
	return 1;
}

public SafeResetPlayerWeapons(playerid)
{
	ScriptWeaponsUpdated[playerid] = 1;
	ResetPlayerWeapons(playerid);
	SetTimerEx("UpdateWeapons",2500,false,"i",playerid);
	return 1;
}

forward UpdateWeapons(plyid)
public UpdateWeapons(plyid)
{
	new weaponid, ammo;
    for(new i = 0; i < 13; i++)
	{
	    GetPlayerWeaponData(plyid, i, weaponid, ammo);
		ScriptWeapons[plyid][i] = weaponid;
	}
	ScriptWeaponsUpdated[plyid] = 0;
	return 1;
}

forward GetWeaponSlot(w)
public GetWeaponSlot(w)
{
	if(w == 0 || w == 1) return 0;
	else if(w >= 2 && w <= 9) return 1;
	else if(w >= 10 && w <= 15) return 10;
	else if(w >= 16 && w <= 18) return 8;
	else if(w >= 22 && w <= 24) return 2;
	else if(w >= 25 && w <= 27) return 3;
	else if(w == 28 || w == 29 || w == 32) return 4;
	else if(w == 30 || w == 31) return 5;
	else if(w == 33 || w == 34) return 6;
	else if(w >= 35 && w <= 38) return 7;
	else if(w == 39) return 8;
	else if(w == 40) return 12;
	else if(w >= 41 && w <= 43) return 9;
	else if(w >= 44 && w <= 46) return 11;
	else return -1;
}


public UnsetFirstSpawn(playerid)
{
	FirstSpawn[playerid] = 0;
}

public LoadHQLocks()
{
	new arrCoords[5][64];
	new strFromFile2[128];
	new File: file = fopen("LARP/hq_locks.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		hqlock[surlock] = strval(arrCoords[0]);
		hqlock[luclock] = strval(arrCoords[1]);
		hqlock[guclock] = strval(arrCoords[2]);
		hqlock[stlock] = strval(arrCoords[3]);
		hqlock[iolock] = strval(arrCoords[4]);
		fclose(file);
	}
	return 1;
}

public SaveHQLocks()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d,%d", hqlock[surlock], hqlock[luclock], hqlock[guclock], hqlock[stlock], hqlock[iolock]);
	new File: file2 = fopen("LARP/hq_locks.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public ClearKnock(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	KnockedDown[playerid] = 0;
}

public DrugEffectGone(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(UsingDrugs[playerid] == 1)
	    {
	    	SetPlayerWeather(playerid, DefaultWeather);
	    	GameTextForPlayer(playerid, "~w~Drug effect ~p~gone", 3000, 1);
	    	ClearAnimations(playerid);
		}
	}
	return 1;
}

public UsingDrugsUnset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    UsingDrugs[playerid] = 0;
	}
	return 1;
}

public UpdateAllPlayersPosition()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i])
		    {
		        new Float:Health, Float:Armor;
			    new Float:x, Float:y, Float:z;
			    new PInterior,World;
		        PInterior = GetPlayerInterior(i);
				World = GetPlayerVirtualWorld(i);
				GetPlayerPos(i,x,y,z);
	     		if(PlayerInfo[i][pAdminDuty] == 0)
	   		    {
		    		GetPlayerHealth(i, Health);
					GetPlayerArmour(i, Armor);
					PlayerInfo[i][pHealth] = Health;
					PlayerInfo[i][pArmour] = Armor;
				}
				PlayerInfo[i][pInt] = PInterior,
				PlayerInfo[i][pVirWorld] = World;
				PlayerInfo[i][pPos_x] = x;
				PlayerInfo[i][pPos_y] = y;
				PlayerInfo[i][pPos_z] = z;
			}
		}
	}
	return 1;
}

public UpdatePlayerPosition(playerid)
{
	if(IsPlayerConnected(playerid))
	{
 		if(gPlayerLogged[playerid])
   		{
   		    new Float:x, Float:y, Float:z;
	    	new Float:Health, Float:Armor;
			new PInterior,World;
			PInterior = GetPlayerInterior(playerid);
			World = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid,x,y,z);
   		    if(PlayerInfo[playerid][pAdminDuty] == 0)
   		    {
	    		GetPlayerHealth(playerid, Health);
				GetPlayerArmour(playerid, Armor);
				PlayerInfo[playerid][pHealth] = Health;
				PlayerInfo[playerid][pArmour] = Armor;
			}
			PlayerInfo[playerid][pInt] = PInterior,
			PlayerInfo[playerid][pVirWorld] = World;
			PlayerInfo[playerid][pPos_x] = x;
			PlayerInfo[playerid][pPos_y] = y;
			PlayerInfo[playerid][pPos_z] = z;
		}
	}
	return 1;
}

public UnsetAfterTutorial(playerid)
{
	if(IsPlayerConnected(playerid))
	{
        AfterTutorial[playerid] = 0;
	}
	return 1;
}

public AfterSpray1(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 2076.5461,-1832.5647,13.5545);
		}
	}
	return 1;
}

public AfterSpray2(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerState(playerid) == 2)
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 1025.4225,-1033.1587,31.8380);
		}
	}
	return 1;
}

public AfterSpray3(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerState(playerid) == 2)
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 488.3767,-1731.1235,11.2469);
		}
	}
	return 1;
}

public AfterSpray4(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(GetPlayerState(playerid) == 2)
	    {
    		new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, 720.2908,-467.6113,16.3437);
		}
	}
	return 1;
}

public UnsetCrash(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrashed] = 0;
	}
	return 1;
}

public backtoclothes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
 		SafeSetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
   		SafeSetPlayerInterior(playerid,ChangePos2[playerid][0]);
		SetPlayerVirtualWorld(playerid, ChangePos3[playerid]);
	}
	return 1;
}

public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	SafeResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			SafeGivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}

public SaveTrunk()
{
	new idx;
	new File: file2;
	idx = 184;
	while (idx < sizeof(CarInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
		vehTrunk[idx][1],
		vehTrunkAmmo[idx][1],
		vehTrunk[idx][2],
		vehTrunkAmmo[idx][2],
		vehTrunk[idx][3],
		vehTrunkAmmo[idx][3],
		vehTrunk[idx][4],
		vehTrunkAmmo[idx][4],
		vehTrunkCounter[idx],
		vehTrunkArmour[idx]);
		if(idx == 1)
		{
			file2 = fopen("LARP/Trunks/trunk.cfg", io_write);
		}
		else
		{
			file2 = fopen("LARP/Trunks/trunk.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadTrunk()
{
	new arrCoords[13][64];
	new strFromFile2[256];
	new File: file = fopen("LARP/Trunks/trunk.cfg", io_read);
	if (file)
	{
		new idx = 184;
		while (idx < sizeof(CarInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    vehTrunk[idx][1] = strval(arrCoords[0]);
		    vehTrunkAmmo[idx][1] = strval(arrCoords[1]);
		    vehTrunk[idx][2] = strval(arrCoords[2]);
		    vehTrunkAmmo[idx][2] = strval(arrCoords[3]);
		    vehTrunk[idx][3] = strval(arrCoords[4]);
		    vehTrunkAmmo[idx][3] = strval(arrCoords[5]);
		    vehTrunk[idx][4] = strval(arrCoords[6]);
		    vehTrunkAmmo[idx][4] = strval(arrCoords[7]);
		    vehTrunkCounter[idx] = strval(arrCoords[8]);
		    vehTrunkArmour[idx] = floatstr(arrCoords[9]);
		    idx++;
		}
	}
	return 1;
}

public UpdateBurgerPositions()
{
	for(new i = 0; i < MAX_PLAYERS; i ++)
	{
	    if(IsMenuShowed[i] == 0)
	    {
			for(new j = 0; j < sizeof(BurgerDriveIn); j ++)
			{
			    new Float:dist;
			    dist = GetDistance(i, BurgerDriveIn[j][0], BurgerDriveIn[j][1]);
			    if(dist < 5)
			    {
			        GameTextForPlayer(i, "~n~~n~~n~~w~Welcome to the ~r~Burger King~w~, please select your meal", 2000, 3);
			        TogglePlayerControllable(i, 0);
			        SetTimerEx("ShowMenuBurger", 2000, 0, "i", i);
			    }
			}
		}
	}
}

public ShowMenuBurger(i)
{
    BurgerShot = CreateMenu("Burger Shot", 2, 125, 150, 300);
	AddMenuItem(BurgerShot, 0, "Baby Burger");
	AddMenuItem(BurgerShot, 1, "$3");
	AddMenuItem(BurgerShot, 0, "Double Cheese");
	AddMenuItem(BurgerShot, 1, "$6");
	AddMenuItem(BurgerShot, 0, "Triple Whopper");
	AddMenuItem(BurgerShot, 1, "$9");
	AddMenuItem(BurgerShot, 0, "- Exit -");
	ShowMenuForPlayer(BurgerShot, i);
	IsMenuShowed[i] = 1;
}

public UpdateChickenPositions()
{
    for(new i = 0; i < MAX_PLAYERS; i ++)
	{
	    if(IsMenuShowed[i] == 0)
	    {
			for(new j = 0; j < sizeof(ChickenDriveIn); j ++)
			{
			    new Float:dist;
			    dist = GetDistance(i, ChickenDriveIn[j][0], ChickenDriveIn[j][1]);
			    if(dist < 5)
			    {
			        GameTextForPlayer(i, "~n~~n~~n~~w~Welcome to the ~r~Cluckin' Bell~w~, please select your meal", 2000, 3);
			        TogglePlayerControllable(i, 0);
			        SetTimerEx("ShowMenuChicken", 2000, 0, "i", i);
				}
			}
		}
	}
}

public ShowMenuChicken(i)
{
    CluckinBell = CreateMenu("Cluckin' Bell", 2, 125, 150, 300);
	AddMenuItem(CluckinBell, 0, "Chicken Nuggets");
	AddMenuItem(CluckinBell, 1, "$3");
	AddMenuItem(CluckinBell, 0, "Chicken Wing");
	AddMenuItem(CluckinBell, 1, "$6");
	AddMenuItem(CluckinBell, 0, "Crisp Chicken");
	AddMenuItem(CluckinBell, 1, "$9");
	AddMenuItem(CluckinBell, 0, "- Exit -");
	ShowMenuForPlayer(CluckinBell, i);
	IsMenuShowed[i] = 1;
}

public CanDriveThruAgain(playerid)
{
	IsMenuShowed[playerid] = 0;
}

public Float:GetDistance(playerid, Float:x, Float:y)
{
	new Float:x2, Float:y2, Float:z2;
	GetPlayerPos(playerid, x2, y2, z2);
	x = x - x2;
	y = y - y2;
	return floatsqroot(x*x+y*y);
}

public TraceLastCall()
{
	pdtrace = 0;
	pdtrace_x = 0;
	pdtrace_y = 0;
	pdtrace_z = 0;
	emdtrace = 0;
	emdtrace_x = 0;
	emdtrace_y = 0;
	emdtrace_z = 0;
}

public ReportReset(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(JustReported[playerid] == 1)
	    {
			JustReported[playerid] = 0;
	    }
	}
}

public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}

public IsCopBanned(playerid)
{
	if(PlayerInfo[playerid][pDBanned] == 1)
	{
	    SetPlayerSkin(playerid, 167);
		PlayerInfo[playerid][pChar] = 167;
		PlayerInfo[playerid][pModel] = 167;
	}
	return 1;
 }

public DDCountdown()
{
	new string[64];
	for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsPlayerInRangeOfPoint(i,400,-1398.3799,994.8915,1024.0889))
		    {
		        ddcount --;
		        if(ddcount != 0)
				{
					format(string, sizeof(string),"~r~DD Countdown: ~n~~n~%d",ddcount);
				}
				else
				{
				    format(string, sizeof(string),"~r~DD Countdown: ~n~~n~~g~GO GO GO!",ddcount);
					KillTimer(ddcounttimer);
				}
				GameTextForPlayer(i,string,1000,4);
				new Float:X, Float:Y, Float:Z;
			    GetPlayerPos(i, X,Y,Z);
			    PlayerPlaySound(i, 1056, X, Y, Z);
			}
		}
	}
	return 1;
}


public Ron(playerid)
{
	if(Ronned[playerid] == 1)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬10 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 2)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬9 (√Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 3)
	{
        Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬8 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 4)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬7 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 5)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬6 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 6)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬5 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 7)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬4 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 8)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬3 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 9)
	{
	    Ronned[playerid] ++;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬2 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 10)
	{
	    Ronned[playerid] = 255;
	    SendClientMessage(playerid, COLOR_GREY,"ƒ„ªπ £œ¬1 √Îƒ„Ω´±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!");
	}
	else if(Ronned[playerid] == 255)
	{
	    Ronned[playerid] = 0;
	    KillTimer(RonnTimer[playerid]);
	    Kick(playerid);
	}
	return 1;
}

public HideTD(playerid)
{
	TextDrawHideForPlayer(playerid,WarnTD);
	return 1;
}

public ChangeName(playerid)
{
	SendClientMessage(playerid, TEAM_GROVE_COLOR,"** ƒ˙µƒ–¬µƒ√˚≥∆–¥œ¬¿¥,π‹¿Ì‘±ø…ƒ‹√ª”–ø¥»’÷æƒ„÷ÿ–¬µ«¬ºΩ” ‹∏¸∏ƒ!!");
	SendClientMessage(playerid, COLOR_LIGHTBLUE,"** ƒ˙µƒ–¬µƒ√˚≥∆–¥œ¬¿¥,π‹¿Ì‘±ø…ƒ‹√ª”–ø¥»’÷æƒ„÷ÿ–¬µ«¬ºΩ” ‹∏¸∏ƒ!!");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	PlayerPlaySound(playerid, 1056, X, Y, Z);
	return 1;
}

public HideTD2()
{
	TextDrawHideForAll(TD1);
	TD1D = 0;
	return 1;
}

public HideTD3()
{
	TextDrawHideForAll(TD2);
	TD2D = 0;
	return 1;
}

public HideTD4()
{
	TextDrawHideForAll(TD3);
	TD3D = 0;
	return 1;
}

public HideTD5()
{
	TextDrawHideForAll(TD4);
	TD4D = 0;
	return 1;
}

public HideTD6()
{
	TextDrawHideForAll(TD0);
	TD0D = 0;
	return 1;
}

public HideWarnTextdraw(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw0);
	TextDrawHideForPlayer(playerid, Textdraw1[playerid]);
	WarnedTextdraw[playerid] = 0;
	return 1;
}


public hidemotd(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw2);
	TextDrawHideForPlayer(playerid, Textdraw3);
	return 1;
}


public BoxTrain(playerid)
{
	if(Training[playerid] == 0)
	{
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 768.1064,14.3897,1000.6992);
		SetPlayerFacingAngle(playerid, 266.8890);
		SetPlayerCameraPos(playerid, 765.4290,8.6809,1000.7123);
		SetPlayerCameraLookAt(playerid, 768.1064,14.3897,1000.6992);
		ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,1,1,1,1,9500);
		SetTimerEx("BoxTrain", 10000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~l~] ] ]",10000,3);
	}
	else if(Training[playerid] == 1)
	{
	   	SetPlayerCameraPos(playerid, 771.5601,11.3144,1000.7026);
		SetPlayerCameraLookAt(playerid, 768.1064,14.3897,1000.6992);
		ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,1,1,1,1,14500);
		SetTimerEx("BoxTrain", 15000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~y~] ~l~] ]",15000,3);
		Training[playerid] = 2;
	}
	else if(Training[playerid] == 2)
	{
		PlayerInfo[playerid][pFS] = 1;
		SafeGivePlayerMoney(playerid, -15000);
		SetPlayerCameraPos(playerid, 772.9484,-0.2051,1000.7241);
		SetPlayerCameraLookAt(playerid, 768.1064,14.3897,1000.6992);
		ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.1,1,1,1,1,19500);
		SetTimerEx("BoxTrain", 20000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~y~] ] ~l~]",20000,3);
	}
	else if(Training[playerid] == 3)
	{
	    TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		SendClientMessage(playerid, COLOR_GRAD5, "–¬µƒ∏Ò∂∑∑Á∏Ò—µ¡∑ÕÍ≥…!");
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Finished! ~n~~y~] ] ]",10000,3);
	    SetPlayerSkills(playerid);
	    PlayerInfo[playerid][pBoxiSkill] = 1;
	    Training[playerid] = 0;
	}
	return 1;
}

public KungTrain(playerid)
{
    if(Training[playerid] == 0)
	{
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 772.6890,5.4252,1000.7802);
		SetPlayerFacingAngle(playerid, 89.2975);
		SetPlayerCameraPos(playerid, 767.2456,-0.7102,1000.7197);
		SetPlayerCameraLookAt(playerid, 772.6890,5.4252,1000.7802);
		ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,7500);
		SetTimerEx("KungTrain", 8000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~l~] ] ]",10000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 765.4534,8.1254,1000.7133);
		SetPlayerCameraLookAt(playerid, 772.6890,5.4252,1000.7802);
		ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,12500);
		SetTimerEx("KungTrain", 13000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~b~] ~l~] ]",13000,3);
	}
	else if(Training[playerid] == 2)
	{
		PlayerInfo[playerid][pFS] = 2;
		SafeGivePlayerMoney(playerid, -10000);
		SetPlayerCameraPos(playerid, 774.3497,10.2337,1000.7027);
		SetPlayerCameraLookAt(playerid, 772.6890,5.4252,1000.7802);
		ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,17500);
		SetTimerEx("KungTrain", 18000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~b~] ] ~l~]",18000,3);
	}
	else if(Training[playerid] == 3)
	{
	    TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		SendClientMessage(playerid, COLOR_GRAD5, "–¬µƒ∏Ò∂∑∑Á∏Ò—µ¡∑ÕÍ≥…!");
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Finished! ~n~~b~] ] ]",10000,3);
		SetPlayerSkills(playerid);
		PlayerInfo[playerid][pKungSkill] = 1;
		Training[playerid] = 0;
	}
	return 1;
}


public GrabTrain(playerid)
{
    if(Training[playerid] == 0)
	{
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 767.1951,-2.5557,1000.7187);
		SetPlayerFacingAngle(playerid, 172.0182);
		SetPlayerCameraPos(playerid, 772.6243,-0.1576,1000.7242);
		SetPlayerCameraLookAt(playerid, 767.1951,-2.5557,1000.7187);
		ApplyAnimation(playerid,"GANGS","shake_carSH",4.0,1,0,0,0,8500);
		SetTimerEx("GrabTrain", 9000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~l~] ] ]",9000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 763.0099,2.6098,1001.5942);
		SetPlayerCameraLookAt(playerid, 767.1951,-2.5557,1000.7187);
		ApplyAnimation(playerid,"GANGS","shake_cara",4.0,1,0,0,0,13500);
		SetTimerEx("GrabTrain", 14000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~p~] ~l~] ]",14000,3);
	}
	else if(Training[playerid] == 2)
	{
		PlayerInfo[playerid][pFS] = 3;
		SafeGivePlayerMoney(playerid, -13500);
		SetPlayerCameraPos(playerid, 769.8934,8.1243,1000.7101);
		SetPlayerCameraLookAt(playerid, 767.1951,-2.5557,1000.7187);
		ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.0,1,0,0,0,18500);
		SetTimerEx("GrabTrain", 19000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~p~] ] ~l~]",19000,3);
	}
	else if(Training[playerid] == 4)
	{
	    TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		SendClientMessage(playerid, COLOR_GRAD5, "–¬µƒ∏Ò∂∑∑Á∏Ò—µ¡∑ÕÍ≥…!");
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Finished! ~n~~p~] ] ]",10000,3);
	    SetPlayerSkills(playerid);
	    PlayerInfo[playerid][pGrabSkill] = 1;
	    Training[playerid] = 0;
	}
	return 1;
}



public KneeTrain(playerid)
{
	if(Training[playerid] == 0)
	{
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 772.4446,5.4702,1000.7802);
		SetPlayerFacingAngle(playerid, 89.8261);
		SetPlayerCameraPos(playerid, 764.1777,5.6911,1000.7161);
		SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
		ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,29500);
		SetTimerEx("KneeTrain", 30000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Training... ~n~~l~] ] ]",30000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 770.2583,-2.5223,1000.7255);
		SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
		ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,34500);
		SetTimerEx("KneeTrain", 35000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Training... ~n~~r~] ~l~] ]",35000,3);
	}
	else if(Training[playerid] == 2)
	{
		PlayerInfo[playerid][pFS] = 4;
		SafeGivePlayerMoney(playerid, -50000);
		SetPlayerCameraPos(playerid, 765.2747,12.5178,1000.7049);
		SetPlayerCameraLookAt(playerid, 772.4446,5.4702,1000.7802);
		ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,36500);
		SetTimerEx("KneeTrain", 37000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Training... ~n~~r~] ] ~l~]",37000,3);
	}
	else if(Training[playerid] == 3)
	{
	    TogglePlayerControllable(playerid, 1);
		SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		SendClientMessage(playerid, COLOR_GRAD5, "–¬µƒ∏Ò∂∑∑Á∏Ò—µ¡∑ÕÍ≥…!");
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Finished! ~n~~r~] ] ]",10000,3);
	    SetPlayerSkills(playerid);
	    PlayerInfo[playerid][pKneeSkill] = 1;
	    Training[playerid] = 0;
	}
	return 1;
}


public prisonls(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1968.7830,-2184.2422,13.5469);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ¬Â…ºÌ∂…£Õ–Àπ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}

public lvls(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1685.9310,-2239.2971,-2.7028);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ¬Â…ºÌ∂…£Õ–Àπ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public lvsf(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1421.7410,-287.9273,14.1484);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ •∑∆“Æ¬ﬁ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public lvap(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 427.8644,2529.7151,16.6472);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩŒ§∂˚√∑∂‡Àπ, ’‚¥Œ¬√––ª®∑—¡À150$");
	SafeGivePlayerMoney(playerid, -150);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public lvsls(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1591.0624,-1736.6196,1304.4583);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lvslv(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 2293.0085,1529.0245,1171.0520);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À150$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -150);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lvssf(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1865.4391,187.7123,825.1146);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lvsmc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -2365.6060,-1611.0067,1328.2827);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 500$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -500);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lvsrc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -248.2574,-42.1039,1211.6243);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 400$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -400);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lvsbc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 364.0539,2484.2322,983.8264);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 250$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -250);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lvstr(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1043.4141,1575.9458,994.1394);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}

public lslv(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1675.3717,1447.8632,10.7876);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ¿≠ÀπŒ¨º”Àπ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public lssf(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1421.7410,-287.9273,14.1484);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ •∑∆“Æ¬ﬁ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public lsap(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 427.8644,2529.7151,16.6472);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩŒ§∂˚√∑∂‡Àπ, ’‚¥Œ¬√––ª®∑—¡À 350$");
	SafeGivePlayerMoney(playerid, -350);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public lssls(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1591.0624,-1736.6196,1304.4583);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À150$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -150);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lsslv(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 2293.0085,1529.0245,1171.0520);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lsssf(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1865.4391,187.7123,825.1146);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lssmc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -2365.6060,-1611.0067,1328.2827);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 500$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -500);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lssrc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -248.2574,-42.1039,1211.6243);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 250$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -250);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lssbc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 364.0539,2484.2322,983.8264);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public lsstr(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1043.4141,1575.9458,994.1394);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 400$");
	GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -400);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}

public sflv(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1675.3717,1447.8632,10.7876);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ¿≠ÀπŒ¨º”Àπ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public sfls(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1685.9310,-2239.2971,-2.7028);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ¬Â…ºÌ∂…£Õ–Àπ, ’‚¥Œ¬√––ª®∑—¡À 250$");
	SafeGivePlayerMoney(playerid, -250);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public sfap(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 427.8644,2529.7151,16.6472);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩŒ§∂˚√∑∂‡Àπ, ’‚¥Œ¬√––ª®∑—¡À 300$");
	SafeGivePlayerMoney(playerid, -300);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}
public sfsls(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1591.0624,-1736.6196,1304.4583);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public sfslv(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 2293.0085,1529.0245,1171.0520);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public sfssf(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1865.4391,187.7123,825.1146);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À150$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -150);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public sfsmc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -2365.6060,-1611.0067,1328.2827);
	SendClientMessage(playerid, COLOR_GREY, "* ∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 250$");
	GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -250);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public sfsrc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -248.2574,-42.1039,1211.6243);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public sfsbc(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 364.0539,2484.2322,983.8264);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 300$");
    GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -300);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}
public sfstr(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, -1043.4141,1575.9458,994.1394);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ: ◊£ƒ„ÕÊµƒ∏ﬂ–À! ’‚¥Œ¬√––ª®∑—¡À 200$");
	GameTextForPlayer(playerid, "~y~Go ~r~Go ~p~Go!", 5000, 3);
	SafeGivePlayerMoney(playerid, -200);
	SafeGivePlayerWeapon(playerid, 46, 1);
	PlayerInfo[playerid][pAndro] = 0;
	return 1;
}

public aplv(playerid)
{
	PlayerInfo[playerid][pVirWorld] = 0;
	SafeSetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SafeSetPlayerPos(playerid, 1675.3717,1447.8632,10.7876);
	SendClientMessage(playerid, COLOR_GREY, "∫Ωø’π´Àæ:ª∂”≠¿¥µΩ¿≠ÀπŒ¨º”Àπ, ’‚¥Œ¬√––ª®∑—¡À150$");
	SafeGivePlayerMoney(playerid, -150);
	PlayerInfo[playerid][pJet] = 0;
	return 1;
}

public SendMSG(playerid)
{
	if(HelpMessages[playerid] == 1)
	{
 		new randMSG = random(sizeof(RandomMSG));
		SendClientMessage(playerid, COLOR_SEA, RandomMSG[randMSG]);
	}
}


public StartLotto()
{
    new rand = random(80);
    if(rand < 77) { rand += 3; }
    Lotto(rand);
}

public TrainPistol(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 22, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"COLT45","colt45_fire",4.0,1,1,1,1,10000);
		TrainTimer[playerid] = SetTimerEx("TrainPistol", 10000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Training... ~n~~l~] ] ]",10000,3);
	}
 	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 283.6527,-132.6680,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.0,1,1,1,1,25000);
		TrainTimer[playerid] = SetTimerEx("TrainPistol", 25000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Training... ~n~~b~] ~l~] ]",25000,3);
        Training[playerid] = 2;
	}
	else if(Training[playerid] == 2)
	{
		SetPlayerCameraPos(playerid, 276.2324,-143.4495,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"COLT45","colt45_fire",4.0,1,1,1,1,40000);
		TrainTimer[playerid] = SetTimerEx("TrainPistol4", 40000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Training... ~n~~b~] ] ~l~]",40000,3);
        Training[playerid] = 3;
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pPistSkill] += 40;
		PlayerInfo[playerid][pAmmuTrainTime] = 900;
		SafeGivePlayerMoney(playerid, -50);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~Training Finished! ~n~~b~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒColt45—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «40+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}

public TrainSilenced(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 23, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"SILENCED","Silence_fire",4.0,1,1,1,1,12500);
		TrainTimer[playerid] = SetTimerEx("TrainSilenced", 12500, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~l~] ] ]",12500,3);
	}
	else if(Training[playerid] == 1)
	{
		SetPlayerCameraPos(playerid, 283.6527,-132.6680,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.0,1,1,1,1,27500);
		TrainTimer[playerid] = SetTimerEx("TrainSilenced", 27500, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~r~] ~l~] ]",27500,3);
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 276.2324,-143.4495,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"SILENCED","Silence_fire",4.0,1,1,1,1,40000);
		TrainTimer[playerid] = SetTimerEx("TrainSilenced", 42500, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~r~] ] ~l~]",42500,3);
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pSilenSkill] += 45;
		PlayerInfo[playerid][pAmmuTrainTime] = 1020;
		SafeGivePlayerMoney(playerid, -75);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training Finished! ~n~~r~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒSilenced—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «45+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}

public TrainDeagle(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 24, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.0852,-138.6679,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 291.9852,-142.1770,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"SILENCED","Silence_fire",4.0,1,1,1,1,10000);
		TrainTimer[playerid] = SetTimerEx("TrainDeagle", 20000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~l~] ] ]",50000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 283.6527,-132.6680,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"SILENCED","SilenceCrouchfire",4.0,1,1,1,1,35000);
		TrainTimer[playerid] = SetTimerEx("TrainDeagle", 35000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~g~] ~l~] ]",35000,3);
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 276.2324,-143.4495,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0852,-138.6679,1004.0625);
		ApplyAnimation(playerid,"SILENCED","Silence_fire",4.0,1,1,1,1,50000);
		TrainTimer[playerid] = SetTimerEx("TrainDeagle", 50000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~g~] ] ~l~]",50000,3);
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pDesertSkill] += 40;
		PlayerInfo[playerid][pAmmuTrainTime] = 1800;
		SafeGivePlayerMoney(playerid, -150);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training Finished! ~n~~g~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒSawnOff—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «40+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}


public TrainShotgun(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 25, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.0769,-135.4943,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 293.3577,-138.0434,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.0,1,1,1,1,30000);
		TrainTimer[playerid] = SetTimerEx("TrainShotgun", 30000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Training... ~n~~l~] ] ]",30000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 290.8734,-129.9989,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"SHOTGUN","shotgun_crouchfire",4.0,1,1,1,1,50000);
		TrainTimer[playerid] = SetTimerEx("TrainShotgun", 50000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Training... ~n~~p~] ~l~] ]",50000,3);
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 284.3435,-134.9429,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"SHOTGUN","shotgun_fire",4.0,1,1,1,1,65000);
		TrainTimer[playerid] = SetTimerEx("TrainShotgun", 65000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Training... ~n~~p~] ] ~l~]",65000,3);
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pShotgSkill] += 30;
		PlayerInfo[playerid][pAmmuTrainTime] = 900;
		SafeGivePlayerMoney(playerid, -125);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training Finished! ~n~~g~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒShotgun—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «30+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}




public TrainSawn(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 26, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.0769,-135.4943,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 293.3577,-138.0434,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"COLT45","colt45_fire",4.0,1,1,1,1,20000);
		TrainTimer[playerid] = SetTimerEx("TrainSawn", 20000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~l~] ] ]",20000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 290.8734,-129.9989,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"COLT45","colt45_crouchfire",4.0,1,1,1,1,30000);
		TrainTimer[playerid] = SetTimerEx("TrainSawn", 30000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~r~] ~l~] ]",30000,3);
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 284.3435,-134.9429,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"COLT45","colt45_fire",4.0,1,1,1,1,45000);
		TrainTimer[playerid] = SetTimerEx("TrainSawn", 45000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~r~] ] ~l~]",45000,3);
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pShotgSkill] += 30;
		PlayerInfo[playerid][pAmmuTrainTime] = 900;
		SafeGivePlayerMoney(playerid, -100);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training Finished! ~n~~r~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒSawnOff—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «30+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}

public TrainCombat(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 27, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.0769,-135.4943,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 293.3577,-138.0434,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.0,1,1,1,1,40000);
		TrainTimer[playerid] = SetTimerEx("TrainCombat", 40000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~l~] ] ]",40000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 290.8734,-129.9989,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.0,1,1,1,1,60000);
		TrainTimer[playerid] = SetTimerEx("TrainCombat", 60000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~w~] ~l~] ]",60000,3);
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 284.3435,-134.9429,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.0769,-135.4943,1004.0625);
		ApplyAnimation(playerid,"SHOTGUN","shotgun_fire_poor",4.0,1,1,1,1,80000);
		TrainTimer[playerid] = SetTimerEx("TrainCombat", 80000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~w~] ] ~l~]",80000,3);
	}
	else if(Training[playerid] == 3)
	{
		SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pCombSkill] += 40;
		PlayerInfo[playerid][pAmmuTrainTime] = 1800;
		SafeGivePlayerMoney(playerid, -200);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training Finished! ~n~~w~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒ¡¨…‰…¢µØ«π—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «40+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}

public TrainSmg(playerid)
{
	if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 29, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.3768,-136.9973,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 283.8521,-138.2618,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.3768,-136.9973,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.0,1,1,1,1,40000);
		TrainTimer[playerid] = SetTimerEx("TrainSmg", 40000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~l~] ] ]",40000,3);
	}
	else if(Training[playerid] == 1)
	{
        SetPlayerCameraPos(playerid, 284.4362,-127.4147,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.3768,-136.9973,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.0,1,1,1,1,45000);
		TrainTimer[playerid] = SetTimerEx("TrainSmg", 45000, false, "i", playerid);
		Training[playerid] = 2;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~b~] ~l~] ]",45000,3);
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 291.9695,-139.5157,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.3768,-136.9973,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.0,1,1,1,1,55000);
		TrainTimer[playerid] = SetTimerEx("TrainSmg", 55000, false, "i", playerid);
		Training[playerid] = 3;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training... ~n~~b~] ] ~l~]",55000,3);
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pSmgSkill] += 40;
		PlayerInfo[playerid][pAmmuTrainTime] = 1200;
		SafeGivePlayerMoney(playerid, -155);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Training Finished! ~n~~b~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒSMG—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «40+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}

public TrainUzi(playerid)
{
	if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 28, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.3768,-136.9973,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 283.8521,-138.2618,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.3768,-136.9973,1004.0625);
		ApplyAnimation(playerid,"UZI","UZI_fire_poor",4.0,1,1,1,1,40000);
		TrainTimer[playerid] = SetTimerEx("TrainUzi", 40000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~l~] ] ]",40000,3);
		Training[playerid] = 1;
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 284.4362,-127.4147,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.3768,-136.9973,1004.0625);
		ApplyAnimation(playerid,"UZI","UZI_fire",4.0,1,1,1,1,45000);
		TrainTimer[playerid] = SetTimerEx("TrainUzi", 45000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~b~] ~l~] ]",45000,3);
		Training[playerid] = 2;
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 291.9695,-139.5157,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.3768,-136.9973,1004.0625);
		ApplyAnimation(playerid,"UZI","UZI_crouchfire",4.0,1,1,1,1,55000);
		TrainTimer[playerid] = SetTimerEx("TrainUzi", 55000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training... ~n~~b~] ] ~l~]",55000,3);
		Training[playerid] = 3;
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pUziSkill] += 40;
		PlayerInfo[playerid][pAmmuTrainTime] = 900;
		SafeGivePlayerMoney(playerid, -125);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Training Finished! ~n~~b~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒMSMG—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «40+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}


public TrainAk47(playerid)
{
	if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 30, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.2353,-133.9278,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 293.5121,-136.3682,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.2353,-133.9278,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.0,1,1,1,1,35000);
		Training[playerid] = 1;
		TrainTimer[playerid] = SetTimerEx("TrainAk47", 35000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~l~] ] ]",35000,3);
	}
	else if(Training[playerid] == 1)
	{
	    SetPlayerCameraPos(playerid, 287.7752,-132.1296,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.2353,-133.9278,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.0,1,1,1,1,47000);
		TrainTimer[playerid] = SetTimerEx("TrainAk47", 47000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~p~] ~l~] ]",47000,3);
        Training[playerid] = 2;
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 285.1598,-126.8113,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.2353,-133.9278,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.0,1,1,1,1,58000);
		TrainTimer[playerid] = SetTimerEx("TrainAk47", 58000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training... ~n~~p~] ] ~l~]",58000,3);
        Training[playerid] = 3;
	}
	else if(Training[playerid] == 3)
	{
		SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pAkSkill] += 30;
		PlayerInfo[playerid][pAmmuTrainTime] = 1200;
		SafeGivePlayerMoney(playerid, -140);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training Finished! ~n~~p~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒAK-47—µ¡∑,≥…π¶µÿÕÍ≥…¡À,ƒ„µƒºº«…œ÷‘⁄ «30+ Higher");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}


public TrainM4(playerid)
{
    if(Training[playerid] == 0)
	{
		SafeGivePlayerWeapon(playerid, 31, 120);
		TogglePlayerControllable(playerid, 0);
		SafeSetPlayerPos(playerid, 300.2353,-133.9278,1004.0625);
		SetPlayerFacingAngle(playerid, 93.0408);
		SetPlayerCameraPos(playerid, 293.5121,-136.3682,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.2353,-133.9278,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_fire_poor",4.0,1,1,1,1,35000);
		TrainTimer[playerid] = SetTimerEx("TrainM4", 35000, false, "i", playerid);
		Training[playerid] = 1;
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Training... ~n~~l~] ] ]",35000,3);
	}
	else if(Training[playerid] == 1)
	{
        SetPlayerCameraPos(playerid, 287.7752,-132.1296,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.2353,-133.9278,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_fire",4.0,1,1,1,1,47000);
		TrainTimer[playerid] = SetTimerEx("TrainM4", 47000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Training... ~n~~p~] ~l~] ]",47000,3);
		Training[playerid] = 2;
	}
	else if(Training[playerid] == 2)
	{
	    SetPlayerCameraPos(playerid, 285.1598,-126.8113,1004.0625);
		SetPlayerCameraLookAt(playerid, 300.2353,-133.9278,1004.0625);
		ApplyAnimation(playerid,"RIFLE","RIFLE_crouchfire",4.0,1,1,1,1,58000);
		TrainTimer[playerid] = SetTimerEx("TrainM4", 58000, false, "i", playerid);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Training... ~n~~p~] ] ~l~]",58000,3);
		Training[playerid] = 3;
	}
	else if(Training[playerid] == 3)
	{
	    SetCameraBehindPlayer(playerid);
		ClearAnimations(playerid);
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pM4Skill] += 30;
		PlayerInfo[playerid][pAmmuTrainTime] = 1200;
		SafeGivePlayerMoney(playerid, -140);
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~Training Finished! ~n~~p~] ] ]",8000,3);
		SendClientMessage(playerid, COLOR_GREY, "* ƒ˙µƒM4A4—µ¡∑,≥…π¶µÿÕÍ≥…¡À£¨ƒ˙µƒºº«…œ÷‘⁄ «30+");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X,Y,Z);
		PlayerPlaySound(playerid, 1056,X,Y,Z);
		SetPlayerSkills(playerid);
		Training[playerid] = 0;
	}
	return 1;
}



public ResetJump1(playerid)
{
	BunnyJump[playerid] = 0;
	return 1;
}

public IsPlayerOnSpecialAction(playerid) // By CuervO
{
	if(GetPlayerSpecialAction(playerid) >= 1 && GetPlayerSpecialAction(playerid) <= 8 || GetPlayerSpecialAction(playerid) >= 10 && GetPlayerSpecialAction(playerid) <= 13 || GetPlayerSpecialAction(playerid) >= 20 && GetPlayerSpecialAction(playerid) <= 23)
 	{
 	    return 1;
	}
	return 0;
}



public DrankWine(playerid)
{
	PlayerDrankWine[playerid] ++;
	if(PlayerDrankWine[playerid] == 5) PlayerDrankWine[playerid] = 0;
	return 1;
}


public DrankBeer(playerid)
{
	PlayerDrankBeer[playerid] ++;
	if(PlayerDrankBeer[playerid] == 5) PlayerDrankBeer[playerid] = 0;
	return 1;
}


public DrankSprunk(playerid)
{
	PlayerDrankSprunk[playerid] ++;
	if(PlayerDrankSprunk[playerid] == 5) PlayerDrankSprunk[playerid] = 0;
	return 1;
}

public SmokedCig(playerid)
{
	PlayerSmokedCig[playerid] ++;
	if(PlayerSmokedCig[playerid] == 10) PlayerSmokedCig[playerid] = 0;
	return 1;
}


public UsingPurpleDildo(playerid)
{
	new Float:Health
	GetPlayerHealth(playerid, Health);
	if(Health > 70) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+30);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„µ√µΩ¡À∏ﬂ≥±£¨≤¢»°œ¬¡ÀºŸ—Ùæﬂ∑≈ªÿƒ„µƒ∞¸¿Ô");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}

public UsingSmallDildo(playerid)
{
	new Float:Health
	GetPlayerHealth(playerid, Health);
	if(Health > 90) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+10);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„µ√µΩ¡À∏ﬂ≥±£¨≤¢»°œ¬¡ÀºŸ—Ùæﬂ∑≈ªÿƒ„µƒ∞¸¿Ô");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}

public UsingLargeDildo(playerid)
{
	new Float:Health
	GetPlayerHealth(playerid, Health);
	if(Health > 75) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+25);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„µ√µΩ¡À∏ﬂ≥±£¨≤¢»°œ¬¡ÀºŸ—Ùæﬂ∑≈ªÿƒ„µƒ∞¸¿Ô");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}

public UsingBlackDildo(playerid)
{
	new Float:Health
	GetPlayerHealth(playerid, Health);
	if(Health > 83) SetPlayerHealth(playerid, 100);
	else SetPlayerHealth(playerid, Health+17);
	UsedDildo[playerid] = 1;
    TogglePlayerControllable(playerid, 1);
    GameTextForPlayer(playerid, "~p~Oh Yee~h~aaaa~h~ahhhh",6000,5);
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„µ√µΩ¡À∏ﬂ≥±£¨≤¢»°œ¬¡ÀºŸ—Ùæﬂ∑≈ªÿƒ„µƒ∞¸¿Ô");
	DildoTimerReset = SetTimerEx("ResetDildo",600000,false, "i",playerid);
	return 1;
}


public ResetDildo(playerid)
{
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒ“ıµ¿≤ª‘Ÿ «∫Ï…´∫Õƒ•À£¨ƒ„ø…“‘‘Ÿ¥Œ π”√ºŸ—Ùæﬂ");
	UsedDildo[playerid] = 0;
	return 1;
}


public BlowJobStart(playerid)
{
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„œ÷‘⁄‘⁄ø⁄Ωª, ∞¥ø’∏ÒÀ±Œ¸ƒ„µƒƒø±Í");
	GivingBlowjob[playerid] = 1;
	GameTextForPlayer(playerid, "~w~Press ~y~ ~k~~PED_SPRINT~ ~w~To Suck", 6000, 5);
	return 1;
}


public StartWank(playerid)
{
    SendClientMessage(playerid, COLOR_GREY, "* ƒ„œ÷‘⁄‘⁄ ÷“˘, ∞¥ø’∏ÒΩ¯––");
	IsWanking[playerid] = 1;
	GameTextForPlayer(playerid, "~w~Press ~y~ ~k~~PED_SPRINT~ ~w~To Wank", 6000, 5);
	return 1;
}


public ResetWank(playerid)
{
    JustWanked[playerid] = 0;
    return 1;
}

public CanWankAgain(playerid)
{
	WankedRecently[playerid] = 0;
	SendClientMessage(playerid, COLOR_GREY, "* ƒ„µƒ…˙÷≥∆˜øµ∏¥¡À.");
	return 1;
}

public HideWelcome(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw6);
	TextDrawHideForPlayer(playerid, Textdraw7);
	TextDrawHideForPlayer(playerid, Textdraw8);
	TextDrawHideForPlayer(playerid, Textdraw9);
	TextDrawHideForPlayer(playerid, Textdraw10);
	TextDrawHideForPlayer(playerid, Textdraw11);
	TextDrawHideForPlayer(playerid, Textdraw12);
	TextDrawHideForPlayer(playerid, Textdraw13);
	TextDrawHideForPlayer(playerid, Textdraw14);
	TextDrawHideForPlayer(playerid, Textdraw15);
	TextDrawHideForPlayer(playerid, Textdraw16);
	TextDrawHideForPlayer(playerid, Textdraw17);
	TextDrawHideForPlayer(playerid, Textdraw18);
	TextDrawHideForPlayer(playerid, Textdraw19);
	return 1;
}

public ShowWelcome(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw6);
	TextDrawShowForPlayer(playerid, Textdraw7);
	TextDrawShowForPlayer(playerid, Textdraw8);
	TextDrawShowForPlayer(playerid, Textdraw9);
	TextDrawShowForPlayer(playerid, Textdraw10);
	TextDrawShowForPlayer(playerid, Textdraw11);
	TextDrawShowForPlayer(playerid, Textdraw12);
	TextDrawShowForPlayer(playerid, Textdraw13);
	TextDrawShowForPlayer(playerid, Textdraw14);
	TextDrawShowForPlayer(playerid, Textdraw15);
	TextDrawShowForPlayer(playerid, Textdraw16);
	TextDrawShowForPlayer(playerid, Textdraw17);
	TextDrawShowForPlayer(playerid, Textdraw18);
	TextDrawShowForPlayer(playerid, Textdraw19);
	return 1;
}


public ShowRules(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw20);
	TextDrawShowForPlayer(playerid, Textdraw21);
	TextDrawShowForPlayer(playerid, Textdraw22);
	TextDrawShowForPlayer(playerid, Textdraw23);
	TextDrawShowForPlayer(playerid, Textdraw24);
	TextDrawShowForPlayer(playerid, Textdraw25);
	TextDrawShowForPlayer(playerid, Textdraw26);
	TextDrawShowForPlayer(playerid, Textdraw27);
	TextDrawShowForPlayer(playerid, Textdraw28);
	TextDrawShowForPlayer(playerid, Textdraw29);
	TextDrawShowForPlayer(playerid, Textdraw30);
	TextDrawShowForPlayer(playerid, Textdraw31);
	TextDrawShowForPlayer(playerid, Textdraw32);
	TextDrawShowForPlayer(playerid, Textdraw33);
	TextDrawShowForPlayer(playerid, Textdraw34);
	TextDrawShowForPlayer(playerid, Textdraw35);
	TextDrawShowForPlayer(playerid, Textdraw36);
	TextDrawShowForPlayer(playerid, Textdraw37);
	TextDrawShowForPlayer(playerid, Textdraw38);
	return 1;
}

public HideRules(playerid)
{
	TextDrawHideForPlayer(playerid,Textdraw20);
	TextDrawHideForPlayer(playerid,Textdraw21);
	TextDrawHideForPlayer(playerid,Textdraw22);
	TextDrawHideForPlayer(playerid,Textdraw23);
	TextDrawHideForPlayer(playerid,Textdraw24);
	TextDrawHideForPlayer(playerid,Textdraw25);
	TextDrawHideForPlayer(playerid,Textdraw26);
	TextDrawHideForPlayer(playerid,Textdraw27);
	TextDrawHideForPlayer(playerid,Textdraw28);
	TextDrawHideForPlayer(playerid,Textdraw29);
	TextDrawHideForPlayer(playerid,Textdraw30);
	TextDrawHideForPlayer(playerid,Textdraw31);
	TextDrawHideForPlayer(playerid,Textdraw32);
	TextDrawHideForPlayer(playerid,Textdraw33);
	TextDrawHideForPlayer(playerid,Textdraw34);
	TextDrawHideForPlayer(playerid,Textdraw35);
	TextDrawHideForPlayer(playerid,Textdraw36);
	TextDrawHideForPlayer(playerid,Textdraw37);
	TextDrawHideForPlayer(playerid,Textdraw38);
	return 1;
}

public HideSpeedo(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	return 1;
}

public showmotd(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw2);
    TextDrawShowForPlayer(playerid, Textdraw3);
    return 1;
}

public ShowSpeedGun(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw41[playerid]);
	TextDrawShowForPlayer(playerid, Textdraw42[playerid]);
	TextDrawShowForPlayer(playerid, Textdraw43);
	ViewingSpeed[playerid] = 1;
	return 1;
}

public HideSpeedGun(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw41[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw42[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw43);
	ViewingSpeed[playerid] = 0;
	return 1;
}


public ReleaseFromHospital(playerid)
{
	KillSpawnStart[playerid] = 0;
	SendClientMessage(playerid, COLOR_LIGHT_BLUE, "ƒ„∏¥ªÓ¡À µ´ƒ„œ÷‘⁄µƒ…ÌÃÂ∫‹–È»ı{FFFFF0}◊¢“‚µ˜—¯.");
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	SetPlayerHealth(playerid, 50.0);
	new decidehosp = random(2);
	switch(decidehosp)
	{
		case 0:
		{
    		SafeSetPlayerPos(playerid, 1177.4866,-1323.9749,14.0731);
    		SetPlayerFacingAngle(playerid, 270.0);
    		SafeSetPlayerInterior(playerid, 0);
    		SafeResetPlayerWeapons(playerid);
		}
 		case 1:
		{
    		SafeSetPlayerPos(playerid, 2025.1497,-1402.8643,17.2089);
    		SetPlayerFacingAngle(playerid, 270.0);
    		SafeSetPlayerInterior(playerid, 0);
    		SafeResetPlayerWeapons(playerid);
		}
	}
	return 1;
}



public SetPlayerSkills(playerid)
{
	if(PlayerInfo[playerid][pFS] == 1)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_BOXING);
	}
	if(PlayerInfo[playerid][pFS] == 3)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_GRABKICK);
	}
	if(PlayerInfo[playerid][pFS] == 2)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_KUNGFU);
	}
	if(PlayerInfo[playerid][pFS] == 0)
	{
	    SetPlayerFightingStyle(playerid,FIGHT_STYLE_NORMAL);
	}
	if(PlayerInfo[playerid][pFS] == 4)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(PlayerInfo[playerid][pFS] == 5)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
	}
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, PlayerInfo[playerid][pPistSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pSilenSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pDesertSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pShotgSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, PlayerInfo[playerid][pSawnSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, PlayerInfo[playerid][pCombSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, PlayerInfo[playerid][pUziSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pSmgSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pAkSkill]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pM4Skill]);
	return 1;
}

public ChangeYourName(playerid)
{
	new string[128];
	new PlayerName55[24];
	GetPlayerName(playerid, PlayerName55, sizeof(PlayerName55));
	format(string, sizeof(string),"** –¥œ¬ƒ„µƒ–¬√˚◊÷(%s)!! “µ÷˜ø…ƒ‹√ª”–ø¥»’÷æ,ºÏ≤Èƒ„µƒ–¬√˚◊÷!!",PlayerName55);
	SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
	SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
	return 1;
}

public ResetAcWarn(playerid)
{
	PlayerGotSpottedRecently[playerid] = 0;
	Checked[playerid] = 0;
	return 1;
}

public SaveGuns(playerid)
{
    for(new slot = 0; slot != 12; slot++)
    {
    	new wep, ammo;
     	GetPlayerWeaponData(playerid, slot, wep, ammo);
      	if(wep != 0 && ammo != 0)
       	{
       	    if(PlayerInfo[playerid][pAdmin] >= 6)
   		    {
	    		if(PlayerInfo[playerid][pAdminDuty] == 0)
   		    	{
   		    	    if(Tazer[playerid] == 1) { SafeGivePlayerWeapon(playerid, 24, PreTazerAmmo[playerid]); }
   		    	    if(PlayerInfo[playerid][pWeapon] == 0) { PlayerInfo[playerid][pWeapon] = wep; PlayerInfo[playerid][pAmmo] = ammo; }
			       	else if(PlayerInfo[playerid][pWeapon2] == 0) { PlayerInfo[playerid][pWeapon2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; }
				    else if(PlayerInfo[playerid][pWeapon3] == 0) { PlayerInfo[playerid][pWeapon3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; }
				    else if(PlayerInfo[playerid][pWeapon4] == 0) { PlayerInfo[playerid][pWeapon4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; }
		      		else if(PlayerInfo[playerid][pWeapon5] == 0) { PlayerInfo[playerid][pWeapon5] = wep; PlayerInfo[playerid][pAmmo5] = ammo; }
				    else if(PlayerInfo[playerid][pWeapon6] == 0) { PlayerInfo[playerid][pWeapon6] = wep; PlayerInfo[playerid][pAmmo6] = ammo; }
			        else if(PlayerInfo[playerid][pWeapon7] == 0) { PlayerInfo[playerid][pWeapon7] = wep; PlayerInfo[playerid][pAmmo7] = ammo; }
			        else if(PlayerInfo[playerid][pWeapon8] == 0) { PlayerInfo[playerid][pWeapon8] = wep; PlayerInfo[playerid][pAmmo8] = ammo; }
			        else if(PlayerInfo[playerid][pWeapon9] == 0) { PlayerInfo[playerid][pWeapon9] = wep; PlayerInfo[playerid][pAmmo9] = ammo; }
			        else if(PlayerInfo[playerid][pWeapon10] == 0) { PlayerInfo[playerid][pWeapon10] = wep; PlayerInfo[playerid][pAmmo10] = ammo; }
			        else if(PlayerInfo[playerid][pWeapon11] == 0) { PlayerInfo[playerid][pWeapon11] = wep; PlayerInfo[playerid][pAmmo11] = ammo; }
			        else if(PlayerInfo[playerid][pWeapon12] == 0) { PlayerInfo[playerid][pWeapon12] = wep; PlayerInfo[playerid][pAmmo12] = ammo; }
				}
			}
			else
			{
			    if(Tazer[playerid] == 1) { SafeGivePlayerWeapon(playerid, 24, PreTazerAmmo[playerid]); }
	       		if(PlayerInfo[playerid][pWeapon] == 0) { PlayerInfo[playerid][pWeapon] = wep; PlayerInfo[playerid][pAmmo] = ammo; }
		       	else if(PlayerInfo[playerid][pWeapon2] == 0) { PlayerInfo[playerid][pWeapon2] = wep; PlayerInfo[playerid][pAmmo2] = ammo; }
			    else if(PlayerInfo[playerid][pWeapon3] == 0) { PlayerInfo[playerid][pWeapon3] = wep; PlayerInfo[playerid][pAmmo3] = ammo; }
			    else if(PlayerInfo[playerid][pWeapon4] == 0) { PlayerInfo[playerid][pWeapon4] = wep; PlayerInfo[playerid][pAmmo4] = ammo; }
	      		else if(PlayerInfo[playerid][pWeapon5] == 0) { PlayerInfo[playerid][pWeapon5] = wep; PlayerInfo[playerid][pAmmo5] = ammo; }
			    else if(PlayerInfo[playerid][pWeapon6] == 0) { PlayerInfo[playerid][pWeapon6] = wep; PlayerInfo[playerid][pAmmo6] = ammo; }
		        else if(PlayerInfo[playerid][pWeapon7] == 0) { PlayerInfo[playerid][pWeapon7] = wep; PlayerInfo[playerid][pAmmo7] = ammo; }
		        else if(PlayerInfo[playerid][pWeapon8] == 0) { PlayerInfo[playerid][pWeapon8] = wep; PlayerInfo[playerid][pAmmo8] = ammo; }
		        else if(PlayerInfo[playerid][pWeapon9] == 0) { PlayerInfo[playerid][pWeapon9] = wep; PlayerInfo[playerid][pAmmo9] = ammo; }
		        else if(PlayerInfo[playerid][pWeapon10] == 0) { PlayerInfo[playerid][pWeapon10] = wep; PlayerInfo[playerid][pAmmo10] = ammo; }
		        else if(PlayerInfo[playerid][pWeapon11] == 0) { PlayerInfo[playerid][pWeapon11] = wep; PlayerInfo[playerid][pAmmo11] = ammo; }
		        else if(PlayerInfo[playerid][pWeapon12] == 0) { PlayerInfo[playerid][pWeapon12] = wep; PlayerInfo[playerid][pAmmo12] = ammo; }
			}
		}
    }
    return 1;
}

public SaveAllGuns()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gPlayerLogged[i])
		    {
			    for(new slot = 0; slot != 12; slot++)
			    {
			    	new wep, ammo;
			     	GetPlayerWeaponData(i, slot, wep, ammo);
			      	if(wep != 0 && ammo != 0)
			       	{
			       	    if(PlayerInfo[i][pAdmin] >= 6)
   		    			{
   		    			    if(PlayerInfo[i][pAdminDuty] == 0)
   		    			    {
   		    			        if(Tazer[i] == 1) { SafeGivePlayerWeapon(i, 24, PreTazerAmmo[i]); }
					        	if(PlayerInfo[i][pWeapon] == 0) { PlayerInfo[i][pWeapon] = wep; PlayerInfo[i][pAmmo] = ammo; }
					         	else if(PlayerInfo[i][pWeapon2] == 0) { PlayerInfo[i][pWeapon2] = wep; PlayerInfo[i][pAmmo2] = ammo; }
						   	    else if(PlayerInfo[i][pWeapon3] == 0) { PlayerInfo[i][pWeapon3] = wep; PlayerInfo[i][pAmmo3] = ammo; }
						        else if(PlayerInfo[i][pWeapon4] == 0) { PlayerInfo[i][pWeapon4] = wep; PlayerInfo[i][pAmmo4] = ammo; }
						        else if(PlayerInfo[i][pWeapon5] == 0) { PlayerInfo[i][pWeapon5] = wep; PlayerInfo[i][pAmmo5] = ammo; }
						        else if(PlayerInfo[i][pWeapon6] == 0) { PlayerInfo[i][pWeapon6] = wep; PlayerInfo[i][pAmmo6] = ammo; }
					            else if(PlayerInfo[i][pWeapon7] == 0) { PlayerInfo[i][pWeapon7] = wep; PlayerInfo[i][pAmmo7] = ammo; }
					            else if(PlayerInfo[i][pWeapon8] == 0) { PlayerInfo[i][pWeapon8] = wep; PlayerInfo[i][pAmmo8] = ammo; }
					            else if(PlayerInfo[i][pWeapon9] == 0) { PlayerInfo[i][pWeapon9] = wep; PlayerInfo[i][pAmmo9] = ammo; }
					            else if(PlayerInfo[i][pWeapon10] == 0) { PlayerInfo[i][pWeapon10] = wep; PlayerInfo[i][pAmmo10] = ammo; }
					            else if(PlayerInfo[i][pWeapon11] == 0) { PlayerInfo[i][pWeapon11] = wep; PlayerInfo[i][pAmmo11] = ammo; }
					            else if(PlayerInfo[i][pWeapon12] == 0) { PlayerInfo[i][pWeapon12] = wep; PlayerInfo[i][pAmmo12] = ammo; }
							}
				        }
				        else
				        {
				            if(Tazer[i] == 1) { SafeGivePlayerWeapon(i, 24, PreTazerAmmo[i]); }
				            if(PlayerInfo[i][pWeapon] == 0) { PlayerInfo[i][pWeapon] = wep; PlayerInfo[i][pAmmo] = ammo; }
					        else if(PlayerInfo[i][pWeapon2] == 0) { PlayerInfo[i][pWeapon2] = wep; PlayerInfo[i][pAmmo2] = ammo; }
						   	else if(PlayerInfo[i][pWeapon3] == 0) { PlayerInfo[i][pWeapon3] = wep; PlayerInfo[i][pAmmo3] = ammo; }
						    else if(PlayerInfo[i][pWeapon4] == 0) { PlayerInfo[i][pWeapon4] = wep; PlayerInfo[i][pAmmo4] = ammo; }
						    else if(PlayerInfo[i][pWeapon5] == 0) { PlayerInfo[i][pWeapon5] = wep; PlayerInfo[i][pAmmo5] = ammo; }
					     	else if(PlayerInfo[i][pWeapon6] == 0) { PlayerInfo[i][pWeapon6] = wep; PlayerInfo[i][pAmmo6] = ammo; }
					        else if(PlayerInfo[i][pWeapon7] == 0) { PlayerInfo[i][pWeapon7] = wep; PlayerInfo[i][pAmmo7] = ammo; }
					        else if(PlayerInfo[i][pWeapon8] == 0) { PlayerInfo[i][pWeapon8] = wep; PlayerInfo[i][pAmmo8] = ammo; }
					        else if(PlayerInfo[i][pWeapon9] == 0) { PlayerInfo[i][pWeapon9] = wep; PlayerInfo[i][pAmmo9] = ammo; }
					        else if(PlayerInfo[i][pWeapon10] == 0) { PlayerInfo[i][pWeapon10] = wep; PlayerInfo[i][pAmmo10] = ammo; }
					        else if(PlayerInfo[i][pWeapon11] == 0) { PlayerInfo[i][pWeapon11] = wep; PlayerInfo[i][pAmmo11] = ammo; }
				         	else if(PlayerInfo[i][pWeapon12] == 0) { PlayerInfo[i][pWeapon12] = wep; PlayerInfo[i][pAmmo12] = ammo; }
						}
					}
			    }
			}
		}
	}
    return 1;
}


public RobCityHall(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2, 358.5919,184.2908,1008.3828))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobCityHallTimer);
			new money = random(2000);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~City Hall!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d -------  –’˛Ã¸!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸ –’˛Ã¸");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobCityHallTimer);
	}
}

public UnsetPlayerRob(playerid)
{
	RobbedRecently[playerid] = 0;
	return 1;
}

public UnsetCityHallRob()
{
	CityHallRobbedRecently = 0;
	return 1;
}
public UnsetBankRob()
{
	BankRobbedRecently = 0;
	return 1;
}
public UnsetGymRob()
{
	GymRobbedRecently = 0;
	return 1;
}
public UnsetDonutRob()
{
	DonutRobbedRecently = 0;
	return 1;
}

public UnsetAlhambraRob()
{
	AlhambraRobbedRecently = 0;
	return 1;
}
public UnsetBarRob()
{
	BarRobbedRecently = 0;
	return 1;
}

public RobBank(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2, 2309.6060,-4.0211,26.7422))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobBankTimer);
			new money = random(2500);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Bank!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- “¯––!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸ“¯––");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobBankTimer);
	}
}

public RobGym(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2, 756.5454,5.4325,1000.6992))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobGymTimer);
			new money = random(500);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Gym!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d -------Ω°…Ì∑ø!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸΩ°…Ì∑ø");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobGymTimer);
	}
}

public RobDonut(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2, 379.1978,-184.1220,1000.6328))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobDonutTimer);
			new money = random(750);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Donut Store!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- ÃÃ»¶…ÃµÍ!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸÃÃ»¶…ÃµÍ");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobDonutTimer);
	}
}

public RobAlhambra(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2,499.6341,-20.3592,1000.6797))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobAlhambraTimer);
			new money = random(1000);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Alhambra Club!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- ∞¢¿º≤º¿≠æ„¿÷≤ø!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸ∞¢¿º≤º¿≠æ„¿÷≤ø");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobAlhambraTimer);
	}
}

public RobBar(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2,492.0305,-82.4695,998.7578))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobBarTimer);
			new money = random(950);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~TGB Bar!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- ¬Ã∆ø◊”æ∆∞…!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸ¬Ã∆ø◊”æ∆∞…");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobBarTimer);
	}
}

public RobBurger(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2,373.8943,-67.4481,1001.5078))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobBurgerTimer);
			new money = random(550);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Burger Shoot!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- ∫∫±§µÍ!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸ∫∫±§µÍ");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobBurgerTimer);
	}
}

public RobCluckin(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2, 371.7011,-6.2796,1001.8589))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobCluckinTimer);
			new money = random(550);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Cluckin' Bell!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- øÏ≤ÕµÍ!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸøÏ≤ÕµÍ");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobCluckinTimer);
	}
}

public RobPizza(playerid)
{
	new string[128];
	if(IsPlayerInRangeOfPoint(playerid, 2,373.6143,-118.8086,1001.4922))
	{
		if(RobbingTime[playerid] > 0)
		{
		    RobbingTime[playerid] --;
		    GameTextForPlayer(playerid, "~w~Remain in the ~r~Pickup ~w~until the time ends!", 1000,4);
		}
		else
		{
		    RobbingTime[playerid] = 0;
		    KillTimer(RobPizzaTimer);
			new money = random(600);
		    SafeGivePlayerMoney(playerid, money);
			format(string, sizeof(string),"~w~You Robbed ~g~$%d ~w~From the ~y~Pizza Hut!", money);
			GameTextForPlayer(playerid, string, 6000, 4);
			format(string, sizeof(string),"* ƒ„«¿ΩŸ¡À$%d ------- ±ÿ §øÕ!",money);
			SendClientMessage(playerid, COLOR_GREY, string);
			WantedPoints[playerid] = 10;
			SetPlayerCriminal(playerid,255, "«¿ΩŸ±ÿ §øÕ");
		}
	}
	else
	{
        GameTextForPlayer(playerid, "~w~You Left The Checkpoint!", 1000,4);
        RobbingTime[playerid] = 0;
 		KillTimer(RobPizzaTimer);
	}
}

public ChangeWeather()
{
	weather2 = random(20);
	DefaultWeather = weather2;
	if(weather2 == 1)
	{
	    SetWeather(1);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯∫‹«Á¿ ,ƒ„ø…“‘»•”Œ”æ¡À!");
	}
	else if(weather2 == 2)
	{
	    SetWeather(2);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯∑«≥£»», «Îƒ„◊Ó∫√¡Ù‘⁄º“¿Ô!");
	}
	else if(weather2 == 3)
	{
	    SetWeather(3);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯œ÷‘⁄∫‹«Á¿ , «º›≥µ≥ˆ”Œµƒ∫√»’◊”!");
	}
	else if(weather2 == 4)
	{
	    SetWeather(4);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ¬¥Û±©”Í¡À, øÏ»•’“µÿ∑Ω∂„”Í∞…!");
	}
	else if(weather2 == 5)
	{
	    SetWeather(5);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯∑«≥£»»,«Î≤ª“™¥©Ã´∂‡µƒ“¬∑˛!");
	}
	else if(weather2 == 6)
	{
	    SetWeather(6);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯∑«≥£»»,«Î≤ª“™¥©Ã´∂‡µƒ“¬∑˛!");
	}
	else if(weather2 == 7)
	{
	    SetWeather(7);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ÷‘⁄∂‡‘∆,◊¢“‚∑¿”Í!");
	}
	else if(weather2 == 8)
	{
	    SetWeather(8);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ¬¥Û±©”Í¡À, øÏ»•’“µÿ∑Ω∂„”Í∞…!");
	}
	else if(weather2 == 9)
	{
	    SetWeather(9);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ¥ÛŒÌÃÏ∆¯,◊¢“‚≤ª“™ø™Ã´øÏµƒ≥µ∫Õ≤ª“™∑…––!");
	}
	else if(weather2 == 10)
	{
	    SetWeather(10);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯∫‹«Á¿ ,µ´ «◊¢“‚∑¿”Í!");
	}
	else if(weather2 == 11)
	{
	    SetWeather(11);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯œ÷‘⁄∫‹«Á¿ , «∆Ô≥µ¬√”Œµƒ∫√»’◊”!");
	}
	else if(weather2 == 12)
	{
	    SetWeather(12);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ÷‘⁄∂‡‘∆,◊¢“‚∑¿”Í,º«µ√¥¯…œ”Í…°≥ˆ––!");
	}
	else if(weather2 == 13)
	{
	    SetWeather(13);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯∑«≥£«Á¿ ,  ∫œ∑…––µƒ∫√ÃÏ∆¯!");
	}
	else if(weather2 == 14)
	{
	    SetWeather(14);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯«Á¿ , «≥ˆ––µƒ∫√»’◊”!");
	}
	else if(weather2 == 15)
	{
	    SetWeather(15);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ÷‘⁄∂‡‘∆,«Î◊Ó∫√±∏…œ”Í…°!");
	}
	else if(weather2 == 16)
	{
	    SetWeather(16);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ¬”Í¡À,◊¢“‚∑¿”Í!");
	}
	else if(weather2 == 17)
	{
	    SetWeather(17);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯«Á¿ Œ¢»»,«Î≤ª“™¥©Ã´∂‡µƒ“¬∑˛!");
	}
	else if(weather2 == 18)
	{
	    SetWeather(18);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: ÃÏ∆¯«Á¿ Œ¢»»,«Î≤ª“™¥©Ã´∂‡µƒ“¬∑˛!");
	}
	else if(weather2 == 19)
	{
	    SetWeather(19);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ÷‘⁄”–…≥≥æ±©,«Î≤ª“™ø™≥µ!");
	}
	else if(weather2 == 20)
	{
	    SetWeather(20);
		SendClientMessageToAll(COLOR_SEA,"[ÃÏ∆¯–¬Œ≈]: œ÷‘⁄∂‡‘∆,«Î◊Ó∫√±∏…œ”Í…°!");
	}
	return 1;
}

public SafeRemovePlayerFromVehicle(playerid)
{
    for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] != 255)
			{
    			PlayerSpectatePlayer(i,playerid);
			}
		}
	}
    TextDrawHideForPlayer(playerid, Textdraw39[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw40[playerid]);
	TextDrawHideForPlayer(playerid, Textdraw53[playerid]);
	RemovePlayerFromVehicle(playerid);
	return 1;
}

public ResetArea(playerid)
{
    UsedAreaRecently[playerid] = 0;
}

public SetRealMoney(playerid, money)
{
	SafeResetPlayerMoney(playerid);
	SafeGivePlayerMoney(playerid, money);
	ScriptMoney[playerid] = money;
	return 1;
}

public IsAtCandySprunk(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return 1;
 	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return 1;
	else return 0;
}

public SetHP(playerid)
{
	new Float:Health;
	GetPlayerHealth(playerid, Health);
	if(Health < 80)
	{
		SetPlayerHealth(playerid, (Health -15));
	}
	TookSprunk[playerid] = 0;
	return 1;
}

public IsAtPaySpray(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7, 720.0365,-456.1832,16.3359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, -1420.1768,2582.9065,55.8433)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, -99.9604,1118.6705,19.7417)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, 2063.9282,-1831.2328,13.5469)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, -2425.8564,1021.5482,50.3977)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, 1975.2701,2162.7236,11.0703)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, 488.3201,-1739.6451,11.1550)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, 1024.9722,-1024.7489,32.1016)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, -1904.4379,286.5901,41.0469)) return 1;
	else return 0;
}

public IsAtTransfender(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7, 616.7820,-74.8151,997.6350)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, 615.2851,-124.2390,997.6350)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 7, 617.5380,-1.9900,1000.6829)) return 1;
	else return 0;
}

public RestartCars()
{
	for(new h = 1; h < sizeof(ownedcar); h++)
	{
	    DestroyVehicle(h);
		ownedcar[h] = AddStaticVehicleEx(CarInfo[h][cModel],CarInfo[h][cLocationx],CarInfo[h][cLocationy],CarInfo[h][cLocationz]+1.0,CarInfo[h][cAngle],CarInfo[h][cColorOne],CarInfo[h][cColorTwo],60000);
		if(CarInfo[h][cPaintjob] != 999)
		{
			ChangeVehiclePaintjob(h, CarInfo[h][cPaintjob]);
		}
		SetVehicleVirtualWorld(h, CarInfo[h][cVirWorld]);
	}
	return 1;
}

public SafeSetPlayerPos(playerid, Float:x, Float:y, Float:z)
{
	SetPlayerPos(playerid, x,y,z);
	Streamer_UpdateEx(playerid,x,y,z);
	return 1;
}

public GreenMoney(playerid)
{
	if(ReceivedMoney[playerid] == 1)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF00EE);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 2;
	}
	else if(ReceivedMoney[playerid] == 2)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF00DD);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 3;
	}
	else if(ReceivedMoney[playerid] == 3)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF00CC);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 4;
	}
	else if(ReceivedMoney[playerid] == 4)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF00BB);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 5;
	}
	else if(ReceivedMoney[playerid] == 5)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF00AA);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 6;
	}
	else if(ReceivedMoney[playerid] == 6)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0099);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 7;
	}
	else if(ReceivedMoney[playerid] == 7)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0088);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 8;
	}
	else if(ReceivedMoney[playerid] == 8)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0077);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 9;
	}
	else if(ReceivedMoney[playerid] == 9)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0066);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 10;
	}
	else if(ReceivedMoney[playerid] == 10)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0055);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 11;
	}
	else if(ReceivedMoney[playerid] == 11)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0044);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 12;
	}
	else if(ReceivedMoney[playerid] == 12)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0x00FF0033);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 13;
	}
	else if(ReceivedMoney[playerid] == 13)
	{
	    TextDrawHideForPlayer(playerid, Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid], 0xFFFFFFFF);
	    KillTimer(MoneyTimer[playerid]);
	}
}

public RedMoney(playerid)
{
	if(ReceivedMoney[playerid] == 1)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF0000EE);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 2;
	}
	else if(ReceivedMoney[playerid] == 2)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF0000DD);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 3;
	}
	else if(ReceivedMoney[playerid] == 3)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF0000CC);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 4;
	}
	else if(ReceivedMoney[playerid] == 4)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF0000BB);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 5;
	}
	else if(ReceivedMoney[playerid] == 5)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF0000AA);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 6;
	}
	else if(ReceivedMoney[playerid] == 6)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000099);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 7;
	}
	else if(ReceivedMoney[playerid] == 7)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000088);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 8;
	}
	else if(ReceivedMoney[playerid] == 8)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000077);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 9;
	}
	else if(ReceivedMoney[playerid] == 9)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000066);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 10;
	}
	else if(ReceivedMoney[playerid] == 10)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000055);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 11;
	}
	else if(ReceivedMoney[playerid] == 11)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000044);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 12;
	}
	else if(ReceivedMoney[playerid] == 12)
	{
	    TextDrawHideForPlayer(playerid,Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid],0xFF000033);
	    TextDrawShowForPlayer(playerid, Textdraw52[playerid]);
	    ReceivedMoney[playerid] = 13;
	}
	else if(ReceivedMoney[playerid] == 13)
	{
	    TextDrawHideForPlayer(playerid, Textdraw52[playerid]);
	    TextDrawColor(Textdraw52[playerid], 0xFFFFFFFF);
	    KillTimer(MoneyTimer[playerid]);
	}
}

stock SetPlayerRouting(playerid, Float:x1, Float:y1)
{
	if(IsPlayerInAnyVehicle(playerid) && Gps[playerid] == 1)
	{
		new string[128];
		new textstring[200];
		new Float:x2, Float:y2, Float:z2;
	    new Float:angle2;

		GetVehiclePos(GetPlayerVehicleID(playerid), x2, y2, z2);
	   	GetVehicleZAngle(GetPlayerVehicleID(playerid), angle2);

	 	new Float:dist;
  		dist = floatsqroot(floatpower(floatabs(floatsub(x1,x2)),2)+floatpower(floatabs(floatsub(y1,y2)),2));

		new Float:angle1;
		if( (y1-y2) >= 0.0) angle1 = acos((x1-x2)/dist) - 90;
		else angle1 = 270 - acos((x1-x2)/dist);

		new Float:offset;
		offset = 360.0 - angle2 + angle1;
		if(offset >= 360.0) offset = offset - 360.0;
		else if(offset < 0.0) offset = offset + 360.0;

		if(offset >= 330.0 || offset < 30.0) format(string, sizeof(string), "~u~ ~w~%d ~u~", floatround(dist));
		else if(offset >= 30.0 && offset < 60.0) format(string, sizeof(string), "~<~ ~w~%d", floatround(dist));
		else if(offset >= 60.0 && offset < 100.0) format(string, sizeof(string), "~<~~<~ ~w~%d", floatround(dist));
		else if(offset >= 100.0 && offset < 150.0) format(string, sizeof(string), "~d~~<~ ~w~%d", floatround(dist));
		else if(offset >= 150.0 && offset < 210.0) format(string, sizeof(string), "~d~ ~w~%d ~d~", floatround(dist));
		else if(offset >= 210.0 && offset < 260.0) format(string, sizeof(string), "~w~%d ~>~~d~", floatround(dist));
		else if(offset >= 260.0 && offset < 300.0) format(string, sizeof(string), "~w~%d ~>~~>~", floatround(dist));
		else if(offset >= 300.0 && offset < 330.0) format(string, sizeof(string), "~w~%d ~>~", floatround(dist));
		format(textstring,sizeof(textstring),"~r~Global Positionating System ~n~~n~~y~Tracking Coordinates: ~w~~n~X %.01f - Y %.01f ~n~~n~ ~y~Distance & Direction: ~n~%s", x1, y1, string);
		TextDrawSetString(Textdraw53[playerid],textstring);
		if(floatround(dist) <= 25)
		{
		    format(textstring,sizeof(textstring),"~r~Global Positionating System ~n~~n~~y~Tracking Coordinates: ~w~~n~X %.01f - Y %.01f ~n~~n~ ~p~Arrived at Position!", x1, y1);
			TextDrawSetString(Textdraw53[playerid],textstring);
		}
		TelePosGps[playerid][tX] = x1;
		TelePosGps[playerid][tY] = y1;
	}
	return 1;
}

stock CreateRoadblock(Object,Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(Roadblocks[i][sCreated] == 0)
  	    {
            Roadblocks[i][sCreated] = 1;
            Roadblocks[i][sX] = x;
            Roadblocks[i][sY] = y;
            Roadblocks[i][sZ] = z-0.7;
            Roadblocks[i][sObject] = CreateDynamicObject(Object, x, y, z-0.9, 0, 0, Angle);
	        return 1;
  	    }
  	}
  	return 0;
}

stock DeleteAllRoadblocks(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 100, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
	  	    if(Roadblocks[i][sCreated] == 1)
	  	    {
	  	        Roadblocks[i][sCreated] = 0;
	            Roadblocks[i][sX] = 0.0;
	            Roadblocks[i][sY] = 0.0;
	            Roadblocks[i][sZ] = 0.0;
	            DestroyDynamicObject(Roadblocks[i][sObject]);
	  	    }
  	    }
	}
    return 0;
}


stock DeleteClosestRoadblock(playerid)
{
    for(new i = 0; i < sizeof(Roadblocks); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 5.0, Roadblocks[i][sX], Roadblocks[i][sY], Roadblocks[i][sZ]))
        {
  	        if(Roadblocks[i][sCreated] == 1)
            {
                Roadblocks[i][sCreated] = 0;
                Roadblocks[i][sX] = 0.0;
                Roadblocks[i][sY] = 0.0;
                Roadblocks[i][sZ] = 0.0;
                DestroyDynamicObject(Roadblocks[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

public AddPunishment(playerid, string[])
{
	if(PlayerInfo[playerid][pNextPunishment] == 1)
	{
	    strmid(PlayerInfo[playerid][pPunishment1], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 2;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 2)
	{
	    strmid(PlayerInfo[playerid][pPunishment2], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 3;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 3)
	{
	    strmid(PlayerInfo[playerid][pPunishment3], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 4;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 4)
	{
	    strmid(PlayerInfo[playerid][pPunishment4], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 5;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 5)
	{
	    strmid(PlayerInfo[playerid][pPunishment5], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 6;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 6)
	{
	    strmid(PlayerInfo[playerid][pPunishment6], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 7;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 7)
	{
	    strmid(PlayerInfo[playerid][pPunishment7], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 8;
	}
	else if(PlayerInfo[playerid][pNextPunishment] == 8)
	{
	    strmid(PlayerInfo[playerid][pPunishment8], string, 0, strlen(string), 255);
	    PlayerInfo[playerid][pNextPunishment] = 1;
	}
	PlayerInfo[playerid][pPunished] ++;
}

stock CagePlayer(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:X, Float:Y, Float:Z;
        GetPlayerPos(playerid, X, Y, Z);
        cage[playerid][0] = CreateDynamicObject(985, X, Y+4, Z, 0.0, 0.0, 0.0);
        cage[playerid][1] = CreateDynamicObject(985, X+4, Y, Z, 0.0, 0.0, 90.0);
        cage[playerid][2] = CreateDynamicObject(985, X-4, Y, Z, 0.0, 0.0, 270.0);
        cage[playerid][3] = CreateDynamicObject(985, X, Y-4, Z, 0.0, 0.0, 180.0);
        caged[playerid] = 1; // Use this in a /cage command to prevent being caged twice and causing the cage to be unremovable.
        PlayerPlaySound(playerid, 1137, X, Y, Z);
    }
}

stock UnCagePlayer(playerid)
{
    cage[playerid][0] = DestroyDynamicObject(cage[playerid][0]);
    cage[playerid][1] = DestroyDynamicObject(cage[playerid][1]);
    cage[playerid][2] = DestroyDynamicObject(cage[playerid][2]);
    cage[playerid][3] = DestroyDynamicObject(cage[playerid][3]);
    caged[playerid] = 0;
}

stock RangeBan(playerid)
{
	new string[64];
    if(!IsPlayerConnected(playerid)) return 0;
    new total[16],ip[16];
    GetPlayerIp(playerid, ip, sizeof(ip));
    new cnt;
    for(new i=0;i<strlen(ip);i++)
    {
        if(ip[i] == '.') cnt++;
        if(cnt == 2)
        {
            i++;
            strdel(ip, i, strlen(ip));
            format(total,sizeof(total),"%s*.*",ip);
        }
    }
    format(string, sizeof(string),"banip %s",total);
    SendRconCommand(string);
    return 1;
}

forward KickPlayerOut(playerid);
public KickPlayerOut(playerid)
{
	Kick(playerid);
	return 1;
}

forward ScriptBan(playerid,adminid,reason[]);
public ScriptBan(playerid,adminid,reason[])
{
	new string[128],file[64];
	new y,m,d,h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	
	new playersip[34];
	GetPlayerIp(playerid,playersip,sizeof(playersip));
	
 	format(file, sizeof(file),"LARP/Users/Bans/%s.ban",playersip);

	dini_Create(file);

	if(adminid != 999)
	{
	    dini_Set(file,"BannedBy",PlayerName(adminid));
	}
	else
	{
	    dini_Set(file,"BannedBy","The Server/Anticheat");
	}
	format(string, sizeof(string),"%d/%d/%d at %d:%d:%d",d,m,y,h,mi,s);
	dini_Set(file,"BanDate",string);
	dini_Set(file,"BanReason",reason);
	dini_Set(file,"BanName",PlayerName(playerid));
	
	format(file, sizeof(file),"LARP/Users/%s.ini",PlayerName(playerid));
	if(dini_Exists(file))
	{
	    dini_IntSet(file,"Banned",1);
	}
	
	Kick(playerid);
	return 1;
}

public SaveVehicleComponents(car)
{
	new slot[14];
	slot[0] = GetVehicleComponentInSlot(car, 0);
	slot[1] = GetVehicleComponentInSlot(car, 1);
	slot[2] = GetVehicleComponentInSlot(car, 2);
	slot[3] = GetVehicleComponentInSlot(car, 3);
	slot[4] = GetVehicleComponentInSlot(car, 4);
	slot[5] = GetVehicleComponentInSlot(car, 5);
	slot[6] = GetVehicleComponentInSlot(car, 6);
	slot[7] = GetVehicleComponentInSlot(car, 7);
	slot[8] = GetVehicleComponentInSlot(car, 8);
	slot[9] = GetVehicleComponentInSlot(car, 9);
	slot[10] = GetVehicleComponentInSlot(car, 10);
	slot[11] = GetVehicleComponentInSlot(car, 11);
	slot[12] = GetVehicleComponentInSlot(car, 12);
	slot[13] = GetVehicleComponentInSlot(car, 13);
	if(slot[0] != 0)
	{
		CarInfo[car][cComponent0] = slot[0];
	}
	if(slot[1] != 0)
	{
		CarInfo[car][cComponent1] = slot[1];
	}
	if(slot[2] != 0)
 	{
  		CarInfo[car][cComponent2] = slot[2];
	}
	if(slot[3] != 0)
 	{
  		CarInfo[car][cComponent3] = slot[3];
	}
	if(slot[4] != 0)
 	{
  		CarInfo[car][cComponent4] = slot[4];
	}
	if(slot[5] != 0)
	{
		CarInfo[car][cComponent5] = slot[5];
	}
	if(slot[6] != 0)
	{
		CarInfo[car][cComponent6] = slot[6];
	}
	if(slot[7] != 0)
 	{
		CarInfo[car][cComponent7] = slot[7];
	}
	if(slot[8] != 0)
	{
		CarInfo[car][cComponent8] = slot[8];
	}
	if(slot[9] != 0)
	{
		CarInfo[car][cComponent9] = slot[9];
	}
	if(slot[10] != 0)
	{
		CarInfo[car][cComponent10] = slot[10];
	}
	if(slot[11] != 0)
	{
		CarInfo[car][cComponent11] = slot[11];
	}
	if(slot[12] != 0)
	{
		CarInfo[car][cComponent12] = slot[12];
	}
	if(slot[13] != 0)
	{
		CarInfo[car][cComponent13] = slot[13];
	}
	OnPropUpdate(4,car);
}

public ClearVehicleComponents(car)
{
	CarInfo[car][cComponent0] = 0;
	CarInfo[car][cComponent1] = 0;
	CarInfo[car][cComponent2] = 0;
	CarInfo[car][cComponent3] = 0;
	CarInfo[car][cComponent4] = 0;
	CarInfo[car][cComponent5] = 0;
	CarInfo[car][cComponent6] = 0;
	CarInfo[car][cComponent7] = 0;
	CarInfo[car][cComponent8] = 0;
	CarInfo[car][cComponent9] = 0;
	CarInfo[car][cComponent10] = 0;
	CarInfo[car][cComponent11] = 0;
	CarInfo[car][cComponent12] = 0;
	CarInfo[car][cComponent13] = 0;
	OnPropUpdate(4,car);
}

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 0)
    {
        SendClientMessage(playerid, COLOR_WHITE, "»Áπ˚ƒ„œÎ±£¥Êƒ„µƒ–ﬁ∏ƒ«Î ‰»Î /savecar");
    }
    if(enterexit == 1)
    {
        SendClientMessage(playerid, COLOR_WHITE, "Do not Change your Paintjob, It will get erased; Use /v paintjob instead!");
    }
    return 1;
}

public SetVehicleModifications(carid)
{
	if(CarInfo[carid][cComponent0] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent0])
	}
	if(CarInfo[carid][cComponent1] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent1])
	}
	if(CarInfo[carid][cComponent2] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent2])
	}
	if(CarInfo[carid][cComponent3] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent3])
	}
	if(CarInfo[carid][cComponent4] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent4])
	}
	if(CarInfo[carid][cComponent5] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent5])
	}
	if(CarInfo[carid][cComponent6] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent6])
	}
	if(CarInfo[carid][cComponent7] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent7])
	}
	if(CarInfo[carid][cComponent8] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent8])
	}
	if(CarInfo[carid][cComponent9] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent9])
	}
	if(CarInfo[carid][cComponent10] >= 0)
	{
  		AddVehicleComponent(carid, CarInfo[carid][cComponent10])
	}
	if(CarInfo[carid][cComponent11] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent11])
	}
	if(CarInfo[carid][cComponent12] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent12])
	}
	if(CarInfo[carid][cComponent13] >= 0)
	{
	    AddVehicleComponent(carid, CarInfo[carid][cComponent13])
	}
 }

public Unfreezeply(playerid)
{
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);
}

public PaySprayTrans()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(IsAtTransfender(i))
		    {
		        SetRealMoney(i, GetPlayerMoney(i));
			}
			else if(IsAtPaySpray(i))
			{
			    SetRealMoney(i, GetPlayerMoney(i));
			}
		}
	}
	return 1;
}

Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ,  Float:ObjX, Float:ObjY, Float:ObjZ,  Float:FrX, Float:FrY, Float:FrZ)
{

	new Float:TGTDistance;

	// get distance from camera to target
	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));

	new Float:tmpX, Float:tmpY, Float:tmpZ;

	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;

	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}

stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
    new Float:cx,Float:cy,Float:cz,Float:fx,Float:fy,Float:fz;
    GetPlayerCameraPos(playerid, cx, cy, cz);
    GetPlayerCameraFrontVector(playerid, fx, fy, fz);
    return (radius >= DistanceCameraTargetToLocation(cx, cy, cz, x, y, z, fx, fy, fz));
}

public ResetUpgradeUse(playerid)
{
	CanChangeName[playerid] = 0;
	CanUseUpgrade[playerid] = 0;
	CanSellHouse[playerid] = 0;
	CanSellBizz[playerid] = 0;
}


public ClockSeconds()
{
	new string[24];
	
	if(SecondsTD != 60)
	{
		SecondsTD ++;
	}
	else
	{
	    SecondsTD = 0;
	    MinutesTD ++;
	}

	if(MinutesTD == 60)
	{
	    MinutesTD = 0;
	    HoursTD ++;
	}
	if(HoursTD > 23)
	{
		HoursTD = 0;
	}
	//-----------------------------------------------
	if(MinutesTD < 10)
	{
		format(string, sizeof(string),":0%d",MinutesTD);
	}
	else
	{
	    format(string, sizeof(string),":%d",MinutesTD);
	}
	TextDrawSetString(Textdraw56, string);
	//-----------------------------------------------
	if(SecondsTD < 10)
	{
		format(string, sizeof(string),":0%d",SecondsTD);
		
	}
	else
	{
	    format(string, sizeof(string),":%d",SecondsTD);
	}
	TextDrawSetString(Textdraw57, string);
	//-----------------------------------------------
	if(HoursTD < 12)
	{
		format(string, sizeof(string),"0%d",HoursTD);

	}
	else
	{
	    format(string, sizeof(string),"%d",HoursTD);
	}
	TextDrawSetString(Textdraw58, string);
	//-----------------------------------------------
}

public CountDown()
{
	CountdownSeconds --;
	if(CountdownSeconds == -1)
	{
	    KillTimer(CountdownTimer);
	    TextDrawHideForAll(Textdraw46);
	    CountdownRunning = 0;
	}
	else
	{
	    if(CountdownSeconds == 0)
	    {
	        TextDrawSetString(Textdraw46, "~p~Countdown: ~y~GO!");
		}
        else if(CountdownSeconds == 1)
	    {
	        TextDrawSetString(Textdraw46, "~p~Countdown: ~g~1!");
		}
		else if(CountdownSeconds == 2)
	    {
	        TextDrawSetString(Textdraw46, "~p~Countdown: ~b~2!");
		}
		else if(CountdownSeconds == 3)
	    {
	        TextDrawSetString(Textdraw46, "~p~Countdown: ~r~3!");
		}
		else
		{
		    new string[24];
		    format(string, sizeof(string),"~p~Countdown: ~w~%d",CountdownSeconds);
		    TextDrawSetString(Textdraw46, string);
		}
	}
	return 1;
}

public IsASalesVehicle(vehicleid)
{
	for(new i = 0; i < sizeof(salescar); i++)
	{
	    if(vehicleid == salescar[i]) return 1;
	}
	return 0;
}

public GetVehiclePrice(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	if(model == 400) return 40000;
	else if(model == 401) return 30000;
	else if(model == 402) return 100000;
	else if(model == 403) return 90000;
	else if(model == 404) return 25000;
	else if(model == 405) return 40000;
	else if(model == 406) return 200000;
	else if(model == 408) return 80000;
	else if(model == 409) return 90000;
	else if(model == 410) return 25000;
	else if(model == 411) return 150000;
	else if(model == 412) return 60000;
	else if(model == 413) return 55000;
	else if(model == 414) return 75000;
	else if(model == 415) return 100000;
	else if(model == 417) return 250000;
	else if(model == 418) return 20000;
	else if(model == 419) return 30000;
	else if(model == 421) return 75000;
	else if(model == 422) return 60000;
	else if(model == 423) return 100000;
	else if(model == 424) return 85000;
	else if(model == 426) return 80000;
	else if(model == 428) return 40000;
	else if(model == 429) return 125000;
	else if(model == 434) return 150000;
	else if(model == 436) return 45000;
	else if(model == 439) return 55000;
	else if(model == 443) return 100000;
	else if(model == 444) return 175000;
	else if(model == 445) return 75000;
	else if(model == 446) return 175000;
	else if(model == 451) return 150000;
	else if(model == 452) return 175000;
	else if(model == 453) return 125000;
	else if(model == 454) return 130000;
	else if(model == 455) return 80000;
	else if(model == 456) return 70000;
	else if(model == 457) return 85000;
	else if(model == 458) return 50000;
	else if(model == 459) return 60000;
	else if(model == 460) return 215000;
	else if(model == 461) return 40000;
	else if(model == 462) return 20000;
	else if(model == 463) return 35000;
	else if(model == 466) return 70000;
	else if(model == 467) return 70000;
	else if(model == 468) return 35000;
	else if(model == 469) return 175000;
	else if(model == 471) return 15000;
	else if(model == 473) return 125000;
	else if(model == 474) return 65000;
	else if(model == 475) return 65000;
	else if(model == 477) return 100000;
	else if(model == 478) return 40000;
	else if(model == 479) return 75000;
	else if(model == 480) return 150000;
	else if(model == 481) return 5000;
	else if(model == 482) return 65000;
	else if(model == 483) return 70000;
	else if(model == 484) return 125000;
	else if(model == 485) return 30000;
	else if(model == 486) return 150000;
	else if(model == 487) return 200000;
	else if(model == 489) return 75000;
	else if(model == 491) return 60000;
	else if(model == 492) return 70000;
	else if(model == 493) return 200000;
	else if(model == 494) return 100000;
	else if(model == 495) return 90000;
	else if(model == 496) return 60000;
	else if(model == 498) return 80000;
	else if(model == 499) return 80000;
	else if(model == 500) return 70000;
	else if(model == 502) return 100000;
	else if(model == 503) return 100000;
	else if(model == 504) return 100000;
	else if(model == 505) return 75000;
	else if(model == 506) return 115000;
	else if(model == 507) return 75000;
	else if(model == 508) return 50000;
	else if(model == 509) return 2500;
	else if(model == 510) return 10000;
	else if(model == 511) return 215000;
	else if(model == 512) return 200000;
	else if(model == 513) return 220000;
	else if(model == 514) return 90000;
	else if(model == 515) return 90000;
	else if(model == 516) return 67500;
	else if(model == 517) return 70000;
	else if(model == 518) return 65000;
	else if(model == 519) return 300000;
	else if(model == 521) return 35000;
	else if(model == 522) return 75000;
	else if(model == 524) return 80000;
	else if(model == 526) return 65000;
	else if(model == 527) return 65000;
	else if(model == 529) return 70000;
	else if(model == 530) return 90000;
	else if(model == 531) return 40000;
	else if(model == 532) return 200000;
	else if(model == 533) return 70000;
	else if(model == 534) return 76000;
	else if(model == 535) return 80000;
	else if(model == 536) return 75000;
	else if(model == 539) return 150000;
	else if(model == 540) return 70000;
	else if(model == 541) return 150000;
	else if(model == 542) return 80000;
	else if(model == 543) return 50000;
	else if(model == 545) return 125000;
	else if(model == 546) return 70000;
	else if(model == 547) return 70000;
	else if(model == 549) return 60000;
	else if(model == 550) return 90000;
	else if(model == 551) return 80000;
	else if(model == 552) return 30000;
	else if(model == 553) return 250000;
	else if(model == 554) return 50000;
	else if(model == 555) return 50000;
	else if(model == 556) return 200000;
	else if(model == 557) return 200000;
	else if(model == 558) return 70000;
	else if(model == 559) return 70000;
	else if(model == 560) return 115000;
	else if(model == 561) return 50000;
	else if(model == 562) return 95000;
	else if(model == 563) return 200000;
	else if(model == 565) return 90000;
	else if(model == 566) return 70000;
	else if(model == 567) return 75000;
	else if(model == 568) return 50000;
	else if(model == 571) return 85000;
	else if(model == 572) return 15000;
	else if(model == 573) return 90000;
	else if(model == 575) return 80000;
	else if(model == 576) return 65000;
	else if(model == 578) return 90000;
	else if(model == 579) return 90000;
	else if(model == 580) return 75000;
	else if(model == 581) return 30000;
	else if(model == 583) return 25000;
	else if(model == 585) return 35000;
	else if(model == 586) return 20000;
	else if(model == 587) return 90000;
	else if(model == 588) return 90000;
	else if(model == 589) return 90000;
	else if(model == 592) return 350000;
	else if(model == 593) return 225000;
	else if(model == 600) return 50000;
    else if(model == 602) return 75000;
	else if(model == 603) return 100000;
	else if(model == 609) return 85000;
	else return 0;
}

public FinishVotation()
{
    new giveplayer[MAX_PLAYER_NAME];
	GetPlayerName(beingvoted,giveplayer,sizeof(giveplayer));
	new string[128];
	new y, m, d;
	new h,mi,s;
	getdate(y,m,d);
	gettime(h,mi,s);
	if(voteyes > voteno)
	{
		if(votetype == 1)
		{
		    votation = 0;
			format(string,sizeof(string),"[Õ∂∆±œµÕ≥]: Yes (%d), No (%d). ªÒµ√¡À◊„πªµƒÕ¨“‚∆± ˝∂‘ÕÊº“ %s (%d)±ªÃﬂ≥ˆ∑˛ŒÒ∆˜!",voteyes,voteno,giveplayer,beingvoted);
			SendClientMessageToAll(TEAM_GROVE_COLOR,string);
			format(string,sizeof(string),"* ƒ„“—±ªÃﬂ≥ˆ∑˛ŒÒ∆˜,“ÚŒ™Õ∂∆±Ω·π˚: (Yes: %d, No: %d)",voteyes,voteno);
			SendClientMessage(beingvoted,COLOR_GREY,string);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been kicked by votation",d,m,y,h,mi,s,giveplayer);
			KickLog(string);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Kicked by Votation",d,m,y,h,mi,s);
			AddPunishment(beingvoted, string);
			Kick(beingvoted);
		}
		else
		{
		    votation = 0;
			format(string,sizeof(string),"[Õ∂∆±œµÕ≥]: Yes (%d), No (%d). ªÒµ√¡À◊„πªµƒÕ¨“‚∆± ˝∂‘ÕÊº“ %s (%d)Ω¯––∑‚∫≈¥¶¿Ì!",voteyes,voteno,giveplayer,beingvoted);
			SendClientMessageToAll(TEAM_GROVE_COLOR,string);
			format(string,sizeof(string),"* ƒ„“—±ª∑‚∫≈,“ÚŒ™Õ∂∆±Ω·π˚: (Yes: %d, No: %d)",voteyes,voteno);
			SendClientMessage(beingvoted,COLOR_GREY,string);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] %s Has been banned by votation",d,m,y,h,mi,s,giveplayer);
			BanLog(string);
			format(string,sizeof(string), "(%d/%d/%d)[%d:%d:%d] Banned by Votation",d,m,y,h,mi,s);
			AddPunishment(beingvoted, string);
			ScriptBan(beingvoted,999,"Vote Ban");
		}
	}
	else
	{
	    votation = 0;
	    format(string,sizeof(string),"[Õ∂∆±œµÕ≥]: Yes (%d), No (%d). √ª”–ªÒµ√◊„πªµƒ∆± ˝,≤ªƒ‹∂‘ %s (%d)Ω¯–– ∑‚∫≈/Ãﬂ≥ˆ!!",voteyes,voteno,giveplayer,beingvoted);
	    SendClientMessageToAll(TEAM_GROVE_COLOR,string);
	}
	return 1;
}
 
public ResetVotation()
{
    voteno = 0;
	voteyes = 0;
	votationrecently = 0;
	votetype = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        votedrecently[i] = 0;
		}
	}
}

public OnHousePickupUpdate(houseid)
{
    if(HouseInfo[houseid][hOwned] == 0)
	{
       	DestroyDynamicPickup(HousePickup[houseid]);
		HousePickup[houseid] = CreateDynamicPickup(1273, 1, HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez]);
	}
	if(HouseInfo[houseid][hOwned] == 1)
	{
	    DestroyDynamicPickup(HousePickup[houseid]);
		HousePickup[houseid] = CreateDynamicPickup(1272, 1, HouseInfo[houseid][hEntrancex], HouseInfo[houseid][hEntrancey], HouseInfo[houseid][hEntrancez]);
	}
}

public HideCalendar(playerid)
{
    TextDrawHideForPlayer(playerid, CTextdraw0);
	TextDrawHideForPlayer(playerid, CTextdraw1);
	TextDrawHideForPlayer(playerid, CTextdraw2);
	TextDrawHideForPlayer(playerid, CTextdraw3);
	TextDrawHideForPlayer(playerid, CTextdraw4);
	TextDrawHideForPlayer(playerid, CTextdraw5);
	TextDrawHideForPlayer(playerid, CTextdraw6);
	TextDrawHideForPlayer(playerid, CTextdraw7);
	TextDrawHideForPlayer(playerid, CTextdraw8);
	TextDrawHideForPlayer(playerid, CTextdraw9);
	TextDrawHideForPlayer(playerid, CTextdraw10);
	TextDrawHideForPlayer(playerid, CTextdraw11);
	TextDrawHideForPlayer(playerid, CTextdraw12);
	TextDrawHideForPlayer(playerid, CTextdraw13);
	TextDrawHideForPlayer(playerid, CTextdraw14);
	TextDrawHideForPlayer(playerid, CTextdraw15);
	TextDrawHideForPlayer(playerid, CTextdraw16);
	TextDrawHideForPlayer(playerid, CTextdraw17);
	TextDrawHideForPlayer(playerid, CTextdraw18);
	TextDrawHideForPlayer(playerid, CTextdraw19);
	TextDrawHideForPlayer(playerid, CTextdraw20);
	TextDrawHideForPlayer(playerid, CTextdraw21);
	TextDrawHideForPlayer(playerid, CTextdraw22);
	TextDrawHideForPlayer(playerid, CTextdraw23);
	TextDrawHideForPlayer(playerid, CTextdraw24);
	TextDrawHideForPlayer(playerid, CTextdraw25);
	TextDrawHideForPlayer(playerid, CTextdraw26);
	TextDrawHideForPlayer(playerid, CTextdraw27);
	TextDrawHideForPlayer(playerid, CTextdraw28);
	TextDrawHideForPlayer(playerid, CTextdraw29);
	TextDrawHideForPlayer(playerid, CTextdraw30);
	TextDrawHideForPlayer(playerid, CTextdraw31);
	TextDrawHideForPlayer(playerid, CTextdraw32);
	TextDrawHideForPlayer(playerid, CTextdraw33);
	TextDrawHideForPlayer(playerid, CTextdraw34);
	TextDrawHideForPlayer(playerid, CTextdraw35);
	TextDrawHideForPlayer(playerid, CTextdraw36);
	TextDrawHideForPlayer(playerid, CTextdraw37);
	TextDrawHideForPlayer(playerid, CTextdraw38);
	TextDrawHideForPlayer(playerid, CTextdraw39);
	TextDrawHideForPlayer(playerid, CTextdraw40);
	TextDrawHideForPlayer(playerid, CTextdraw41);
	TextDrawHideForPlayer(playerid, CTextdraw42);
	TextDrawHideForPlayer(playerid, CTextdraw43);
	TextDrawHideForPlayer(playerid, CTextdraw44);
	TextDrawHideForPlayer(playerid, CTextdraw45);
	TextDrawHideForPlayer(playerid, CTextdraw46);
	TextDrawHideForPlayer(playerid, CTextdraw47);
	TextDrawHideForPlayer(playerid, CTextdraw48);
	TextDrawHideForPlayer(playerid, CTextdraw49);
	TextDrawHideForPlayer(playerid, CTextdraw50);
	TextDrawHideForPlayer(playerid, CTextdraw51);
	TextDrawHideForPlayer(playerid, CTextdraw52);
	TextDrawHideForPlayer(playerid, CTextdraw53);
	TextDrawHideForPlayer(playerid, CTextdraw54);
	TextDrawHideForPlayer(playerid, CTextdraw55);
}

public ShowCalendar(playerid)
{
    new y, m, d;
	new str[50];
	getdate(y, m, d);
	
    if(d == 1) TextDrawColor(CTextdraw4, 0xFF0000FF);
	else if(d == 2) TextDrawColor(CTextdraw5, 0xFF0000FF);
	else if(d == 3) TextDrawColor(CTextdraw6, 0xFF0000FF);
	else if(d == 4) TextDrawColor(CTextdraw7, 0xFF0000FF);
	else if(d == 5) TextDrawColor(CTextdraw8, 0xFF0000FF);
	else if(d == 6) TextDrawColor(CTextdraw9, 0xFF0000FF);
	else if(d == 7) TextDrawColor(CTextdraw10, 0xFF0000FF);
	else if(d == 8) TextDrawColor(CTextdraw11, 0xFF0000FF);
	else if(d == 9) TextDrawColor(CTextdraw12, 0xFF0000FF);
	else if(d == 10) TextDrawColor(CTextdraw13, 0xFF0000FF);
	else if(d == 11) TextDrawColor(CTextdraw14, 0xFF0000FF);
	else if(d == 12) TextDrawColor(CTextdraw15, 0xFF0000FF);
	else if(d == 13) TextDrawColor(CTextdraw16, 0xFF0000FF);
	else if(d == 14) TextDrawColor(CTextdraw17, 0xFF0000FF);
 	else if(d == 15) TextDrawColor(CTextdraw18, 0xFF0000FF);
 	else if(d == 16) TextDrawColor(CTextdraw19, 0xFF0000FF);
	else if(d == 17) TextDrawColor(CTextdraw20, 0xFF0000FF);
	else if(d == 18) TextDrawColor(CTextdraw21, 0xFF0000FF);
	else if(d == 19) TextDrawColor(CTextdraw22, 0xFF0000FF);
	else if(d == 20) TextDrawColor(CTextdraw23, 0xFF0000FF);
	else if(d == 21) TextDrawColor(CTextdraw24, 0xFF0000FF);
	else if(d == 22) TextDrawColor(CTextdraw25, 0xFF0000FF);
	else if(d == 23) TextDrawColor(CTextdraw26, 0xFF0000FF);
	else if(d == 24) TextDrawColor(CTextdraw27, 0xFF0000FF);
	else if(d == 25) TextDrawColor(CTextdraw28, 0xFF0000FF);
	else if(d == 26) TextDrawColor(CTextdraw29, 0xFF0000FF);
	else if(d == 27) TextDrawColor(CTextdraw30, 0xFF0000FF);
	else if(d == 28) TextDrawColor(CTextdraw31, 0xFF0000FF);
	else if(d == 29) TextDrawColor(CTextdraw32, 0xFF0000FF);
	else if(d == 30) TextDrawColor(CTextdraw33, 0xFF0000FF);
	else if(d == 31) TextDrawColor(CTextdraw34, 0xFF0000FF);
	
	if(m == 1) TextDrawSetString(CTextdraw2, "January");
	else if(m == 2) TextDrawSetString(CTextdraw2, "February") && TextDrawHideForPlayer(playerid, Textdraw33) && TextDrawHideForPlayer(playerid, Textdraw34);
	else if(m == 3) TextDrawSetString(CTextdraw2, "March");
	else if(m == 4) TextDrawSetString(CTextdraw2, "April") && TextDrawHideForPlayer(playerid, Textdraw34);
	else if(m == 5) TextDrawSetString(CTextdraw2, "May");
	else if(m == 6) TextDrawSetString(CTextdraw2, "June") && TextDrawHideForPlayer(playerid, Textdraw34);
	else if(m == 7) TextDrawSetString(CTextdraw2, "July");
	else if(m == 8) TextDrawSetString(CTextdraw2, "August");
	else if(m == 9) TextDrawSetString(CTextdraw2, "September") && TextDrawHideForPlayer(playerid, Textdraw34);
	else if(m == 10) TextDrawSetString(CTextdraw2, "October");
	else if(m == 11) TextDrawSetString(CTextdraw2, "November") && TextDrawHideForPlayer(playerid, Textdraw34);
	else if(m == 12) TextDrawSetString(CTextdraw2, "December");
	
	format(str, sizeof(str), "%d/%d/%d", d, m, y);
	TextDrawSetString(CTextdraw36, str);
	
	TextDrawShowForPlayer(playerid, CTextdraw0);
	TextDrawShowForPlayer(playerid, CTextdraw1);
	TextDrawShowForPlayer(playerid, CTextdraw2);
	TextDrawShowForPlayer(playerid, CTextdraw3);
	TextDrawShowForPlayer(playerid, CTextdraw4);
	TextDrawShowForPlayer(playerid, CTextdraw5);
	TextDrawShowForPlayer(playerid, CTextdraw6);
	TextDrawShowForPlayer(playerid, CTextdraw7);
	TextDrawShowForPlayer(playerid, CTextdraw8);
	TextDrawShowForPlayer(playerid, CTextdraw9);
	TextDrawShowForPlayer(playerid, CTextdraw10);
	TextDrawShowForPlayer(playerid, CTextdraw11);
	TextDrawShowForPlayer(playerid, CTextdraw12);
	TextDrawShowForPlayer(playerid, CTextdraw13);
	TextDrawShowForPlayer(playerid, CTextdraw14);
	TextDrawShowForPlayer(playerid, CTextdraw15);
	TextDrawShowForPlayer(playerid, CTextdraw16);
	TextDrawShowForPlayer(playerid, CTextdraw17);
	TextDrawShowForPlayer(playerid, CTextdraw18);
	TextDrawShowForPlayer(playerid, CTextdraw19);
	TextDrawShowForPlayer(playerid, CTextdraw20);
	TextDrawShowForPlayer(playerid, CTextdraw21);
	TextDrawShowForPlayer(playerid, CTextdraw22);
	TextDrawShowForPlayer(playerid, CTextdraw23);
	TextDrawShowForPlayer(playerid, CTextdraw24);
	TextDrawShowForPlayer(playerid, CTextdraw25);
	TextDrawShowForPlayer(playerid, CTextdraw26);
	TextDrawShowForPlayer(playerid, CTextdraw27);
	TextDrawShowForPlayer(playerid, CTextdraw28);
	TextDrawShowForPlayer(playerid, CTextdraw29);
	TextDrawShowForPlayer(playerid, CTextdraw30);
	TextDrawShowForPlayer(playerid, CTextdraw31);
	TextDrawShowForPlayer(playerid, CTextdraw32);
	TextDrawShowForPlayer(playerid, CTextdraw33);
	TextDrawShowForPlayer(playerid, CTextdraw34);
	TextDrawShowForPlayer(playerid, CTextdraw35);
	TextDrawShowForPlayer(playerid, CTextdraw36);
	TextDrawShowForPlayer(playerid, CTextdraw37);
	TextDrawShowForPlayer(playerid, CTextdraw38);
	TextDrawShowForPlayer(playerid, CTextdraw39);
	TextDrawShowForPlayer(playerid, CTextdraw40);
	TextDrawShowForPlayer(playerid, CTextdraw41);
	TextDrawShowForPlayer(playerid, CTextdraw42);
	TextDrawShowForPlayer(playerid, CTextdraw43);
	TextDrawShowForPlayer(playerid, CTextdraw44);
	TextDrawShowForPlayer(playerid, CTextdraw45);
	TextDrawShowForPlayer(playerid, CTextdraw46);
	TextDrawShowForPlayer(playerid, CTextdraw47);
	TextDrawShowForPlayer(playerid, CTextdraw48);
	TextDrawShowForPlayer(playerid, CTextdraw49);
	TextDrawShowForPlayer(playerid, CTextdraw50);
	TextDrawShowForPlayer(playerid, CTextdraw51);
	
	//---------------------- EVENTS -------------------------
	TextDrawSetString(CTextdraw52,event1);
	TextDrawSetString(CTextdraw53,event2);
	TextDrawSetString(CTextdraw54,event3);
	TextDrawSetString(CTextdraw55,event4);
	
	TextDrawShowForPlayer(playerid, CTextdraw52);
	TextDrawShowForPlayer(playerid, CTextdraw53);
	TextDrawShowForPlayer(playerid, CTextdraw54);
	TextDrawShowForPlayer(playerid, CTextdraw55);
}

public EvaluateHouse(houseid)
{
	new zone[34];
	GetHouse2DZone(houseid, zone, sizeof(zone));
	
	if(!strcmp(zone,"Commerce",true))
	{
	    HouseInfo[houseid][hValue] += 17500;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Conference Center",true))
	{
	    HouseInfo[houseid][hValue] += 22500;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Downtown Los Santos",true))
	{
	    HouseInfo[houseid][hValue] += 25000;
	    HouseInfo[houseid][hLevel] += 2;
	}
	if(!strcmp(zone, "East Beach",true))
	{
	    HouseInfo[houseid][hValue] += 6500;
	}
	if(!strcmp(zone, "East Los Santos",true))
	{
	    HouseInfo[houseid][hValue] += 7000;
	}
	if(!strcmp(zone, "El Corona",true))
	{
	    HouseInfo[houseid][hValue] += 45000;
	}
	if(!strcmp(zone, "Ganton",true))
	{
	    HouseInfo[houseid][hValue] += 3500;
	}
	if(!strcmp(zone, "Glen Park",true))
	{
	    HouseInfo[houseid][hValue] += 10000;
	}
	if(!strcmp(zone, "Jefferson",true))
	{
	    HouseInfo[houseid][hValue] += 13000;
	}
	if(!strcmp(zone, "Las Colinas",true))
	{
	    HouseInfo[houseid][hValue] += 1250;
	}
	if(!strcmp(zone, "Marina",true))
	{
	    HouseInfo[houseid][hValue] += 35000;
	    HouseInfo[houseid][hLevel] += 2;
	}
	if(!strcmp(zone, "Market",true))
	{
	    HouseInfo[houseid][hValue] += 20000;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Mulholland",true))
	{
	    HouseInfo[houseid][hValue] += 85000;
	    HouseInfo[houseid][hLevel] += 5;
	}
	if(!strcmp(zone, "Mulholland Section",true))
	{
	    HouseInfo[houseid][hValue] += 65000;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Pershing Square",true))
	{
	    HouseInfo[houseid][hValue] += 55000;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Richman",true))
	{
	    HouseInfo[houseid][hValue] += 90000;
	    HouseInfo[houseid][hLevel] += 6;
	}
	if(!strcmp(zone, "Rodeo",true))
	{
	    HouseInfo[houseid][hValue] += 65000;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Santa Maria Beach",true))
	{
	    HouseInfo[houseid][hValue] += 45000;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Temple",true))
	{
	    HouseInfo[houseid][hValue] += 32500;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Verona Beach",true))
	{
	    HouseInfo[houseid][hValue] += 25000;
	    HouseInfo[houseid][hLevel] += 2;
	}
	if(!strcmp(zone, "Vinewood",true))
	{
	    HouseInfo[houseid][hValue] += 45000;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Willowfield",true))
	{
	    HouseInfo[houseid][hValue] += 17500;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Blueberry",true))
	{
	    HouseInfo[houseid][hValue] += 7500;
	}
	if(!strcmp(zone, "Dillimore",true))
	{
	    HouseInfo[houseid][hValue] += 14500;
	    HouseInfo[houseid][hLevel] += 1;
	}
	if(!strcmp(zone, "Montgomery",true))
	{
	    HouseInfo[houseid][hValue] += 5000;
	}
	if(!strcmp(zone, "Palomino Creek",true))
	{
	    HouseInfo[houseid][hValue] += 25000;
	    HouseInfo[houseid][hLevel] += 2;
	}
}

public EvaluateBizz(houseid)
{
	new zone[34];
	GetHouse2DZone(houseid, zone, sizeof(zone));

	if(!strcmp(zone,"Commerce",true))
	{
	    HouseInfo[houseid][hValue] += 30000;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Conference Center",true))
	{
	    HouseInfo[houseid][hValue] += 52500;
	    HouseInfo[houseid][hLevel] += 2;
	}
	if(!strcmp(zone, "Downtown Los Santos",true))
	{
	    HouseInfo[houseid][hValue] += 55000;
	    HouseInfo[houseid][hLevel] += 4;
	}
	if(!strcmp(zone, "East Beach",true))
	{
	    HouseInfo[houseid][hValue] += 17000;
	}
	if(!strcmp(zone, "East Los Santos",true))
	{
	    HouseInfo[houseid][hValue] += 17000;
	}
	if(!strcmp(zone, "El Corona",true))
	{
	    HouseInfo[houseid][hValue] += 65000;
	}
	if(!strcmp(zone, "Ganton",true))
	{
	    HouseInfo[houseid][hValue] += 13500;
	}
	if(!strcmp(zone, "Glen Park",true))
	{
	    HouseInfo[houseid][hValue] += 30000;
	}
	if(!strcmp(zone, "Jefferson",true))
	{
	    HouseInfo[houseid][hValue] += 23000;
	}
	if(!strcmp(zone, "Las Colinas",true))
	{
	    HouseInfo[houseid][hValue] += 11250;
	}
	if(!strcmp(zone, "Marina",true))
	{
	    HouseInfo[houseid][hValue] += 55000;
	    HouseInfo[houseid][hLevel] += 4;
	}
	if(!strcmp(zone, "Market",true))
	{
	    HouseInfo[houseid][hValue] += 40000;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Mulholland",true))
	{
	    HouseInfo[houseid][hValue] += 145000;
	    HouseInfo[houseid][hLevel] += 9;
	}
	if(!strcmp(zone, "Mulholland Section",true))
	{
	    HouseInfo[houseid][hValue] += 95000;
	    HouseInfo[houseid][hLevel] += 4;
	}
	if(!strcmp(zone, "Pershing Square",true))
	{
	    HouseInfo[houseid][hValue] += 95000;
	    HouseInfo[houseid][hLevel] += 4;
	}
	if(!strcmp(zone, "Richman",true))
	{
	    HouseInfo[houseid][hValue] += 157500;
	    HouseInfo[houseid][hLevel] += 12;
	}
	if(!strcmp(zone, "Rodeo",true))
	{
	    HouseInfo[houseid][hValue] += 95000;
	    HouseInfo[houseid][hLevel] += 6;
	}
	if(!strcmp(zone, "Santa Maria Beach",true))
	{
	    HouseInfo[houseid][hValue] += 85000;
	    HouseInfo[houseid][hLevel] += 6;
	}
	if(!strcmp(zone, "Temple",true))
	{
	    HouseInfo[houseid][hValue] += 62500;
	    HouseInfo[houseid][hLevel] += 3;
	}
	if(!strcmp(zone, "Verona Beach",true))
	{
	    HouseInfo[houseid][hValue] += 50000;
	    HouseInfo[houseid][hLevel] += 4;
	}
	if(!strcmp(zone, "Vinewood",true))
	{
	    HouseInfo[houseid][hValue] += 75000;
	    HouseInfo[houseid][hLevel] += 6;
	}
	if(!strcmp(zone, "Willowfield",true))
	{
	    HouseInfo[houseid][hValue] += 37500;
	    HouseInfo[houseid][hLevel] += 2;
	}
	if(!strcmp(zone, "Blueberry",true))
	{
	    HouseInfo[houseid][hValue] += 11500;
	}
	if(!strcmp(zone, "Dillimore",true))
	{
	    HouseInfo[houseid][hValue] += 34500;
	    HouseInfo[houseid][hLevel] += 2;
	}
	if(!strcmp(zone, "Montgomery",true))
	{
	    HouseInfo[houseid][hValue] += 10000;
	}
	if(!strcmp(zone, "Palomino Creek",true))
	{
	    HouseInfo[houseid][hValue] += 50000;
	    HouseInfo[houseid][hLevel] += 4;
	}
}

stock GetVehicleName(vehicleid, model[], len)
{
	new checking = GetVehicleModel(vehicleid);
	if(checking == 400) return format(model, len, "Landstalker", 0);
	else if(checking == 401) return format(model, len, "Bravura", 0);
	else if(checking == 402) return format(model, len, "Buffalo", 0);
	else if(checking == 403) return format(model, len, "Linerunner", 0);
	else if(checking == 404) return format(model, len, "Perenail", 0);
	else if(checking == 405) return format(model, len, "Sentinel", 0);
	else if(checking == 406) return format(model, len, "Dumper", 0);
	else if(checking == 407) return format(model, len, "Firetruck", 0);
	else if(checking == 408) return format(model, len, "Trashmaster", 0);
	else if(checking == 409) return format(model, len, "Stretch", 0);
	else if(checking == 410) return format(model, len, "Manana", 0);
	else if(checking == 411) return format(model, len, "Infernus", 0);
	else if(checking == 412) return format(model, len, "Vodooo", 0);
	else if(checking == 413) return format(model, len, "Pony", 0);
	else if(checking == 414) return format(model, len, "Mule", 0);
	else if(checking == 415) return format(model, len, "Cheetah", 0);
	else if(checking == 416) return format(model, len, "Ambulance", 0);
	else if(checking == 417) return format(model, len, "Leviathan", 0);
	else if(checking == 418) return format(model, len, "Moonbeam", 0);
	else if(checking == 419) return format(model, len, "Esperanto", 0);
	else if(checking == 420) return format(model, len, "Taxi", 0);
	else if(checking == 421) return format(model, len, "Washington", 0);
	else if(checking == 422) return format(model, len, "Bobcat", 0);
	else if(checking == 423) return format(model, len, "Mr Whoopee", 0);
	else if(checking == 424) return format(model, len, "BF Injection", 0);
	else if(checking == 425) return format(model, len, "Hunter", 0);
	else if(checking == 426) return format(model, len, "Premier", 0);
	else if(checking == 427) return format(model, len, "S.W.A.T Truck", 0);
	else if(checking == 428) return format(model, len, "Securicar", 0);
	else if(checking == 429) return format(model, len, "Banshee", 0);
	else if(checking == 430) return format(model, len, "Predator", 0);
	else if(checking == 431) return format(model, len, "Bus", 0);
	else if(checking == 432) return format(model, len, "Rhino", 0);
	else if(checking == 433) return format(model, len, "Barracks", 0);
	else if(checking == 434) return format(model, len, "Hotknife", 0);
	else if(checking == 435) return format(model, len, "Trailer", 0);
	else if(checking == 436) return format(model, len, "Previon", 0);
	else if(checking == 437) return format(model, len, "Coach", 0);
	else if(checking == 438) return format(model, len, "Cabbie", 0);
	else if(checking == 439) return format(model, len, "Stallion", 0);
	else if(checking == 440) return format(model, len, "Rumpo", 0);
	else if(checking == 441) return format(model, len, "RC Bandit", 0);
	else if(checking == 442) return format(model, len, "Romero", 0);
	else if(checking == 443) return format(model, len, "Packer", 0);
	else if(checking == 444) return format(model, len, "Monster", 0);
	else if(checking == 445) return format(model, len, "Admiral", 0);
	else if(checking == 446) return format(model, len, "Squalo", 0);
	else if(checking == 447) return format(model, len, "Seasparrow", 0);
	else if(checking == 448) return format(model, len, "Pizza Boy", 0);
	else if(checking == 449) return format(model, len, "Tram", 0);
	else if(checking == 450) return format(model, len, "Trailer 2", 0);
	else if(checking == 451) return format(model, len, "Turismo", 0);
	else if(checking == 452) return format(model, len, "Speeder", 0);
	else if(checking == 453) return format(model, len, "Refeer", 0);
	else if(checking == 454) return format(model, len, "Tropic", 0);
	else if(checking == 455) return format(model, len, "Flatbed", 0);
	else if(checking == 456) return format(model, len, "Yankee", 0);
	else if(checking == 457) return format(model, len, "Caddy", 0);
	else if(checking == 458) return format(model, len, "Solair", 0);
	else if(checking == 459) return format(model, len, "Top Fun", 0);
	else if(checking == 460) return format(model, len, "Skimmer", 0);
	else if(checking == 461) return format(model, len, "PCJ-600", 0);
	else if(checking == 462) return format(model, len, "Faggio", 0);
	else if(checking == 463) return format(model, len, "Freeway", 0);
	else if(checking == 464) return format(model, len, "RC Baron", 0);
	else if(checking == 465) return format(model, len, "RC Raider", 0);
	else if(checking == 466) return format(model, len, "Glendade", 0);
	else if(checking == 467) return format(model, len, "Oceanic", 0);
	else if(checking == 468) return format(model, len, "Sanchez", 0);
	else if(checking == 469) return format(model, len, "Sparrow", 0);
	else if(checking == 470) return format(model, len, "Patriot", 0);
	else if(checking == 471) return format(model, len, "Quad", 0);
	else if(checking == 472) return format(model, len, "Coastguard", 0);
	else if(checking == 473) return format(model, len, "Dinghy", 0);
	else if(checking == 474) return format(model, len, "Hermes", 0);
	else if(checking == 475) return format(model, len, "Sabre", 0);
	else if(checking == 476) return format(model, len, "Rustler", 0);
	else if(checking == 477) return format(model, len, "ZR-350", 0);
	else if(checking == 478) return format(model, len, "Walton", 0);
	else if(checking == 479) return format(model, len, "Regina", 0);
	else if(checking == 480) return format(model, len, "Comet", 0);
	else if(checking == 481) return format(model, len, "BMX", 0);
	else if(checking == 482) return format(model, len, "Burrito", 0);
	else if(checking == 483) return format(model, len, "Camper", 0);
	else if(checking == 484) return format(model, len, "Marquis", 0);
	else if(checking == 485) return format(model, len, "Baggage", 0);
	else if(checking == 486) return format(model, len, "Dozer", 0);
	else if(checking == 487) return format(model, len, "Maverick", 0);
	else if(checking == 488) return format(model, len, "News Maverick", 0);
	else if(checking == 489) return format(model, len, "Rancher", 0);
	else if(checking == 490) return format(model, len, "Federal Rancher", 0);
	else if(checking == 491) return format(model, len, "Virgo", 0);
	else if(checking == 492) return format(model, len, "Greenwood", 0);
	else if(checking == 493) return format(model, len, "Jetmax", 0);
	else if(checking == 494) return format(model, len, "Hotring", 0);
	else if(checking == 495) return format(model, len, "Sandking", 0);
	else if(checking == 496) return format(model, len, "Blista Compact", 0);
	else if(checking == 497) return format(model, len, "Police Maverick", 0);
	else if(checking == 498) return format(model, len, "Boxville", 0);
	else if(checking == 499) return format(model, len, "Benson", 0);
	else if(checking == 500) return format(model, len, "Mesa", 0);
	else if(checking == 501) return format(model, len, "RC Goblin", 0);
	else if(checking == 502) return format(model, len, "Hotring A", 0);
	else if(checking == 503) return format(model, len, "Hotring B", 0);
	else if(checking == 504) return format(model, len, "Blooding Banger", 0);
	else if(checking == 505) return format(model, len, "Rancher", 0);
	else if(checking == 506) return format(model, len, "Super GT", 0);
	else if(checking == 507) return format(model, len, "Elegant", 0);
	else if(checking == 508) return format(model, len, "Journey", 0);
	else if(checking == 509) return format(model, len, "Bike", 0);
	else if(checking == 510) return format(model, len, "Mountain Bike", 0);
	else if(checking == 511) return format(model, len, "Beagle", 0);
	else if(checking == 512) return format(model, len, "Cropduster", 0);
	else if(checking == 513) return format(model, len, "Stuntplane", 0);
	else if(checking == 514) return format(model, len, "Petrol", 0);
	else if(checking == 515) return format(model, len, "Roadtrain", 0);
	else if(checking == 516) return format(model, len, "Nebula", 0);
	else if(checking == 517) return format(model, len, "Majestic", 0);
	else if(checking == 518) return format(model, len, "Buccaneer", 0);
	else if(checking == 519) return format(model, len, "Shamal", 0);
	else if(checking == 520) return format(model, len, "Hydra", 0);
	else if(checking == 521) return format(model, len, "FCR-300", 0);
	else if(checking == 522) return format(model, len, "NRG-500", 0);
	else if(checking == 523) return format(model, len, "HPV-1000", 0);
	else if(checking == 524) return format(model, len, "Cement Truck", 0);
	else if(checking == 525) return format(model, len, "Towtruck", 0);
	else if(checking == 526) return format(model, len, "Fortune", 0);
	else if(checking == 527) return format(model, len, "Cadrona", 0);
	else if(checking == 528) return format(model, len, "Federal Truck", 0);
	else if(checking == 529) return format(model, len, "Williard", 0);
	else if(checking == 530) return format(model, len, "Fork Lift", 0);
	else if(checking == 531) return format(model, len, "Tractor", 0);
	else if(checking == 532) return format(model, len, "Combine", 0);
	else if(checking == 533) return format(model, len, "Feltzer", 0);
	else if(checking == 534) return format(model, len, "Remington", 0);
	else if(checking == 535) return format(model, len, "Slamvan", 0);
	else if(checking == 536) return format(model, len, "Blade", 0);
	else if(checking == 537) return format(model, len, "Freight", 0);
	else if(checking == 538) return format(model, len, "Streak", 0);
	else if(checking == 539) return format(model, len, "Vortex", 0);
	else if(checking == 540) return format(model, len, "Vincent", 0);
	else if(checking == 541) return format(model, len, "Bullet", 0);
	else if(checking == 542) return format(model, len, "Clover", 0);
	else if(checking == 543) return format(model, len, "Sadler", 0);
	else if(checking == 544) return format(model, len, "Stairs Firetruck", 0);
	else if(checking == 545) return format(model, len, "Hustler", 0);
	else if(checking == 546) return format(model, len, "Intruder", 0);
	else if(checking == 547) return format(model, len, "Primo", 0);
	else if(checking == 548) return format(model, len, "Cargobob", 0);
	else if(checking == 549) return format(model, len, "Tampa", 0);
	else if(checking == 550) return format(model, len, "Sunrise", 0);
	else if(checking == 551) return format(model, len, "Merit", 0);
	else if(checking == 552) return format(model, len, "Utility Van", 0);
	else if(checking == 553) return format(model, len, "Nevada", 0);
	else if(checking == 554) return format(model, len, "Yosemite", 0);
	else if(checking == 555) return format(model, len, "Windsor", 0);
	else if(checking == 556) return format(model, len, "Monster A", 0);
	else if(checking == 557) return format(model, len, "Monster B", 0);
	else if(checking == 558) return format(model, len, "Uranus", 0);
	else if(checking == 559) return format(model, len, "Jester", 0);
	else if(checking == 560) return format(model, len, "Sultan", 0);
	else if(checking == 561) return format(model, len, "Stratum", 0);
	else if(checking == 562) return format(model, len, "Elegy", 0);
	else if(checking == 563) return format(model, len, "Raindance", 0);
	else if(checking == 564) return format(model, len, "RC Tiger", 0);
	else if(checking == 565) return format(model, len, "Flash", 0);
	else if(checking == 566) return format(model, len, "Tahoma", 0);
	else if(checking == 567) return format(model, len, "Savanna", 0);
	else if(checking == 568) return format(model, len, "Bandito", 0);
	else if(checking == 569) return format(model, len, "Freight Flat", 0);
	else if(checking == 570) return format(model, len, "Streak", 0);
	else if(checking == 571) return format(model, len, "Kart", 0);
	else if(checking == 572) return format(model, len, "Mower", 0);
	else if(checking == 573) return format(model, len, "Duneride", 0);
	else if(checking == 574) return format(model, len, "Sweeper", 0);
	else if(checking == 575) return format(model, len, "Broadway", 0);
	else if(checking == 576) return format(model, len, "Tornado", 0);
	else if(checking == 577) return format(model, len, "AT-400", 0);
	else if(checking == 578) return format(model, len, "DFT-30", 0);
	else if(checking == 579) return format(model, len, "Huntley", 0);
	else if(checking == 580) return format(model, len, "Stafford", 0);
	else if(checking == 581) return format(model, len, "BF-400", 0);
	else if(checking == 582) return format(model, len, "Raindance", 0);
	else if(checking == 583) return format(model, len, "News Van", 0);
	else if(checking == 584) return format(model, len, "Tug", 0);
	else if(checking == 585) return format(model, len, "Petrol Tanker", 0);
	else if(checking == 586) return format(model, len, "Wayfarer", 0);
	else if(checking == 587) return format(model, len, "Euros", 0);
	else if(checking == 588) return format(model, len, "Hotdog", 0);
	else if(checking == 589) return format(model, len, "Club", 0);
	else if(checking == 590) return format(model, len, "Freight Box", 0);
	else if(checking == 591) return format(model, len, "Trailer 3", 0);
	else if(checking == 592) return format(model, len, "Andromada", 0);
	else if(checking == 593) return format(model, len, "Dodo", 0);
	else if(checking == 594) return format(model, len, "RC Cam", 0);
	else if(checking == 595) return format(model, len, "Launch", 0);
	else if(checking == 596) return format(model, len, "LSPD Patrol Car", 0);
	else if(checking == 597) return format(model, len, "FBI Patrol Car", 0);
	else if(checking == 598) return format(model, len, "NG Patrol Car", 0);
	else if(checking == 599) return format(model, len, "LSPD Patrol Ranger", 0);
	else if(checking == 600) return format(model, len, "Picador", 0);
	else if(checking == 601) return format(model, len, "S.W.A.T Tank", 0);
    else if(checking == 602) return format(model, len, "Alpha", 0);
	else if(checking == 603) return format(model, len, "Phoenix", 0);
	else if(checking == 609) return format(model, len, "Boxville", 0);
	return 0;
}


public ShowAchievement(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw59);
	TextDrawShowForPlayer(playerid, Textdraw60);
	TextDrawShowForPlayer(playerid, Textdraw61);
	TextDrawShowForPlayer(playerid, Textdraw62);
	TextDrawShowForPlayer(playerid, Textdraw63);
	TextDrawShowForPlayer(playerid, Textdraw64[playerid]);
	SetTimerEx("HideAchievement",15000,false,"i",playerid);
}

public HideAchievement(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw59);
	TextDrawHideForPlayer(playerid, Textdraw60);
	TextDrawHideForPlayer(playerid, Textdraw61);
	TextDrawHideForPlayer(playerid, Textdraw62);
	TextDrawHideForPlayer(playerid, Textdraw63);
	TextDrawHideForPlayer(playerid, Textdraw64[playerid]);
}

public AttachObjectCorrectly(playerid, object)
{
	if(object == 1550)
	{
	    SetPlayerAttachedObject(playerid, 3,1550,3,0.1,0.1,-0.1,0.0,270.0,0.0);
	}
	else if(object == 373)
	{
	    SetPlayerAttachedObject(playerid, 3,373,1,0.3,-0.0,-0.1,70.0,25.0,35.0);
	}
	else if(object == 2992)
	{
	    SetPlayerAttachedObject(playerid, 3,2992,2,0.2,0.0,0.0,0.0,90.0,0.0);
	}
	else if(object == 3265)
	{
	    SetPlayerAttachedObject(playerid, 3,3265,1,-0.5,0.0,0.0,0.0,90.0,180.0);
	}
	else if(object == 1575)
	{
	    SetPlayerAttachedObject(playerid, 3,1575,6,0.0,0.0,0.0,0.0,90.0,0.0);
	}
	else if(object == 1210)
	{
	    SetPlayerAttachedObject(playerid, 3,1210,5,0.3,0.1,0.0,0.0,270.0,0.0);
	}
	else if(object == 3026)
	{
	    SetPlayerAttachedObject(playerid, 3,3026,1,-0.1,-0.0,0.0,0.0,0.0,0.0);
	}
	else if(object == 2054)
	{
	    SetPlayerAttachedObject(playerid, 3,2054,2,0.1,0.0,-0.0,0.0,90.0,180.0);
	}
	else if(object == 2053)
	{
	    SetPlayerAttachedObject(playerid, 3,2053,2,0.1,0.0,0.0,0.0,90.0,0.0);
	}
	else if(object == 2052)
	{
	    SetPlayerAttachedObject(playerid, 3,2052,2,0.1,0.0,0.0,0.0,90.0,0.0);
	}
	else return SendClientMessage(playerid, COLOR_LIGHT_BLUE,"[µ˜ ‘]: Œ¥÷™∂‘œÛ,«Î¡™œµø™∑¢…Ã!");
	return 1;
}


public EncodeVehicle(vehicleid)
{
    new pass[64];
	if(IsACopCar(vehicleid) || IsAnFbiCar(vehicleid) || IsNgCar(vehicleid) || IsAGovernmentCar(vehicleid))
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
		VehiclePass[vehicleid] = strval(pass);
	}
	else if(IsAFiremenCar(vehicleid) || IsAnAmbulance(vehicleid))
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
		VehiclePass[vehicleid] = strval(pass);
	}
	else if(IsAGangCar(vehicleid)) // SureÒos
	{
	    if(SurenosSecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(SurenosSecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(SurenosSecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGangCar2(vehicleid)) // ¬Ûµ¬¡÷∞Ô
	{
	    if(SignatraSecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(SignatraSecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(SignatraSecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGangCar3(vehicleid)) // Yamaguchi
	{
	    if(YamaguchiSecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(YamaguchiSecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(YamaguchiSecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGangCar4(vehicleid)) // Bratva
	{
	    if(BratvaSecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(BratvaSecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(BratvaSecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGangCar5(vehicleid)) // La vice
	{
	    if(ViceSecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(ViceSecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(ViceSecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGangCar6(vehicleid)) // biker
	{
	    if(AnarchySecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(AnarchySecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(AnarchySecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsAGangCar7(vehicleid)) // Hitmen
	{
	    if(HitmanSecurity == 1)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(HitmanSecurity == 2)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
		else if(HitmanSecurity == 3)
	    {
	        format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
			VehiclePass[vehicleid] = strval(pass);
		}
	}
	else if(IsASwatCar(vehicleid) || IsATacticalCar(vehicleid) || IsASpecialFCar(vehicleid))
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		VehiclePass[vehicleid] = strval(pass);
	}
	return 1;
}

public ShowDecoder(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw65);
	TextDrawShowForPlayer(playerid, Textdraw66);
	TextDrawShowForPlayer(playerid, Textdraw67);
	TextDrawShowForPlayer(playerid, Textdraw68);
	return 1;
}

public HideDecoder(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw65);
	TextDrawHideForPlayer(playerid, Textdraw66);
	TextDrawHideForPlayer(playerid, Textdraw67);
	TextDrawHideForPlayer(playerid, Textdraw68);
	return 1;
}

public GetDigits(number)
{
	if(number >= 1 && number <= 9)
	{
	    return 1;
	}
	else if(number >= 10 && number <= 99)
	{
	    return 2;
	}
	else if(number >= 100 && number <= 999)
	{
	    return 3;
	}
	else if(number >= 1000 && number <= 9999)
	{
	    return 4;
	}
	else if(number >= 10000 && number <= 99999)
	{
	    return 5;
	}
	else if(number >= 100000 && number <= 999999)
	{
	    return 6;
	}
	else if(number >= 1000000 && number <= 9999999)
	{
	    return 7;
	}
	else if(number >= 10000000 && number <= 99999999)
	{
	    return 8;
	}
	else if(number >= 100000000 && number <= 999999999)
	{
	    return 9;
	}
	else if(number >= 1000000000 && number <= 9999999999)
	{
	    return 10;
	}
	else if(number >= 10000000000 && number <= 99999999999)
	{
	    return 11;
	}
	else if(number >= 100000000000 && number <= 999999999999)
	{
	    return 12;
	}
	else
	{
	    return 0;
	}
}

public DecodePassword(playerid, vehicleid)
{
    new string[128], sendername[24],pass[64];
    GetPlayerName(playerid, sendername, sizeof(sendername));
	if(!IsPlayerConnected(playerid))
	{
		KillTimer(DecoderTimer);
		Decoder = 0;
		decodecode = 0;
	}
	if(!IsPlayerInVehicle(playerid, vehicleid))
	{
		KillTimer(DecoderTimer);
		Decoder = 0;
		decodecode = 0;
		Decoding[playerid] = 0;
	}
	if(IsAnOwnableCar(vehicleid)) Digits = GetDigits(CarInfo[vehicleid][cCode]);
	else Digits = GetDigits(VehiclePass[vehicleid]);
	
	if(Digits == 1)
	{
	    format(pass, sizeof(pass),"%d",random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00000000000%d",decodecode);
	}
	else if(Digits == 2)
	{
	    format(pass, sizeof(pass),"%d%d",random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"0000000000%d",decodecode);
	}
	else if(Digits == 3)
	{
	    format(pass, sizeof(pass),"%d%d%d",random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"000000000%d",decodecode);
	}
	else if(Digits == 4)
	{
	    format(pass, sizeof(pass),"%d%d%d%d",random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00000000%d",decodecode);
	}
	else if(Digits == 5)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"0000000%d",decodecode);
	}
	else if(Digits == 6)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"000000%d",decodecode);
	}
	else if(Digits == 7)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00000%d",decodecode);
	}
	else if(Digits == 8)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"0000%d",decodecode);
	}
	else if(Digits == 9)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"000%d",decodecode);
	}
	else if(Digits == 10)
	{
	    format(pass, sizeof(pass),"%d%d%d%d%d%d%d%d%d%d",random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9),random(9));
		decodecode = strval(pass);
	    format(string, sizeof(string),"00%d",decodecode);
	}
	TextDrawSetString(Textdraw68,string);
		
	if(IsAnOwnableCar(vehicleid))
	{
	    if(decodecode == CarInfo[vehicleid][cCode])
	    {
		    if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
			    ProxDetector(30.0, playerid, "* π‹¿Ì‘±”√À˚µƒ√‹¬Î∆∆“Î∆˜,∆∆Ω‚¡À∆˚≥µµƒ√‹¬Î", COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
			if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
			{
			    ProxDetector(30.0, playerid, "* ƒ∞…˙»À”√À˚µƒ√‹¬Î∆∆“Î∆˜,∆∆Ω‚¡À∆˚≥µµƒ√‹¬Î", COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
				format(string, sizeof(string), "* %s ”√À˚µƒ√‹¬Î∆∆“Î∆˜,∆∆Ω‚¡À∆˚≥µµƒ√‹¬Î", sendername);
                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
		    KillTimer(DecoderTimer);
		    HideDecoder(playerid);
			SetTimerEx("ShowDecoder",1000,false,"i",playerid);
			SetTimerEx("HideDecoder",2000,false,"i",playerid);
			SetTimerEx("ShowDecoder",3000,false,"i",playerid);
			SetTimerEx("HideDecoder",8000,false,"i",playerid);
			format(string, sizeof(string),"√‹¬Î¥Úø™¡À, « %d«Îº«◊°À¸,ƒ„Ω´¿¥ª·–Ë“™À˚!! ƒ„œ÷‘⁄ø…“‘¥Úø™∑¢∂Øª˙¡À.",decodecode);
			SendClientMessage(playerid, COLOR_NICERED, string);
			decodecode = 0;
			Decoder = 0;
			CanTurnEngine[playerid] = vehicleid;
		}
	}
	else
	{
		if(decodecode == VehiclePass[vehicleid])
	    {
		    if(PlayerInfo[playerid][pAdminDuty] == 1)
			{
			    ProxDetector(30.0, playerid, "* π‹¿Ì‘±”√À˚µƒ√‹¬Î∆∆“Î∆˜,∆∆Ω‚¡À∆˚≥µµƒ√‹¬Î", COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
			if(PlayerInfo[playerid][pMaskuse] == 1 && PlayerInfo[playerid][pAdminDuty] == 0)
			{
			    ProxDetector(30.0, playerid, "* ƒ∞…˙»À”√À˚µƒ√‹¬Î∆∆“Î∆˜,∆∆Ω‚¡À∆˚≥µµƒ√‹¬Î", COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
			if(PlayerInfo[playerid][pAdminDuty] == 0 && PlayerInfo[playerid][pMaskuse] == 0)
			{
				format(string, sizeof(string), "* %s ”√À˚µƒ√‹¬Î∆∆“Î∆˜,∆∆Ω‚¡À∆˚≥µµƒ√‹¬Î", sendername);
                ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
			}
		    KillTimer(DecoderTimer);
			HideDecoder(playerid);
			SetTimerEx("ShowDecoder",1000,false,"i",playerid);
			SetTimerEx("HideDecoder",2000,false,"i",playerid);
			SetTimerEx("ShowDecoder",3000,false,"i",playerid);
			SetTimerEx("HideDecoder",8000,false,"i",playerid);
			format(string, sizeof(string),"Code Unlocked, its %d.",decodecode);
			SendClientMessage(playerid, COLOR_NICERED, string);
			decodecode = 0;
			Decoder = 0;
			CanTurnEngine[playerid] = vehicleid;
		}
	}
	return 1;
}


public ResetCommands(playerid)
{
	Commands[playerid] = 0;
	return 1;
}
public ResetText(playerid)
{
	Text[playerid] = 0;
	return 1;
}

